<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EnumerablePartitionerOptions.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50e07ba7dcdb729b1cd2cc33d2bac216458254c3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e07ba7dcdb729b1cd2cc33d2bac216458254c3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.EnumerablePartitionerOptions">
          <source>Specifies options to control the buffering behavior of a partitioner</source>
          <target state="translated">パーティショナーのバッファリング動作を制御するオプションを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.EnumerablePartitionerOptions">
          <source>Out-of-the-box partitioners are created with a set of default behaviors.</source>
          <target state="translated">一連の既定の動作を伴う、すぐに使用できるパーティショナーが作成されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.EnumerablePartitionerOptions">
          <source>For example, by default, some form of buffering and chunking will be used to achieve optimal performance in the common scenario where an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> implementation is fast and non-blocking.</source>
          <target state="translated">たとえば、既定では、いくつかの形のバッファリングとチャンキングが使用、一般的なシナリオで最適なパフォーマンスを実現するためにここで、<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>の実装が高速で非ブロッキングです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.EnumerablePartitionerOptions">
          <source>These behaviors can be overridden by this enumeration by using the <ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner.Create%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">使用してこの列挙体によってこれらの動作をオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Collections.Concurrent.Partitioner.Create%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Collections.Concurrent.EnumerablePartitionerOptions.NoBuffering">
          <source>Create a partitioner that takes items from the source enumerable one at a time and does not use intermediate storage that can be accessed more efficiently by multiple threads.</source>
          <target state="translated">元の列挙から項目を 1 つずつ受け取り、複数のスレッドからより効率的にアクセスできる中間ストレージを使用しないパーティショナーを作成します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Collections.Concurrent.EnumerablePartitionerOptions.NoBuffering">
          <source>This option provides support for low latency (items will be processed as soon as they are available from the source) and provides partial support for dependencies between items (a thread cannot deadlock waiting for an item that the thread itself is responsible for processing).</source>
          <target state="translated">このオプションは、短い待機時間のサポート (項目がソースから使用可能になると同時に処理されます) と、項目間の依存関係の部分的なサポート (スレッド自体で処理する項目を待機する間にスレッドでデッドロックが発生することはありません) を提供します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Collections.Concurrent.EnumerablePartitionerOptions.None">
          <source>Use the default behavior, which is to use buffering to achieve optimal performance.</source>
          <target state="translated">既定の動作を使用します。既定の動作では、最適なパフォーマンスを実現するために、バッファリングを使用します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>