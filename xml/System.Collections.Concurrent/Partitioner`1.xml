<Type Name="Partitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.Partitioner&lt;TSource&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e0b7e72bef542c547a62cb3c0963ac8ca0b06d2" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58740262" /></Metadata><TypeSignature Language="C#" Value="public abstract class Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Partitioner`1&lt;TSource&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class Partitioner abstract" />
  <TypeSignature Language="F#" Value="type Partitioner&lt;'Source&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource"><span data-ttu-id="df179-101">コレクション内の要素の型。</span><span class="sxs-lookup"><span data-stu-id="df179-101">Type of the elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="df179-102">データ ソースを複数のパーティションに分割する特定の方法を表します。</span><span class="sxs-lookup"><span data-stu-id="df179-102">Represents a particular manner of splitting a data source into multiple partitions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df179-103">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="df179-103">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df179-104">次の例を一度に 1 つの要素を返すパーティショナーを実装する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="df179-104">The following example shows how to implement a partitioner that returns a single element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/cs/partitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/vb/partitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="df179-105">静的メソッドを<see cref="T:System.Collections.Concurrent.Partitioner`1" />すべてスレッド セーフは、複数のスレッドから同時に使用される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="df179-105">The static methods on <see cref="T:System.Collections.Concurrent.Partitioner`1" /> are all thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="df179-106">ただし、作成されたパーティショナーは、使用中は、基になるデータ ソースは変更されません、パーティショナーを使用している同じスレッドからかどうか、または別のスレッドから。</span><span class="sxs-lookup"><span data-stu-id="df179-106">However, while a created partitioner is in use, the underlying data source should not be modified, whether from the same thread that is using a partitioner or from a separate thread.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
    <altmember cref="T:System.Collections.Concurrent.Partitioner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Partitioner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Partitioner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df179-107">新しいパーティショナー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="df179-107">Creates a new partitioner instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="df179-108">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="df179-108">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;&#xA;override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="partitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df179-109">基になるコレクションを可変個のパーティションに分割できるオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="df179-109">Creates an object that can partition the underlying collection into a variable number of partitions.</span></span></summary>
        <returns><span data-ttu-id="df179-110">基になるデータ ソースのパーティションを作成できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="df179-110">An object that can create partitions over the underlying data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df179-111">返されるオブジェクトの実装、<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="df179-111">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="df179-112">呼び出す<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>オブジェクトのシーケンスを別のパーティションを作成します。</span><span class="sxs-lookup"><span data-stu-id="df179-112">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="df179-113"><xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>メソッドが場合にのみサポートされている、<xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A>プロパティが true を返します。</span><span class="sxs-lookup"><span data-stu-id="df179-113">The <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span> <span data-ttu-id="df179-114">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="df179-114">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="df179-115">動的パーティションは、基本クラスでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="df179-115">Dynamic partitioning is not supported by the base class.</span></span> <span data-ttu-id="df179-116">派生クラスで実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="df179-116">You must implement it in a derived class.</span></span></exception>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="df179-117">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="df179-117">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="partitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount"><span data-ttu-id="df179-118">作成するパーティションの数。</span><span class="sxs-lookup"><span data-stu-id="df179-118">The number of partitions to create.</span></span></param>
        <summary><span data-ttu-id="df179-119">基になるコレクションを指定した数のパーティションに分割します。</span><span class="sxs-lookup"><span data-stu-id="df179-119">Partitions the underlying collection into the given number of partitions.</span></span></summary>
        <returns><span data-ttu-id="df179-120"><paramref name="partitionCount" /> 列挙子を格納するリスト。</span><span class="sxs-lookup"><span data-stu-id="df179-120">A list containing <paramref name="partitionCount" /> enumerators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df179-121">指定されているパーティションの数だけを返すこのメソッドを実装するクラスが期待どおり`partitionCount`します。</span><span class="sxs-lookup"><span data-stu-id="df179-121">A class that implements this method is expected to return exactly the number of partitions that are specified in `partitionCount`.</span></span> <span data-ttu-id="df179-122">パーティションに要素が含まれていない場合は、し、null (Visual Basic では Nothing) ではなく空の列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="df179-122">If a partition contains no elements, then return an empty enumerator rather than null (Nothing in Visual Basic).</span></span> <span data-ttu-id="df179-123">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="df179-123">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="df179-124">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="df179-124">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDynamicPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDynamicPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDynamicPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDynamicPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDynamicPartitions : bool" Usage="System.Collections.Concurrent.Partitioner&lt;'Source&gt;.SupportsDynamicPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="df179-125">追加のパーティションを動的に作成できるかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="df179-125">Gets whether additional partitions can be created dynamically.</span></span></summary>
        <value><span data-ttu-id="df179-126"><see langword="true" /> 場合、<see cref="T:System.Collections.Concurrent.Partitioner`1" />は要求に応じて動的にパーティションを作成できます<see langword="false" />場合、<see cref="T:System.Collections.Concurrent.Partitioner`1" />パーティションを静的に割り当てることができますのみです。</span><span class="sxs-lookup"><span data-stu-id="df179-126"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.Partitioner`1" /> can create partitions dynamically as they are requested; <see langword="false" /> if the <see cref="T:System.Collections.Concurrent.Partitioner`1" /> can only allocate partitions statically.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df179-127">派生クラスがオーバーライドおよび実装していない場合<xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>、 <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> false が返されます。</span><span class="sxs-lookup"><span data-stu-id="df179-127">If a derived class does not override and implement <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>, <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> should return false.</span></span> <span data-ttu-id="df179-128">値<xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A>このインスタンスの有効期間にわたって変わらないようにします。</span><span class="sxs-lookup"><span data-stu-id="df179-128">The value of <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> should not vary over the lifetime of this instance.</span></span> <span data-ttu-id="df179-129">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="df179-129">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887"><span data-ttu-id="df179-130">PLINQ および TPL 用のカスタム パーティショナー</span><span class="sxs-lookup"><span data-stu-id="df179-130">Custom Partitioners for PLINQ and TPL</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>