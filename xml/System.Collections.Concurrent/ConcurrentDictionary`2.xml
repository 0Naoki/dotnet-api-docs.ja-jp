<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrentDictionary`2.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051f1d19ff101acf3d453237a24132f9c038d606a560.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d19ff101acf3d453237a24132f9c038d606a560</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">ディクショナリ内のキーの型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">ディクショナリ内の値の型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</source>
          <target state="translated">同時に複数のスレッドからアクセスできる、スレッド セーフなキーと値のペアのコレクションを表します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">非常に大きな<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>オブジェクトを 64 ビット システムで 2 ギガバイト (GB) に最大配列サイズを大きくには、構成要素を設定<ph id="ph2">`true`</ph>実行時環境でします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph> interfaces starting with the <ph id="ph4">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph5">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> class did not implement these interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> 実装する、<ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph>と<ph id="ph3">&lt;xref:System.Collections.Generic.IReadOnlyDictionary%602&gt;</ph>インターフェイスから始まる、<ph id="ph4">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>以外の場合は、.NET Framework の以前のバージョンで、<ph id="ph5">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>クラスは、これらのインターフェイスを実装しませんでした。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Like the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType&gt;</ph> class, <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> implements the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType&gt;</ph>クラス、<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>を実装する、<ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>In addition, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>次の表に示すように、追加または更新では、ディクショナリ内のキー/値ペアの複数のメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>To do this</source>
          <target state="translated">目的</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Use this method</source>
          <target state="translated">このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Usage notes</source>
          <target state="translated">使用上の注意</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Add a new key to the dictionary, if it doesn’t already exist in the dictionary</source>
          <target state="translated">ディクショナリに存在しない場合、ディクショナリに新しいキーを追加します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This method adds the specified key/value pair, if the key doesn’t currently exist in the dictionary.</source>
          <target state="translated">このメソッドは、キーが現在ディクショナリ内でない場合に、指定したキー/値ペアを追加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> depending on whether the new pair was added.</source>
          <target state="translated">このメソッドを返します<ph id="ph1">`true`</ph>または<ph id="ph2">`false`</ph>新しいペアが追加されたかどうかによって異なります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Update the value for an existing key in the dictionary, if that key has a specific value</source>
          <target state="translated">そのキーが特定の値では、ディクショナリ内の既存のキーの値を更新します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This method checks whether the key has a specified value, and if it does, updates the key with a new value.</source>
          <target state="translated">このメソッドは、新しい値でキーを更新、およびキーが指定された値を持つかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It's similar to the <ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph> method, except that it's used for dictionary elements.</source>
          <target state="translated">に似ていますが、<ph id="ph1">&lt;xref:System.Threading.Interlocked.CompareExchange%2A&gt;</ph>メソッド、ディクショナリの要素の使用のされる点が異なります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</source>
          <target state="translated">無条件にディクショナリのキー/値ペアを格納し、既に存在するキーの値を上書き</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The indexer’s setter: <ph id="ph1">`dictionary[key] = newValue`</ph></source>
          <target state="translated">インデクサーの set アクセス操作子: <ph id="ph1">`dictionary[key] = newValue`</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key’s existing value</source>
          <target state="translated">辞書にキー/値ペアを追加またはキーが既に存在する場合は、キーの既存の値に基づいて、キーの値を更新します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>—or—</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> accepts the key and two delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> キーと 2 つのデリゲートを受け取ります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It uses the first delegate if the key doesn’t exist in the dictionary; it accepts the key and returns the value that should be added for the key.</source>
          <target state="translated">キーがディクショナリ内に存在しない場合、最初のデリゲートを使用してください。キーを承認して、キーを追加する値を返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</source>
          <target state="translated">2 番目のデリゲートを使用して、キーが存在する場合キーとその現在の値を受け取ってであり、キーを設定した新しい値を返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> accepts the key, a value to add, and the update delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29&gt;</ph> キー、値を追加して更新プログラムのデリゲートを受け取ります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>This is the same as the previous overload, except that it doesn't use a delegate to add a key.</source>
          <target state="translated">これは、以前のオーバー ロードと同じキーを追加するデリゲートを使用しない点を除いて、します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn’t exist</source>
          <target state="translated">ディクショナリの値をディクショナリに追加して、キーが存在しない場合に返す内のキーの値を取得します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>—or—</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it’s not there.</source>
          <target state="translated">これらのオーバー ロードは、これがない場合にのみ、値を追加する、ディクショナリのキー/値ペアの限定的な初期化を提供します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29&gt;</ph> takes the value to be added if the key doesn’t exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29&gt;</ph> キーが存在しないかどうかに追加する値を取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29&gt;</ph> takes a delegate that will generate the value if the key doesn’t exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29&gt;</ph> キーが存在しない場合、値を生成するデリゲートを受け取ります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>All these operations are atomic and are thread-safe with regards to all other operations on the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> class.</source>
          <target state="translated">これらすべての操作はアトミックありスレッド セーフである その他のすべての操作に関して、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The only exceptions are the methods that accept a delegate, that is, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>.</source>
          <target state="translated">唯一の例外は、デリゲートを受け取るメソッドは、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>For modifications and write operations to the dictionary, <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> uses fine-grained locking to ensure thread safety.</source>
          <target state="translated">変更を行うと、ディクショナリへの書き込み操作の<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>粒度の細かいロックを使用してスレッド セーフを確保します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</source>
          <target state="translated">(ディクショナリの読み取り操作は、ロック制御不要の方法で実行されます)。ただし、これらのメソッドのデリゲートは、ロックの状況で不明なコードを実行してから生じる可能性のある問題を回避するロックの外部と呼ばれます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</source>
          <target state="translated">したがって、これらのデリゲートによって実行されるコードには、操作の原子性が適用できません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> object.</source>
          <target state="translated">次の例を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">すべてのパブリックおよびプロテクト メンバー<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>スレッド セーフでは、複数のスレッドから同時に使用される可能性があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>However, members accessed through one of the interfaces the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</source>
          <target state="translated">ただし、メンバーにアクセスするインターフェイスのいずれかで、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>を実装して、拡張メソッドなどのスレッド セーフである保証はありませんし、呼び出し元によって同期される必要があります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</source>
          <target state="translated">空で、既定の同時実行レベルと既定の初期量を備え、キーの型の既定の比較子を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default concurrency level is the default concurrency multiplier (DEFAULT_CONCURRENCY_MULTIPLIER) times the number of CPUs.</source>
          <target state="translated">既定の同時実行レベルでは、既定の同時実行乗数 (DEFAULT_CONCURRENCY_MULTIPLIER) は Cpu の数です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The higher the default concurrency multiplier is, the more concurrent write operations can take place without interference and blocking.</source>
          <target state="translated">高い既定の同時実行の乗数は、同時実行性の書き込み操作を行う干渉し、ブロックせずします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Higher multiplier values also cause operations that require all locks (for example, table resizing, <ph id="ph1">`ToArray`</ph> and <ph id="ph2">`Count`</ph>) to become more expensive.</source>
          <target state="translated">乗数値を大きくも発生するすべてのロックを必要とする操作 (たとえば、テーブルのサイズ変更、<ph id="ph1">`ToArray`</ph>と<ph id="ph2">`Count`</ph>) に高くなります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default concurrency multiplier is 4.</source>
          <target state="translated">既定の同時実行の乗数は 4 です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</source>
          <target state="translated">バケットの最初の数値を表す既定容量 (DEFAULT_CAPACITY) と非常に小さいディクショナリのサイズとサイズ変更の数の間のトレードオフは多数含んだ辞書を構築するときにします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>Also, the capacity should not be divisible by a small prime number.</source>
          <target state="translated">また、容量は、素数の数が少ないで割り切れるできません必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor">
          <source>The default capacity is 31.</source>
          <target state="translated">既定の容量は 31 です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> に要素がコピーされた <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> からコピーされた要素を格納し、既定の同時実行レベルと既定の初期量を備え、キーの型の既定の比較子を使用する、<ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or any of its keys is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> またはそのキーが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> には 1 つまたは複数の重複するキーが含まれます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparison implementation to use when comparing keys.</source>
          <target state="translated">キーの比較時に使用する等価比較の実装。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the default concurrency level and capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">空で、既定の同時実行レベルと容量を備え、指定した <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を使用する、<ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> に要素がコピーされた <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">キーの比較時に使用する <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> の実装。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> has the default concurrency level, has the default initial capacity, and uses the specified  <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> からコピーされた要素を格納し、既定の同時実行レベルと既定の初期量を備え、指定した <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> を使用する、<ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> または <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">同時に <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を更新するスレッドの推定数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> が格納できる要素数の初期値。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</source>
          <target state="translated">空で、指定した同時実行レベルと容量を備え、キーの型の既定の比較子を使用する、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> が 1 未満です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">同時に <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を更新するスレッドの推定数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> に要素がコピーされた <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">キーの比較時に使用する <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> の実装。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>, and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> から要素をコピーして格納し、指定した <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> を使用する、<ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> または <ph id="ph2">&lt;paramref name="comparer" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> が 1 未満です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> には 1 つまたは複数の重複するキーが含まれます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The estimated number of threads that will update the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> concurrently.</source>
          <target state="translated">同時に <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を更新するスレッドの推定数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> が格納できる要素数の初期値。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">キーの比較時に使用する <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> の実装。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">空で、指定した同時実行レベルと指定した初期量を備え、指定した <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を使用する、<ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> or <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="concurrencyLevel" /&gt;</ph> または <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> が 1 未満です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">キーがまだ存在しない場合は <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加し、キーが既に存在する場合は <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーと値のペアを更新します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> method:</source>
          <target state="translated">次の例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The key to be added or whose value should be updated</source>
          <target state="translated">追加するキーまたは値を更新するキー</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The function used to generate a value for an absent key</source>
          <target state="translated">キーが存在しない場合に、値を生成するために使用される関数</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The function used to generate a new value for an existing key based on the key's existing value</source>
          <target state="translated">キーが存在する場合に、キーの既存の値に基づいて新しい値を生成するために使用される関数</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>Uses the specified functions to add a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or to update a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">指定した関数を使用して、キーがまだ存在しない場合は <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加し、キーが既に存在する場合は <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーと値のペアを更新します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The new value for the key.</source>
          <target state="translated">キーの新しい値。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">これは、addValueFactory の結果 (キーが存在しない場合) か updateValueFactory の結果 (キーが存在する場合) のどちらかになります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>If you call <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> simultaneously on different threads, <ph id="ph2">`addValueFactory`</ph> may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph>、異なるスレッドで同時に<ph id="ph2">`addValueFactory`</ph>を呼び出すことは複数回しますが、キー/値ペア可能性がありますすべての呼び出しのディクショナリに追加できません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>、<ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The key to be added or whose value should be updated</source>
          <target state="translated">追加するキーまたは値を更新するキー</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The value to be added for an absent key</source>
          <target state="translated">キーが存在しない場合に追加する値</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The function used to generate a new value for an existing key based on the key's existing value</source>
          <target state="translated">キーが存在する場合に、キーの既存の値に基づいて新しい値を生成するために使用される関数</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> by using the specified function if the key already exists.</source>
          <target state="translated">キーがまだ存在しない場合は <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加し、キーが既に存在する場合は、指定された関数を使用して <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーと値のペアを更新します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The new value for the key.</source>
          <target state="translated">キーの新しい値。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>This will be either be addValue (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">これは、addValue (キーが存在しない場合) か updateValueFactory の結果 (キーが存在する場合) のどちらかになります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The following code example shows how to initialize an <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</source>
          <target state="translated">次のコード例は、初期化する方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602&gt;</ph>と AddOrUpdate メソッドを使用して、このコレクションには追加の項目を追加し、既存のアイテムを更新する方法です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="updateValueFactory" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> または <ph id="ph2">&lt;paramref name="updateValueFactory" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The type of the keys in this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph></source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーの型</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The key to be added or whose value should be updated.</source>
          <target state="translated">追加するキーまたは値を更新するキー。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The function used to generate a value for an absent key.</source>
          <target state="translated">キーが存在しない場合に、値を生成するために使用される関数。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The function used to generate a new value for an existing key based on the key's existing value.</source>
          <target state="translated">キーの既存の値に基づいて、既存のキーの新しい値を生成するために使用される関数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>An argument to pass into <bpt id="p1">&lt;c&gt;</bpt>addValueFactory<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>updateValueFactory<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>addValueFactory<ept id="p1">&lt;/c&gt;</ept> と <bpt id="p2">&lt;c&gt;</bpt>updateValueFactory<ept id="p2">&lt;/c&gt;</ept> に渡す引数。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist, or updates a key/value pair in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key already exists.</source>
          <target state="translated">キーがまだ存在しない場合は <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加し、キーが既に存在する場合は <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーと値のペアを更新します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>The new value for the key.</source>
          <target state="translated">キーの新しい値。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source>This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</source>
          <target state="translated">これは、addValueFactory の結果 (キーが存在しない場合) か updateValueFactory の結果 (キーが存在する場合) のどちらかになります。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph>, <ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>、<ph id="ph2">&lt;paramref name="addValueFactory" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="updateValueFactory" /&gt;</ph> が null 参照 (Visual Basic の場合は Nothing) です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear">
          <source>Removes all keys and values from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> からすべてのキーと値を削除します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> 内で検索されるキー。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> contains the specified key.</source>
          <target state="translated">指定したキーが <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に格納されているかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つ要素が <ph id="ph1">&lt;see langword="true" /&gt;</ph> に格納されている場合は <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に格納されているキー/値ペアの数を取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に格納されているキー/値ペアの数。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>This property has snapshot semantics and represents the number of items in the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType&gt;</ph> at the moment when the property was accessed.</source>
          <target state="translated">このプロパティは、スナップショットのセマンティクスと内の項目数を表す、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType&gt;</ph>プロパティがアクセスした時点でします。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> の列挙子。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</source>
          <target state="translated">ディクショナリから返された列挙子を安全に読み取りと同時に使用し、ディクショナリの現在の時点のスナップショットはありませんの辞書に書き込みます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator">
          <source>The contents exposed through the enumerator may contain modifications made to the dictionary after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">列挙子を介して公開されている内容は、ディクショナリの後に行われた変更を含む可能性があります<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph>が呼び出されました。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">キーがまだ存在しない場合に、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentDictionary`2">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> method:</source>
          <target state="translated">次の例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key of the element to add.</source>
          <target state="translated">追加する要素のキー。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The function used to generate a value for the key.</source>
          <target state="translated">キーの値を生成するために使用される関数。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> by using the specified function if the key does not already exist, or returns the existing value if the key exists.</source>
          <target state="translated">キーが存在しない場合は指定された関数を使用して <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加し、キーが存在する場合は既存の値を返します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The value for the key.</source>
          <target state="translated">キーの値。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Since a key/value can be inserted by another thread while <ph id="ph1">`valueFactory`</ph> is generating a value, you cannot trust that just because <ph id="ph2">`valueFactory`</ph> executed, its produced value will be inserted into the dictionary and returned.</source>
          <target state="translated">中に別のスレッドによって、キーと値を挿入することができますので<ph id="ph1">`valueFactory`</ph>は値を生成するには、信頼できないことからといって<ph id="ph2">`valueFactory`</ph>実行すると、その生成された値辞書に挿入されが返されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>If you call <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> simultaneously on different threads, <ph id="ph2">`valueFactory`</ph> may be called multiple times, but only one key/value pair will be added to the dictionary.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>、異なるスレッドで同時に<ph id="ph2">`valueFactory`</ph>を呼び出すことは複数回が、1 つだけのキー/値ペアをディクショナリに追加されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph> is called but before <ph id="ph2">`valueFactory`</ph> generates a value:</source>
          <target state="translated">戻り値の後に別のスレッドによって、キーと値を挿入するかどうかの辞書にキーの存在に依存<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A&gt;</ph>前と呼ばれる<ph id="ph2">`valueFactory`</ph>値が生成されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Scenario</source>
          <target state="translated">シナリオ</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>Return value</source>
          <target state="translated">戻り値</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is already in the dictionary.</source>
          <target state="translated">キーがディクショナリ内に既にです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The existing value is returned.</source>
          <target state="translated">既存の値が返されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is not in the dictionary.</source>
          <target state="translated">キーがディクショナリではありません。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">`valueFactory`</ph> generates a value.</source>
          <target state="translated"><ph id="ph1">`valueFactory`</ph> 値を生成します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>On rechecking for the key, no key is found.</source>
          <target state="translated">キーの再確認でキーが見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key/value is inserted into the dictionary, and the value is returned.</source>
          <target state="translated">辞書にキー/値が挿入され、値が返されます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The key is not in the dictionary.</source>
          <target state="translated">キーがディクショナリではありません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">`valueFactory`</ph> generates a value.</source>
          <target state="translated"><ph id="ph1">`valueFactory`</ph> 値を生成します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>While <ph id="ph1">`valueFactory`</ph> is generating the value, a different thread inserts a value for the key.</source>
          <target state="translated">中に<ph id="ph1">`valueFactory`</ph>が別のスレッドの値を生成するには、キーの値を挿入します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>After <ph id="ph1">`valueFactory`</ph> executes and upon rechecking for the key, the key inserted by the other thread is found.</source>
          <target state="translated">後に<ph id="ph1">`valueFactory`</ph>を実行し、その他のスレッドによって挿入された、キーが見つかったキーの再確認、時にします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The value inserted by the other thread is returned.</source>
          <target state="translated">その他のスレッドによって挿入された値が返されます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> または <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">追加する要素のキー。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The value to be added, if the key does not already exist.</source>
          <target state="translated">キーがまだ存在しない場合に追加する値。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">キーがまだ存在しない場合に、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The value for the key.</source>
          <target state="translated">キーの値。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</source>
          <target state="translated">キーがディクショナリに既に存在する場合はキーの既存の値、キーがディクショナリに存在していなかった場合は新しい値になります。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The type of the keys in this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph></source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーの型</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The key of the element to add.</source>
          <target state="translated">追加する要素のキー。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The function used to generate a value for the key.</source>
          <target state="translated">キーの値を生成するために使用される関数。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>An argument value to pass into <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> に渡す引数値。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>Adds a key/value pair to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> if the key does not already exist.</source>
          <target state="translated">キーがまだ存在しない場合に、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> にキーと値のペアを追加します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>The value for the key.</source>
          <target state="translated">キーの値。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
          <source>This will be either the existing value for the key if the key is already in the dictionary, or the new value for the key as returned by <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> if the key was not in the dictionary.</source>
          <target state="translated">キーがディクショナリに既に存在する場合はキーの既存の値、キーがディクショナリに存在していなかった場合は <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> から返されたキーの新しい値になります。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> が空かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が空の場合は <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">取得または設定する値のキー。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">指定されたキーに関連付けられている値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The value of the key/value pair at the specified index.</source>
          <target state="translated">指定したインデックス位置にあるキーと値のペアの値。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">プロパティが取得されましたが、コレクション内に <ph id="ph1">&lt;paramref name="key" /&gt;</ph> が存在しません。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 内のキーを格納しているコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys">
          <source>A collection of keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> のキーのコレクション。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> から要素がコピーされる先の 1 次元配列。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">配列には、0 から始まるインデックスが設定されている必要があります。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">指定した配列インデックスを開始位置として、配列に <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> の要素をコピーします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の長さ以上です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> の要素数が、コピー先 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> の <ph id="ph2">&lt;paramref name="index" /&gt;</ph> から最後までの使用可能領域を超えています。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> へのアクセスが SyncRoot で同期されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> へのアクセスが同期されている (スレッド セーフである) 場合は <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> this property always returns <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>このプロパティは常に返します<bpt id="p1">**</bpt>false<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Always returns null.</source>
          <target state="translated">常に null を返します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key.</source>
          <target state="translated">キーとして使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value.</source>
          <target state="translated">値として使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">指定したキーと値をディクショナリに追加します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type  of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> が、<ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> のキーの型に代入できない型です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the type of values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が、<ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 内の値の型に代入できない型です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>A value with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">同じキーを持つ値が、<ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> に既に存在します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 内で検索されるキー。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Gets whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">指定したキーを持つ要素が <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> に含まれているかどうかを取得します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つ要素が <ph id="ph1">&lt;see langword="true" /&gt;</ph> に格納されている場合は <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> に対する <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> を提供します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> が固定サイズかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が固定サイズの場合は <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> の場合、このプロパティは常に <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> が読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が読み取り専用である場合は <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> の場合、このプロパティは常に <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the value to get or set.</source>
          <target state="translated">取得または設定する値のキー。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">指定されたキーに関連付けられている値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key, or  <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type of the <ph id="ph4">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">指定したキーに関連付けられた値、または <ph id="ph1">&lt;see langword="null" /&gt;</ph> がディクショナリにない場合または <ph id="ph2">&lt;paramref name="key" /&gt;</ph> が <ph id="ph3">&lt;paramref name="key" /&gt;</ph> のキー型に代入できる型ではない場合は <ph id="ph4">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type or the value type of the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated">値を代入しようとしていますが、<ph id="ph1">&lt;paramref name="key" /&gt;</ph> は、<ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> のキーの型または値型に代入できない型です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the keys of the  <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> のキーが格納されている <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys">
          <source>An interface that contains the keys of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> のキーを格納しているインターフェイス。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">削除する要素のキー。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">指定したキーを持つ要素を <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 内の値が格納されている <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values">
          <source>An interface that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 内の値を含むインターフェイス。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> を反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> の列挙子。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</source>
          <target state="translated">ディクショナリから返された列挙子を安全に読み取りと同時に使用し、ディクショナリの現在の時点のスナップショットはありませんの辞書に書き込みます。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The contents exposed through the enumerator may contain modifications made to the dictionary after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">列挙子を介して公開されている内容は、ディクショナリの後に行われた変更を含む可能性があります<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A&gt;</ph>が呼び出されました。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <source>Copies the key and value pairs stored in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> to a new array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に格納されているキーと値のペアを新しい配列にコピーします。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
          <source>A new array containing a snapshot of key and value pairs copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> からコピーされたキーと値のペアのスナップショットを格納する新しい配列。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">追加する要素のキー。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">追加する要素の値。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The value can be  <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">参照型の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> の値を使用できます。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>Attempts to add the specified key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に対して、指定したキーと値の追加を試みます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key/value pair was added to the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> successfully; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the key already exists.</source>
          <target state="translated">キーと値のペアが <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に正常に追加された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。キーが既に存在する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>This method returns <ph id="ph1">`false`</ph> if the key already exists.</source>
          <target state="translated">このメソッドが戻る<ph id="ph1">`false`</ph>キーが既に存在する場合。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph> method to update the value in case a key already exists.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A&gt;</ph>キーが既に存在する場合に値を更新するメソッド。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">次の例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
          <source>The dictionary already contains the maximum number of elements (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>).</source>
          <target state="translated">ディクショナリには、既に要素の最大数 (<ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>) が含まれています。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">取得する値のキー。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> that has the specified key, or the default value of the type if the operation failed.</source>
          <target state="translated">このメソッドから戻るときに、指定したキーを持つオブジェクトが <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> から格納されます。操作が失敗した場合は、型の既定値が格納されます。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source>Attempts to get the value associated with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> から、指定したキーに関連付けられている値の取得を試みます。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was found in the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">キーが <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> に見つかった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>The key of the element to remove and return.</source>
          <target state="translated">削除して返す要素のキー。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>When this method returns, contains the object removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>, or the default value of  the <ph id="ph2">&lt;see langword="TValue" /&gt;</ph> type if <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> does not exist.</source>
          <target state="translated">このメソッドが返るときに、<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> から削除されたオブジェクトが含まれます。<bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> が存在しない場合は、<ph id="ph2">&lt;see langword="TValue" /&gt;</ph> 型の既定値が含まれます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>Attempts to remove and return the value that has the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> から、指定したキーを持つ値を削除して返そうと試みます。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object was removed successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">オブジェクトが正常に削除された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">次の例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is  <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The key whose value is compared with <bpt id="p1">&lt;c&gt;</bpt>comparisonValue<ept id="p1">&lt;/c&gt;</ept> and possibly replaced.</source>
          <target state="translated">値を <bpt id="p1">&lt;c&gt;</bpt>comparisonValue<ept id="p1">&lt;/c&gt;</ept> と比較し、場合によっては置き換えるキー。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The value that replaces the value of the element that has the specified <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> if the comparison results in equality.</source>
          <target state="translated">比較した結果が等しい場合に、指定した <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> を持つ要素の値を置き換える値。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The value that is compared to the value of the element that has the specified <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">指定した <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> を持つ要素の値と比較する値。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>Compares the existing value for the specified key with a specified value, and if they are equal, updates the key with a third value.</source>
          <target state="translated">指定したキーの既存の値と指定した値を比較し、等しい場合は別の値でキーを更新します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value with <ph id="ph2">&lt;paramref name="key" /&gt;</ph> was equal to <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> and was replaced with <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> を持つ値が <ph id="ph2">&lt;paramref name="key" /&gt;</ph> に等しかったため、<ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> に置き換えられた場合は <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source>The following example shows how to call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph> method:</source>
          <target state="translated">次の例を呼び出す方法を示します、<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <source>Gets a collection that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 内の値を含むコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values">
          <source>A collection that contains the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 内の値を格納しているコレクション。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>