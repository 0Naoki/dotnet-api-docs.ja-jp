<Type Name="Partitioner" FullName="System.Collections.Concurrent.Partitioner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db71d4337bb59a8502217d32d886fbb2098726a0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Partitioner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Partitioner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner" />
  <TypeSignature Language="VB.NET" Value="Public Class Partitioner" />
  <TypeSignature Language="C++ CLI" Value="public ref class Partitioner abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7100d-101">配列、リスト、および列挙体に使用できる共通のパーティション方法を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7100d-101">Provides common partitioning strategies for arrays, lists, and enumerables.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-102">詳細については、「[Custom Partitioners for PLINQ and TPL (PLINQ および TPL 用のカスタム パーティショナー)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7100d-102">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7100d-103">パーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-103">Creates a partitioner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="7100d-104">範囲の下限。この値も含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-104">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="7100d-105">範囲の上限。この値は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-105">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-106">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-106">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-107">パーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-107">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-108">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-108">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7100d-109">
            <paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-109">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="7100d-110">範囲の下限。この値も含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-110">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="7100d-111">範囲の上限。この値は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-111">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-112">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-112">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-113">パーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-113">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-114">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-114">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7100d-115">
            <paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-115">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive, int32 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer, rangeSize As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="rangeSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="7100d-116">範囲の下限。この値も含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-116">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="7100d-117">範囲の上限。この値は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-117">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="7100d-118">各サブ範囲のサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-118">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-119">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-119">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-120">パーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-120">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-121">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-121">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7100d-122">
            <paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-122">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="7100d-123">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-123">-or-</span>
          </span>
          <span data-ttu-id="7100d-124">
            <paramref name="rangeSize" /> 引数が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-124">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive, int64 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long, rangeSize As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="rangeSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="7100d-125">範囲の下限。この値も含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-125">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="7100d-126">範囲の上限。この値は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-126">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="7100d-127">各サブ範囲のサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-127">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-128">ユーザーが指定した範囲をチャンクするパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-128">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-129">パーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-129">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-130">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-130">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7100d-131">
            <paramref name="toExclusive" /> 引数が <paramref name="fromInclusive" /> 引数以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-131">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="7100d-132">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-132">-or-</span>
          </span>
          <span data-ttu-id="7100d-133">
            <paramref name="rangeSize" /> 引数が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-133">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource)) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="7100d-134">元の列挙内の要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-134">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="7100d-135">パーティションに分割する列挙体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-135">The enumerable to be partitioned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-136">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-136">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-137">入力配列に基づく順序付け可能なパーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-137">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-138">作成されたパーティショナーで使用する順序は、列挙可能なソースから取得された要素の自然な順序によって決まります。</span><span class="sxs-lookup"><span data-stu-id="7100d-138">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span> <span data-ttu-id="7100d-139">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-139">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, valuetype System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource), partitionerOptions As EnumerablePartitionerOptions) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Collections::Concurrent::EnumerablePartitionerOptions partitionerOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="partitionerOptions" Type="System.Collections.Concurrent.EnumerablePartitionerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="7100d-140">元の列挙内の要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-140">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="7100d-141">パーティションに分割する列挙体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-141">The enumerable to be partitioned.</span>
          </span>
        </param>
        <param name="partitionerOptions">
          <span data-ttu-id="7100d-142">パーティショナーのバッファー動作を制御するオプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-142">Options to control the buffering behavior of the partitioner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-143">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-143">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-144">入力配列に基づく順序付け可能なパーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-144">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-145">作成されたパーティショナーで使用する順序は、列挙可能なソースから取得された要素の自然な順序によって決まります。</span><span class="sxs-lookup"><span data-stu-id="7100d-145">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7100d-146">
            <paramref name="partitionerOptions" /> 引数が、<see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" /> の無効な値を指定しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-146">The <paramref name="partitionerOptions" /> argument specifies an invalid value for <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IList&lt;TSource&gt; list, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (list As IList(Of TSource), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IList&lt;TSource&gt; ^ list, bool loadBalance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="7100d-147">元のリスト内の要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-147">Type of the elements in source list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="7100d-148">パーティションに分割するリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-148">The list to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="7100d-149">作成されたパーティショナーで、静的にパーティションを割り当てるのではなく、動的にパーティション間で負荷を分散する必要があるかどうかを示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-149">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-150">
            <see cref="T:System.Collections.Generic.IList`1" /> インスタンスから順序付け可能なパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-150">Creates an orderable partitioner from an <see cref="T:System.Collections.Generic.IList`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-151">入力リストに基づく順序付け可能なパーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-151">An orderable partitioner based on the input list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-152">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-152">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (TSource[] array, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(!!TSource[] array, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (array As TSource(), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(cli::array &lt;TSource&gt; ^ array, bool loadBalance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TSource[]" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="7100d-153">元の配列内の要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-153">Type of the elements in source array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="7100d-154">パーティションに分割する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-154">The array to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="7100d-155">作成されたパーティショナーで、静的にパーティションを割り当てるのではなく、動的にパーティション間で負荷を分散する必要があるかどうかを示すブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-155">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7100d-156">
            <see cref="T:System.Array" /> インスタンスから順序付け可能なパーティショナーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-156">Creates an orderable partitioner from a <see cref="T:System.Array" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7100d-157">入力配列に基づく順序付け可能なパーティショナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7100d-157">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7100d-158">詳細と例については、次を参照してください。 [PLINQ および TPL 用のカスタム パーティショナー](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)です。</span><span class="sxs-lookup"><span data-stu-id="7100d-158">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>