<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a940ab9e8bca976429db39edb2ab477f770dde6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668546" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="37edb-101">
        <see cref="T:System.Windows.Threading.Dispatcher" /> に関連付けられているオブジェクトを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37edb-102">スレッドのみを<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>が作成されたアクセスで、<xref:System.Windows.Threading.DispatcherObject>直接です。</span><span class="sxs-lookup"><span data-stu-id="37edb-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="37edb-103">アクセスする、<xref:System.Windows.Threading.DispatcherObject>スレッド以外のスレッドから、<xref:System.Windows.Threading.DispatcherObject>が作成された、呼び出す<xref:System.Windows.Threading.Dispatcher.Invoke%2A>または<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>上、 <xref:System.Windows.Threading.Dispatcher> 、<xref:System.Windows.Threading.DispatcherObject>に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="37edb-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="37edb-104">サブクラス<xref:System.Windows.Threading.DispatcherObject>こと必要があるスレッドを適用する安全性を行うには呼び出す<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>すべてのパブリック メソッドにします。</span><span class="sxs-lookup"><span data-stu-id="37edb-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="37edb-105">これにより、呼び出し元スレッドがスレッドを<xref:System.Windows.Threading.DispatcherObject>に作成されました。</span><span class="sxs-lookup"><span data-stu-id="37edb-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="37edb-106">A<xref:System.Windows.Threading.DispatcherObject>とは別にインスタンス化できません。 つまり、すべてのコンス トラクターが保護されています。</span><span class="sxs-lookup"><span data-stu-id="37edb-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="37edb-107">派生したオブジェクト<xref:System.Windows.Threading.DispatcherObject>スレッド アフィニティがあります。</span><span class="sxs-lookup"><span data-stu-id="37edb-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="37edb-108">派生したオブジェクト<xref:System.Windows.Freezable>はフリー スレッドは、固定したときにします。</span><span class="sxs-lookup"><span data-stu-id="37edb-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="37edb-109">詳しくは、「[Freezable オブジェクトの概要](~/docs/framework/wpf/advanced/freezable-objects-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="37edb-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="37edb-110">すべてのパブリック<see langword="static" />この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-110">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="37edb-111">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-111">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="37edb-112">このオブジェクトが作成されたスレッドからのみアクセスできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-112">This object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="37edb-113">他のスレッドからアクセスする試行がスローされます、<see cref="T:System.InvalidOperationException" />です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="37edb-114">
        <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> または<see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />正しいスレッドに作業をマーシャ リングのサポートを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="37edb-114">
          <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshalling work to the correct thread.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37edb-115">
            <see cref="T:System.Windows.Threading.DispatcherObject" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37edb-116">呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37edb-117">呼び出し元のスレッドがこのオブジェクトにアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-117">
              <see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37edb-118">スレッドでのみ、<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>が作成されたアクセスで、<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="37edb-119">任意のスレッドがへのアクセスを持っているかどうかが確認チェックできます<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="37edb-120">違い<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>と<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>される<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>呼び出し元のスレッドがへのアクセスを持つかどうかを指定するブール値を返します<xref:System.Windows.Threading.DispatcherObject>と<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>呼び出し元のスレッドへのアクセスがない場合は、例外をスロー<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="37edb-121">このメソッドを呼び出すを呼び出すことと同じです<xref:System.Windows.Threading.Dispatcher.CheckAccess%2A>、関連する<xref:System.Windows.Threading.Dispatcher>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="37edb-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37edb-122">次の例で<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>をスレッドが、スレッドへのアクセスを持つかどうかを判断する、<xref:System.Windows.Controls.Button>上に作成されました。</span><span class="sxs-lookup"><span data-stu-id="37edb-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="37edb-123"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>メソッドを<xref:System.Windows.Controls.Button>スレッドへのアクセスを確認するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="37edb-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="37edb-124">呼び出し元のスレッドがアクセスを<xref:System.Windows.Controls.Button>だけのメンバーにアクセスして更新、 <xref:System.Windows.Controls.Button>、それ以外のデリゲートを受け入れ、<xref:System.Windows.Controls.Button>にポストを引数として、<xref:System.Windows.Threading.Dispatcher>の<xref:System.Windows.Controls.Button>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37edb-125">この <see cref="T:System.Windows.Threading.Dispatcher" /> が関連付けられている <see cref="T:System.Windows.Threading.DispatcherObject" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37edb-126">ディスパッチャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-126">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37edb-127">スレッドのみを<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>が作成されたアクセスで、<xref:System.Windows.Threading.DispatcherObject>直接です。</span><span class="sxs-lookup"><span data-stu-id="37edb-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="37edb-128">アクセスする、<xref:System.Windows.Threading.DispatcherObject>スレッド以外のスレッドから、<xref:System.Windows.Threading.DispatcherObject>が作成された、呼び出す<xref:System.Windows.Threading.Dispatcher.Invoke%2A>と<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>上、 <xref:System.Windows.Threading.Dispatcher> 、<xref:System.Windows.Threading.DispatcherObject>に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="37edb-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37edb-129">呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできるように強制します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37edb-130">スレッドでのみ、<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>が作成されたアクセスで、<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="37edb-131">任意のスレッドがへのアクセスを持っているかどうかが確認チェックできます<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="37edb-132">違い<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>と<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>される<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>呼び出し元のスレッドがへのアクセスを持つかどうかを指定するブール値を返します<xref:System.Windows.Threading.DispatcherObject>と<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>呼び出し元のスレッドへのアクセスがない場合は、例外をスロー<xref:System.Windows.Threading.DispatcherObject>です。</span><span class="sxs-lookup"><span data-stu-id="37edb-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37edb-133">次の例で<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>をスレッドが、スレッドへのアクセスを持つかどうかを判断する、<xref:System.Windows.Controls.Button>上に作成されました。</span><span class="sxs-lookup"><span data-stu-id="37edb-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="37edb-134">呼び出し元のスレッドには、アクセスがない場合、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="37edb-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37edb-135">呼び出し元のスレッドは、この <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="37edb-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>