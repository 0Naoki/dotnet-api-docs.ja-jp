<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e179077a2fd6ab03a08129c6ff76d69e9f10923d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70500248" /></Metadata><TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <TypeSignature Language="F#" Value="type DispatcherObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eca65-101"><see cref="T:System.Windows.Threading.Dispatcher" /> に関連付けられているオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="eca65-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca65-102">が作成された<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>スレッドだけがに直接アクセス<xref:System.Windows.Threading.DispatcherObject>する場合があります。</span><span class="sxs-lookup"><span data-stu-id="eca65-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="eca65-103">が作成さ<xref:System.Windows.Threading.DispatcherObject>れ<xref:System.Windows.Threading.DispatcherObject>たスレッド以外のスレッドからにアクセスするには、に<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>関連付けられているでまたは<xref:System.Windows.Threading.Dispatcher.Invoke%2A> <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="eca65-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="eca65-104">スレッドセーフ<xref:System.Windows.Threading.DispatcherObject>を適用する必要があるのサブクラスは、 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>すべてのパブリックメソッドでを呼び出すことによってこれを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="eca65-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="eca65-105">これにより、呼び出し元のスレッドが、 <xref:System.Windows.Threading.DispatcherObject>が作成されたスレッドであることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="eca65-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="eca65-106">は、独立してインスタンス化することはできません。つまり、すべてのコンストラクターは保護されます。 <xref:System.Windows.Threading.DispatcherObject></span><span class="sxs-lookup"><span data-stu-id="eca65-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="eca65-107">から<xref:System.Windows.Threading.DispatcherObject>派生したオブジェクトには、スレッドアフィニティがあります。</span><span class="sxs-lookup"><span data-stu-id="eca65-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="eca65-108">から<xref:System.Windows.Freezable>派生したオブジェクトは、固定されている場合はフリースレッドです。</span><span class="sxs-lookup"><span data-stu-id="eca65-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="eca65-109">詳しくは、「[Freezable オブジェクトの概要](~/docs/framework/wpf/advanced/freezable-objects-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="eca65-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="eca65-110">この型<see langword="static" />のすべてのパブリックメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="eca65-110">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="eca65-111">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="eca65-111">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="eca65-112">このオブジェクトには、それが作成されたスレッドからのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="eca65-112">This object can be accessed only from the thread on which it was created.</span></span> <span data-ttu-id="eca65-113">他のスレッドからアクセスしようとすると、 <see cref="T:System.InvalidOperationException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="eca65-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span></span> <span data-ttu-id="eca65-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />また<see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" />は、適切なスレッドに作業をマーシャリングするためのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="eca65-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshaling work to the correct thread.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eca65-115"><see cref="T:System.Windows.Threading.DispatcherObject" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="eca65-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcherObject.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eca65-116">呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="eca65-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <returns><span data-ttu-id="eca65-117">呼び出し元のスレッドがこのオブジェクトにアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eca65-117"><see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca65-118">によって作成<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>されたスレッドだけが<xref:System.Windows.Threading.DispatcherObject>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="eca65-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="eca65-119">どのスレッドも、この<xref:System.Windows.Threading.DispatcherObject>にアクセスできるかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="eca65-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="eca65-120"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>と<xref:System.Windows.Threading.DispatcherObject> の違いは、 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 呼び出し元のスレッドがこのにアクセスできるかどうかを指定するブール値を返し、呼び出し元のスレッドがにアクセスできない場合は例外をスローします。 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>  <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>これ<xref:System.Windows.Threading.DispatcherObject>は、</span><span class="sxs-lookup"><span data-stu-id="eca65-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="eca65-121">このメソッドの呼び出しは、関連<xref:System.Windows.Threading.Dispatcher.CheckAccess%2A>付けられ<xref:System.Windows.Threading.Dispatcher>たオブジェクトでの呼び出しと同じです。</span><span class="sxs-lookup"><span data-stu-id="eca65-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca65-122">次の例で<xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>は、を使用して、 <xref:System.Windows.Controls.Button>が作成されたスレッドにスレッドがアクセスできるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="eca65-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="eca65-123"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> の <xref:System.Windows.Controls.Button> メソッドは、スレッドへのアクセスを検証するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="eca65-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="eca65-124">呼び出し元のスレッドがアクセス権を<xref:System.Windows.Controls.Button>持っている場合は、のメンバー <xref:System.Windows.Controls.Button>にアクセスするだけでが更新されます<xref:System.Windows.Controls.Button> 。それ以外の場合は、を<xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Controls.Button>引数として受け取るデリゲートがのにポストされます。</span><span class="sxs-lookup"><span data-stu-id="eca65-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eca65-125">この <see cref="T:System.Windows.Threading.Dispatcher" /> が関連付けられている <see cref="T:System.Windows.Threading.DispatcherObject" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="eca65-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="eca65-126">ディスパッチャー。</span><span class="sxs-lookup"><span data-stu-id="eca65-126">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca65-127">が作成された<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>スレッドだけがに直接アクセス<xref:System.Windows.Threading.DispatcherObject>する場合があります。</span><span class="sxs-lookup"><span data-stu-id="eca65-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="eca65-128">が作成さ<xref:System.Windows.Threading.DispatcherObject>れ<xref:System.Windows.Threading.DispatcherObject>たスレッド以外のスレッドからにアクセスするに<xref:System.Windows.Threading.DispatcherObject>は、に<xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>関連付け<xref:System.Windows.Threading.Dispatcher>られているでおよびを呼び出し<xref:System.Windows.Threading.Dispatcher.Invoke%2A>ます。</span><span class="sxs-lookup"><span data-stu-id="eca65-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcherObject.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eca65-129">呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできるように強制します。</span><span class="sxs-lookup"><span data-stu-id="eca65-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eca65-130">によって作成<xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A>されたスレッドだけが<xref:System.Windows.Threading.DispatcherObject>にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="eca65-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="eca65-131">どのスレッドも、この<xref:System.Windows.Threading.DispatcherObject>にアクセスできるかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="eca65-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="eca65-132"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>と<xref:System.Windows.Threading.DispatcherObject> の違いは、 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 呼び出し元のスレッドがこのにアクセスできるかどうかを指定するブール値を返し、呼び出し元のスレッドがにアクセスできない場合は例外をスローします。 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A>  <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>これ<xref:System.Windows.Threading.DispatcherObject>は、</span><span class="sxs-lookup"><span data-stu-id="eca65-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eca65-133">次の例で<xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A>は、を使用して、 <xref:System.Windows.Controls.Button>が作成されたスレッドにスレッドがアクセスできるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="eca65-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="eca65-134">呼び出し元のスレッドがアクセス権を<xref:System.InvalidOperationException>持っていない場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="eca65-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eca65-135">呼び出し元のスレッドは、この <see cref="T:System.Windows.Threading.DispatcherObject" /> にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="eca65-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
