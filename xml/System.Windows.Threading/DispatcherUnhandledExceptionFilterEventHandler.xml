<Type Name="DispatcherUnhandledExceptionFilterEventHandler" FullName="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DispatcherUnhandledExceptionFilterEventHandler(object sender, DispatcherUnhandledExceptionFilterEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherUnhandledExceptionFilterEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DispatcherUnhandledExceptionFilterEventHandler(sender As Object, e As DispatcherUnhandledExceptionFilterEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DispatcherUnhandledExceptionFilterEventHandler(System::Object ^ sender, DispatcherUnhandledExceptionFilterEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="31bca-101">イベントのソース。</span><span class="sxs-lookup"><span data-stu-id="31bca-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="31bca-102">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="31bca-102">The event data.</span></span></param>
    <summary><span data-ttu-id="31bca-103"><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="31bca-103">Represents the method that will handle the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31bca-104"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>イベントが発生したときにコードをによって実行する、<xref:System.Windows.Threading.Dispatcher>処理されない例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="31bca-104">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event occurs when code executing by way of the <xref:System.Windows.Threading.Dispatcher> throws an exception that is not handled.</span></span>  
  
 <span data-ttu-id="31bca-105"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>イベントを発生させませんする手段を提供する、<xref:System.Windows.Threading.Dispatcher.UnhandledException>イベント。</span><span class="sxs-lookup"><span data-stu-id="31bca-105">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event provides a means to not raise the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event.</span></span>  <span data-ttu-id="31bca-106"><xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>イベントは、最初に、場合<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>上、<xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>に設定されている`false`、<xref:System.Windows.Threading.Dispatcher.UnhandledException>イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="31bca-106">The <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> event is raised first, and If <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> on the <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> is set to `false`, the <xref:System.Windows.Threading.Dispatcher.UnhandledException> event will not be raised.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
</Type>