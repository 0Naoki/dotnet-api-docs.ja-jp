<Type Name="EntityPropertyMappingAttribute" FullName="System.Data.Services.Common.EntityPropertyMappingAttribute">
  <TypeSignature Language="C#" Value="public sealed class EntityPropertyMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityPropertyMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityPropertyMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityPropertyMappingAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7d3f-101">エンティティ型のプロパティと、WCF Data Services によって返されるフィード内のエントリの要素間のカスタム マッピングを指定する属性。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-101">Attribute that specifies a custom mapping between properties of an entity type and elements of an entry in a feed returned by WCF Data Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-102"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute> を使用して、リフレクション プロバイダーのデータ モデルでカスタム フィード マッピングを定義できます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-102">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> is used to define custom feed mapping in the data model of a reflection provider.</span></span> <span data-ttu-id="c7d3f-103">この属性は、カスタム フィード マッピングがデータ モデル内で定義されていることを示すクラスを生成するためにメタデータが使用される場合にも、生成されたクライアント データ サービス クラスに適用されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-103">This attribute is also applied to generated client data service classes when the metadata used to generate the classes indicates that custom feed mappings are defined in the data model.</span></span> <span data-ttu-id="c7d3f-104">この情報は、クライアントが作成およびカスタムのフィードをサポートするメッセージを処理できるかどうかを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-104">This information is necessary to make sure that the client can create and consume messages that support custom feeds.</span></span> <span data-ttu-id="c7d3f-105">詳細については、次を参照してください。[フィードのカスタマイズ](~/docs/framework/data/wcf/feed-customization-wcf-data-services.md)です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-105">For more information, see [Feed Customization](~/docs/framework/data/wcf/feed-customization-wcf-data-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7d3f-106">次の例では、`Order` 型の両方のプロパティが既存のフィード要素にマップされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-106">In the following example, both properties of the `Order` type are mapped to existing feed elements.</span></span> <span data-ttu-id="c7d3f-107">`Product` 型の `Item` プロパティは、別の名前空間のカスタム フィード属性にマップされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-107">The `Product` property of the `Item` type is mapped to a custom feed attribute in a separate namespace.</span></span>  
  
 [!code-csharp[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/csharp/VS_Snippets_Misc/astoria custom feeds/cs/orderitems.svc.cs#customiqueryablefeeds)]
 [!code-vb[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria custom feeds/vb/orderitems.svc.vb#customiqueryablefeeds)]  
  
 <span data-ttu-id="c7d3f-108">前の例では、URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items` に次の結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-108">The previous example returns the following result for the URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items`.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#IQueryableFeedResultInline](~/samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/iqueryablefeedresultinline.xml#iqueryablefeedresultinline)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7d3f-109">
          <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-109">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, valuetype System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, valuetype System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetSyndicationItem As SyndicationItemProperty, targetTextContentKind As SyndicationTextContentKind, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::Data::Services::Common::SyndicationItemProperty targetSyndicationItem, System::Data::Services::Common::SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetSyndicationItem" Type="System.Data.Services.Common.SyndicationItemProperty" />
        <Parameter Name="targetTextContentKind" Type="System.Data.Services.Common.SyndicationTextContentKind" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath"><span data-ttu-id="c7d3f-110">フィード項目の指定されたプロパティにマップされるエンティティ型のプロパティ名 (文字列)。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-110">The name of the property, as string, of the entity type that is mapped to the specified property of the feed item.</span></span></param>
        <param name="targetSyndicationItem"><span data-ttu-id="c7d3f-111">プロパティをマップするフィード内で要素を表す <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-111">A <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> value that represents the element in the feed to which to map the property.</span></span> <span data-ttu-id="c7d3f-112"><see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> が <see langword="null" /> でない場合は、この値を <c>None</c> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-112">This value must be set to <c>None</c> if the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> is not <see langword="null" />.</span></span></param>
        <param name="targetTextContentKind"><span data-ttu-id="c7d3f-113">フィード内で表示されるコンテンツの形式を識別する <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-113">A <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> value that identifies the format of the content to display in the feed.</span></span></param>
        <param name="keepInContent"><span data-ttu-id="c7d3f-114">ブール値。割り当てるプロパティが、その割り当て先の場所とフィードのコンテンツ セクションの両方で使用される場合は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-114">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span></span></param>
        <summary><span data-ttu-id="c7d3f-115">
          <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-115">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetPath As String, targetNamespacePrefix As String, targetNamespaceUri As String, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::String ^ targetPath, System::String ^ targetNamespacePrefix, System::String ^ targetNamespaceUri, bool keepInContent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="targetNamespacePrefix" Type="System.String" />
        <Parameter Name="targetNamespaceUri" Type="System.String" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath"><span data-ttu-id="c7d3f-116">フィード内の指定されたプロパティにマップされるエンティティ型のプロパティ名 (文字列)。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-116">The name of the property of the entity type, as string, that is mapped to the specified property in the feed.</span></span></param>
        <param name="targetPath"><span data-ttu-id="c7d3f-117">プロパティのマップ先となる結果のフィードのターゲットの名前 (文字列)。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-117">The name of the target, as string, in the resulting feed to which the property is mapped.</span></span></param>
        <param name="targetNamespacePrefix"><span data-ttu-id="c7d3f-118">このパラメーターを <c>targetNamespaceUri</c> と共に使用して、<c>targetPath</c> 要素が存在する名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-118">This parameter, together with <c>targetNamespaceUri</c>, specifies the namespace in which the <c>targetPath</c> element exists.</span></span></param>
        <param name="targetNamespaceUri"><span data-ttu-id="c7d3f-119"><c>targetName</c> プロパティによって指定された、要素の名前空間 URI を文字列として指定します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-119">Specifies the namespace URI of the element, as string, specified by the <c>targetName</c> property.</span></span></param>
        <param name="keepInContent"><span data-ttu-id="c7d3f-120">ブール値。割り当てるプロパティが、その割り当て先の場所とフィードのコンテンツ セクションの両方で使用される場合は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-120">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span></span></param>
        <summary><span data-ttu-id="c7d3f-121">プロパティをカスタム フィード要素にマップする <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-121">Creates an instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to map a property to a custom feed element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-122">`targetNamespacePrefix` と `targetNamespaceUri` のどちらも指定しない場合、`targetName` が既定の名前空間に配置されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-122">If neither `targetNamespacePrefix` nor `targetNamespaceUri` are specified, the `targetName` will be put in the default namespace.</span></span> <span data-ttu-id="c7d3f-123">`targetNamespacePrefix` を指定しない場合、プレフィックスが自動生成されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-123">If `targetNamespacePrefix` is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="c7d3f-124">`targetNamespacePrefix` が指定されている場合でも、`targetNamespaceUri` が指定されていないと、構築時に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-124">If `targetNamespacePrefix` is specified, but `targetNamespaceUri` is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepInContent">
      <MemberSignature Language="C#" Value="public bool KeepInContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInContent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepInContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-125">プロパティ値をフィードのコンテンツ セクションおよびマップされた場所の両方で繰り返す必要があるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-125">Gets a Boolean value that indicates whether a property value should be repeated both in the content section of the feed and in the mapped location.</span></span></summary>
        <value><span data-ttu-id="c7d3f-126"><see cref="T:System.Boolean" /> 値。フィード内の両方の場所にプロパティが割り当てられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-126">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> when the property is mapped into both locations in the feed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-127">属性値<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>は`true`、フィードと旧バージョンとの互換性のある[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]プロトコル バージョン 1.0 を使用するクライアント アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-127">Whenthe value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> is `true`, the feed is backward compatible with [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] client applications that use protocol version 1.0.</span></span> <span data-ttu-id="c7d3f-128">ときに、値の<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>' は`false`、データ サービスによって使用されるプロトコルのバージョンは 2.0 またはそれ以降のバージョンである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-128">When the value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>``is `false`, the protocol version used by the data service must be 2.0 or later versions.</span></span> <span data-ttu-id="c7d3f-129">詳細については、次を参照してください。[データ サービスのバージョン管理](~/docs/framework/data/wcf/data-service-versioning-wcf-data-services.md)です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-129">For more information, see [Data Service Versioning](~/docs/framework/data/wcf/data-service-versioning-wcf-data-services.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-130">フィードの指定された要素にマップされる配信項目のプロパティの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-130">Gets the name of the property of the syndication item that will be mapped to the specified element of the feed.</span></span></summary>
        <value><span data-ttu-id="c7d3f-131">プロパティ名を含む文字列値。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-131">String value that contains property name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-132"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> プロパティは、複合型を直接参照できません。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-132">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot directly reference a complex type.</span></span> <span data-ttu-id="c7d3f-133">複合型の場合は、プロパティ名が円記号 (`/`) で区切られたパス式を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-133">For complex types, you must use a path expression where property names are separated by a backslash (`/`) character.</span></span> <span data-ttu-id="c7d3f-134">たとえば、整数プロパティ `Person` および複合プロパティ `Age` を含むエンティティ型 `Address` では、以下の値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-134">For example, the following values are permitted for an entity type `Person` with an integer property `Age` and a complex property `Address`:</span></span>  
  
-   `Age`  
  
-   `Address/Street`  
  
 <span data-ttu-id="c7d3f-135"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> プロパティは、プロパティ名で無効な文字 (スペースなど) を含む値に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-135">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot be set to a value that contains a space or any other character that is not valid in a property name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespacePrefix">
      <MemberSignature Language="C#" Value="public string TargetNamespacePrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespacePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespacePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespacePrefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-136"><see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" /> と共に <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 要素が存在する名前空間を指定する文字列値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-136">Gets a string value that, together with <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, specifies the namespace in which the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> element exists.</span></span></summary>
        <value><span data-ttu-id="c7d3f-137">ターゲットの名前空間プレフィックスを含む文字列値。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-137">String value that contains the target namespace prefix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-138"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> と <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> のどちらも指定しない場合、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> が既定の名前空間に配置されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-138">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="c7d3f-139"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> を指定しない場合、プレフィックスが自動生成されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-139">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="c7d3f-140"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> が指定されている場合でも、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> が指定されていないと、構築時に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-140">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespaceUri">
      <MemberSignature Language="C#" Value="public string TargetNamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespaceUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespaceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespaceUri { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-141"><see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> プロパティで指定された要素の名前空間 URI を指定する文字列値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-141">Gets a string value that specifies the namespace URI of the element specified by the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> property.</span></span></summary>
        <value><span data-ttu-id="c7d3f-142">名前空間 URI を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-142">String that contains the namespace URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-143">非配信要素/属性へのマッピングの場合は、このプロパティは、ターゲット要素/属性の名前空間です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-143">If mapping to non-syndication element/attribute, this property is the namespace for the target element/attribute.</span></span>  
  
 <span data-ttu-id="c7d3f-144"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> と <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> のどちらも指定しない場合、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> が既定の名前空間に配置されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-144">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="c7d3f-145"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> を指定しない場合、プレフィックスが自動生成されます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-145">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="c7d3f-146"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> が指定されている場合でも、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> が指定されていないと、構築時に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-146">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-147">プロパティのマップ先のフィードでカスタム ターゲットの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-147">Gets the name of the custom target in the feed to which the property is mapped.</span></span></summary>
        <value><span data-ttu-id="c7d3f-148">ターゲットの XML 要素または属性を持つ文字列値。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-148">String value with target XML element or attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-149"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> プロパティが設定されている場合は、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> および <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> プロパティも設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-149">When the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is set, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> and <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> properties must also be set.</span></span>  
  
 <span data-ttu-id="c7d3f-150">値<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A>する必要があります`null`(`Nothing` Visual Basic で) ときの値、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A>プロパティ以外は何も<xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-150">The value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be `null` (`Nothing` in Visual Basic) when the value of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> property is anything other than <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>.</span></span>  
  
 <span data-ttu-id="c7d3f-151"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 入れ子になった要素が円記号で区切られたパス式でなければなりません (`/`)、アンパサンド属性が指定されます (`@`)。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-151"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be a path expression in which nested elements are separated by a backslash (`/`) and attributes are specified by an ampersand (`@`).</span></span> <span data-ttu-id="c7d3f-152">次の例では、文字列 `UnitsInStock/@ReorderLevel` によってプロパティ値がルート エントリ要素の `ReorderLevel` という子要素の `UnitsInStock` という属性にマップされます。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-152">In the following example, the string `UnitsInStock/@ReorderLevel` maps a property value to an attribute named `ReorderLevel` on a child element named `UnitsInStock` of the root entry element.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#EdmFeedMappedToAttributeSpecific](~/samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/northwind.csdl#edmfeedmappedtoattributespecific)]  
  
 <span data-ttu-id="c7d3f-153"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> プロパティに空白を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-153">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property cannot contain whitespace.</span></span>  
  
 <span data-ttu-id="c7d3f-154"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> プロパティは、XPath の true 式として表現されませんが、指定された要素と属性の名前は整形式の XML 要素と属性を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-154">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is not expressed as a true XPath expression, but the specified element and attribute names must represent well-formed XML elements and attributes.</span></span> <span data-ttu-id="c7d3f-155">データ サービスが初期化されたときに、無効な値により例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-155">An invalid value will cause an exception to occur when the data service is initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSyndicationItem">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSyndicationItem As SyndicationItemProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationItemProperty TargetSyndicationItem { System::Data::Services::Common::SyndicationItemProperty get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationItemProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-156"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> クラスのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-156">Gets a property on the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</span></span></summary>
        <value><span data-ttu-id="c7d3f-157"><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-157">A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-158">配信要素にマッピングする場合、このプロパティは、配信項目の名前です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-158">If mapping to syndication element, this property is the name of the syndication item.</span></span>  
  
 <span data-ttu-id="c7d3f-159">この値に設定する必要があります`None`場合、<xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A>が null でないです。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-159">This value must be set to `None` if the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> is not null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetTextContentKind">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetTextContentKind As SyndicationTextContentKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationTextContentKind TargetTextContentKind { System::Data::Services::Common::SyndicationTextContentKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationTextContentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7d3f-160"><see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> によってマップされたプロパティのコンテンツの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-160">Gets the type of content of the property mapped by <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span></span></summary>
        <value><span data-ttu-id="c7d3f-161">フィード要素内のコンテンツの種類を識別する文字列。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-161">A string that identifies the type of content in the feed element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7d3f-162">配信コンテンツにマッピングする場合、このプロパティは、配信項目のコンテンツの種類です。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-162">If mapping to syndication content, this property is the content type of syndication item.</span></span>  
  
 <span data-ttu-id="c7d3f-163"><xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> 属性の値として <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> を指定する場合、そのプロパティ値に正しい形式の XML が含まれることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-163">When you specify a value of <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> for the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> attribute, you must ensure that the property value contains properly formatted XML.</span></span> <span data-ttu-id="c7d3f-164">データ サービスは、変換を行わずに値を返します。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-164">The data service returns the value without performing any transformations.</span></span> <span data-ttu-id="c7d3f-165">さらに、返された XML 内の XML 要素のプレフィックスに名前空間 URI、およびマップされたフィード内で定義されたプレフィックスが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c7d3f-165">You must also ensure that any XML element prefixes in the returned XML have a namespace URI and prefix defined in the mapped feed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>