<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketAsyncEventArgs.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac586c2d378408e4fecc830c9cfc8926c4c96e55097.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86c2d378408e4fecc830c9cfc8926c4c96e55097</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Represents an asynchronous socket operation.</source>
          <target state="translated">非同期ソケット操作を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> class is part of a set of enhancements to the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>クラスは、一連の機能強化の一部、<ph id="ph2">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph>特殊化された高パフォーマンスのソケット アプリケーションで使用できる代替非同期パターンを提供するクラス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>This class was specifically designed for network server applications that require high performance.</source>
          <target state="translated">このクラスは、高パフォーマンスを必要とするネットワーク サーバー アプリケーションを具体的に設計されました。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>An application can use the enhanced asynchronous pattern exclusively or only in targeted hot areas (for example, when receiving large amounts of data).</source>
          <target state="translated">アプリケーションの拡張の非同期パターンのみを使用できます、のみ対象ホット領域 (大量のデータを受信する場合など)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O.</source>
          <target state="translated">この機能強化の主な特徴は、高ボリュームの非同期ソケット I/O 中、オブジェクトの割り当てと同期が繰り返されることを避けることにあります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The Begin/End design pattern currently implemented by the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph> class requires a <ph id="ph2">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> object be allocated for each asynchronous socket operation.</source>
          <target state="translated">によって、現在実装されて、開始/終了デザイン パターン、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph>クラス必要があります、<ph id="ph2">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph>非同期ソケット操作ごとにオブジェクトを割り当てられません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>In the new <ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph> class enhancements, asynchronous socket operations are described by reusable <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects allocated and maintained by the application.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph>クラスの拡張機能を再利用可能なによって操作が説明されている非同期ソケット<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクトが割り当てられているし、アプリケーションによって維持されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>High-performance socket applications know best the amount of overlapped socket operations that must be sustained.</source>
          <target state="translated">高パフォーマンスのソケット アプリケーションは、維持する必要があるオーバーラップしたソケット操作の量を効率的に認識します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The application can create as many of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects that it needs.</source>
          <target state="translated">アプリケーションは <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> オブジェクトを必要な数だけ作成できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects for that purpose.</source>
          <target state="translated">たとえば、サーバー アプリケーション 15 ソケットが着信クライアント接続の速度をサポートするために、未処理の操作を常にそのまま使用する場合は、割り当てることができます 15 の再利用可能な<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>を目的とするオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The pattern for performing an asynchronous socket operation with this class consists of the following steps:</source>
          <target state="translated">このクラスで非同期ソケット操作を実行するパターンは次の手順で構成されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Allocate a new <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> context object, or get a free one from an application pool.</source>
          <target state="translated">新しい <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> コンテキスト オブジェクトを割り当てるか、アプリケーション プールから空きコンテキスト オブジェクトを入手します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Set properties on the context object to the operation about to be performed (the completion callback method, the data buffer, the offset into the buffer, and the maximum amount of data to transfer, for example).</source>
          <target state="translated">プロパティの設定にコンテキスト オブジェクトを操作について (完了コールバック メソッド、データ バッファー、オフセット、バッファーと、転送するデータの最大量に) を実行します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.</source>
          <target state="translated">適切なソケット メソッド (xxxAsync) を呼び出し、非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>If the asynchronous socket method (xxxAsync) returns true, in the callback, query the context properties for completion status.</source>
          <target state="translated">非同期ソケット メソッド (xxxAsync) が true の場合、コールバックに返される場合は、完了ステータスのコンテキスト プロパティを照会します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>If the asynchronous socket method (xxxAsync) returns false, the operation completed synchronously.</source>
          <target state="translated">非同期ソケット メソッド (xxxAsync) が false を返す場合、操作を同期的に完了します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The context properties may be queried for the operation result.</source>
          <target state="translated">コンテキスト プロパティに操作結果が問い合わされることがあります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Reuse the context for another operation, put it back in the pool, or discard it.</source>
          <target state="translated">別の操作でコンテキストを再利用するか、プールに戻すか、破棄します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The lifetime of the new asynchronous socket operation context object is determined by references by the application code and asynchronous I/O references.</source>
          <target state="translated">新しい非同期ソケット操作のコンテキスト オブジェクトの有効期間は、参照によって、アプリケーション コードと非同期の I/O 参照によって決まります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods.</source>
          <target state="translated">非同期ソケット操作メソッドの 1 つにパラメーターとして送信された後、非同期ソケット操作コンテキスト オブジェクトの参照をアプリケーションが維持する必要はありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>It will remain referenced until the completion callback returns.</source>
          <target state="translated">完了コールバックが戻るまで、参照状態が維持されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>However it is advantageous for the application to retain the reference to the context so that it can be reused for a future asynchronous socket operation.</source>
          <target state="translated">ただし、今後の非同期ソケット操作の再利用できるように、コンテキストへの参照を保持するアプリケーションの場合に効果的です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The following code example implements the connection logic for the socket server that uses the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> class.</source>
          <target state="translated">次のコード例を使用するソケット サーバーの接続のロジックを実装して、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>After accepting a connection, all data read from the client is sent back to the client.</source>
          <target state="translated">接続を受け入れた後は、クライアントから読み取られるすべてのデータをクライアントに送信されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The read and echo back to the client pattern is continued until the client disconnects.</source>
          <target state="translated">読み取りと、クライアントが切断されるまで、クライアントのパターンにエコーが続きます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The BufferManager class that is used by this example is displayed in the code example for the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">コード例ではこの例で使用される、BufferManager クラスが表示されます、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>The SocketAsyncEventArgsPool class that is used in this example is displayed in the code example for the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">コード例では、この例で使用されている SocketAsyncEventArgsPool クラスが表示されます、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> instance.</source>
          <target state="translated">空の <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>After calling this constructor all properties will have their default values:</source>
          <target state="translated">このコンス トラクターの呼び出し後にすべてのプロパティが既定値が得られます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>Object references will be null</source>
          <target state="translated">オブジェクト参照は null になります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>Properties that return an integer will return zero.</source>
          <target state="translated">整数値を返すプロパティは 0 を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A&gt;</ph> property will be equal to <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A&gt;</ph>プロパティと等しくなります<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A&gt;</ph> property will be equal to <ph id="ph2">&lt;xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType&gt;</ph>, which specifies no flags will be used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A&gt;</ph>プロパティと等しくなります<ph id="ph2">&lt;xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType&gt;</ph>フラグを指定しませんが適用されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A&gt;</ph> property will be equal to <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A&gt;</ph>プロパティと等しくなります<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The caller must set the appropriate properties prior to passing the object to the appropriate asynchronous socket (xxxAsync) method.</source>
          <target state="translated">呼び出し元には、適切な非同期ソケット (xxxAsync) メソッドにオブジェクトを渡す前に適切なプロパティを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The following code example represents a collection of reusable <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> objects.</source>
          <target state="translated">次のコード例は、の再利用可能なコレクションを表します<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
          <source>The platform is not supported.</source>
          <target state="translated">このプラットフォームはサポートされていません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
          <source>Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドとの接続を受け入れるために使用するソケットまたは作成されたソケットを取得または設定します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> to use or the socket created for accepting a connection with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドとの接続を受け入れるために使用する <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> または作成されたソケット。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
          <source>This property can be used to provide an already created <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that will be used for an asynchronous socket accept operation.</source>
          <target state="translated">このプロパティは、既に作成して使用できます<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>非同期ソケットを使用する操作をそのまま使用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
          <source>Upon completion of the accept operation, it is the socket representing the accepted connection.</source>
          <target state="translated">受信操作の完了時に、受け入れられた接続を表すソケットを勧めします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
          <source>If not supplied (set to null) before calling the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph> method, a new socket will be created automatically and be accessible in the completion callback with this property.</source>
          <target state="translated">(Null セット) を呼び出す前に指定されていない場合、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>メソッド、新しいソケットは自動的に作成され、このプロパティを使用して、完了コールバックでアクセスできることです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
          <source>Gets the data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーを取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that represents the data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーを表す <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
          <source>This property gets the data buffer currently associated with the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> instance.</source>
          <target state="translated">このプロパティは、現在関連付けられているデータ バッファーを取得、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
          <source>To set the buffer, the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph> method must be used.</source>
          <target state="translated">バッファーを設定する、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph>メソッドを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティで使用、 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>Gets or sets an array of data buffers to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーの配列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that represents an array of data buffers to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーの配列を表す <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティは、使用、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>This property is used to provide multiple buffers of data to be sent or to provide multiple buffers in which to store received data for an asynchronous socket operation that can send or receive data.</source>
          <target state="translated">このプロパティは、送信する、または送信したり、データを受信する非同期ソケット操作の受信データを格納するための複数のバッファーを提供するデータの複数のバッファーを提供する使用されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>Multiple buffers using the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> property are supported by the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">使用して複数のバッファー、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>でプロパティがサポートされて、<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> property is set to a non-null value, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property must be null and is ignored by the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>プロパティが null 以外の値に設定、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティが null にする必要がありでは無視されます、<ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> was set to a non-null value and an attempt is made to set the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> property to a non-null value, an exception is thrown.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> null 以外の値に設定された設定が試行され、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>プロパティを null 以外の値は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> property is set to a non-null value, the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph> methods will throw an <ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>プロパティが null 以外の値に設定、<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドがスローされます、<ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> parameter is ignored by the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>パラメーターは無視されます、<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>There are ambiguous buffers specified on a set operation.</source>
          <target state="translated">設定操作であいまいなバッファーが指定されています。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
          <source>This exception occurs if the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property has been set to a non-null value and an attempt was made to set the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /&gt;</ph> property to a non-null value.</source>
          <target state="translated">この例外は、<ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> が null 以外の値に設定されている状態で、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /&gt;</ph> プロパティに null 以外の値を設定しようとした場合に発生します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
          <source>Gets the number of bytes transferred in the socket operation.</source>
          <target state="translated">ソケット操作で転送するバイト数を取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the number of bytes transferred in the socket operation.</source>
          <target state="translated">ソケット操作で転送するバイト数を格納する <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
          <source>This property provides the number of bytes transferred in an asynchronous socket operation that can receive or send data.</source>
          <target state="translated">このプロパティは、受信したり、データを送信できる非同期ソケット操作で転送されたバイト数を提供します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
          <source>If zero is returned from a read operation, the remote end has closed the connection.</source>
          <target state="translated">0 は、読み取り操作から返される、リモート エンドは、接続を閉じました。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
          <source>This property is set by all asynchronous socket operations except the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティを除くすべての非同期ソケット操作によって、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
          <source>The event used to complete an asynchronous operation.</source>
          <target state="translated">非同期操作を完了させるために使用されるイベントです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph> event provides a way for client applications to complete an asynchronous socket operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph>イベントは、クライアント アプリケーションの非同期ソケット操作を完了するための手段を提供します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
          <source>An event handler should be attached to the event within a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> instance when an asynchronous socket operation is initiated, otherwise the application will not be able to determine when the operation completes.</source>
          <target state="translated">内のイベントをイベント ハンドラーをアタッチする必要があります、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>インスタンス非同期ソケット操作が開始されると、それ以外の場合、アプリケーションことはできません、操作の完了時に決定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
          <source>The completion callback delegates referenced by the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph> event contains program logic to finish processing the asynchronous socket operation for the client.</source>
          <target state="translated">によって参照される完了コールバック デリゲート、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph>イベントには、クライアントに対して非同期ソケット操作の処理を完了するプログラム ロジックが含まれています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
          <source>When the event is signaled, the application uses the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> object parameter to obtain the status of the completed asynchronous socket operation.</source>
          <target state="translated">イベントがシグナル状態に、アプリケーションを使用して、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクト パラメーターは、完了した非同期ソケット操作の状態を取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>Gets the exception in the case of a connection failure when a <ph id="ph1">&lt;see cref="T:System.Net.DnsEndPoint" /&gt;</ph> was used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsEndPoint" /&gt;</ph> が使用されているときに接続エラーが発生した場合に、例外を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that indicates the cause of the connection error when a <ph id="ph2">&lt;see cref="T:System.Net.DnsEndPoint" /&gt;</ph> was specified for the <ph id="ph3">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="T:System.Net.DnsEndPoint" /&gt;</ph> を指定したときの接続エラーの原因を示す <ph id="ph3">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>In the case of a connection failure when a <ph id="ph1">&lt;xref:System.Net.DnsEndPoint&gt;</ph> was specified for the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph> property will contain the exception that indicates the detailed cause of the socket error.</source>
          <target state="translated">接続エラーが発生時に、<ph id="ph1">&lt;xref:System.Net.DnsEndPoint&gt;</ph>が指定されました、 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A&gt;</ph> 、プロパティ、<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph>プロパティは、ソケット エラーの詳細な原因を示す例外が格納されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>When an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> was specified for the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A&gt;</ph> property and a connection failure occurs, the <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph> property will be a <ph id="ph4">`null`</ph> reference.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>が指定されました、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A&gt;</ph>プロパティと接続エラーが発生すると、<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph>プロパティになります、<ph id="ph4">`null`</ph>参照します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A&gt;</ph> property is always set in the case of a connection failure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A&gt;</ph>プロパティは、接続の障害の場合は常に設定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph> property contains more information about the failure if it was a failure connecting to a <ph id="ph2">&lt;xref:System.Net.DnsEndPoint&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A&gt;</ph>プロパティが接続に失敗した場合、そのエラーに関する詳細についてには含まれています、<ph id="ph2">&lt;xref:System.Net.DnsEndPoint&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
          <source>If an application is only interested in whether the connect operation succeeded or failed, then the application only needs to check the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A&gt;</ph> property.</source>
          <target state="translated">アプリケーションにのみ確認する必要な場合は、アプリケーションはのみに関心が、接続操作が成功したか失敗するかどうか、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
          <source>The created and connected <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> object after successful completion of the <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /&gt;</ph> メソッドが正常に完了した後に作成され、接続された <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
          <source>The connected <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> object.</source>
          <target state="translated">接続された <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
          <source>After successful completion of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A&gt;</ph> method, this property contains the newly created and connected <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> object.</source>
          <target state="translated">正常に完了した後、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A&gt;</ph>メソッド、このプロパティは、新しく作成して接続されているが含まれます。<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
          <source>Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</source>
          <target state="translated">非同期操作で送信または受信するデータの最大量 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the maximum amount of data, in bytes, to send or receive.</source>
          <target state="translated">送信または受信するデータの最大量 (バイト単位) を格納する <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
          <source>This property is set by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph> method.</source>
          <target state="translated">このプロパティを呼び出して、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティで使用、 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
          <source>Gets or sets a value that specifies if socket can be reused after a disconnect operation.</source>
          <target state="translated">切断操作後にソケットを再利用できるかどうかを指定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that specifies if socket can be reused after a disconnect operation.</source>
          <target state="translated">切断操作後にソケットを再利用できるかどうかを指定する <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
          <source>This property is used to alter the behavior of <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティの使用の動作の変更を<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
          <source>If true, a socket disconnected by the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph> method can be reused after disconnect completion in subsequent socket accept or connect operations.</source>
          <target state="translated">かどうかは true、ソケットによって切断された、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドを再利用できる以降のソケットで補完を切断した後を受け入れるか、操作を接続します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> instance and optionally disposes of the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> インスタンスが使用するアンマネージ リソースを解放し、必要に応じてマネージ リソースを破棄します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework のネットワークのトレース<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /&gt;</ph> クラスによって使用されていたリソースを解放します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> class finalizer closes the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> and free resources associated with the <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>クラスのファイナライザーが閉じ、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>に関連付けられているリソースを解放し、<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>Gets the type of socket operation most recently performed with this context object.</source>
          <target state="translated">このコンテキスト オブジェクトで最近実行されたソケット操作の種類を取得します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncOperation" /&gt;</ph> instance that indicates the type of socket operation most recently performed with this context object.</source>
          <target state="translated">このコンテキスト オブジェクトで最近実行されたソケット操作の種類を示す <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketAsyncOperation" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>This property describes the asynchronous socket operation that was most recently completed using this <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> object.</source>
          <target state="translated">このプロパティは、これを使用して最も最近完了した非同期ソケット操作を説明します<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>The value of this property will be <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType&gt;</ph> until the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> instance is used to begin an asynchronous socket operation.</source>
          <target state="translated">このプロパティの値になります<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType&gt;</ph>まで、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>非同期ソケット操作を開始するインスタンスを使用します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>The property will then be set to the type of operation being performed in the methods that take the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> as a parameter.</source>
          <target state="translated">プロパティを受け取るメソッドで実行される操作の種類を設定し、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>をパラメーターとして。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>This property more easily facilitates using a single completion callback delegate for multiple kinds of asynchronous socket operations.</source>
          <target state="translated">このプロパティには、複数の種類の非同期ソケット操作の 1 つの完了コールバック デリゲートを使用してより簡単に容易になります。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>This property remains valid in a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> instance until the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> instance is used for another asynchronous socket (xxxAsync) operation.</source>
          <target state="translated">このプロパティの値では有効で、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>をインスタンス化されるまで、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>インスタンスが別の (xxxAsync) 非同期ソケット操作のために使用します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>This property is set by all asynchronous socket (xxxAsync) methods.</source>
          <target state="translated">このプロパティがすべての非同期ソケット (xxxAsync) メソッド</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>Calling an asynchronous socket method (xxxAsync) on the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph> class sets this property value.</source>
          <target state="translated">非同期ソケット メソッド (xxxAsync) を呼び出す、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph>クラスは、このプロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
          <source>This property is intended for use with the SocketAsyncCallback completion routine implemented by the application.</source>
          <target state="translated">このプロパティは、アプリケーションによって実装される SocketAsyncCallback 完了ルーチンで使用するものです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>Gets the offset, in bytes, into the data buffer referenced by the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティによって参照されるデータ バッファーへのオフセット (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the offset, in bytes, into the data buffer referenced by the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> プロパティによって参照されるデータ バッファーへのオフセット (バイト単位) を格納する <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>This property describes the starting byte offset of data in the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property.</source>
          <target state="translated">このプロパティの説明内のデータのバイト オフセット、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>This value is set by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph> method.</source>
          <target state="translated">この設定は呼び出すことによって、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>This property does not apply to the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph> property.</source>
          <target state="translated">このプロパティには適用されません、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティで使用、 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph5">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph6">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph7">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>The event that is signaled.</source>
          <target state="translated">シグナル状態のイベント。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>Represents a method that is called when an asynchronous operation completes.</source>
          <target state="translated">非同期操作の完了時に呼び出されるメソッドを表します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>This method is not callable by user code.</source>
          <target state="translated">このメソッドは、ユーザー コードから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>This method gets called by the internals of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> object when the current operation is complete.</source>
          <target state="translated">このメソッドがの内部から呼び出される、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクトの現在の操作が完了するとします。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>This method is used with all asynchronous socket (xxxAsync) methods.</source>
          <target state="translated">このメソッドは、すべての非同期ソケット (xxxAsync) メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>An application that creates a class inheriting from <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> can override this method to hook into this completion notification and clean up any resources that it allocated for the operation.</source>
          <target state="translated">継承するクラスを作成するアプリケーション<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>この完了の通知をフックし、操作に割り当てられているすべてのリソースをクリーンアップするには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>The default implementation just raises the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph> event.</source>
          <target state="translated">既定の実装がだけを生成、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Completed&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>This method is used to hook up an event handler to be used as the completion callback for a subsequent asynchronous socket operation.</source>
          <target state="translated">このメソッドは、以降の非同期ソケット操作の完了コールバックとして使用するイベント ハンドラーをフックするために使用されます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>The caller must implement at least one callback delegate inherited from this method prior to starting an asynchronous socket operation using one of the asynchronous (xxxAsync) methods on the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">呼び出し元がメソッドを使用して、非同期 (xxxAsync) で非同期ソケット操作を開始する前にこのメソッドから継承には、少なくとも 1 つのコールバック デリゲートを実装する必要があります、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket?displayProperty=nameWithType&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>The caller's <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A&gt;</ph> method provides a way for client applications to complete an asynchronous socket operation.</source>
          <target state="translated">呼び出し元の<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A&gt;</ph>メソッドは、クライアント アプリケーションの非同期ソケット操作を完了するための手段を提供します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>A callback delegate must be implemented when an asynchronous socket operation is initiated.</source>
          <target state="translated">非同期ソケット操作の開始時に、コールバック デリゲートを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>The completion callback delegate(s) inherited from the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A&gt;</ph> method must contain program logic to finish processing the asynchronous socket operation for the client.</source>
          <target state="translated">継承された完了コールバックの代理人、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A&gt;</ph>メソッドは、クライアントに対して非同期ソケット操作の処理を完了するプログラム ロジックを含める必要があります。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
          <source>When an asynchronous operation is signaled, the application uses the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> object parameter to obtain status of the completed asynchronous socket operation.</source>
          <target state="translated">非同期操作が通知されると、アプリケーションを使用して、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクト パラメーターは、完了した非同期ソケット操作の状態を取得します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
          <source>Gets the IP address and interface of a received packet.</source>
          <target state="translated">受信パケットの IP アドレスとインターフェイスを取得します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.Sockets.IPPacketInformation" /&gt;</ph> instance that contains the destination IP address and interface of a received packet.</source>
          <target state="translated">受信パケットの宛先 IP アドレスとインターフェイスを格納する <ph id="ph1">&lt;see cref="T:System.Net.Sockets.IPPacketInformation" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
          <source>This property provides information about a packet received using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティを使用して受信したパケットに関する情報を提供する、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティは、使用、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>Gets or sets the remote IP endpoint for an asynchronous operation.</source>
          <target state="translated">非同期操作のリモート IP エンドポイントを取得または設定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the remote IP endpoint for an asynchronous operation.</source>
          <target state="translated">非同期操作のリモート IP エンドポイントを表す <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This property specifies the remote endpoint.</source>
          <target state="translated">このプロパティは、リモート エンドポイントを指定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This property can specify the remote endpoint to which to connect using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティを使用して接続するリモート エンドポイントを指定できます、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This property can specify the remote endpoint to which to send data using <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティを使用してデータを送信するリモート エンドポイントを指定できます<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This property can specify the remote endpoint from which data was received using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティを使用してデータの受信元となるリモート エンドポイントを指定できます、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This remote endpoint specified by this property can include an IPv4 or IPv6 address.</source>
          <target state="translated">このプロパティで指定するリモート エンドポイントは、IPv4 または IPv6 アドレスを含めることができます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティは、使用、 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType&gt;</ph>、または<ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
          <source>Gets or sets an array of buffers to be sent for an asynchronous operation used by the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">非同期操作のために送信するバッファーの配列を取得または設定します。この配列は、<ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /&gt;</ph> メソッドで使用します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SendPacketsElement" /&gt;</ph> objects that represent an array of buffers to be sent.</source>
          <target state="translated">送信するバッファーの配列を表す <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SendPacketsElement" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
          <source>The array of buffers can represent a file or files in memory or a set of memory data buffers.</source>
          <target state="translated">バッファーの配列には、ファイルまたはメモリまたは一連のデータ バッファーのメモリ内のファイルを表すことができます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティは、使用、<ph id="ph1">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
          <source>Gets or sets a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TransmitFileOptions" /&gt;</ph> values for an asynchronous operation used by the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">非同期操作で使用する <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TransmitFileOptions" /&gt;</ph> 値のビットごとの組み合わせを取得または設定します。この組み合わせは、<ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /&gt;</ph> メソッドで使用します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TransmitFileOptions" /&gt;</ph> that contains a bitwise combination of values that are used with an asynchronous operation.</source>
          <target state="translated">非同期操作で使用する値のビットごとの組み合わせを格納する <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TransmitFileOptions" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
          <source>This property specifies the <ph id="ph1">&lt;xref:System.Net.Sockets.TransmitFileOptions&gt;</ph> that are used by the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このプロパティを指定、<ph id="ph1">&lt;xref:System.Net.Sockets.TransmitFileOptions&gt;</ph>で使用されている、<ph id="ph2">&lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
          <source>Gets or sets the size, in bytes, of the data block used in the send operation.</source>
          <target state="translated">送信操作で使用するデータ ブロックのサイズ (バイト単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the size, in bytes, of the data block used in the send operation.</source>
          <target state="translated">送信操作で使用するデータ ブロックのサイズ (バイト単位) を格納する <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
          <source>Set this property to zero to let the sockets layer select a default send size.</source>
          <target state="translated">0 を既定の送信サイズを選択して sockets layer を使用できます。 このプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
          <source>Setting this property to 0xFFFFFFFF enables the caller to control the size and content of each send request, achieved by using the <ph id="ph1">&lt;xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">使用してこのプロパティを 0 xffffffff を有効に設定すると、呼び出し元が、サイズと各送信要求のコンテンツを制御、実行、<ph id="ph1">&lt;xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
          <source>This capability is useful for message protocols that place limitations on the size of individual send requests.</source>
          <target state="translated">この機能は、個々 の送信要求のサイズに制限を加えるメッセージ プロトコルに役立ちます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>Initializes the data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーを初期化します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.SocketAsyncEventArgs">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property to null and the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph> properties to zero.</source>
          <target state="translated">このメソッドを設定、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティを null と<ph id="ph2">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph>プロパティを 0 にします。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>The offset, in bytes, in the data buffer where the operation starts.</source>
          <target state="translated">操作を開始するデータ バッファーのオフセット (バイト単位)。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>The maximum amount of data, in bytes, to send or receive in the buffer.</source>
          <target state="translated">バッファー内で送信または受信するデータの最大量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>Sets the data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーを設定します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`count`</ph> parameters can't be negative numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>と<ph id="ph2">`count`</ph>パラメーターが負の数値にすることはできません。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>The combination of the <ph id="ph1">`offset`</ph> and <ph id="ph2">`count`</ph> parameters must be in bounds of the buffer array in the <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property.</source>
          <target state="translated">組み合わせ、<ph id="ph1">`offset`</ph>と<ph id="ph2">`count`</ph>のバッファー配列の境界内のパラメーターがある必要があります、<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph> property to the <ph id="ph2">`count`</ph> parameter and the <ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph> property to the <ph id="ph4">`offset`</ph> parameter.</source>
          <target state="translated">このメソッドを設定、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph>プロパティを<ph id="ph2">`count`</ph>パラメーターおよび<ph id="ph3">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph>プロパティを<ph id="ph4">`offset`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property is null, this method ignores the <ph id="ph2">`offset`</ph> and <ph id="ph3">`count`</ph> parameters and sets the <ph id="ph4">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph> properties to 0.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティが null で、このメソッドは無視、<ph id="ph2">`offset`</ph>と<ph id="ph3">`count`</ph>パラメーターとセット、<ph id="ph4">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt;</ph>と<ph id="ph5">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt;</ph>プロパティを 0 にします。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>This method does not change the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドは変更されません、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>An argument was out of range.</source>
          <target state="translated">引数が範囲外です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>This exception occurs if the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than the length of the array in the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property.</source>
          <target state="translated">この例外は、<ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターがゼロ未満であるか、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティの配列の長さよりも大きい場合に発生します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
          <source>This exception also occurs if the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero or greater than the length of the array in the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property minus the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter.</source>
          <target state="translated">また、<ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターがゼロ未満であるか、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティの配列の長さから <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> パラメーターを引いた長さよりも大きい場合にも、この例外が発生します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファー。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The offset, in bytes, in the data buffer where the operation starts.</source>
          <target state="translated">操作を開始するデータ バッファーのオフセット (バイト単位)。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum amount of data, in bytes, to send or receive in the buffer.</source>
          <target state="translated">バッファー内で送信または受信するデータの最大量 (バイト単位)。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>Sets the data buffer to use with an asynchronous socket method.</source>
          <target state="translated">非同期ソケット メソッドで使用するデータ バッファーを設定します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> and <ph id="ph2">`count`</ph> parameters can't be negative numbers.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>と<ph id="ph2">`count`</ph>パラメーターが負の数値にすることはできません。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The combination of the <ph id="ph1">`offset`</ph> and <ph id="ph2">`count`</ph> parameters must be in bounds of the data array in the <ph id="ph3">`buffer`</ph> parameter.</source>
          <target state="translated">組み合わせ、<ph id="ph1">`offset`</ph>と<ph id="ph2">`count`</ph>でデータの配列の境界内のパラメーターがある必要があります、<ph id="ph3">`buffer`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>This method sets the [SetBuffer Method (Byte<ph id="ph1">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A&gt; property to the <ph id="ph2">`buffer`</ph> parameter, the [SetBuffer Method (Byte<ph id="ph3">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A&gt; property to the <ph id="ph4">`count`</ph> parameter, and the [SetBuffer Method (Byte<ph id="ph5">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A&gt; property to the <ph id="ph6">`offset`</ph> parameter.</source>
          <target state="translated">このメソッドを設定、[SetBuffer メソッド (バイト<ph id="ph1">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A &gt; プロパティを<ph id="ph2">`buffer`</ph>パラメーターで、[SetBuffer メソッド (バイト<ph id="ph3">\&lt;</ph>相互参照。System.Net.Sockets.SocketAsyncEventArgs.Count%2A &gt; プロパティを<ph id="ph4">`count`</ph>パラメーター、および [SetBuffer メソッド (バイト<ph id="ph5">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A &gt; プロパティを<ph id="ph6">`offset`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example creates a single large buffer which can be divided up and assigned to [SetBuffer Method (Byte<ph id="ph1">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs&gt; objects for use with each socket I/O operation.</source>
          <target state="translated">次のコード例を分割し、割り当てられている 1 つの大きなバッファーを作成する [SetBuffer メソッド (バイト<ph id="ph1">\&lt;</ph>xref:System.Net.Sockets.SocketAsyncEventArgs &gt; ソケット I/O 操作のそれぞれで使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>This enables buffers to be easily reused and guards against fragmenting heap memory.</source>
          <target state="translated">これにより、バッファーを簡単に再利用して、ヒープ メモリの断片化を防ぐ。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>There are ambiguous buffers specified.</source>
          <target state="translated">あいまいなバッファーが指定されています。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>This exception occurs if the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property is also not null and the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /&gt;</ph> property is also not null.</source>
          <target state="translated">この例外は、<ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティが null ではなく、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /&gt;</ph> プロパティも null ではない場合に発生します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>An argument was out of range.</source>
          <target state="translated">引数が範囲外です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>This exception occurs if the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than the length of the array in the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property.</source>
          <target state="translated">この例外は、<ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターがゼロ未満であるか、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティの配列の長さよりも大きい場合に発生します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
          <source>This exception also occurs if the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero or greater than the length of the array in the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> property minus the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter.</source>
          <target state="translated">また、<ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターがゼロ未満であるか、<ph id="ph2">&lt;see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /&gt;</ph> プロパティの配列の長さから <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> パラメーターを引いた長さよりも大きい場合にも、この例外が発生します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol">
          <source>Gets or sets the protocol to use to download the socket client access policy file.</source>
          <target state="translated">ソケット クライアント アクセス ポリシー ファイルのダウンロードに使用するプロトコルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol">
          <source>The protocol to use to download the socket client access policy file.</source>
          <target state="translated">ソケット クライアント アクセス ポリシー ファイルのダウンロードに使用するプロトコル。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.SocketClientAccessPolicyProtocol&gt;</ph> specifies the method to download a client access policy file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.SocketClientAccessPolicyProtocol&gt;</ph>クライアント アクセス ポリシー ファイルをダウンロードする方法を指定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>Gets or sets the result of the asynchronous socket operation.</source>
          <target state="translated">非同期ソケット操作の結果を取得または設定します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketError" /&gt;</ph> that represents the result of the asynchronous socket operation.</source>
          <target state="translated">非同期ソケット操作の結果を表す <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketError" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>This property provides the completion status of an asynchronous socket operation.</source>
          <target state="translated">このプロパティは、非同期ソケット操作の完了ステータスを提供します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>A value of <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType&gt;</ph> indicates successful completion of an operation.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType&gt;</ph>操作が正常に完了を示します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>This property is primarily used in an application’s event handler routine.</source>
          <target state="translated">このプロパティはアプリケーションのイベント ハンドラー ルーチンで、主に使用します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
          <source>This property is used with all of the asynchronous socket (xxxAsync) methods.</source>
          <target state="translated">このプロパティは、すべての非同期ソケット (xxxAsync) メソッドで使用されます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
          <source>Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</source>
          <target state="translated">非同期ソケット操作の結果を取得します。または、非同期操作の動作を設定します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> that represents the results of an asynchronous socket operation.</source>
          <target state="translated">非同期ソケット操作の結果を表す <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
          <source>The property specifies the bitwise combination of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType&gt;</ph> to be used for an asynchronous socket operation.</source>
          <target state="translated">ビットごとの組み合わせを示します、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType&gt;</ph>非同期ソケット操作に使用します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
          <source>This property is used with the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">このプロパティで使用、 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph4">&lt;xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
          <source>Gets or sets a user or application object associated with this asynchronous socket operation.</source>
          <target state="translated">この非同期ソケット操作に関連付けられたユーザー オブジェクトまたはアプリケーション オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
          <source>An object that represents the user or application object associated with this asynchronous socket operation.</source>
          <target state="translated">この非同期ソケット操作に関連付けられたユーザー オブジェクトまたはアプリケーション オブジェクトを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
          <source>This property can be used by an application to associate an application state object with the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph> object.</source>
          <target state="translated">このプロパティに持つアプリケーション状態オブジェクトを関連付けるには、アプリケーションによって使用できます、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketAsyncEventArgs&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
          <source>Primarily, this property is a way for an application to pass state to the application’s event handler (for example, the asynchronous operation completion method).</source>
          <target state="translated">主に、このプロパティは、アプリケーション状態をアプリケーションのイベント ハンドラー (たとえば、非同期操作の完了メソッド) に渡すための方法です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
          <source>This property is used with all of the asynchronous socket (xxxAsync) methods.</source>
          <target state="translated">このプロパティは、すべての非同期ソケット (xxxAsync) メソッドで使用されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>