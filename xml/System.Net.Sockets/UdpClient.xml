<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="607a6-101">ユーザー データグラム プロトコル (UDP) のネットワーク サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="607a6-101">Provides User Datagram Protocol (UDP) network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-102"><xref:System.Net.Sockets.UdpClient>クラスはコネクションレスの UDP データグラムを同期モードのブロックで送受信するための簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="607a6-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="607a6-103">UDP はコネクションレス トランスポート プロトコルであるために、データを送受信する前にリモート ホスト接続を確立する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="607a6-104">ただし、次の 2 つの方法のいずれかで既定のリモート ホストを確立するためのオプションがあるためには。</span><span class="sxs-lookup"><span data-stu-id="607a6-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="607a6-105">インスタンスを作成、<xref:System.Net.Sockets.UdpClient>リモート ホスト名を使用してクラスし、パラメーターとしてポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="607a6-106">インスタンスを作成、<xref:System.Net.Sockets.UdpClient>クラスを呼び出す、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="607a6-107">提供される送信方法のいずれかを使用することができます、<xref:System.Net.Sockets.UdpClient>をリモート デバイスにデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="607a6-108">使用して、<xref:System.Net.Sockets.UdpClient.Receive%2A>リモート ホストからデータを受信するメソッド。</span><span class="sxs-lookup"><span data-stu-id="607a6-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-109">呼び出す必要はありません<xref:System.Net.Sockets.UdpClient.Send%2A>ホスト名を使用してまたは<xref:System.Net.IPEndPoint>既定のリモート ホストを指定していない場合。</span><span class="sxs-lookup"><span data-stu-id="607a6-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="607a6-110">この場合、<xref:System.Net.Sockets.UdpClient>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="607a6-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="607a6-111"><xref:System.Net.Sockets.UdpClient> メソッドでは、マルチキャスト データグラムを送受信することも可能です。</span><span class="sxs-lookup"><span data-stu-id="607a6-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="607a6-112">使用して、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>サブスクライブするメソッド、<xref:System.Net.Sockets.UdpClient>マルチキャスト グループにします。</span><span class="sxs-lookup"><span data-stu-id="607a6-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="607a6-113">使用して、<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>をアンサブスク ライブする方法、<xref:System.Net.Sockets.UdpClient>マルチキャスト グループからです。</span><span class="sxs-lookup"><span data-stu-id="607a6-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-114">次の例では確立、<xref:System.Net.Sockets.UdpClient>ポート 11000 でホスト名 www.contoso.com を使用して接続します。</span><span class="sxs-lookup"><span data-stu-id="607a6-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="607a6-115">小さな文字列メッセージは、2 つの別個のリモート ホスト マシンに送信されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="607a6-116"><xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドは、メッセージを受信するまでに実行をブロックします。</span><span class="sxs-lookup"><span data-stu-id="607a6-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="607a6-117">使用して、<xref:System.Net.IPEndPoint>に渡される<xref:System.Net.Sockets.UdpClient.Receive%2A>、明らかに応答したホストの id。</span><span class="sxs-lookup"><span data-stu-id="607a6-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="607a6-118">発信接続を確立するか、受信要求を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="607a6-118">To establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-119"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="607a6-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="607a6-120"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="607a6-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-121">このコンス トラクターが新たに作成<xref:System.Net.Sockets.UdpClient>し、基になるサービス プロバイダーが、最も適切なローカル IPv4 アドレスとポート番号を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="607a6-122">このコンス トラクターを使用する場合、<xref:System.Net.Sockets.UdpClient>インスタンスが変更されたか IPv6 ターゲット接続メソッドの呼び出しによって上書きされることはできませんを IPv4 のアドレス ファミリで設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-123">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-124">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-124">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-125">このコンス トラクターは、ソケットのバインドを実行しないため、マルチキャスト グループに参加させるに適したはありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="607a6-126">また、IPv4 アドレスの種類でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="607a6-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-127">次の例では、既定のコンス トラクターを使用してのインスタンスを作成する方法、<xref:System.Net.Sockets.UdpClient>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-128">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-128">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="607a6-129">通信を開始するローカル ポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-129">The local port number from which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="607a6-130"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル ポート番号にバインドします。</span><span class="sxs-lookup"><span data-stu-id="607a6-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-131">このコンス トラクターを作成、基になる<xref:System.Net.Sockets.Socket>し通信するために使用するポート番号にバインドします。</span><span class="sxs-lookup"><span data-stu-id="607a6-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="607a6-132">関心がある場合のみローカルのポート番号の設定では、このコンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="607a6-133">基になるサービス プロバイダーでは、ローカル IP アドレスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="607a6-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="607a6-134">コンス トラクターに 0 を渡すと、基になるサービス プロバイダーは、ポート番号を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="607a6-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="607a6-135">このコンス トラクターを使用する場合、<xref:System.Net.Sockets.UdpClient>インスタンスが変更されたか IPv6 ターゲット接続メソッドの呼び出しによって上書きされることはできませんを IPv4 のアドレス ファミリで設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-136">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-137">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-137">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-138">このコンス トラクターは、IPv4 アドレスの種類でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="607a6-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-139">次の例のインスタンスを作成するローカル ポート番号を使用して、<xref:System.Net.Sockets.UdpClient>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="607a6-140"><paramref name="port" /> パラメーターが <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きい値か <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="607a6-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-141">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-141">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="607a6-142">UDP 接続のバインド先のローカル エンドポイントを表す <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span></span></param>
        <summary><span data-ttu-id="607a6-143"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル エンドポイントにバインドします。</span><span class="sxs-lookup"><span data-stu-id="607a6-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-144">このコンス トラクターが新たに作成<xref:System.Net.Sockets.UdpClient>にバインドし、<xref:System.Net.IPEndPoint>によって指定された、`localEP`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="607a6-145">このコンス トラクターを呼び出す前に作成する必要があります、<xref:System.Net.IPEndPoint>データを送受信する IP アドレスとポート番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="607a6-146">データを送受信するためのローカル IP アドレスとポート番号を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="607a6-147">そうしないと、基になるサービス プロバイダーは、最も適切なローカル IP アドレスとポート番号を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="607a6-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="607a6-148">このコンス トラクターを使用する場合、<xref:System.Net.Sockets.UdpClient>で指定したアドレス ファミリでインスタンスが設定されている、`localEP`パラメーターを変更したり、別のアドレス ファミリの connect メソッドの呼び出しで上書きすることはできません。</span><span class="sxs-lookup"><span data-stu-id="607a6-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-149">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-150">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-150">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-151">次の例は、のインスタンスを作成する方法を示します、<xref:System.Net.Sockets.UdpClient>クラス ローカル エンドポイントを使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-152"><paramref name="localEP" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-152"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-153">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-153">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="607a6-154">ソケットのアドレッシング スキームを指定する <see cref="T:System.Net.Sockets.AddressFamily" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="607a6-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="607a6-155"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="607a6-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-156">`family`パラメーターは、リスナーは、IP バージョン 4 アドレス (IPv4) または IP version 6 (IPv6) を使用するかどうかを判断アドレス。</span><span class="sxs-lookup"><span data-stu-id="607a6-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="607a6-157">使用するには、IPv4 アドレスを渡す、<xref:System.Net.Sockets.AddressFamily.InterNetwork>値。</span><span class="sxs-lookup"><span data-stu-id="607a6-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="607a6-158">IPv6 アドレスを使用するに渡す、<xref:System.Net.Sockets.AddressFamily.InterNetworkV6>値。</span><span class="sxs-lookup"><span data-stu-id="607a6-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="607a6-159">その他の値を渡すと、スローするメソッドとは、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="607a6-160">このコンス トラクターを使用する場合、<xref:System.Net.Sockets.UdpClient>で指定したアドレス ファミリでインスタンスが設定されている、`family`パラメーターを変更したり、別のアドレス ファミリの connect メソッドの呼び出しで上書きすることはできません。</span><span class="sxs-lookup"><span data-stu-id="607a6-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-161">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-162">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-162">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-163"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>ソケット バインディングを実行しないため、マルチキャスト グループに参加させるのには適していません。</span><span class="sxs-lookup"><span data-stu-id="607a6-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="607a6-164"><paramref name="family" /> が、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> でも <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> でもありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-164"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-165">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-165">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="607a6-166">受信接続の試行を待機するポート。</span><span class="sxs-lookup"><span data-stu-id="607a6-166">The port on which to listen for incoming connection attempts.</span></span></param>
        <param name="family"><span data-ttu-id="607a6-167">ソケットのアドレッシング スキームを指定する <see cref="T:System.Net.Sockets.AddressFamily" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="607a6-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="607a6-168"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、指定したローカル ポート番号にバインドします。</span><span class="sxs-lookup"><span data-stu-id="607a6-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-169">このコンス トラクターを作成、基になる<xref:System.Net.Sockets.Socket>し通信するために使用するポート番号にバインドします。</span><span class="sxs-lookup"><span data-stu-id="607a6-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="607a6-170">`family`パラメーターは、リスナーは、IP バージョン 4 アドレス (IPv4) または IP version 6 (IPv6) を使用するかどうかを判断アドレス。</span><span class="sxs-lookup"><span data-stu-id="607a6-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="607a6-171">使用するには、IPv4 アドレスを渡す、<xref:System.Net.Sockets.AddressFamily.InterNetwork>値。</span><span class="sxs-lookup"><span data-stu-id="607a6-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="607a6-172">IPv6 アドレスを使用するに渡す、<xref:System.Net.Sockets.AddressFamily.InterNetworkV6>値。</span><span class="sxs-lookup"><span data-stu-id="607a6-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="607a6-173">その他の値を渡すと、スローするメソッドとは、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="607a6-174">このコンス トラクターを使用する場合、<xref:System.Net.Sockets.UdpClient>で指定したアドレス ファミリでインスタンスが設定されている、`family`パラメーターを変更したり、別のアドレス ファミリの connect メソッドの呼び出しで上書きすることはできません。</span><span class="sxs-lookup"><span data-stu-id="607a6-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-175">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-176">このコードを取得すると Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="607a6-176">Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-177">次のコード例では、マルチキャスト グループで使用する UDP クライアントを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="607a6-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="607a6-178"><paramref name="family" /> が、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> でも <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> でもありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-178"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="607a6-179"><paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MaxPort" /> を超えているか、または <see cref="F:System.Net.IPEndPoint.MinPort" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="607a6-179"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-180">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-180">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="607a6-181">接続先のリモート DNS ホスト名。</span><span class="sxs-lookup"><span data-stu-id="607a6-181">The name of the remote DNS host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-182">接続先のリモート ポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-182">The remote port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="607a6-183"><see cref="T:System.Net.Sockets.UdpClient" /> クラスの新しいインスタンスを初期化し、既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-184">このコンス トラクターを新しい初期化<xref:System.Net.Sockets.UdpClient>を使用してリモート ホストを確立し、`hostname`と`port`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="607a6-185">既定のリモート ホストを確立することはオプションです。</span><span class="sxs-lookup"><span data-stu-id="607a6-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="607a6-186">このコンス トラクターを使用する場合を呼び出すたびにリモート ホストを指定する必要はありません、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-187">既定のリモート ホストを指定すると、そのホストにのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="607a6-188">いつでも既定のリモート ホストを変更するには呼び出すことによって、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-189">呼び出しでリモート ホストを指定するかどうか、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドでは、このコンス トラクターを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="607a6-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-190">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-191">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-191">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-192">次の例は、のインスタンスを作成する方法を示します、<xref:System.Net.Sockets.UdpClient>クラスのホスト名を使用して、ポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-193"><paramref name="hostname" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-193"><paramref name="hostname" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="607a6-194"><paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-194"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-195">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-195">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-196">既定のリモート ホストが確立されたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-196">Gets or sets a value indicating whether a default remote host has been established.</span></span></summary>
        <value>
          <span data-ttu-id="607a6-197">接続がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-197"><see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-198">派生するクラス<xref:System.Net.Sockets.UdpClient>このプロパティを使用して既定のリモート ホストが確立されているかどうかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="607a6-199">既定のリモート ホストを確立するには、適切なコンス トラクターを使用または呼び出すことによって、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-200">呼び出しでリモート ホストを指定できない場合は既定のリモート ホストを確立すると、<xref:System.Net.Sockets.UdpClient.Send%2A>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="607a6-201">NAT トラバーサルを有効にするか無効にするかを指定するブール値。</span><span class="sxs-lookup"><span data-stu-id="607a6-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="607a6-202"><see cref="T:System.Net.Sockets.UdpClient" /> インスタンスのネットワーク アドレス変換 (NAT: Network Address Translation) トラバーサルを有効または無効にします。</span><span class="sxs-lookup"><span data-stu-id="607a6-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-203"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A>メソッドを使用を有効にするにまたは NAT トラバーサルを無効にする、<xref:System.Net.Sockets.UdpClient>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="607a6-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="607a6-204">NAT トラバーサルを指定するには、Teredo、6to4、または ISATAP トンネルを使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="607a6-205">ときに、`allowed`パラメーターが false の場合、<xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>に関連付けられているソケットでオプションが設定されている<xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="607a6-206">NAT トラバーサルが明示的に無効になります、<xref:System.Net.Sockets.UdpClient>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="607a6-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="607a6-207">ときに、`allowed`パラメーターが true の場合、<xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>に関連付けられているソケットでオプションが設定されている<xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="607a6-208">これは、NAT トラバーサルを許可することがあります、<xref:System.Net.Sockets.UdpClient>システム上でファイアウォール規則によって異なります。</span><span class="sxs-lookup"><span data-stu-id="607a6-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="607a6-209">Teredo アドレスは、IPv6 アドレス プレフィックスが 2001年::/32 です。</span><span class="sxs-lookup"><span data-stu-id="607a6-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="607a6-210">Teredo アドレスは、通常の DNS 名解決によって返されるまたはローカル インターフェイスに割り当てられている IPv6 アドレスとして列挙できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-211">読み取りが可能なネットワークから受信したデータの量を取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-211">Gets the amount of data received from the network that is available to read.</span></span></summary>
        <value><span data-ttu-id="607a6-212">ネットワークから受信したデータのバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-212">The number of bytes of data received from the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-213"><xref:System.Net.Sockets.UdpClient.Available%2A>読み取り用のネットワーク バッファーにキューに置かれたデータの量を決定するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="607a6-214">データが使用可能な場合は、呼び出す<xref:System.Net.Sockets.NetworkStream.Read%2A>データを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="607a6-215">使用可能なデータがない場合、<xref:System.Net.Sockets.UdpClient.Available%2A>プロパティは 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="607a6-216">リモート ホストがシャット ダウン、または、接続を閉じる場合、<xref:System.Net.Sockets.UdpClient.Available%2A>プロパティがスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-217">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>を特定のエラー コードを取得し、MSDN ライブラリで Windows ソケット バージョン 2 API のエラー コード ドキュメントを参照してください[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/詳細の詳細については、エラーがあります。</span><span class="sxs-lookup"><span data-stu-id="607a6-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-218">次のコード例の使用を示しています、<xref:System.Net.Sockets.UdpClient.Available%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-219">ソケットへのアクセスを試みているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-219">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-220"><see cref="T:System.Net.Sockets.Socket" /> が閉じられました。</span><span class="sxs-lookup"><span data-stu-id="607a6-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="607a6-221">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="607a6-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="607a6-222">受信操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-222">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="607a6-223">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="607a6-224">データグラムをリモート ホストから非同期的に受信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-224">Receives a datagram from a remote host asynchronously.</span></span></summary>
        <returns><span data-ttu-id="607a6-225">非同期の受信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-226">非同期の<xref:System.Net.Sockets.UdpClient.BeginReceive%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Sockets.UdpClient.EndReceive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="607a6-227">通常、このメソッドはによって、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="607a6-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="607a6-228">このメソッドは、操作が完了するまでにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="607a6-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="607a6-229">使用して、操作が完了するまで、禁止する、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="607a6-230">詳細については、非同期プログラミング モデルを使用して、次を参照してください。[同期のメソッドを非同期に呼び出す](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-231">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginReceive%2A>を非同期的にサーバーの応答を受信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-232">データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-232">Sends a datagram to a remote host asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-233">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-234">送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-234">The number of bytes to send.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="607a6-235">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="607a6-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="607a6-236">送信操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-236">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="607a6-237">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="607a6-238">データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-238">Sends a datagram to a remote host asynchronously.</span></span> <span data-ttu-id="607a6-239">送信先は、<see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> の呼び出しであらかじめ指定されています。</span><span class="sxs-lookup"><span data-stu-id="607a6-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span></span></summary>
        <returns><span data-ttu-id="607a6-240">非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-241">非同期の<xref:System.Net.Sockets.UdpClient.BeginSend%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Sockets.UdpClient.EndSend%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="607a6-242">通常、このメソッドはによって、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="607a6-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="607a6-243">このメソッドは、操作が完了するまでにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="607a6-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="607a6-244">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="607a6-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="607a6-245">詳細については、非同期プログラミング モデルを使用して、次を参照してください。[同期のメソッドを非同期に呼び出す](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-246">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginSend%2A>サーバー要求を非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-247">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-248">送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-248">The number of bytes to send.</span></span></param>
        <param name="endPoint"><span data-ttu-id="607a6-249">データの送信先を表す <see cref="T:System.Net.EndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="607a6-250">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="607a6-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="607a6-251">送信操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-251">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="607a6-252">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="607a6-253">データグラムを送信先に非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-253">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="607a6-254">送信先は、<see cref="T:System.Net.EndPoint" /> で指定されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span></span></summary>
        <returns><span data-ttu-id="607a6-255">非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-256">非同期の<xref:System.Net.Sockets.UdpClient.BeginSend%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Sockets.UdpClient.EndSend%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="607a6-257">通常、このメソッドはによって、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="607a6-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="607a6-258">このメソッドは、操作が完了するまでにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="607a6-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="607a6-259">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="607a6-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="607a6-260">詳細については、非同期プログラミング モデルを使用して、次を参照してください。[同期のメソッドを非同期に呼び出す](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-261">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginSend%2A>サーバー要求を非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-262">送信されるデータを格納する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-263">送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-263">The number of bytes to send.</span></span></param>
        <param name="hostname"><span data-ttu-id="607a6-264">送信先のホスト。</span><span class="sxs-lookup"><span data-stu-id="607a6-264">The destination host.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-265">送信先のポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-265">The destination port number.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="607a6-266">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="607a6-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="607a6-267">送信操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-267">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="607a6-268">このオブジェクトは、操作の完了時に <c>requestCallback</c> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="607a6-269">データグラムを送信先に非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-269">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="607a6-270">送信先は、ホスト名とポート番号で指定されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-270">The destination is specified by the host name and port number.</span></span></summary>
        <returns><span data-ttu-id="607a6-271">非同期の送信を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-272">非同期の<xref:System.Net.Sockets.UdpClient.BeginSend%2A>操作を呼び出すことによって完了する必要があります、<xref:System.Net.Sockets.UdpClient.EndSend%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="607a6-273">通常、このメソッドはによって、`requestCallback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="607a6-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="607a6-274">このメソッドは、操作が完了するまでにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="607a6-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="607a6-275">操作が完了するまでブロックするには、いずれかを使用、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="607a6-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="607a6-276">詳細については、非同期プログラミング モデルを使用して、次を参照してください。[同期のメソッドを非同期に呼び出す](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-277">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginSend%2A>サーバー要求を非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-278">基になるネットワーク <see cref="T:System.Net.Sockets.Socket" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="607a6-279">基になるネットワーク <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-280"><xref:System.Net.Sockets.UdpClient> 作成、<xref:System.Net.Sockets.Socket>ネットワーク経由でデータを送受信するために使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="607a6-281">派生するクラス<xref:System.Net.Sockets.UdpClient>このプロパティを取得または設定を使用して<xref:System.Net.Sockets.Socket>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="607a6-282">使用して、基になる<xref:System.Net.Sockets.Socket>から返された<xref:System.Net.Sockets.UdpClient.Client%2A>が必要な場合にアクセスされる範囲を超えてを<xref:System.Net.Sockets.UdpClient>を提供します。</span><span class="sxs-lookup"><span data-stu-id="607a6-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="607a6-283">使用することも<xref:System.Net.Sockets.UdpClient.Client%2A>を基になるを設定する<xref:System.Net.Sockets.Socket>既存<xref:System.Net.Sockets.Socket>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="607a6-284">これは、わかりやすくするための活用するために必要な場合に役立ちます。<xref:System.Net.Sockets.UdpClient>既存を使用して<xref:System.Net.Sockets.Socket>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-285">次の例での使用、<xref:System.Net.Sockets.UdpClient.Client%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="607a6-286">この例ではブロードキャストが有効になって、基になる<xref:System.Net.Sockets.Socket>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="607a6-287">UDP 接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-287">Closes the UDP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-288"><xref:System.Net.Sockets.UdpClient.Close%2A> 、基になるを無効に<xref:System.Net.Sockets.Socket>に関連付けられているすべてのマネージ コードとアンマネージ リソースを解放し、<xref:System.Net.Sockets.UdpClient>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-289">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-290">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-290">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-291">次の例では、終了、<xref:System.Net.Sockets.UdpClient>を呼び出して、<xref:System.Net.Sockets.UdpClient.Close%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-292">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-292">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-293">既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-293">Establishes a default remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint"><span data-ttu-id="607a6-294">データ送信先のネットワーク エンドポイントを指定する <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="607a6-295">指定されたネットワーク エンドポイントを使用して、既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-295">Establishes a default remote host using the specified network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-296"><xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドで指定された値を使用して既定のリモート ホストの確立、`endPoint`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="607a6-297">確立されるを呼び出すたびに、リモート ホストを指定する必要はありません、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="607a6-298">既定のリモート ホストを確立することはオプションです。</span><span class="sxs-lookup"><span data-stu-id="607a6-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="607a6-299">既定のリモート ホストを指定すると、そのホストにのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="607a6-300">別のリモート ホストにデータグラムを送信する場合は、別の呼び出しを行う必要があります、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを作成または<xref:System.Net.Sockets.UdpClient>既定のリモート ホストなし。</span><span class="sxs-lookup"><span data-stu-id="607a6-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="607a6-301">既定のリモートが確立されている場合は、ホストも入力するリモート ホストへの呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッド、<xref:System.Net.Sockets.UdpClient.Send%2A>がスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-302">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-303">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-303">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-304">呼び出す場合は、<xref:System.Net.Sockets.Socket.Connect%2A>メソッドは、指定した既定値は破棄されます以外のアドレスから到着したデータグラムです。</span><span class="sxs-lookup"><span data-stu-id="607a6-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="607a6-305">継承する場合を除き、このメソッドを使用してブロードキャスト アドレスに既定のリモート ホストを設定することはできません<xref:System.Net.Sockets.UdpClient>、クライアントのメソッドを使用して、基になるを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定および<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="607a6-306">ただしことができます、指定した場合、既定値にブロードキャスト データ ブロードキャスト アドレス、255.255.255.255、<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>への呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-307">アプリケーションには、ブロードキャスト アドレスより詳細な制御が必要とする場合も元に戻すことができますを使用して、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-308">UDP プロトコルは、コネクションレス型なので、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="607a6-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="607a6-309">呼び出す必要はありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッド マルチキャスト データグラムを受信する場合。</span><span class="sxs-lookup"><span data-stu-id="607a6-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-310">次の例では、<xref:System.Net.IPEndPoint>を既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-311">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-311">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-312"><paramref name="endPoint" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-312"><paramref name="endPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-313"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr"><span data-ttu-id="607a6-314">データ送信先のリモート ホストの <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-315">データ送信先のポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-315">The port number to which you intend send data.</span></span></param>
        <summary><span data-ttu-id="607a6-316">指定した IP アドレスとポート番号を使用して、既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-316">Establishes a default remote host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-317"><xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドで指定された値を使用して既定のリモート ホストの確立、`addr`と`port`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="607a6-318">確立されるを呼び出すたびに、リモート ホストを指定する必要はありません、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="607a6-319">既定のリモート ホストを確立することはオプションです。</span><span class="sxs-lookup"><span data-stu-id="607a6-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="607a6-320">既定のリモート ホストを指定すると、そのホストにのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="607a6-321">別のリモート ホストにデータグラムを送信する場合は、別の呼び出しを行う必要があります、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを作成または<xref:System.Net.Sockets.UdpClient>既定のリモート ホストなし。</span><span class="sxs-lookup"><span data-stu-id="607a6-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="607a6-322">既定のリモートが確立されている場合は、ホストも入力するリモート ホストへの呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッド、<xref:System.Net.Sockets.UdpClient.Send%2A>がスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-323">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-324">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-324">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-325">呼び出す場合は、<xref:System.Net.Sockets.Socket.Connect%2A>メソッドは、指定した既定値は破棄されます以外のアドレスから到着したデータグラムです。</span><span class="sxs-lookup"><span data-stu-id="607a6-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="607a6-326">継承する場合を除き、このメソッドを使用してブロードキャスト アドレスに既定のリモート ホストを設定することはできません<xref:System.Net.Sockets.UdpClient>、クライアントのメソッドを使用して、基になるを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定および<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="607a6-327">ただしことができます、指定した場合、既定値にブロードキャスト データ ブロードキャスト アドレス、255.255.255.255、<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>への呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-328">アプリケーションには、ブロードキャスト アドレスより詳細な制御が必要とする場合も元に戻すことができますを使用して、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-329">UDP プロトコルは、コネクションレス型なので、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="607a6-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="607a6-330">呼び出す必要はありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッド マルチキャスト データグラムを受信する場合。</span><span class="sxs-lookup"><span data-stu-id="607a6-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-331">次の例では、IP アドレスとポート番号を使用してリモート ホストに接続します。</span><span class="sxs-lookup"><span data-stu-id="607a6-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="607a6-332"><see cref="T:System.Net.Sockets.UdpClient" /> は閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-332"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-333"><paramref name="addr" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-333"><paramref name="addr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="607a6-334"><paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-334"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-335">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-335">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="607a6-336">データ送信先のリモート ホストの DNS 名。</span><span class="sxs-lookup"><span data-stu-id="607a6-336">The DNS name of the remote host to which you intend send data.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-337">データ送信先のリモート ホストのポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-337">The port number on the remote host to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="607a6-338">指定したホスト名とポート番号を使用して、既定のリモート ホストを確立します。</span><span class="sxs-lookup"><span data-stu-id="607a6-338">Establishes a default remote host using the specified host name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-339"><xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドで指定された値を使用して既定のリモート ホストの確立、`port`と`hostname`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="607a6-340">確立されるを呼び出すたびに、リモート ホストを指定する必要はありません、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="607a6-341">既定のリモート ホストを確立することはオプションです。</span><span class="sxs-lookup"><span data-stu-id="607a6-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="607a6-342">既定のリモート ホストを指定すると、そのホストにのみ制限されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="607a6-343">別のリモート ホストにデータグラムを送信する場合は、別の呼び出しを行う必要があります、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを作成または<xref:System.Net.Sockets.UdpClient>既定のリモート ホストなし。</span><span class="sxs-lookup"><span data-stu-id="607a6-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="607a6-344">既定のリモートが確立されている場合は、ホストも入力するリモート ホストへの呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッド、<xref:System.Net.Sockets.UdpClient.Send%2A>がスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-345">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-346">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-346">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-347">呼び出す場合は、<xref:System.Net.Sockets.Socket.Connect%2A>メソッドは、指定した既定値は破棄されます以外のアドレスから到着したデータグラムです。</span><span class="sxs-lookup"><span data-stu-id="607a6-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="607a6-348">継承する場合を除き、このメソッドを使用してブロードキャスト アドレスに既定のリモート ホストを設定することはできません<xref:System.Net.Sockets.UdpClient>、クライアントのメソッドを使用して、基になるを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定および<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="607a6-349">ただしことができます、指定した場合、既定値にブロードキャスト データ ブロードキャスト アドレス、255.255.255.255、<xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType>への呼び出しで、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-350">アプリケーションには、ブロードキャスト アドレスより詳細な制御が必要とする場合も元に戻すことができますを使用して、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-351">UDP プロトコルは、コネクションレス型なので、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドをブロックしません。</span><span class="sxs-lookup"><span data-stu-id="607a6-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="607a6-352">呼び出す必要はありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッド マルチキャスト データグラムを受信する場合。</span><span class="sxs-lookup"><span data-stu-id="607a6-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-353">次の例は、リモート ホストに接続するホスト名とポート番号を使用しています。</span><span class="sxs-lookup"><span data-stu-id="607a6-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-354"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="607a6-355"><paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MinPort" /> と <see cref="F:System.Net.IPEndPoint.MaxPort" /> の間の値ではありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-355"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-356">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-356">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="607a6-357"><see cref="T:System.Net.Sockets.UdpClient" /> によって使用されているマネージ リソースおよびアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="607a6-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="607a6-358">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-358"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="607a6-359"><see cref="T:System.Net.Sockets.UdpClient" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="607a6-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-360">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="607a6-361">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="607a6-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="607a6-362"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="607a6-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="607a6-363">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Net.Sockets.UdpClient>参照します。</span><span class="sxs-lookup"><span data-stu-id="607a6-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="607a6-364">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="607a6-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="607a6-365"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-365"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="607a6-366">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-366">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="607a6-367">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-367">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="607a6-368">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="607a6-368">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-369"><see cref="T:System.Net.Sockets.UdpClient" /> でインターネット プロトコル (IP) データグラムの断片化を許可するかどうかを指定する <see cref="T:System.Boolean" /> 値を、取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-369">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span></span></summary>
        <value>
          <span data-ttu-id="607a6-370"><see cref="T:System.Net.Sockets.UdpClient" /> でデータグラムの断片化を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-370"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="607a6-371">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="607a6-371">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-372">データグラムでは、そのサイズが、最大転送単位 (MTU) の伝送媒体を超えたときに断片化が必要です。</span><span class="sxs-lookup"><span data-stu-id="607a6-372">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="607a6-373">送信元のホストまたは中間ルーターによって、データグラムを断片化された可能性があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-373">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="607a6-374">場合は、データグラムを断片化している必要があります、および<xref:System.Net.Sockets.Socket.DontFragment%2A>オプションが設定されている、データグラム破棄され、インターネット制御メッセージ プロトコル (ICMP) エラー メッセージが、データグラムの送信者に返されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-374">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-375">次のコード例の使用を示しています、<xref:System.Net.Sockets.Socket.DontFragment%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-375">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="607a6-376">このプロパティは、<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> フラグまたは <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> フラグを使用するソケットに対してのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-376">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-377">マルチキャスト グループへの参加を取り消します。</span><span class="sxs-lookup"><span data-stu-id="607a6-377">Leaves a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="607a6-378">参加を取り消すマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-378">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="607a6-379">マルチキャスト グループへの参加を取り消します。</span><span class="sxs-lookup"><span data-stu-id="607a6-379">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-380"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを取り消します、<xref:System.Net.Sockets.UdpClient>指定で識別されるマルチキャスト グループから<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-380">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="607a6-381">呼び出した後、<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを基になる<xref:System.Net.Sockets.Socket>ルーターとルーターをマルチキャスト グループから削除する、インターネット グループ管理プロトコル (IGMP) パケットを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-381">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="607a6-382">後に、<xref:System.Net.Sockets.UdpClient>を取り消します、グループからされなくなりますをそのグループに送信されるデータグラムを受信できません。</span><span class="sxs-lookup"><span data-stu-id="607a6-382">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-383">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-383">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-384">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-384">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-385">次の例では、マルチキャスト アドレスを提供することにより、マルチキャスト グループを削除する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="607a6-385">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-386">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-386">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-387">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-387">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="607a6-388">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-388">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-389"><paramref name="multicastAddr" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-389"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="607a6-390">参加を取り消すマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-390">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <param name="ifindex"><span data-ttu-id="607a6-391">参加を取り消すマルチキャスト グループのローカル アドレス。</span><span class="sxs-lookup"><span data-stu-id="607a6-391">The local address of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="607a6-392">マルチキャスト グループへの参加を取り消します。</span><span class="sxs-lookup"><span data-stu-id="607a6-392">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-393"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを取り消します、<xref:System.Net.Sockets.UdpClient>指定で識別されるマルチキャスト グループから<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-393">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="607a6-394">呼び出した後、<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを基になる<xref:System.Net.Sockets.Socket>ルーターとルーターをマルチキャスト グループから削除する、インターネット グループ管理プロトコル (IGMP) パケットを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-394">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="607a6-395">後に、<xref:System.Net.Sockets.UdpClient>を取り消します、グループからされなくなりますをそのグループに送信されるデータグラムを受信できません。</span><span class="sxs-lookup"><span data-stu-id="607a6-395">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-396">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して、<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>固有のエラー コードを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-396">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="607a6-397">このコードを取得した後は、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-397">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-398">次のコード例では、マルチキャスト アドレスを提供することにより、マルチキャスト グループを削除する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="607a6-398">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-399">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-399">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-400">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-400">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="607a6-401">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-401">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-402"><paramref name="multicastAddr" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-402"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-403"><see cref="T:System.Boolean" /> がブロードキャスト パケットの送受信を許可するかどうかを指定する <see cref="T:System.Net.Sockets.UdpClient" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-403">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span></span></summary>
        <value>
          <span data-ttu-id="607a6-404"><see cref="T:System.Net.Sockets.UdpClient" /> でブロードキャスト パケットを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-404"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="607a6-405">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="607a6-405">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-406">ブロードキャストは、特定のサブネットに制限されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-406">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="607a6-407">255.255.255.255 以外にパケットを送信することによって、ローカル サブネットにブロードキャストすることができます。または、ホストの部分を設定するすべてのビットをインターネット プロトコル (IP) アドレスの一部でネットワーク向けのブロードキャスト アドレスを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-407">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="607a6-408">たとえば、お客様の IP アドレスが 192.168.1.40 (最初の 3 つのオクテットとしてネットワーク部分とホスト部分のクラス C アドレスは、最後のオクテット) の場合は、有向ブロードキャスト アドレスは 192.168.1.255 です。</span><span class="sxs-lookup"><span data-stu-id="607a6-408">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-409">次のコード例の使用を示しています、<xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-409">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="607a6-410"><see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="607a6-411">指定したリモート エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="607a6-411">The specified remote endpoint.</span></span></param>
        <summary><span data-ttu-id="607a6-412">保留中の非同期受信を終了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-412">Ends a pending asynchronous receive.</span></span></summary>
        <returns><span data-ttu-id="607a6-413">成功した場合は、データグラム データを格納するバイトの配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-413">If successful, an array of bytes that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-414">このメソッドは、操作するまでブロックを完了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-414">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="607a6-415">この操作を同期的に実行するを使用して、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-415">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-416">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginSend%2A>サーバー応答の非同期の受信を完了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-416">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-417"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-417"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="607a6-418"><see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="607a6-418"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="607a6-419"><see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> が、非同期の読み取りのために以前に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="607a6-419"><see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-420">基になる <see cref="T:System.Net.Sockets.Socket" /> へのアクセスを試みているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-420">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-421">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="607a6-422"><see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-422">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span></span></param>
        <summary><span data-ttu-id="607a6-423">保留中の非同期送信を終了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-423">Ends a pending asynchronous send.</span></span></summary>
        <returns><span data-ttu-id="607a6-424">正常に完了した場合は、<see cref="T:System.Net.Sockets.UdpClient" /> に送信されたバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-424">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-425">このメソッドは、操作するまでブロックを完了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-425">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="607a6-426">この操作を同期的に実行するを使用して、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-426">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-427">次のコード例では<xref:System.Net.Sockets.UdpClient.BeginSend%2A>のサーバー要求の非同期の送信を完了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-427">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-428"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-428"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="607a6-429"><see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> メソッドへの呼び出しで <paramref name="asyncResult" /> が返されませんでした。</span><span class="sxs-lookup"><span data-stu-id="607a6-429"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="607a6-430"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> が、非同期の読み取りのために以前に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="607a6-430"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-431">基になるソケットへのアクセスを試みているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-431">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-432">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-432">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-433"><see cref="T:System.Net.Sockets.UdpClient" /> で 1 つのクライアントだけがポートを使用できるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-433">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span></span></summary>
        <value>
          <span data-ttu-id="607a6-434"><see cref="T:System.Net.Sockets.UdpClient" /> で、1 つのクライアントだけが特定のポートを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-434"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="607a6-435">既定値は、Windows Server 2003 および Windows XP Service Pack 2 以降では <see langword="true" /> で、その他のすべてのバージョンでは <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="607a6-435">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-436">既定では、複数のクライアントが特定のポートを使用できます。ただし、クライアントの 1 つだけでは、ポートに送信されるネットワーク トラフィックの操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-436">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="607a6-437">使用することができます、<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>複数のクライアントを使用できるように、特定のポートのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-437">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="607a6-438">基になるソケットは、クライアントのポートにバインドされる前に、このプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-438">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="607a6-439">呼び出す場合<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>、 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>、 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>、または<xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>クライアント ポートは、コンス トラクターの副作用としてバインド、および、後で設定することはできません、<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>プロパティ</span><span class="sxs-lookup"><span data-stu-id="607a6-439">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-440">次のコード例を作成、 <xref:System.Net.Sockets.UdpClient>、取得し、設定、<xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-440">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-441">基になるソケットへのアクセスを試みているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-441">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-442">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-442">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-443"><see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</span><span class="sxs-lookup"><span data-stu-id="607a6-443">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="607a6-444">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-444">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="607a6-445"><see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</span><span class="sxs-lookup"><span data-stu-id="607a6-445">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-446"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドのサブスクライブ、<xref:System.Net.Sockets.UdpClient>を使用して、指定したマルチキャスト グループに<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-446">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="607a6-447">呼び出した後、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドを基になる<xref:System.Net.Sockets.Socket>マルチキャスト グループのメンバーシップを要求しているルーターへのインターネット グループ管理プロトコル (IGMP) パケットを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-447">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="607a6-448">マルチキャスト アドレス範囲は、224.0.0.0 ~ 239.255.255.255 です。</span><span class="sxs-lookup"><span data-stu-id="607a6-448">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="607a6-449">この範囲外のアドレスを指定する場合、または要求が実行されるルーター マルチキャスト有効になっていない、<xref:System.Net.Sockets.UdpClient>がスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-449">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-450">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-450">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-451">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-451">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="607a6-452">1 回、<xref:System.Net.Sockets.UdpClient>が表示されているマルチキャスト グループのメンバーとしてルーターが可能になってを指定された送信 multicasted データグラムを受信<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-452">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-453">作成する必要があります、<xref:System.Net.Sockets.UdpClient>マルチキャスト ポート番号を使用します。 それ以外の場合、することはできません multicasted データグラムを受信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-453">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="607a6-454">呼び出す必要はありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを呼び出す前に、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッド、または<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドは機能しません。</span><span class="sxs-lookup"><span data-stu-id="607a6-454">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="607a6-455">マルチキャスト IP アドレスにデータグラムを送信するマルチキャスト グループに属している必要はありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-455">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="607a6-456">マルチキャスト グループに参加する前に、ソケットは、ポートまたはエンドポイントにバインドされていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="607a6-456">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="607a6-457">呼び出して、ポートまたはパラメーターとしてエンドポイントをそのまま使用するコンス トラクターのいずれかの操作を行います。</span><span class="sxs-lookup"><span data-stu-id="607a6-457">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="607a6-458">マルチキャスト データグラムの受信を停止する呼び出し、<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを提供し、<xref:System.Net.IPAddress>を取り出すにはグループ元となるのです。</span><span class="sxs-lookup"><span data-stu-id="607a6-458">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-459">IPv6 の場合は、いくつかのマルチキャスト アドレス範囲から選択できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-459">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="607a6-460">IETF RFC 2375 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="607a6-460">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-461">呼び出すことはできません<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>で、<xref:System.Net.Sockets.UdpClient>特定のローカル ポートを使用せずに作成 (つまりを使用して、<xref:System.Net.Sockets.UdpClient.%23ctor>または<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="607a6-461">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-462">次のコード例では、マルチキャスト アドレスを提供することによってマルチキャスト グループに参加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="607a6-462">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-463">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-463">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-464">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-464">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="607a6-465">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-465">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex"><span data-ttu-id="607a6-466">マルチキャスト グループを結合するローカル IP アドレスが関連付けられているインターフェイス インデックス。</span><span class="sxs-lookup"><span data-stu-id="607a6-466">The interface index associated with the local IP address on which to join the multicast group.</span></span></param>
        <param name="multicastAddr"><span data-ttu-id="607a6-467">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-467">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="607a6-468"><see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</span><span class="sxs-lookup"><span data-stu-id="607a6-468">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-469">マルチキャスト グループに参加する前に、ソケットがポートまたはエンドポイントにバインドされていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="607a6-469">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="607a6-470">ポートまたはエンドポイントをパラメーターとして受け入れるコンス トラクターのいずれかを呼び出すことによって、これを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-470">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="607a6-471">`infindex`パラメーターを使用して同じリンク上のハードウェア インターフェイスを識別します。</span><span class="sxs-lookup"><span data-stu-id="607a6-471">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-472">選択するいくつかのマルチキャスト アドレス範囲があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-472">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="607a6-473">IETF RFC 2375 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="607a6-473">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-474">呼び出すことはできません<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>で、<xref:System.Net.Sockets.UdpClient>特定のローカル ポートを使用せずに作成 (つまりを使用して、<xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType>または<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="607a6-474">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-475">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-475">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-476">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-476">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="607a6-477">参加するマルチキャスト グループの <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-477">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span></span></param>
        <param name="timeToLive"><span data-ttu-id="607a6-478">ルーター ホップ数で計測した有効期間 (TTL)。</span><span class="sxs-lookup"><span data-stu-id="607a6-478">The Time to Live (TTL), measured in router hops.</span></span></param>
        <summary><span data-ttu-id="607a6-479">指定された有効期間 (TTL: Time to Live) で <see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</span><span class="sxs-lookup"><span data-stu-id="607a6-479">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-480"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドのサブスクライブ、<xref:System.Net.Sockets.UdpClient>を使用して、指定したマルチキャスト グループに<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-480">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="607a6-481">呼び出した後、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドを基になる<xref:System.Net.Sockets.Socket>マルチキャスト グループのメンバーシップを要求しているルーターへのインターネット グループ管理プロトコル (IGMP) パケットを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-481">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="607a6-482">マルチキャスト アドレス範囲は、224.0.0.0 ~ 239.255.255.255 です。</span><span class="sxs-lookup"><span data-stu-id="607a6-482">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="607a6-483">この範囲外のアドレスを指定する場合、または要求が実行されるルーター マルチキャスト有効になっていない、<xref:System.Net.Sockets.UdpClient>がスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-483">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-484">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-484">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-485">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-485">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="607a6-486">`timeToLive`破棄される前に、マルチキャスト データグラムのルーター ホップの数が許可されるパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-486">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="607a6-487">1 回、<xref:System.Net.Sockets.UdpClient>が表示されているマルチキャスト グループのメンバーとしてルーターが可能になってを指定された送信 multicasted データグラムを受信<xref:System.Net.IPAddress>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-487">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-488">作成する必要があります、<xref:System.Net.Sockets.UdpClient>マルチキャストのポート番号を使用してそれ以外の場合することはできません multicasted データグラムを受信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-488">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="607a6-489">呼び出す必要はありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを呼び出す前に、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドまたは receive メソッドは機能しません。</span><span class="sxs-lookup"><span data-stu-id="607a6-489">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="607a6-490">マルチキャスト IP アドレスにデータグラムを送信するマルチキャスト グループに属している必要はありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-490">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="607a6-491">マルチキャスト グループに参加する前に、ソケットは、ポートまたはエンドポイントにバインドされていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="607a6-491">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="607a6-492">呼び出して、ポートまたはエンドポイントをパラメーターとして受け取るコンス トラクターのいずれかの操作を行います。</span><span class="sxs-lookup"><span data-stu-id="607a6-492">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="607a6-493">マルチキャスト データグラムの受信を停止する呼び出し、<xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>メソッドを提供し、<xref:System.Net.IPAddress>を取り出すにはグループ元となるのです。</span><span class="sxs-lookup"><span data-stu-id="607a6-493">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-494">呼び出すことはできません<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>で、<xref:System.Net.Sockets.UdpClient>特定のローカル ポートを使用せずに作成 (つまりを使用して、<xref:System.Net.Sockets.UdpClient.%23ctor>または<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="607a6-494">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-495">次の例では、2 つのパラメーター、マルチキャスト アドレスでは、TTL を表す数値を提供し、マルチキャスト グループに参加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="607a6-495">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="607a6-496">提供される TTL の値が 0 から 255 ではありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-496">The TTL provided is not between 0 and 255</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-497">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-497">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-498">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-498">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-499"><paramref name="multicastAddr" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-499"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="607a6-500">この IP アドレスは、ソケットのアドレッシング スキームを定義する <see cref="T:System.Net.Sockets.AddressFamily" /> 値と互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="607a6-500">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="607a6-501">参加対象のグループのマルチキャスト <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-501">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <param name="localAddress"><span data-ttu-id="607a6-502">ローカル <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-502">The local <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="607a6-503"><see cref="T:System.Net.Sockets.UdpClient" /> をマルチキャスト グループに追加します。</span><span class="sxs-lookup"><span data-stu-id="607a6-503">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-504">マルチキャスト グループに参加する前に、ソケットがポートまたはエンドポイントにバインドされていることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="607a6-504">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="607a6-505">ポートまたはエンドポイントをパラメーターとして受け入れるコンス トラクターのいずれかを呼び出すことによって、これを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-505">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-506">選択するいくつかのマルチキャスト アドレス範囲があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-506">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="607a6-507">IETF RFC 2375 で確認することができます。</span><span class="sxs-lookup"><span data-stu-id="607a6-507">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-508">呼び出すことはできません<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>で、<xref:System.Net.Sockets.UdpClient>特定のローカル ポートを使用せずに作成 (つまりを使用して、<xref:System.Net.Sockets.UdpClient.%23ctor>または<xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29>コンス トラクター)。</span><span class="sxs-lookup"><span data-stu-id="607a6-508">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-509">次のコード例の使用を示しています、<xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-509">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-510">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-510">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-511">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-511">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-512">発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-512">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value>
          <span data-ttu-id="607a6-513"><see cref="T:System.Net.Sockets.UdpClient" /> が発信マルチキャスト パケットを受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-513"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-514">マルチキャストは、インターネット上の多対多の通信用のスケーラブルな方法です。</span><span class="sxs-lookup"><span data-stu-id="607a6-514">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="607a6-515">プロセスは、マルチキャスト アドレスにサブスクライブする場合、パケットは送信でマルチキャスト アドレスにサブスクライブしている他のすべてのプロセスでプロセスが受信したこと。</span><span class="sxs-lookup"><span data-stu-id="607a6-515">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-516">次のコード例の使用を示しています、<xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-516">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="607a6-517">データの送信元のリモート ホストを表す <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-517">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span></span></param>
        <summary><span data-ttu-id="607a6-518">リモート ホストが送信した UDP データグラムを返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-518">Returns a UDP datagram that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-519">データグラム データを格納する <see cref="T:System.Byte" /> 型の配列</span><span class="sxs-lookup"><span data-stu-id="607a6-519">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-520"><xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドは、リモート ホストからデータグラムを受信するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="607a6-520">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="607a6-521">データがあるときに、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドは最初にキュー入れられたデータグラムを読み取ったり、バイト配列としてデータ部分を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-521">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="607a6-522">このメソッドは追加、`remoteEP`を持つパラメーター、<xref:System.Net.IPAddress>と送信者のポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-522">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="607a6-523">既定のリモート ホストを指定する場合、 <xref:System.Net.Sockets.UdpClient.Connect%2A> 、メソッド、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドはそのホストでのみからデータグラムを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="607a6-523">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="607a6-524">その他のすべてのデータグラムは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-524">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="607a6-525">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-525">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-526">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-526">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-527">マルチキャスト データグラムを受信する場合は、呼び出すことはありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドを呼び出す前に、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-527">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="607a6-528"><xref:System.Net.Sockets.UdpClient>受信に使用するデータグラムは、マルチキャストのポート番号を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-528">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-529">次の例で、<xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-529">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="607a6-530"><xref:System.Net.Sockets.UdpClient.Receive%2A>メソッドは、メッセージを受信するまでに実行をブロックします。</span><span class="sxs-lookup"><span data-stu-id="607a6-530">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="607a6-531">使用して、<xref:System.Net.IPEndPoint>に渡される<xref:System.Net.Sockets.UdpClient.Receive%2A>、明らかに応答したホストの id。</span><span class="sxs-lookup"><span data-stu-id="607a6-531">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-532">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-532">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-533">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-533">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="607a6-534">リモート ホストが送信した UDP データグラムを非同期的に返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-534">Returns a UDP datagram asynchronously that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-535"><see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-535">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
 <span data-ttu-id="607a6-536">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="607a6-536">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-537">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="607a6-537">This operation will not block.</span></span> <span data-ttu-id="607a6-538">返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、UDP パケットの受信後に完了します。</span><span class="sxs-lookup"><span data-stu-id="607a6-538">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="607a6-539">既定のリモート ホストを指定する場合、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドでは、このメソッドはそのホストでのみからデータグラムを受け入れます。</span><span class="sxs-lookup"><span data-stu-id="607a6-539">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="607a6-540">その他のすべてのデータグラムは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-540">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="607a6-541">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-541">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-542">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-542">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="607a6-543">マルチキャスト データグラムを受信する場合は、呼び出すことはありません、<xref:System.Net.Sockets.UdpClient.Connect%2A>前に、このメソッドを呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="607a6-543">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="607a6-544"><xref:System.Net.Sockets.UdpClient>受信に使用するデータグラムは、マルチキャストのポート番号を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-544">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-545">基になる <see cref="T:System.Net.Sockets.Socket" /> は閉じられています。</span><span class="sxs-lookup"><span data-stu-id="607a6-545">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-546">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-546">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-547">UDP データグラムをリモート ホストに送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-547">Sends a UDP datagram to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="607a6-548">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-548">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-549">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-549">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="607a6-550">UDP データグラムをリモート ホストに送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-550">Sends a UDP datagram to a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-551">送信されたバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-551">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-552">このオーバー ロードで確立されているリモート ホストにデータグラムを送信する、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドと送信したバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-552">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="607a6-553">呼び出さない場合<xref:System.Net.Sockets.UdpClient.Connect%2A>このオーバー ロードを呼び出す前に、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドがスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-553">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-554">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-554">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-555">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-555">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-556">別のリモート ホストにデータグラムを送信する場合は、呼び出す必要があります、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドし、目的のリモート ホストを指定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-556">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="607a6-557">その他のいずれかを使用して<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドのオーバー ロード、ブロードキャスト アドレスにデータグラムを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-557">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-558">次の例で、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-558">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-559">このオーバー ロードを使用する前に、既定のリモート ホストを確立する必要があります。</span><span class="sxs-lookup"><span data-stu-id="607a6-559">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-560"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-560"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="607a6-561"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-561">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-562"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-562">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-563">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-563">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="607a6-564">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-564">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-565">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-565">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="607a6-566">データグラムの送信先のホストとポートを表す <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-566">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="607a6-567">指定したリモート エンドポイントにあるホストに UDP データグラムを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-567">Sends a UDP datagram to the host at the specified remote endpoint.</span></span></summary>
        <returns><span data-ttu-id="607a6-568">送信されたバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-568">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-569"><xref:System.Net.Sockets.UdpClient.Send%2A>メソッドが指定されたエンドポイントにデータグラムを送信し、正常に送信されたバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-569">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="607a6-570">このオーバー ロードを呼び出す前に作成する必要が最初、<xref:System.Net.IPEndPoint>データグラムの配信先のリモート ホストの IP アドレスとポート番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-570">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="607a6-571">データグラムを送信するには、既定のブロードキャストにアドレス、255.255.255.255 を指定して<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>の<xref:System.Net.IPAddress.Address%2A>のプロパティ、<xref:System.Net.IPEndPoint>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-571">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="607a6-572">これを作成した後<xref:System.Net.IPEndPoint>に渡すこと、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドとして、`endPoint`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-572">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="607a6-573">その他のブロードキャスト アドレスにデータグラムを送信する場合を使用して、<xref:System.Net.Sockets.UdpClient.Client%2A>メソッドは、基になるかを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定し、<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-573">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="607a6-574">使用してに戻すこともできます、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-574">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-575">指定しない、`endPoint`でリモート ホストが既に確立されている場合は、このメソッドのパラメーター、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-575">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-576">この場合、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドがスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-576">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-577">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-577">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-578">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-578">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-579">次の例で、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-579">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-580">この例では、<xref:System.Net.IPEndPoint>をターゲット ホストを指定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-580">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-581"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-581"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="607a6-582"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-582"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="607a6-583"><see cref="T:System.Net.Sockets.UdpClient" /> は閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-583"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-584">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-584">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="607a6-585">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-585">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-586">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-586">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="607a6-587">データグラム送信先のリモート ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="607a6-587">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-588">通信先のリモート ポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-588">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="607a6-589">指定したリモート ホストの指定したポートに UDP データグラムを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-589">Sends a UDP datagram to a specified port on a specified remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-590">送信されたバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-590">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-591"><xref:System.Net.Sockets.UdpClient.Send%2A>メソッドで指定された値にデータグラムを送信する、`hostname`と`port`パラメーターと正常に送信したバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-591">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="607a6-592">既定のブロードキャスト アドレスにデータグラムを送信するにはの「255.255.255.255」を指定することによって、`hostname`パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="607a6-592">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="607a6-593">その他のブロードキャスト アドレスにデータグラムを送信する場合を使用して、<xref:System.Net.Sockets.UdpClient.Client%2A>メソッドは、基になるかを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定し、<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-593">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="607a6-594">使用してに戻すこともできます、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-594">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="607a6-595">ポートでは、リモート ホストが既に確立されている場合をこのメソッドに番号またはホスト名を指定しないで、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-595">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-596">この場合、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドがスローされます、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-596">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-597">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-597">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-598">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-598">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-599">次の例で、<xref:System.Net.Sockets.UdpClient.Send%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-599">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="607a6-600">この例では、ホスト名とポート番号を使用して、ターゲット ホストを識別します。</span><span class="sxs-lookup"><span data-stu-id="607a6-600">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-601"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-601"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="607a6-602"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-602">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-603"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-603">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-604">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-604">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="607a6-605">UDP データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-605">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-606">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-606">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-607">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-607">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="607a6-608">UDP データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-608">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-609"><see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-609">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-610">このオーバー ロードで確立されているリモート ホストにデータグラムを送信する、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-610">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-611">呼び出さない場合<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドをスローする、このオーバー ロードを呼び出す前に、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-611">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-612">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-612">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-613">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-613">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="607a6-614">別のリモート ホストにデータグラムを送信する場合は、呼び出す必要があります、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドし、目的のリモート ホストを指定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-614">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="607a6-615">その他のいずれかを使用して<xref:System.Net.Sockets.UdpClient.SendAsync%2A>メソッドのオーバー ロード、ブロードキャスト アドレスにデータグラムを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-615">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-616"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-616"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="607a6-617"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-617">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-618"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-618">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-619">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-619">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-620">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-620">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-621">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-621">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="607a6-622">データグラムの送信先のホストとポートを表す <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="607a6-622">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="607a6-623">UDP データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-623">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-624"><see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-624">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-625">このメソッドは、指定されたエンドポイントにデータグラムを送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-625">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="607a6-626">このオーバー ロードを呼び出す前に作成する必要が最初、<xref:System.Net.IPEndPoint>データグラムの配信先のリモート ホストの IP アドレスとポート番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="607a6-626">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="607a6-627">データグラムを送信するには、既定のブロードキャストにアドレス、255.255.255.255 を指定して<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>の<xref:System.Net.IPAddress.Address%2A>のプロパティ、<xref:System.Net.IPEndPoint>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-627">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="607a6-628">これを作成した後<xref:System.Net.IPEndPoint>、としては、このメソッドに渡して、`endPoint`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-628">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="607a6-629">その他のブロードキャスト アドレスにデータグラムを送信する場合を使用して、<xref:System.Net.Sockets.UdpClient.Client%2A>メソッドは、基になるかを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定し、<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-629">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="607a6-630">使用してに戻すこともできます、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-630">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="607a6-631">指定しない、`endPoint`でリモート ホストが既に確立されている場合は、このメソッドのパラメーター、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-631">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-632">このメソッドをスローする場合、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-632">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-633">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-633">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-634">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-634">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-635"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-635"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="607a6-636"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-636"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="607a6-637"><see cref="T:System.Net.Sockets.UdpClient" /> は閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-637"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-638">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-638">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="607a6-639">バイトの配列として表された、送信する UDP データグラムを指定する <see cref="T:System.Byte" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="607a6-639">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="607a6-640">データグラム内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="607a6-640">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="607a6-641">データグラム送信先のリモート ホストの名前。</span><span class="sxs-lookup"><span data-stu-id="607a6-641">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="607a6-642">通信先のリモート ポート番号。</span><span class="sxs-lookup"><span data-stu-id="607a6-642">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="607a6-643">UDP データグラムをリモート ホストに非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="607a6-643">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="607a6-644"><see cref="T:System.Threading.Tasks.Task`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="607a6-644">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-645">このメソッドで指定された値にデータグラムを送信する、`hostname`と`port`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="607a6-645">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="607a6-646">既定のブロードキャスト アドレスにデータグラムを送信するにはの「255.255.255.255」を指定することによって、`hostname`パラメーターの値。</span><span class="sxs-lookup"><span data-stu-id="607a6-646">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="607a6-647">その他のブロードキャスト アドレスにデータグラムを送信する場合を使用して、<xref:System.Net.Sockets.UdpClient.Client%2A>メソッドは、基になるかを取得する<xref:System.Net.Sockets.Socket>、ソケット オプションを設定し、<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-647">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="607a6-648">使用してに戻すこともできます、<xref:System.Net.Sockets.Socket>クラスです。</span><span class="sxs-lookup"><span data-stu-id="607a6-648">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="607a6-649">ポートでは、リモート ホストが既に確立されている場合をこのメソッドに番号またはホスト名を指定しないで、<xref:System.Net.Sockets.UdpClient.Connect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="607a6-649">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="607a6-650">このメソッドをスローする場合、<xref:System.Net.Sockets.SocketException>です。</span><span class="sxs-lookup"><span data-stu-id="607a6-650">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="607a6-651">表示された場合、<xref:System.Net.Sockets.SocketException>を使用して<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>特定のエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="607a6-651">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="607a6-652">このコードを取得すると、Windows ソケット バージョン 2 API エラー コードのドキュメントに MSDN でエラーの詳細な説明を参照できます。</span><span class="sxs-lookup"><span data-stu-id="607a6-652">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="607a6-653"><paramref name="dgram" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="607a6-653"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="607a6-654"><see cref="T:System.Net.Sockets.UdpClient" /> が既定のリモート ホストを既に確立しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-654">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="607a6-655"><see cref="T:System.Net.Sockets.UdpClient" /> が閉じています。</span><span class="sxs-lookup"><span data-stu-id="607a6-655">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="607a6-656">ソケットへのアクセス中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="607a6-656">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="607a6-657"><see cref="T:System.Net.Sockets.UdpClient" /> によって送信されたインターネット プロトコル (IP) パケットの有効期間 (TTL) の値を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="607a6-657">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <value><span data-ttu-id="607a6-658">TTL の値。</span><span class="sxs-lookup"><span data-stu-id="607a6-658">The TTL value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="607a6-659">TTL 値は、ルーターはパケットとインターネット制御メッセージ プロトコル (ICMP) の"TTL を超えています"を破棄する前に、パケットが走査できるルーターの最大数を示すエラー メッセージが送信者に返されます。</span><span class="sxs-lookup"><span data-stu-id="607a6-659">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="607a6-660">次のコード例の使用を示しています、<xref:System.Net.Sockets.UdpClient.Ttl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="607a6-660">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>