<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1322-101">任意の送信元からのマルチキャスト トラフィックのクライアント受信元。このマルチキャストは、ASM (Any Source Multicast) または ISM (Internet Standard Multicast) とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e1322-101">A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress"><span data-ttu-id="e1322-102">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</span><span class="sxs-lookup"><span data-stu-id="e1322-102">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="e1322-103">この受信者がバインドするローカルのポート。</span><span class="sxs-lookup"><span data-stu-id="e1322-103">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="e1322-104">グループ アドレスをサブスクライブして任意の送信元からデータグラムを受信できる新しい <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP クライアントを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1322-104">Creates a new <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from any source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-105"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>コンス トラクターをグループ アドレスとポート、UDP マルチキャスト ソケットに関連付けますが、バインドまたはしませんそれ以外の場合、ソケットを使用します。</span><span class="sxs-lookup"><span data-stu-id="e1322-105">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="e1322-106">`groupAddress`パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。</span><span class="sxs-lookup"><span data-stu-id="e1322-106">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span>  
  
 <span data-ttu-id="e1322-107">`localPort` 1,024 未満のポート パラメーターを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-107">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-108"><paramref name="groupAddress" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e1322-108"><paramref name="groupAddress" /> is <see langword="null" />.</span></span> <span data-ttu-id="e1322-109">参照</span><span class="sxs-lookup"><span data-stu-id="e1322-109">reference</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1322-110"><paramref name="localPort" /> が 0 より小さい値か、<paramref name="localPort" /> が 65,535 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="e1322-110"><paramref name="localPort" /> is less than 0 -or- <paramref name="localPort" /> is greater than 65,535.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e1322-111">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="e1322-111">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="e1322-112">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="e1322-112">Optional state information to pass to the <c>callback</c> method for this operation.</span></span></param>
        <summary><span data-ttu-id="e1322-113">ソケットをバインドし、マルチキャスト グループへの参加操作を開始して、任意のグループ参加要素からデータグラムを受信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1322-113">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.</span></span></summary>
        <returns><span data-ttu-id="e1322-114"><see cref="T:System.IAsyncResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-114">Returns <see cref="T:System.IAsyncResult" />.</span></span>  
  
 <span data-ttu-id="e1322-115">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e1322-115">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-116"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A>メソッドは、ローカル ポートに UDP マルチキャスト ソケットをバインドし、マルチキャスト データグラムをすべてマルチキャスト グループの参加要素から受信できるを許可するグループに参加します。</span><span class="sxs-lookup"><span data-stu-id="e1322-116">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant.</span></span> <span data-ttu-id="e1322-117">ローカル ポートとマルチキャスト グループのアドレスが指定されて、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e1322-117">The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="e1322-118">指定する方法、`callback`パラメーターがマルチキャスト グループへの参加操作が完了したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-118">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="e1322-119">ランタイムで必要な場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A>メソッドも、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシー チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="e1322-119">If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="e1322-120">クライアントがアクセスを許可されていない場合、<xref:System.Net.Sockets.SocketException>でがスローされます<xref:System.Net.Sockets.SocketError.AccessDenied>です。</span><span class="sxs-lookup"><span data-stu-id="e1322-120">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-121">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</span><span class="sxs-lookup"><span data-stu-id="e1322-121">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-122"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-122">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-123">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-123">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1322-124">受信したデータを格納するバッファー。</span><span class="sxs-lookup"><span data-stu-id="e1322-124">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="e1322-125">データの保存先になる、<c>buffer</c> の先頭からのバイト単位のオフセット。</span><span class="sxs-lookup"><span data-stu-id="e1322-125">The offset, in bytes, from the beginning of the <c>buffer</c> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="e1322-126"><c>buffer</c> で受信および格納するバイトの最大数。</span><span class="sxs-lookup"><span data-stu-id="e1322-126">The maximum number of bytes to receive and store in the <c>buffer</c>.</span></span></param>
        <param name="callback"><span data-ttu-id="e1322-127">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="e1322-127">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="e1322-128">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="e1322-128">Optional state information to pass to the <c>callback</c> method for this operation.</span></span></param>
        <summary><span data-ttu-id="e1322-129">参加しているマルチキャスト グループからのパケットの受信操作を開始し、任意の送信元からのパケットがマルチキャスト グループに到着したら、指定されたコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1322-129">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.</span></span></summary>
        <returns><span data-ttu-id="e1322-130"><see cref="T:System.IAsyncResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-130">Returns <see cref="T:System.IAsyncResult" />.</span></span>  
  
 <span data-ttu-id="e1322-131">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e1322-131">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-132"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>メソッドは、すべての送信者からに参加しているマルチキャスト グループから UDP パケットの受信の操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e1322-132">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender.</span></span> <span data-ttu-id="e1322-133">ローカル ポートとマルチキャスト グループのアドレスが指定されて、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="e1322-133">The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="e1322-134">マルチキャストのクライアントで、マルチキャスト グループに結合が完了しましたもする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-134">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="e1322-135">指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-135">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="e1322-136">UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="e1322-136">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="e1322-137">ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-137">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-138">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-138">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-139"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-139"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1322-140"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-140"><paramref name="offset" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-141">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-141">-or-</span></span>  
  
 <span data-ttu-id="e1322-142"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-142"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="e1322-143">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-143">-or-</span></span>  
  
 <span data-ttu-id="e1322-144"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-144"><paramref name="count" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-145">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-145">-or-</span></span>  
  
 <span data-ttu-id="e1322-146"><paramref name="offset" /> にカウントを加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-146"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-147">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-147">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-148"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-148">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-149">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-149">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1322-150">送信するデータが格納されているバッファー。</span><span class="sxs-lookup"><span data-stu-id="e1322-150">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="e1322-151">送信するデータを読み取る <c>buffer</c> の先頭からのバイト単位のオフセット。</span><span class="sxs-lookup"><span data-stu-id="e1322-151">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="e1322-152"><c>buffer</c> から送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="e1322-152">The number of bytes to send from the <c>buffer</c>.</span></span></param>
        <param name="remoteEndPoint"><span data-ttu-id="e1322-153">パケットを送信するリモート エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="e1322-153">The remote endpoint to which the packet is to be sent.</span></span></param>
        <param name="callback"><span data-ttu-id="e1322-154">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="e1322-154">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="e1322-155">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="e1322-155">Optional state information to pass to the <c>callback</c> method for this operation.</span></span></param>
        <summary><span data-ttu-id="e1322-156">指定した宛先にユニキャスト パケットを送信する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e1322-156">Begins the operation of sending a unicast packet to the specified destination.</span></span></summary>
        <returns><span data-ttu-id="e1322-157"><see cref="T:System.IAsyncResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-157">Returns <see cref="T:System.IAsyncResult" />.</span></span>  
  
 <span data-ttu-id="e1322-158">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e1322-158">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-159"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>メソッドに参加しているマルチキャスト グループに UDP パケットを送信する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e1322-159">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.</span></span>  
  
 <span data-ttu-id="e1322-160">クライアントで、マルチキャスト グループに結合が完了しました必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-160">The client must have completed a join to the multicast group.</span></span> <span data-ttu-id="e1322-161">指定された宛先アドレス、`remoteEndPoint`パラメーター必要がありますは既に送信マルチキャスト パケットをこの受信側にします。</span><span class="sxs-lookup"><span data-stu-id="e1322-161">The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver.</span></span> <span data-ttu-id="e1322-162">一部のプロトコルでは、この情報を使用して、サービスの統計、または復旧メッセージの品質のフロー制御を渡します。</span><span class="sxs-lookup"><span data-stu-id="e1322-162">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="e1322-163">指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-163">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="e1322-164">アドレスが指定されている場合にのみ転送は許可されて、`remoteEndPoint`パラメーターがこの受信者にマルチキャスト パケットを送信して既にです。</span><span class="sxs-lookup"><span data-stu-id="e1322-164">The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver.</span></span> <span data-ttu-id="e1322-165">クライアントがアクセスを許可されていない場合、<xref:System.Net.Sockets.SocketException>でがスローされます<xref:System.Net.Sockets.SocketError.AccessDenied>です。</span><span class="sxs-lookup"><span data-stu-id="e1322-165">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="e1322-166">宛先ポートが指定されている場合、`remoteEndPoint`パラメーターより小さい数は 1,024、<xref:System.Net.Sockets.SocketException>でがスローされます<xref:System.Net.Sockets.SocketError.AccessDenied>です。</span><span class="sxs-lookup"><span data-stu-id="e1322-166">If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="e1322-167">UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="e1322-167">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="e1322-168">ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-168">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-169">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-169">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-170"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-170"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1322-171"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-171"><paramref name="offset" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-172">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-172">-or-</span></span>  
  
 <span data-ttu-id="e1322-173"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-173"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="e1322-174">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-174">-or-</span></span>  
  
 <span data-ttu-id="e1322-175"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-175"><paramref name="count" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-176">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-176">-or-</span></span>  
  
 <span data-ttu-id="e1322-177"><paramref name="offset" /> にカウントを加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-177"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-178">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-178">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-179"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-179">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-180">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-180">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1322-181">送信するデータが格納されているバッファー。</span><span class="sxs-lookup"><span data-stu-id="e1322-181">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="e1322-182">送信するデータを読み取る <c>buffer</c> の先頭からのバイト単位のオフセット。</span><span class="sxs-lookup"><span data-stu-id="e1322-182">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="e1322-183"><c>buffer</c> から送信するバイト数。</span><span class="sxs-lookup"><span data-stu-id="e1322-183">The number of bytes to send from the <c>buffer</c>.</span></span></param>
        <param name="callback"><span data-ttu-id="e1322-184">操作の完了時に呼び出されるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="e1322-184">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="e1322-185">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</span><span class="sxs-lookup"><span data-stu-id="e1322-185">Optional state information to pass to the <c>callback</c> method for this operation.</span></span></param>
        <summary><span data-ttu-id="e1322-186">参加しているマルチキャスト グループへのパケットの送信操作を開始し、パケットがマルチキャスト グループに送信されたら、指定されたコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1322-186">Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.</span></span></summary>
        <returns><span data-ttu-id="e1322-187"><see cref="T:System.IAsyncResult" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-187">Returns <see cref="T:System.IAsyncResult" />.</span></span>  
  
 <span data-ttu-id="e1322-188">この操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e1322-188">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-189"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>メソッドに参加しているマルチキャスト グループに UDP パケットを送信する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e1322-189">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.</span></span>  
  
 <span data-ttu-id="e1322-190">クライアントで、マルチキャスト グループに結合が完了しました必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-190">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="e1322-191">指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-191">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="e1322-192">UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="e1322-192">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="e1322-193">ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-193">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-194">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-194">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-195"><paramref name="buffer" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-195"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1322-196"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-196"><paramref name="offset" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-197">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-197">-or-</span></span>  
  
 <span data-ttu-id="e1322-198"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-198"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
 <span data-ttu-id="e1322-199">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-199">-or-</span></span>  
  
 <span data-ttu-id="e1322-200"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e1322-200"><paramref name="count" /> is less than 0</span></span>  
  
 <span data-ttu-id="e1322-201">- または -</span><span class="sxs-lookup"><span data-stu-id="e1322-201">-or-</span></span>  
  
 <span data-ttu-id="e1322-202"><paramref name="offset" /> にカウントを加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="e1322-202"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-203">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-203">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-204"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-204">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-205">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-205">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="e1322-206">ブロックする送信元のアドレス。</span><span class="sxs-lookup"><span data-stu-id="e1322-206">The address of the source to block.</span></span></param>
        <summary><span data-ttu-id="e1322-207">送信元をブロックし、その送信元からのマルチキャスト パケットが受信されないようにします。</span><span class="sxs-lookup"><span data-stu-id="e1322-207">Blocks a source so that multicast packets originating from it are no longer received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-208"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>メソッドは受信されてから、指定したソース アドレスから送信元マルチキャスト パケットをブロックします。</span><span class="sxs-lookup"><span data-stu-id="e1322-208">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received.</span></span> <span data-ttu-id="e1322-209">クライアントで、マルチキャスト グループに結合が完了しました必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-209">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="e1322-210">`sourceAddress`パラメーターは、IPv4 または IPv6 のアドレスをする可能性がありますが、`sourceAddress`パラメーターは、クライアントが参加しているマルチキャスト グループのアドレス ファミリと一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-210">The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined.</span></span>  
  
 <span data-ttu-id="e1322-211">指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-211">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="e1322-212">ブロックのソースの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-212">If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-213">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-213">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-214">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-214">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-215"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-215">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-216">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-216">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1322-217">マルチキャスト グループへの参加を終了し、<see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> クラスの現在のインスタンスによって使用されたリソースと、基になる <see cref="T:System.Net.Sockets.Socket" /> によって使用されたリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="e1322-217">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-218"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> を使い終わったら <xref:System.Net.Sockets.UdpAnySourceMulticastClient> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1322-218">Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</span></span> <span data-ttu-id="e1322-219">Dispose メソッドは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>使用不可の状態。</span><span class="sxs-lookup"><span data-stu-id="e1322-219">The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="e1322-220">呼び出した後<xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="e1322-220">After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="e1322-221"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Net.Sockets.UdpAnySourceMulticastClient> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e1322-221">Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</span></span> <span data-ttu-id="e1322-222">そうしないと、ガベージ コレクターが <xref:System.Net.Sockets.UdpAnySourceMulticastClient> オブジェクトの <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="e1322-222">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1322-223">非同期の参加操作の結果。</span><span class="sxs-lookup"><span data-stu-id="e1322-223">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="e1322-224">マルチキャスト グループに対する非同期のグループ参加操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="e1322-224">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-225"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A>メソッドは、マルチキャスト グループへのソケットと結合操作に非同期のバインドを完了するとします。</span><span class="sxs-lookup"><span data-stu-id="e1322-225">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="e1322-226">ランタイムで必要な場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A>メソッドも、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシー チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="e1322-226">If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="e1322-227">クライアントがアクセスを許可されていない場合、<xref:System.Net.Sockets.SocketException>でがスローされます<xref:System.Net.Sockets.SocketError.AccessDenied>です。</span><span class="sxs-lookup"><span data-stu-id="e1322-227">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="e1322-228">結合のグループの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-228">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-229">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-229">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-230"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-230"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-231"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-231">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-232">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-232">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1322-233">非同期の受信操作の結果。</span><span class="sxs-lookup"><span data-stu-id="e1322-233">The result of the asynchronous receive operation.</span></span></param>
        <param name="source"><span data-ttu-id="e1322-234">パケットの受信元のソース エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="e1322-234">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="e1322-235">参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="e1322-235">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="e1322-236"><see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドに渡された buffer パラメーターに格納されていたメッセージの長さ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="e1322-236">The length, in bytes, of the message stored in the buffer parameter passed to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-237"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>メソッドには、マルチキャスト グループからパケットを受信する非同期操作が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="e1322-237">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.</span></span>  
  
 <span data-ttu-id="e1322-238">受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-238">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-239">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-239">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-240"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-240"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-241">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-241">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-242"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-242">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-243">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-243">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1322-244">非同期の送信操作の結果。</span><span class="sxs-lookup"><span data-stu-id="e1322-244">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="e1322-245">指定した宛先にユニキャスト パケットを送信する操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="e1322-245">Completes the operation of sending a unicast packet to the specified destination.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-246"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A>メソッドには、指定された宛先アドレスに対してパケットを送信する非同期操作が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="e1322-246">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.</span></span>  
  
 <span data-ttu-id="e1322-247">受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-247">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-248">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-248">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-249"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-249"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-250">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-250">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-251"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-251">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-252">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-252">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e1322-253">非同期の送信操作の結果。</span><span class="sxs-lookup"><span data-stu-id="e1322-253">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="e1322-254">マルチキャスト グループにパケットを送信する操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="e1322-254">Completes the operation of sending a packet to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-255"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A>メソッドは、マルチキャスト グループにパケットを送信する非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="e1322-255">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.</span></span>  
  
 <span data-ttu-id="e1322-256">受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-256">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-257">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-257">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1322-258"><paramref name="result" /> が null 参照 (Visual Basic では Nothing) です。</span><span class="sxs-lookup"><span data-stu-id="e1322-258"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-259">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-259">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-260"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-260">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-261">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-261">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1322-262">発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1322-262">Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value><span data-ttu-id="e1322-263"><see cref="T:System.Boolean" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-263">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="e1322-264">マルチキャスト グループへの送信パケットが送信元アプリケーションに配信されるかどうかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="e1322-264">A value that indicates if outgoing packets to a multicast group are delivered to the sending application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-265">マルチキャスト トラフィックは、インターネット上の多対多の通信用のスケーラブルな方法です。</span><span class="sxs-lookup"><span data-stu-id="e1322-265">Multicast traffic is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="e1322-266">プロセスは、マルチキャスト グループのアドレスをサブスクライブします。</span><span class="sxs-lookup"><span data-stu-id="e1322-266">A process subscribes to a multicast group address.</span></span> <span data-ttu-id="e1322-267">次に、マルチキャスト グループにサブスクライブしているプロセスによって送信されるすべてのパケットは、マルチキャスト アドレスをサブスクライブしている他のすべてのプロセスによって受信されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-267">Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address.</span></span> <span data-ttu-id="e1322-268"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A>プロパティ コントロールのマルチキャスト パケットを受信するローカル コンピューターの任意の処理かどうかが、マルチキャスト グループにこのクライアントから送信します。</span><span class="sxs-lookup"><span data-stu-id="e1322-268">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-269">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-269">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-270"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-270">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1322-271">この <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> インスタンスのマルチキャストの受信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのバイト単位のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1322-271">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="e1322-272"><see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-272">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="e1322-273">受信バッファー サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="e1322-273">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-274"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A>プロパティを取得または基になるの受信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.Socket>このマルチキャストの受信操作に使用される<xref:System.Net.Sockets.UdpAnySourceMulticastClient>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e1322-274">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.</span></span> <span data-ttu-id="e1322-275">具体的には、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A>プロパティは、パケットが到着すると、アプリケーションがまだ呼び出さいないときに、スタックによって使われるバッファーのサイズを制御、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1322-275">Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.</span></span> <span data-ttu-id="e1322-276">このバッファーがいっぱいにし、アプリケーションの呼び出しの前にパケットを受け取った場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>と<xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>メソッド、古いパケットが削除されます。</span><span class="sxs-lookup"><span data-stu-id="e1322-276">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="e1322-277">アプリケーションが、古いパケットを受信できなくし、呼び出したときに新しいパケットの受信が代わりに、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1322-277">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.</span></span>  
  
 <span data-ttu-id="e1322-278">Windows 上の受信バッファーの既定のサイズは、8,192 バイトです。</span><span class="sxs-lookup"><span data-stu-id="e1322-278">The default size of the receive buffer on Windows is 8,192 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e1322-279">指定されたバッファー サイズは 0 より小さいです。</span><span class="sxs-lookup"><span data-stu-id="e1322-279">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-280">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-280">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-281"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-281">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1322-282">この <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> インスタンスのマルチキャストの送信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の送信バッファーのバイト単位のサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e1322-282">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="e1322-283"><see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1322-283">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="e1322-284">送信バッファーのバイト単位のサイズ。</span><span class="sxs-lookup"><span data-stu-id="e1322-284">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-285"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A>プロパティを取得またはこのマルチキャスト送信操作に使用される基になるソケットの送信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.UdpAnySourceMulticastClient>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="e1322-285">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="e1322-286">呼び出し、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>または<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>メソッドがの値に応じてコールバックを呼び出します。 長い時間がかかり、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A>プロパティ送信バッファーがいっぱいの場合。</span><span class="sxs-lookup"><span data-stu-id="e1322-286">calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="e1322-287"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A>プロパティ コントロールのみが、送信が完了するまでに物理メモリにロックされているユーザーのバッファーのままかどうか。</span><span class="sxs-lookup"><span data-stu-id="e1322-287">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="e1322-288">Windows 上の送信バッファーの既定のサイズは、8,192 バイトです。</span><span class="sxs-lookup"><span data-stu-id="e1322-288">The default size of the send buffer on Windows is 8,192 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e1322-289">指定されたバッファー サイズは 0 より小さいです。</span><span class="sxs-lookup"><span data-stu-id="e1322-289">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-290">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-290">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-291"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-291">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="e1322-292">ブロック解除する送信元のアドレス。</span><span class="sxs-lookup"><span data-stu-id="e1322-292">The address of the source to unblock.</span></span></param>
        <summary><span data-ttu-id="e1322-293"><see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> メソッドの呼び出しによってブロックされていた送信元のブロックを解除して、その送信元からのマルチキャスト パケットを受信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="e1322-293">Unblocks a source that was previously blocked by a call to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> method so that multicast packets originating from it can be received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1322-294"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A>メソッドので、受信する、指定したソース アドレスから送信元マルチキャスト パケットのブロックを解除します。</span><span class="sxs-lookup"><span data-stu-id="e1322-294">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received.</span></span> <span data-ttu-id="e1322-295">指定したソース アドレス必要がありますがブロックされていたへの呼び出しによって、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e1322-295">The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.</span></span>  
  
 <span data-ttu-id="e1322-296">クライアントで、マルチキャスト グループに結合が完了しました必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1322-296">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="e1322-297">`sourceAddress`パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。</span><span class="sxs-lookup"><span data-stu-id="e1322-297">The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span>  
  
 <span data-ttu-id="e1322-298">指定したソースに対応する場合、`sourceAddress`パラメーターが以前の呼び出しによってブロックされていない、 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> 、メソッド、<xref:System.Net.Sockets.SocketException>でがスローされます<xref:System.Net.Sockets.SocketError.AddressNotAvailable>です。</span><span class="sxs-lookup"><span data-stu-id="e1322-298">If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.</span></span>  
  
 <span data-ttu-id="e1322-299">ブロックを解除するソースの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1322-299">If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="e1322-300">受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙します。</span><span class="sxs-lookup"><span data-stu-id="e1322-300">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1322-301">マルチキャスト グループはまだ結合されていません。</span><span class="sxs-lookup"><span data-stu-id="e1322-301">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e1322-302"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="e1322-302">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="e1322-303">ソケットへのアクセスを試行しているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e1322-303">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>