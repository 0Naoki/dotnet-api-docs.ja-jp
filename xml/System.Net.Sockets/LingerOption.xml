<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb8ae307f2beeee884316616773a1e30713d0a21" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70415298" /></Metadata><TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4dc0c-101"><see cref="T:System.Net.Sockets.Socket" /> メソッドまたは <see cref="M:System.Net.Sockets.Socket.Close" /> メソッドを呼び出した後で <see cref="M:System.Net.Sockets.TcpClient.Close" /> の接続を維持するかどうかを指定します。また、送信するデータが残っている場合は、接続を維持する時間を指定します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-101">Specifies whether a <see cref="T:System.Net.Sockets.Socket" /> will remain connected after a call to the <see cref="M:System.Net.Sockets.Socket.Close" /> or <see cref="M:System.Net.Sockets.TcpClient.Close" /> methods and the length of time it will remain connected, if data remains to be sent.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dc0c-102">アプリケーションがメソッドまたは<xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.TcpClient>メソッドを呼び出した後も、送信ネットワークバッファーにデータが残っている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-102">There may still be data available in the outgoing network buffer after an application calls the <xref:System.Net.Sockets.Socket> or <xref:System.Net.Sockets.TcpClient> method.</span></span> <span data-ttu-id="4dc0c-103">終了後にが未送信データの送信を試行<xref:System.Net.Sockets.Socket>する時間を指定する場合は、 `enable`パラメーターをに<xref:System.Net.Sockets.LingerOption> `true`設定してを作成し`seconds` 、パラメーターを目的の時間に設定します。.</span><span class="sxs-lookup"><span data-stu-id="4dc0c-103">If you want to specify the amount of time that the <xref:System.Net.Sockets.Socket> will attempt to transmit unsent data after closing, create a <xref:System.Net.Sockets.LingerOption> with the `enable` parameter set to `true`, and the `seconds` parameter set to the desired amount of time.</span></span> <span data-ttu-id="4dc0c-104">パラメーターを使用して、が<xref:System.Net.Sockets.Socket>タイムアウトする前に接続を維持する期間を指定します。 `seconds``enable` <xref:System.Net.Sockets.LingerOption> `seconds` `true`を閉じた後も常に接続状態を維持しない場合は、パラメーターをに設定し、パラメーターを0に設定してインスタンスを作成します。 <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="4dc0c-104">The `seconds` parameter is used to indicate how long you would like the <xref:System.Net.Sockets.Socket> to remain connected before timing out. If you do not want the <xref:System.Net.Sockets.Socket> to stay connected for any length of time after closing, create a <xref:System.Net.Sockets.LingerOption> instance with the `enable` parameter set to `true` and the `seconds` parameter set to zero.</span></span> <span data-ttu-id="4dc0c-105">この場合、はすぐ<xref:System.Net.Sockets.Socket>に終了し、未送信のデータは失われます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-105">In this case, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost.</span></span> <span data-ttu-id="4dc0c-106">作成したら、を<xref:System.Net.Sockets.LingerOption> <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType>メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-106">Once created, pass the <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4dc0c-107">を使用して<xref:System.Net.Sockets.TcpClient>データを送受信する場合は、 <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType>プロパティで<xref:System.Net.Sockets.LingerOption>インスタンスを設定します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-107">If you are sending and receiving data with a <xref:System.Net.Sockets.TcpClient>, then set the <xref:System.Net.Sockets.LingerOption> instance in the <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="4dc0c-108">IP スタックは、接続のラウンドトリップ時間に基づいて、使用する既定の IP プロトコルタイムアウト期間を計算します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-108">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="4dc0c-109">ほとんどの場合、スタックによって計算されるタイムアウトは、アプリケーションで定義されているものよりも関連性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-109">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="4dc0c-110">これは、プロパティ<xref:System.Net.Sockets.Socket>が設定<xref:System.Net.Sockets.TcpClient>されて<xref:System.Net.Sockets.Socket.LingerState%2A>いない場合は、 <xref:System.Net.Sockets.TcpClient.LingerState%2A>プロパティが設定されていない場合のの既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-110">This is the default behavior for a <xref:System.Net.Sockets.Socket> when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set and for a <xref:System.Net.Sockets.TcpClient> when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dc0c-111">次の例では、 <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.Close%2A>メソッドを呼び出した後も1秒間待機するように、以前に作成したを設定しています。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-111">The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable"><span data-ttu-id="4dc0c-112"><see cref="M:System.Net.Sockets.Socket.Close" /> メソッドが呼び出された後も接続を維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-112"><see langword="true" /> to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called; otherwise, <see langword="false" />.</span></span></param>
        <param name="seconds"><span data-ttu-id="4dc0c-113"><see cref="M:System.Net.Sockets.Socket.Close" /> メソッドが呼び出された後、接続を維持する秒数。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-113">The number of seconds to remain connected after the <see cref="M:System.Net.Sockets.Socket.Close" /> method is called.</span></span></param>
        <summary><span data-ttu-id="4dc0c-114"><see cref="T:System.Net.Sockets.LingerOption" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-114">Initializes a new instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dc0c-115">を<xref:System.Net.Sockets.Socket>閉じた後も、送信ネットワークバッファーにデータが残っている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-115">There may still be data available in the outgoing network buffer after you close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="4dc0c-116">Close メソッドが呼び出された後も、未<xref:System.Net.Sockets.Socket>送信データの転送を続行するかどうかを指定するには、パラメーターを使用します。 `enable`</span><span class="sxs-lookup"><span data-stu-id="4dc0c-116">Use the `enable` parameter to specify whether you would like the <xref:System.Net.Sockets.Socket> to continue transmitting unsent data after the close method is called.</span></span> <span data-ttu-id="4dc0c-117">パラメーターを使用して、がタイムアウト前に送信<xref:System.Net.Sockets.Socket>されていないデータの転送を試行する時間を指定します。 `seconds`パラメーターにを`true`指定し`enable` 、 `seconds`パラメーターに0を指定した<xref:System.Net.Sockets.Socket>場合、は、送信ネットワークバッファーにデータが残っていない状態になるまでデータの送信を試みます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-117">Use the `seconds` parameter to indicate how long you would like the <xref:System.Net.Sockets.Socket> to attempt transferring unsent data before timing out. If you specify `true` for the `enable` parameter and 0 for the `seconds` parameter, the <xref:System.Net.Sockets.Socket> will attempt to send data until there is no data left in the outgoing network buffer.</span></span> <span data-ttu-id="4dc0c-118">パラメーターにを`false`指定すると、は<xref:System.Net.Sockets.Socket>直ちに終了し、未送信のデータは失われます。 `enable`</span><span class="sxs-lookup"><span data-stu-id="4dc0c-118">If you specify `false` for the `enable` parameter, the <xref:System.Net.Sockets.Socket> will close immediately and any unsent data will be lost.</span></span>  
  
 <span data-ttu-id="4dc0c-119">次の表では、T:System.Net.Sockets.LingerOption インスタンス<xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType>が<xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType>作成され、 `enable` `seconds` に設定されている場合に、パラメーターとパラメーターの使用可能な値に基づいてメソッドとメソッドの動作について説明します。<xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType>または <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-119">The following table describes the behavior on the <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> methods based on the possible values of the `enable` and `seconds` parameters when an T:System.Net.Sockets.LingerOption instance is created and set in the <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> property.</span></span>  
  
|`enable`|`seconds`|<span data-ttu-id="4dc0c-120">動作</span><span class="sxs-lookup"><span data-stu-id="4dc0c-120">Behavior</span></span>|  
|--------------|---------------|--------------|  
|<span data-ttu-id="4dc0c-121">`false`(無効)、既定値</span><span class="sxs-lookup"><span data-stu-id="4dc0c-121">`false` (disabled), the default value</span></span>|<span data-ttu-id="4dc0c-122">タイムアウトは適用されません (既定)。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-122">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="4dc0c-123">既定の IP プロトコルのタイムアウトが経過するまで、接続指向のソケット (TCP など) の保留中のデータを送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-123">Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="4dc0c-124">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-124">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-125">0以外のタイムアウト</span><span class="sxs-lookup"><span data-stu-id="4dc0c-125">A nonzero time-out</span></span>|<span data-ttu-id="4dc0c-126">指定したタイムアウトが経過するまで保留中のデータを送信しようとします。失敗した場合は、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-126">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="4dc0c-127">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-127">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-128">ゼロタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-128">A zero timeout.</span></span>|<span data-ttu-id="4dc0c-129">保留中のデータを破棄します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-129">Discards any pending data.</span></span> <span data-ttu-id="4dc0c-130">接続指向のソケット (TCP など) の場合、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-130">For connection-oriented socket (TCP, for example), Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="4dc0c-131">IP スタックは、接続のラウンドトリップ時間に基づいて、使用する既定の IP プロトコルタイムアウト期間を計算します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-131">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="4dc0c-132">ほとんどの場合、スタックによって計算されるタイムアウトは、アプリケーションで定義されているものよりも関連性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-132">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="4dc0c-133">これは、 <xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていない場合のソケットの既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-133">This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="4dc0c-134">プロパティに格納されているプロパティが既定の ip プロトコルタイムアウトよりも大きい値に設定されている場合でも、既定の ip プロトコルタイムアウトが適用され、上書きされます。 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  <xref:System.Net.Sockets.Socket.LingerState%2A></span><span class="sxs-lookup"><span data-stu-id="4dc0c-134">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dc0c-135">次の例では、 <xref:System.Net.Sockets.Socket> <xref:System.Net.Sockets.Socket.Close%2A>メソッドを呼び出した後も1秒間待機するように、以前に作成したを設定しています。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-135">The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dc0c-136"><see cref="T:System.Net.Sockets.Socket" /> を閉じた後も接続を維持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-136">Gets or sets a value that indicates whether to linger after the <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></summary>
        <value><span data-ttu-id="4dc0c-137"><see cref="T:System.Net.Sockets.Socket" /> が呼び出された後も <see cref="M:System.Net.Sockets.Socket.Close" /> が接続を維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-137"><see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> should linger after <see cref="M:System.Net.Sockets.Socket.Close" /> is called; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dc0c-138"><xref:System.Net.Sockets.LingerOption.Enabled%2A>プロパティを使用して、 <xref:System.Net.Sockets.Socket>を閉じた後もを終了するかどうかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-138">You can use the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property to determine whether the <xref:System.Net.Sockets.Socket> will linger after closing.</span></span> <span data-ttu-id="4dc0c-139">この値をまた`true`は`false`に変更し、 <xref:System.Net.Sockets.LingerOption>変更を<xref:System.Net.Sockets.Socket.SetSocketOption%2A>メソッドに渡すか<xref:System.Net.Sockets.TcpClient.LingerState%2A> 、 <xref:System.Net.Sockets.Socket.LingerState%2A>または property.to を無効にするか、残留を有効にします。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-139">Change this value to `true` or `false` and pass the altered <xref:System.Net.Sockets.LingerOption> to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.to disable or enable lingering.</span></span>  
  
 <span data-ttu-id="4dc0c-140">次の表では、プロパティの<xref:System.Net.Sockets.LingerOption.Enabled%2A>使用可能な値の動作<xref:System.Net.Sockets.LingerOption.LingerTime%2A>と、プロパティに<xref:System.Net.Sockets.Socket.LingerState%2A>格納されているプロパティについて説明します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-140">The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
|`enable`|`seconds`|<span data-ttu-id="4dc0c-141">動作</span><span class="sxs-lookup"><span data-stu-id="4dc0c-141">Behavior</span></span>|  
|--------------|---------------|--------------|  
|<span data-ttu-id="4dc0c-142">`false`(無効)、既定値</span><span class="sxs-lookup"><span data-stu-id="4dc0c-142">`false` (disabled), the default value</span></span>|<span data-ttu-id="4dc0c-143">タイムアウトは適用されません (既定)。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-143">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="4dc0c-144">既定の IP プロトコルのタイムアウトが経過するまで、接続指向のソケット (TCP など) の保留中のデータを送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-144">Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="4dc0c-145">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-145">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-146">0以外のタイムアウト</span><span class="sxs-lookup"><span data-stu-id="4dc0c-146">A nonzero time-out</span></span>|<span data-ttu-id="4dc0c-147">指定したタイムアウトが経過するまで保留中のデータを送信しようとします。失敗した場合は、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-147">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="4dc0c-148">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-148">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-149">ゼロタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-149">A zero timeout.</span></span>|<span data-ttu-id="4dc0c-150">保留中のデータを破棄します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-150">Discards any pending data.</span></span> <span data-ttu-id="4dc0c-151">接続指向のソケット (TCP など) の場合、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-151">For connection-oriented socket (TCP, for example), Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="4dc0c-152">IP スタックは、接続のラウンドトリップ時間に基づいて、使用する既定の IP プロトコルタイムアウト期間を計算します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-152">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="4dc0c-153">ほとんどの場合、スタックによって計算されるタイムアウトは、アプリケーションで定義されているものよりも関連性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-153">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="4dc0c-154">これは、 <xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていない場合のソケットの既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-154">This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="4dc0c-155">プロパティに格納されているプロパティが既定の ip プロトコルタイムアウトよりも大きい値に設定されている場合でも、既定の ip プロトコルタイムアウトが適用され、上書きされます。 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  <xref:System.Net.Sockets.Socket.LingerState%2A></span><span class="sxs-lookup"><span data-stu-id="4dc0c-155">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4dc0c-156">送信するデータが残っている場合に、<see cref="M:System.Net.Sockets.Socket.Close" /> メソッドを呼び出した後で接続を維持する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-156">Gets or sets the amount of time to remain connected after calling the <see cref="M:System.Net.Sockets.Socket.Close" /> method if data remains to be sent.</span></span></summary>
        <value><span data-ttu-id="4dc0c-157"><see cref="M:System.Net.Sockets.Socket.Close" /> が呼び出された後、接続を維持する秒数。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-157">The amount of time, in seconds, to remain connected after calling <see cref="M:System.Net.Sockets.Socket.Close" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dc0c-158">閉じ<xref:System.Net.Sockets.Socket>たが、タイムアウトしたデータの転送を試行する時間を指定する場合は、この値を使用します。この値は、必要なタイムアウト期間 (秒単位) に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-158">Use this value if you want to determine how long a closed <xref:System.Net.Sockets.Socket> will attempt to transfer unsent data before timing out. You can also set this value to the desired time-out period, in seconds.</span></span>  
  
 <span data-ttu-id="4dc0c-159">プロパティがで、 `true`が0に設定<xref:System.Net.Sockets.LingerOption.LingerTime%2A>されている<xref:System.Net.Sockets.Socket>場合、は送信ネットワークバッファーで送信する保留中のデータを破棄します。 <xref:System.Net.Sockets.LingerOption.Enabled%2A></span><span class="sxs-lookup"><span data-stu-id="4dc0c-159">If the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property is `true`, and you set <xref:System.Net.Sockets.LingerOption.LingerTime%2A> to 0, the <xref:System.Net.Sockets.Socket> discards any pending data to send in the outgoing network buffer.</span></span> <span data-ttu-id="4dc0c-160">この値を変更する場合は、変更され<xref:System.Net.Sockets.LingerOption>たインスタンスを<xref:System.Net.Sockets.Socket.SetSocketOption%2A>メソッドに渡すか<xref:System.Net.Sockets.TcpClient.LingerState%2A> 、 <xref:System.Net.Sockets.Socket.LingerState%2A>またはプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-160">If you change this value, you must pass the altered <xref:System.Net.Sockets.LingerOption> instance to the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method or set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> or <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
 <span data-ttu-id="4dc0c-161">次の表では、プロパティの<xref:System.Net.Sockets.LingerOption.Enabled%2A>使用可能な値の動作<xref:System.Net.Sockets.LingerOption.LingerTime%2A>と、プロパティに<xref:System.Net.Sockets.Socket.LingerState%2A>格納されているプロパティについて説明します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-161">The following table describes the behavior for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
|`enable`|`seconds`|<span data-ttu-id="4dc0c-162">動作</span><span class="sxs-lookup"><span data-stu-id="4dc0c-162">Behavior</span></span>|  
|--------------|---------------|--------------|  
|<span data-ttu-id="4dc0c-163">`false`(無効)、既定値</span><span class="sxs-lookup"><span data-stu-id="4dc0c-163">`false` (disabled), the default value</span></span>|<span data-ttu-id="4dc0c-164">タイムアウトは適用されません (既定)。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-164">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="4dc0c-165">既定の IP プロトコルのタイムアウトが経過するまで、接続指向のソケット (TCP など) の保留中のデータを送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-165">Attempts to send pending data for a connection-oriented socket (TCP, for example) until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="4dc0c-166">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-166">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-167">0以外のタイムアウト</span><span class="sxs-lookup"><span data-stu-id="4dc0c-167">A nonzero time-out</span></span>|<span data-ttu-id="4dc0c-168">指定したタイムアウトが経過するまで保留中のデータを送信しようとします。失敗した場合は、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-168">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="4dc0c-169">`true`enabled</span><span class="sxs-lookup"><span data-stu-id="4dc0c-169">`true` (enabled)</span></span>|<span data-ttu-id="4dc0c-170">ゼロタイムアウト。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-170">A zero timeout.</span></span>|<span data-ttu-id="4dc0c-171">保留中のデータを破棄します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-171">Discards any pending data.</span></span> <span data-ttu-id="4dc0c-172">接続指向のソケット (TCP など) の場合、Winsock によって接続がリセットされます。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-172">For connection-oriented socket (TCP, for example), Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="4dc0c-173">IP スタックは、接続のラウンドトリップ時間に基づいて、使用する既定の IP プロトコルタイムアウト期間を計算します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-173">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="4dc0c-174">ほとんどの場合、スタックによって計算されるタイムアウトは、アプリケーションで定義されているものよりも関連性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-174">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="4dc0c-175">これは、 <xref:System.Net.Sockets.Socket.LingerState%2A>プロパティが設定されていない場合のソケットの既定の動作です。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-175">This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="4dc0c-176">プロパティに格納されているプロパティが既定の ip プロトコルタイムアウトよりも大きい値に設定されている場合でも、既定の ip プロトコルタイムアウトが適用され、上書きされます。 <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  <xref:System.Net.Sockets.Socket.LingerState%2A></span><span class="sxs-lookup"><span data-stu-id="4dc0c-176">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4dc0c-177">次の例では、このプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="4dc0c-177">The following example displays the value of this property.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
