<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpSingleSourceMulticastClient.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522d8e0a33fcc708ac83a1356d04077ab35d0449c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22d8e0a33fcc708ac83a1356d04077ab35d0449c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</source>
          <target state="translated">単一の送信元からのマルチキャスト トラフィックのクライアント受信元。このマルチキャストは、SSM (Source Specific Multicast) とも呼ばれます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>The multicast group address and sender source address must be known.</source>
          <target state="translated">マルチキャスト グループのアドレスとセンダ ソースのアドレスは認識されている必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>In addition to receiving multicast data from a specific sender, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> client can also send unicast data back to the sender.</source>
          <target state="translated">特定の差出人からマルチキャスト データを受け取るだけでなく、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>クライアントは、送信者に送り返すユニキャスト データも送信します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>To receive multicast from multiple sources, or when the sources aren't known in advance, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> class instead.</source>
          <target state="translated">複数のソースからのマルチキャストの受信、またはソースは、事前にわかっている場合に使用する、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>クラスの代わりにします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The sender source address for this receiver to subscribe to.</source>
          <target state="translated">この受信者にとってサブスクライブ先となる送信者の発信元アドレス。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The multicast group address for this receiver to subscribe to.</source>
          <target state="translated">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The local port for this receiver to bind to.</source>
          <target state="translated">この受信者がバインドするローカルのポート。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from a single source.</source>
          <target state="translated">グループ アドレスをサブスクライブして単一の送信元からデータグラムを受信できる新しい <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP クライアントを作成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>コンス トラクターをグループ アドレスとポート、UDP マルチキャスト ソケットに関連付けますが、バインドまたはしませんそれ以外の場合、ソケットを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.</source>
          <target state="translated"><ph id="ph1">`groupAddress`</ph>パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>However, the address family of the <ph id="ph1">`sourceAddress`</ph> and <ph id="ph2">`groupAddress`</ph> parameters must the same.</source>
          <target state="translated">ただしのアドレス ファミリ、<ph id="ph1">`sourceAddress`</ph>と<ph id="ph2">`groupAddress`</ph>パラメーターでは、同じ必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`localPort`</ph> parameter must not specify a port less than 1,024.</source>
          <target state="translated"><ph id="ph1">`localPort`</ph> 1,024 未満のポート パラメーターを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> and <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph> must be the same address family.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> および <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph> は同じアドレス ファミリである必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> が 65,535 より大きい値です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 1024</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> が 1024 より小さい値です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>A callback method to invoke when the operation completes.</source>
          <target state="translated">操作の完了時に呼び出されるコールバック メソッド。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">この操作の <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> メソッドに渡す、省略可能な状態情報。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated">ソケットをバインドし、マルチキャスト グループへの結合操作を開始して、単一の始点アドレスからデータグラムを受信できるようにします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">この操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph>メソッドは、ローカル ポートに UDP マルチキャスト ソケットをバインドし、マルチキャスト データグラムを 1 つのソース アドレスから受信できるを許可するグループに参加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group address, single source address, and local port to bind to are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">マルチキャスト グループのアドレス、1 つのソース アドレスにバインドするローカル ポートがで指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.</source>
          <target state="translated">指定する方法、<ph id="ph1">`callback`</ph>パラメーターがマルチキャスト グループへの参加操作が完了したときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">ランタイムで必要な場合、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph>メソッドも、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシー チェックを実行します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">クライアントがアクセスを許可されていない場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>でがスローされます<ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group has already been joined or a join operation is currently in progress.</source>
          <target state="translated">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">ソケットへのアクセスを試行しているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to store the received data.</source>
          <target state="translated">受信したデータを格納するバッファー。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where the data should be stored.</source>
          <target state="translated">データの保存先になる、<bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> の先頭からのバイト単位のオフセット。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to receive and store in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> で受信および格納するバイトの最大数。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">操作の完了時に呼び出されるコールバック メソッド。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">この操作の <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> メソッドに渡す、省略可能な状態情報。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</source>
          <target state="translated">参加したマルチキャスト グループからのパケットを受信する操作を開始し、指定された送信元からグループにパケットが届いたときに、指定されたコールバックを呼び出します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">この操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>メソッドは、単一の送信者からに参加しているマルチキャスト グループから UDP パケットの受信の操作を開始します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The local port, multicast group, and sender source address are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">ローカル ポート、マルチキャスト グループは、および送信者の発信元アドレスがで指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast client must also have completed a join to the multicast group.</source>
          <target state="translated">マルチキャストのクライアントで、マルチキャスト グループに結合が完了しましたもする必要があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">指定する方法、<ph id="ph1">`callback`</ph>パラメーターが、パケットが受信したときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">ソケット エラーが発生した場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">受信したエラーがのメンバーとして指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> にカウントを加算した値が、<ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket for receiving.</source>
          <target state="translated">受信のためにソケットにアクセスしようとして、エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to send.</source>
          <target state="translated">送信するデータが格納されているバッファー。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to read the data to be sent.</source>
          <target state="translated">送信するデータを読み取る <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> の先頭からのバイト単位のオフセット。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send from the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> から送信するバイト数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote port to which the packet is to be sent.</source>
          <target state="translated">パケットを送信するリモート ポート。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote address is specified by the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> constructor.</source>
          <target state="translated">リモート アドレスは、<ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> コンストラクターで指定します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">操作の完了時に呼び出されるコールバック メソッド。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">この操作の <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> メソッドに渡す、省略可能な状態情報。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of sending a unicast packet to the source previously specified.</source>
          <target state="translated">前に指定された送信元にユニキャスト パケットを送信する操作を開始します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">この操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method begins an operation of sending a UDP packet to the source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>メソッドは、以前に指定したソースに UDP パケットを送信する操作を開始します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</source>
          <target state="translated">一部のプロトコルでは、この情報を使用して、サービスの統計、または復旧メッセージの品質のフロー制御を渡します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has been sent.</source>
          <target state="translated">指定する方法、<ph id="ph1">`callback`</ph>パケットが送信されたときにパラメーターが呼び出されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">クライアントで、マルチキャスト グループに結合が完了しました必要があります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If the destination port specified in the <ph id="ph1">`remotePort`</ph> parameter is less than 1,024, a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">宛先ポートが指定されている場合、<ph id="ph1">`remotePort`</ph>パラメーターより小さい数は 1,024、<ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>でがスローされます<ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">これは、UDP では一般的ななくても、送信操作が同期的に、失敗した場合は、ソケット エラーを設定することです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">ソケット エラーが発生した場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">受信したエラーがのメンバーとして指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> にカウントを加算した値が、<ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph> is less than 0 or greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph> が 0 より小さいか、65,535 を超えています。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">ソケットへのアクセスを試行しているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Leaves the multicast group and releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> class and the underlying the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">マルチキャスト グループへの参加を終了し、<ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> クラスの現在のインスタンスによって使用されたリソースと、基になる <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> によって使用されたリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> オブジェクトの <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The result of the asynchronous join operation.</source>
          <target state="translated">非同期の参加操作の結果。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>Completes the asynchronous join group operation to a multicast group.</source>
          <target state="translated">マルチキャスト グループに対する非同期のグループ参加操作を完了します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph>メソッドは、マルチキャスト グループへのソケットと結合操作に非同期のバインドを完了するとします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">ランタイムで必要な場合、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph>メソッドも、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシー チェックを実行します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">クライアントがアクセスを許可されていない場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>でがスローされます<ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If there is a socket failure while performing the join group operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">結合のグループの操作を実行中にソケット エラーがある場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">受信したエラーがのメンバーとして指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">ソケットへのアクセスを試行しているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The result of the asynchronous receive operation.</source>
          <target state="translated">非同期の受信操作の結果。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The source endpoint where the packet was received from.</source>
          <target state="translated">パケットの受信元のソース エンドポイント。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</source>
          <target state="translated">参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The length, in bytes, of the message stored in the <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter passed to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> メソッドに渡される <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> パラメーターに格納されたメッセージの長さ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph>メソッドは、マルチキャスト グループの 1 つのソースからのパケットを受信する非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">受信操作の実行中にソケット エラーがある場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">受信したエラーがのメンバーとして指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">ソケットへのアクセスを試行しているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The result of the asynchronous send operation.</source>
          <target state="translated">非同期の送信操作の結果。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>Completes the operation of sending a unicast packet to a single source.</source>
          <target state="translated">単一のソースにユニキャスト パケットを送信する操作を完了します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph> method completes an asynchronous operation to send a packet to single source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph>メソッドは、以前に指定した 1 つのソースにパケットを送信する非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">受信操作の実行中にソケット エラーがある場合、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">受信したエラーがのメンバーとして指定された、<ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> が null 参照 (Visual Basic では Nothing) です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">ソケットへのアクセスを試行しているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Gets or sets the size, in bytes, of the receive buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast receive operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> インスタンスのマルチキャストの受信操作に使用される <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> の受信バッファーのバイト単位のサイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The size, in bytes, of the receive buffer.</source>
          <target state="translated">受信バッファー サイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">`ReceiveBufferSize`</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">`ReceiveBufferSize`</ph>プロパティを取得または基になるの受信バッファーのバイト単位のサイズを設定<ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>このマルチキャストの受信操作に使用される<ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Specifically, the <ph id="ph1">`ReceiveBufferSize`</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">具体的には、<ph id="ph1">`ReceiveBufferSize`</ph>プロパティは、パケットが到着すると、アプリケーションがまだ呼び出さいないときに、スタックによって使われるバッファーのサイズを制御、<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>If this buffer gets filled up and packets keep coming before the application calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> methods, old packets will get dropped.</source>
          <target state="translated">このバッファーがいっぱいにし、アプリケーションの呼び出しの前にパケットを受け取った場合、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph>メソッド、古いパケットが削除されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーションが、古いパケットを受信できなくし、呼び出したときに新しいパケットの受信が代わりに、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The default size of the receive buffer on Windows is 8,192.</source>
          <target state="translated">Windows 上の受信バッファーの既定のサイズは 8,192 です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">指定されたバッファー サイズは 0 より小さいです。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Gets or sets the size, in bytes, of the send buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> インスタンスのマルチキャストの送信操作に使用される <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> の送信バッファーのバイト単位のサイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The size, in bytes, of the send buffer.</source>
          <target state="translated">送信バッファーのバイト単位のサイズ。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated">SendBufferSize プロパティを取得または基になるの送信バッファーのバイト単位のサイズを設定<ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>このマルチキャスト送信操作に使用される<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Mac OS X, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method start failing.</source>
          <target state="translated">Mac OS x、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>プロパティ コントロールへの呼び出しを追加する前に、ネットワーク スタックの待機中---を送信するバッファーのバイト数を指定できます、<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>メソッドが失敗し始めます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</source>
          <target state="translated">Mac OS X 上のアプリケーションは、短い期間に多数の UDP パケットを送信する場合に、このプロパティで考慮する必要があります。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Windows, calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method will take longer to call the callback depending on the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.</source>
          <target state="translated">Windows では、呼び出し、<ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph>メソッドがの値に応じてコールバックを呼び出します。 長い時間がかかり、<ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>プロパティ送信バッファーがいっぱいの場合。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph>プロパティ コントロールのみが、送信が完了するまでに物理メモリにロックされているユーザーのバッファーのままかどうか。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The default size of the send buffer on Windows is 8,192.</source>
          <target state="translated">Windows 上の送信バッファーの既定のサイズは 8,192 です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">指定されたバッファー サイズは 0 より小さいです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">マルチキャスト グループはまだ結合されていません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> は破棄されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>