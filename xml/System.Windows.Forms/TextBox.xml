<Type Name="TextBox" FullName="System.Windows.Forms.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac1e0701f14236bbbf0e3553c6dc82723bdff5e9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55330471" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e961b-101">Windows テキスト ボックス コントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="e961b-101">Represents a Windows text box control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-102"><xref:System.Windows.Forms.TextBox>コントロール、ユーザーがアプリケーションでテキストを入力できます。</span><span class="sxs-lookup"><span data-stu-id="e961b-102">With the <xref:System.Windows.Forms.TextBox> control, the user can enter text in an application.</span></span> <span data-ttu-id="e961b-103">このコントロールには、複数行の編集、およびパスワード文字のマスクを含む、標準の Windows テキスト ボックス コントロールに含まれていない追加機能があります。</span><span class="sxs-lookup"><span data-stu-id="e961b-103">This control has additional functionality that is not found in the standard Windows text box control, including multiline editing and password character masking.</span></span>  
  
 <span data-ttu-id="e961b-104">通常、<xref:System.Windows.Forms.TextBox>を表示するか、1 行のテキストの入力としてそのまま使用するコントロールを使用します。</span><span class="sxs-lookup"><span data-stu-id="e961b-104">Typically, a <xref:System.Windows.Forms.TextBox> control is used to display, or accept as input, a single line of text.</span></span> <span data-ttu-id="e961b-105">使用することができます、<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>と<xref:System.Windows.Forms.TextBox.ScrollBars%2A>複数行の表示または入力するテキストを有効にするプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-105">You can use the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBox.ScrollBars%2A> properties to enable multiple lines of text to be displayed or entered.</span></span> <span data-ttu-id="e961b-106">設定、<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>と<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>プロパティ`true`複数行の大きいテキスト操作を有効にする<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-106">Set the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> and <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> properties to `true` to enable greater text manipulation in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-107">設定する必要があります、<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>プロパティを`true`の高さを調整する、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-107">You must set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true` to adjust the height of the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e961b-108">設定して高さを調整できる、<xref:System.Windows.Forms.Control.Size%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-108">You can adjust the height by setting the <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 <span data-ttu-id="e961b-109">入力したテキストの量を制限することができます、<xref:System.Windows.Forms.TextBox>コントロールを設定して、<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>プロパティを特定の文字数。</span><span class="sxs-lookup"><span data-stu-id="e961b-109">You can limit the amount of text entered into a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to a specific number of characters.</span></span> <span data-ttu-id="e961b-110"><xref:System.Windows.Forms.TextBox> コントロールがパスワードやその他の機密情報をそのまま使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-110"><xref:System.Windows.Forms.TextBox> controls can also be used to accept passwords and other sensitive information.</span></span> <span data-ttu-id="e961b-111">使用することができます、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティを 1 行のバージョンのコントロールに入力された文字をマスクします。</span><span class="sxs-lookup"><span data-stu-id="e961b-111">You can use the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property to mask characters entered in a single-line version of the control.</span></span> <span data-ttu-id="e961b-112">使用して、<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>大文字、小文字のみ、のみを入力するユーザーを有効にするプロパティまたはに大文字と小文字の文字の組み合わせ、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-112">Use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to enable the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="e961b-113">内容をスクロールする、<xref:System.Windows.Forms.TextBox>使用することができます (キャレット) のカーソルは、コントロールの可視領域内に入るまで、<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e961b-113">To scroll the contents of the <xref:System.Windows.Forms.TextBox> until the cursor (caret) is within the visible region of the control, you can use the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method.</span></span> <span data-ttu-id="e961b-114">テキスト ボックスにテキストの範囲を選択するに使用することができます、<xref:System.Windows.Forms.TextBoxBase.Select%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e961b-114">To select a range of text in the text box, you can use the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span>  
  
 <span data-ttu-id="e961b-115">入力されるテキストを制限する、 <xref:System.Windows.Forms.TextBox> 、コントロールのイベント ハンドラーを作成することができます、<xref:System.Windows.Forms.Control.KeyDown>コントロールに入力された各文字を検証するためにイベント。</span><span class="sxs-lookup"><span data-stu-id="e961b-115">To restrict text from being entered in a <xref:System.Windows.Forms.TextBox> control, you can create an event handler for the <xref:System.Windows.Forms.Control.KeyDown> event in order to validate each character entered in the control.</span></span> <span data-ttu-id="e961b-116">内のデータのすべてのエントリを制限することも、<xref:System.Windows.Forms.TextBox>コントロールを設定して、<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-116">You can also restrict all entry of data in a <xref:System.Windows.Forms.TextBox> control by setting the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-117">ほとんどの機能の<xref:System.Windows.Forms.TextBox>コントロールが継承、<xref:System.Windows.Forms.TextBoxBase>クラス。</span><span class="sxs-lookup"><span data-stu-id="e961b-117">Most of the functionality of the <xref:System.Windows.Forms.TextBox> control is inherited from the <xref:System.Windows.Forms.TextBoxBase> class.</span></span>  
>   
>  <span data-ttu-id="e961b-118">使用して、 <xref:System.Windows.Forms.TextBox> visual スタイルが有効になっているコントロールのサロゲートのフォントの不適切な処理が発生します。</span><span class="sxs-lookup"><span data-stu-id="e961b-118">Using the <xref:System.Windows.Forms.TextBox> control with visual styles enabled will cause the incorrect handling of surrogate fonts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-119">次のコード例は、複数行を作成します。<xref:System.Windows.Forms.TextBox>垂直スクロール バーを持つコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-119">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e961b-120">この例では、 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>、および<xref:System.Windows.Forms.Control.Dock%2A>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e961b-120">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.Control.Dock%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-csharp[Classic TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e961b-121"><see cref="T:System.Windows.Forms.TextBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e961b-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.TextBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-122">親コンテナー コントロールの色とフォントの設定を定義する、<xref:System.Windows.Forms.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="e961b-122">The parent container control defines the color and font settings for the <xref:System.Windows.Forms.TextBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-123">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.TextBox>コントロールし、コントロールの文字列を割り当てます<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-123">The following code example creates a new instance of the <xref:System.Windows.Forms.TextBox> control and assigns a string to the control's <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
 [!code-cpp[Classic TextBox.TextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.TextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.TextBox Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.TextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.TextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Forms.TextBox.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-124">複数行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールで Enter キーを押すと、コントロールでテキストを改行するのか、またはフォームの既定のボタンをアクティブにするのかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-124">Gets or sets a value indicating whether pressing ENTER in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control creates a new line of text in the control or activates the default button for the form.</span></span></summary>
        <value><span data-ttu-id="e961b-125">Enter キーを押して、複数行形式のコントロールでテキストの改行を行う場合は <see langword="true" />。Enter キーを押して、フォームの既定のボタンをアクティブにする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-125"><see langword="true" /> if the ENTER key creates a new line of text in a multiline version of the control; <see langword="false" /> if the ENTER key activates the default button for the form.</span></span> <span data-ttu-id="e961b-126">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-127">このプロパティの値が場合`false`、複数行に新しい行を作成するには、CTRL + ENTER を押す必要がある<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-127">If the value of this property is `false`, the user must press CTRL+ENTER to create a new line in a multiline <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e961b-128">フォームの既定のボタンがない場合は、ENTER キーは常に作成されているコントロールでこのプロパティの値に関係なく、新しいテキスト行を使用します。</span><span class="sxs-lookup"><span data-stu-id="e961b-128">If there is no default button for the form, the ENTER key will always create a new line of text in the control, regardless of the value of this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-129">次のコード例は、複数行を作成します。<xref:System.Windows.Forms.TextBox>垂直スクロール バーを持つコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-129">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e961b-130">この例では、 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>、および<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e961b-130">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteCustomSource : System.Windows.Forms.AutoCompleteStringCollection with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-131"><see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> プロパティが <see langword="CustomSource" /> に設定されている場合に使用するカスタム <see cref="T:System.Collections.Specialized.StringCollection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-131">Gets or sets a custom <see cref="T:System.Collections.Specialized.StringCollection" /> to use when the <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="e961b-132"><see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" /> に使用する <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-132">A <see cref="T:System.Collections.Specialized.StringCollection" /> to use with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-133">使用して、 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを作成する、<xref:System.Windows.Forms.TextBox>保守されているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって入力文字列に自動的に完了します。</span><span class="sxs-lookup"><span data-stu-id="e961b-133">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e961b-134">これは便利です<xref:System.Windows.Forms.TextBox>コントロールを Url、アドレス、ファイル名、またはコマンドが頻繁に入力されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-134">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e961b-135">使用、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>プロパティは省略可能で、設定する必要がありますが、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを`CustomSource`使用するには<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e961b-135">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e961b-136">使用する必要があります、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>まとめてプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-136">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-137">オペレーティング システムでは、一度に表示できるカスタムの文字列の数を制限があります。</span><span class="sxs-lookup"><span data-stu-id="e961b-137">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-138">次のコード例は、オート コンプリートのカスタム ソースとしてコレクションを使用する方法を示します、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-138">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e961b-139">この例の内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e961b-139">This example does the following:</span></span>  
  
-   <span data-ttu-id="e961b-140">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを有効にする、<xref:System.Windows.Forms.TextBox>オート コンプリートの動作のカスタム ソースをそのまま使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-140">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="e961b-141">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>値のカスタム リストを設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-141">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="e961b-142">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>オートコンプリートの候補を表示する方法を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-142">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteMode : System.Windows.Forms.AutoCompleteMode with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-143"><see cref="T:System.Windows.Forms.TextBox" /> のオート コンプリートの動作を制御するオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-143">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="e961b-144"><see cref="T:System.Windows.Forms.AutoCompleteMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-144">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span> <span data-ttu-id="e961b-145">値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e961b-145">The following are the values.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />  
<span data-ttu-id="e961b-146">既存の文字に、その後に続く可能性が最も高い候補文字列を追加し、追加した文字を強調表示します。</span><span class="sxs-lookup"><span data-stu-id="e961b-146">Appends the remainder of the most likely candidate string to the existing characters, highlighting the appended characters.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />  
<span data-ttu-id="e961b-147">エディット コントロールに関連付けられた補助のドロップダウン リストを表示します。</span><span class="sxs-lookup"><span data-stu-id="e961b-147">Displays the auxiliary drop-down list associated with the edit control.</span></span> <span data-ttu-id="e961b-148">このドロップダウン リストには、1 つ以上の補完文字列の候補が格納されています。</span><span class="sxs-lookup"><span data-stu-id="e961b-148">This drop-down is populated with one or more suggested completion strings.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />  
<span data-ttu-id="e961b-149"><see langword="Suggest" /> オプションと <see langword="Append" /> オプションの両方を追加します。</span><span class="sxs-lookup"><span data-stu-id="e961b-149">Appends both <see langword="Suggest" /> and <see langword="Append" /> options.</span></span>  
  
 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />  
<span data-ttu-id="e961b-150">オートコンプリートを無効にします。</span><span class="sxs-lookup"><span data-stu-id="e961b-150">Disables automatic completion.</span></span> <span data-ttu-id="e961b-151">既定値です。</span><span class="sxs-lookup"><span data-stu-id="e961b-151">This is the default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-152">使用して、 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを作成する、<xref:System.Windows.Forms.TextBox>保守されているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって入力文字列に自動的に完了します。</span><span class="sxs-lookup"><span data-stu-id="e961b-152">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e961b-153">これは便利です<xref:System.Windows.Forms.TextBox>コントロールを Url、アドレス、ファイル名、またはコマンドが頻繁に入力されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-153">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e961b-154">使用、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>プロパティは省略可能で、設定する必要がありますが、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを`CustomSource`使用するには<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e961b-154">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e961b-155">使用する必要があります、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>まとめてプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-155">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-156">オペレーティング システムでは、一度に表示できるカスタムの文字列の数を制限があります。</span><span class="sxs-lookup"><span data-stu-id="e961b-156">The operating system might limit the number of custom strings that it can display at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-157">次のコード例は、オート コンプリートのカスタム ソースとしてコレクションを使用する方法を示します、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-157">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e961b-158">この例の内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e961b-158">This example does the following:</span></span>  
  
-   <span data-ttu-id="e961b-159">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを有効にする、<xref:System.Windows.Forms.TextBox>オート コンプリートの動作のカスタム ソースをそのまま使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-159">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="e961b-160">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>値のカスタム リストを設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-160">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="e961b-161">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>オートコンプリートの候補を表示する方法を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-161">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e961b-162">指定された値が <see cref="T:System.Windows.Forms.AutoCompleteMode" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="e961b-162">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCompleteSource : System.Windows.Forms.AutoCompleteSource with get, set" Usage="System.Windows.Forms.TextBox.AutoCompleteSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TextBoxAutoCompleteSourceConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-163">オート コンプリートで使用する完全な文字列のソースを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-163">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="e961b-164"><see cref="T:System.Windows.Forms.AutoCompleteSource" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-164">One of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span> <span data-ttu-id="e961b-165">オプションは、<see langword="AllSystemSources" />、<see langword="AllUrl" />、<see langword="FileSystem" />、<see langword="HistoryList" />、<see langword="RecentlyUsedList" />、<see langword="CustomSource" />、および <see langword="None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-165">The options are <see langword="AllSystemSources" />, <see langword="AllUrl" />, <see langword="FileSystem" />, <see langword="HistoryList" />, <see langword="RecentlyUsedList" />, <see langword="CustomSource" />, and <see langword="None" />.</span></span> <span data-ttu-id="e961b-166">既定値は、<see langword="None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-166">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-167">使用して、 <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを作成する、<xref:System.Windows.Forms.TextBox>保守されているソース内のすべての文字列のプレフィックスに入力されているプレフィックスを比較することによって入力文字列に自動的に完了します。</span><span class="sxs-lookup"><span data-stu-id="e961b-167">Use the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.TextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e961b-168">これは便利です<xref:System.Windows.Forms.TextBox>コントロールを Url、アドレス、ファイル名、またはコマンドが頻繁に入力されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-168">This is useful for <xref:System.Windows.Forms.TextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e961b-169">使用、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>プロパティは省略可能で、設定する必要がありますが、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを`CustomSource`使用するには<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e961b-169">The use of the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e961b-170">使用する必要があります、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>と<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>まとめてプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-170">You must use the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 複数行では動作しません<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-171"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e961b-172">オペレーティング システムでは、一度に表示できるカスタムの文字列の数を制限があります。</span><span class="sxs-lookup"><span data-stu-id="e961b-172">The operating system might limit the number of custom strings that can be displayed at once.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-173">次のコード例は、オート コンプリートのカスタム ソースとしてコレクションを使用する方法を示します、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-173">The following code example demonstrates how to use a collection as the auto-complete custom source for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e961b-174">この例の内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e961b-174">This example does the following:</span></span>  
  
-   <span data-ttu-id="e961b-175">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A>プロパティを有効にする、<xref:System.Windows.Forms.TextBox>オート コンプリートの動作のカスタム ソースをそのまま使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-175">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> property to enable the <xref:System.Windows.Forms.TextBox> control to accept a custom source for its auto-complete behavior.</span></span>  
  
-   <span data-ttu-id="e961b-176">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A>値のカスタム リストを設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-176">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteCustomSource%2A> property to set the custom list of values.</span></span>  
  
-   <span data-ttu-id="e961b-177">使用して、<xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A>オートコンプリートの候補を表示する方法を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-177">Uses the <xref:System.Windows.Forms.TextBox.AutoCompleteMode%2A> property to set how the auto-complete candidates are displayed.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/cs/form1.cs#10)]
 [!code-vb[System.Windows.Forms.TextBox.AutoCompleteCustomSource#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.textbox.autocompletecustomsource/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e961b-178">指定された値が <see cref="T:System.Windows.Forms.AutoCompleteSource" /> の値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="e961b-178">The specified value is not one of the values of <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.TextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CharacterCasing CharacterCasing { System::Windows::Forms::CharacterCasing get(); void set(System::Windows::Forms::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Forms.CharacterCasing with get, set" Usage="System.Windows.Forms.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-179"><see cref="T:System.Windows.Forms.TextBox" /> コントロールで入力された文字の大文字と小文字を変更するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-179">Gets or sets whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters as they are typed.</span></span></summary>
        <value><span data-ttu-id="e961b-180"><see cref="T:System.Windows.Forms.CharacterCasing" /> コントロールで大文字と小文字を変更するかどうかを指定する <see cref="T:System.Windows.Forms.TextBox" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-180">One of the <see cref="T:System.Windows.Forms.CharacterCasing" /> enumeration values that specifies whether the <see cref="T:System.Windows.Forms.TextBox" /> control modifies the case of characters.</span></span> <span data-ttu-id="e961b-181">既定値は、<see langword="CharacterCasing.Normal" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-181">The default is <see langword="CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-182">使用することができます、<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>アプリケーションで必要な文字の大文字と小文字を変更するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-182">You can use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change the case of characters as required by your application.</span></span> <span data-ttu-id="e961b-183">入力されたすべての文字の大文字と小文字を変更するなど、<xref:System.Windows.Forms.TextBox>を大文字または小文字のパスワード ポリシーを適用するパスワードの入力の使用を制御します。</span><span class="sxs-lookup"><span data-stu-id="e961b-183">For example, you could change the case of all characters entered in a <xref:System.Windows.Forms.TextBox> control used for password entry to uppercase or lowercase to enforce a policy for passwords.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-184">次のコード例を作成、<xref:System.Windows.Forms.TextBox>パスワードをそのまま使用するために使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-184">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="e961b-185">この例では、<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>に型指定されたすべての文字を変更するプロパティを小文字、 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 8 文字に、パスワードの長さを制限するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-185">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="e961b-186">またこの例では、<xref:System.Windows.Forms.TextBox.TextAlign%2A>プロパティでパスワードを中央に、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-186">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e961b-187">列挙体の有効値の範囲内にない値が、プロパティに代入されました。</span><span class="sxs-lookup"><span data-stu-id="e961b-187">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-188">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="e961b-188">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="e961b-189">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-189">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.TextBox.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textBox.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e961b-190">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-190"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e961b-191"><see cref="T:System.Windows.Forms.TextBox" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="e961b-191">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TextBox" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-192">このメソッドは、パブリック`Dispose`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e961b-192">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e961b-193">`Dispose` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-193">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e961b-194"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-194"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e961b-195">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Windows.Forms.TextBox> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="e961b-195">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.TextBox> references.</span></span> <span data-ttu-id="e961b-196">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e961b-196">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-197">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e961b-197">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="e961b-198">オーバーライドするときに<see langword="Dispose(Boolean)" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="e961b-198">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="e961b-199">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-199">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="e961b-200">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="e961b-200">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="e961b-201">キーの値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-201">One of the key's values.</span></span></param>
        <summary><span data-ttu-id="e961b-202">指定されているキーが、入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</span><span class="sxs-lookup"><span data-stu-id="e961b-202">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="e961b-203">指定されているキーが入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-203"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-204"><xref:System.Windows.Forms.TextBox.IsInputKey%2A>メソッドを返します。`true`とき`keyData`が含まれています、<xref:System.Windows.Forms.Keys.Return>値と<xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-204">The <xref:System.Windows.Forms.TextBox.IsInputKey%2A> method returns `true` when `keyData` includes the <xref:System.Windows.Forms.Keys.Return> value and the <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-205">このコントロールが複数行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-205">Gets or sets a value indicating whether this is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e961b-206">コントロールが複数行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-206"><see langword="true" /> if the control is a multiline <see cref="T:System.Windows.Forms.TextBox" /> control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e961b-207">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-207">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-208"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> 複数行では動作しません<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-208"><xref:System.Windows.Forms.TextBox.AutoCompleteSource%2A> does not work on multiline <xref:System.Windows.Forms.TextBox> controls.</span></span>  
  
 <span data-ttu-id="e961b-209">フォントが変更されたときに定義されている任意のインデントは表示されません。</span><span class="sxs-lookup"><span data-stu-id="e961b-209">When the font is changed, any indentation that you have defined does not appear.</span></span> <span data-ttu-id="e961b-210">インデントを取得するには、次のように設定します。<xref:System.Windows.Forms.TextBox.Multiline%2A>に`true`を基本クラスを呼び出すことはできるようにします。</span><span class="sxs-lookup"><span data-stu-id="e961b-210">To get indentation, set <xref:System.Windows.Forms.TextBox.Multiline%2A> to `true` and override WM_SETFONT without calling the base class so that SETMARGINS is not called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-211">次のコード例は、複数行を作成します。<xref:System.Windows.Forms.TextBox>垂直スクロール バーを持つコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-211">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e961b-212">この例では、 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>、および<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e961b-212">This example uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.AcceptsReturn Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.AcceptsReturn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="textBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-213">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-213">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e961b-214"><see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-214">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-215">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-215">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e961b-216">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-216">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e961b-217"><xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-217">The <xref:System.Windows.Forms.TextBox.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e961b-218">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e961b-218">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-219">オーバーライドするときに<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="e961b-219">When overriding <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBox.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-220">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-220">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e961b-221"><see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-221">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-222">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-222">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e961b-223">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-223">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e961b-224"><xref:System.Windows.Forms.TextBox.OnFontChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-224">The <xref:System.Windows.Forms.TextBox.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e961b-225">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e961b-225">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-226">オーバーライドするときに<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="e961b-226">When overriding <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="textBox.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-227">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e961b-228"><see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-228">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-229">ユーザーが内のテキストを選択すると、<xref:System.Windows.Forms.TextBox>コントロール、コントロールが選択範囲を保存します。</span><span class="sxs-lookup"><span data-stu-id="e961b-229">When the user selects text in a <xref:System.Windows.Forms.TextBox> control, the control saves the selection.</span></span> <span data-ttu-id="e961b-230">ときに、<xref:System.Windows.Forms.TextBox>コントロールがフォーカスを取得、選択範囲が場合と同じ、<xref:System.Windows.Forms.TextBox>がフォーカスを失った。</span><span class="sxs-lookup"><span data-stu-id="e961b-230">When a <xref:System.Windows.Forms.TextBox> control gets focus, the selection is the same as when the <xref:System.Windows.Forms.TextBox> loses focus.</span></span> <span data-ttu-id="e961b-231">ときに、<xref:System.Windows.Forms.TextBox>取得が最初に集中、テキスト全体を選択します。</span><span class="sxs-lookup"><span data-stu-id="e961b-231">When the <xref:System.Windows.Forms.TextBox> gets focus for the first time, the entire text is selected.</span></span>  
  
 <span data-ttu-id="e961b-232">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-232">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e961b-233">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-233">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e961b-234"><xref:System.Windows.Forms.TextBox.OnGotFocus%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-234">The <xref:System.Windows.Forms.TextBox.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e961b-235">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e961b-235">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-236">オーバーライドするときに<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="e961b-236">When overriding <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-237">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="e961b-237">The event data.</span></span></param>
        <summary><span data-ttu-id="e961b-238"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-238">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-239">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-239">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e961b-240"><see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-240">Raises the <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-241">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-241">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e961b-242">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-242">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e961b-243"><xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-243">The <xref:System.Windows.Forms.TextBox.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e961b-244">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e961b-244">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-245">オーバーライドするときに<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="e961b-245">When overriding <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.TextBox.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBox.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="textBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e961b-246">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-246">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e961b-247"><see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e961b-247">Raises the <see cref="E:System.Windows.Forms.TextBox.TextAlignChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-248">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e961b-249">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e961b-250"><xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e961b-250">The <xref:System.Windows.Forms.TextBox.OnTextAlignChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e961b-251">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e961b-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e961b-252">派生クラスで <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e961b-252">When overriding <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.TextBox.TextAlignChanged" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.TextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-253">単一行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールでパスワードの文字をマスクするために使用される文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-253">Gets or sets the character used to mask characters of a password in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e961b-254">単一行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールに入力された文字をマスクするために使用される文字。</span><span class="sxs-lookup"><span data-stu-id="e961b-254">The character used to mask characters entered in a single-line <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span> <span data-ttu-id="e961b-255">入力された文字をコントロールでマスクしない場合は、このプロパティの値を 0 (文字値) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-255">Set the value of this property to 0 (character value) if you do not want the control to mask characters as they are typed.</span></span> <span data-ttu-id="e961b-256">既定値も 0 (文字値) です。</span><span class="sxs-lookup"><span data-stu-id="e961b-256">Equals 0 (character value) by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-257"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>プロパティ経由での優先順位を持つ、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-257">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="e961b-258">たびに、<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>に設定されている`true`、既定のシステム パスワード文字が使用され、任意の文字を設定<xref:System.Windows.Forms.TextBox.PasswordChar%2A>は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-258">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
 <span data-ttu-id="e961b-259">ときに、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティが設定されて、キーボードを使用して、コントロールでの切り取り、コピー操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e961b-259">When the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property is set, cut and copy actions in the control using the keyboard cannot be performed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e961b-260">ときに、<xref:System.Windows.Forms.TextBox>ためにはパスワード モード<xref:System.Windows.Forms.TextBox.PasswordChar%2A>、 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>、または<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>は`true`、<xref:System.Windows.Forms.TextBox>制限モードでは、します。</span><span class="sxs-lookup"><span data-stu-id="e961b-260">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="e961b-261">このモードで、<xref:System.Windows.Forms.ImeMode>は無効な場合が現在<xref:System.Windows.Forms.ImeMode>キャッシュされるので、場合に復元できる、<xref:System.Windows.Forms.TextBox>無制限になるとします。</span><span class="sxs-lookup"><span data-stu-id="e961b-261">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="e961b-262">切り替え、<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>一般的なシナリオです。</span><span class="sxs-lookup"><span data-stu-id="e961b-262">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="e961b-263"><xref:System.Windows.Forms.ImeMode>はシャドウされたコントロールは、制限モードでは。</span><span class="sxs-lookup"><span data-stu-id="e961b-263">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="e961b-264">デザイナーの観点から、<xref:System.Windows.Forms.ImeMode>に表示される値は実際の値。</span><span class="sxs-lookup"><span data-stu-id="e961b-264">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-265">次のコード例を作成、<xref:System.Windows.Forms.TextBox>パスワードをそのまま使用するために使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-265">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="e961b-266">この例では、<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>を小文字に型指定されたすべての文字を変更するプロパティと<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>8 文字に、パスワードの長さを制限するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-266">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="e961b-267">またこの例では、<xref:System.Windows.Forms.TextBox.TextAlign%2A>プロパティでパスワードを中央に、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-267">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.Paste(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.Paste : string -&gt; unit" Usage="textBox.Paste text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e961b-268">置換対象のテキスト。</span><span class="sxs-lookup"><span data-stu-id="e961b-268">The text to replace.</span></span></param>
        <summary><span data-ttu-id="e961b-269">アンドゥ バッファーをクリアせずに、選択したテキストを指定したテキストに設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-269">Sets the selected text to the specified text without clearing the undo buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-270">設定とは異なり<xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>、<xref:System.Windows.Forms.TextBox.Paste%2A>クリップボードには影響しません。</span><span class="sxs-lookup"><span data-stu-id="e961b-270">Unlike setting <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>, <xref:System.Windows.Forms.TextBox.Paste%2A> does not affect the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="e961b-271">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-271">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="e961b-272">処理するショートカット キーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-272">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="e961b-273">コマンド キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="e961b-273">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="e961b-274">コマンド キーがコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-274"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-275">4.6.1 の新機能です。</span><span class="sxs-lookup"><span data-stu-id="e961b-275">New in 4.6.1.</span></span> <span data-ttu-id="e961b-276">以前のバージョンで ctrl キーを押し、ショートカット キーで、<xref:System.Windows.Forms.TextBox>すべてのテキストの選択に失敗したときに、<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>と<xref:System.Windows.Forms.TextBox.Multiline%2A>プロパティがどちらに設定`true.`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-276">In previous versions, the  Ctrl-A shortcut key in a <xref:System.Windows.Forms.TextBox> failed to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties were both set to `true.`.</span></span> <span data-ttu-id="e961b-277">このメソッドにより、CTRL + A ショートカット キーのすべてのテキストを選択するときに、<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>と<xref:System.Windows.Forms.TextBox.Multiline%2A>プロパティはどちらに設定 `true.`</span><span class="sxs-lookup"><span data-stu-id="e961b-277">This method enables the Ctrl-A shortcut key to select all text when the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> and <xref:System.Windows.Forms.TextBox.Multiline%2A> properties are both set to `true.`</span></span>  
  
 <span data-ttu-id="e961b-278">.NET Framework バージョン 4.0 4.6 からを対象とするアプリケーションには、次を追加することでこの方法の利点がかかる、 `<runtime>` app.config ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="e961b-278">Applications targeting .NET Framework versions 4.0 through 4.6 can take advantage of this method by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />  
```  
  
 <span data-ttu-id="e961b-279">.NET Framework バージョン 4.6.1 または新しいことを対象とするアプリケーションを無効にこの動作に次のコードを追加することで、 `<runtime>` app.config ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="e961b-279">Applications targeting .NET Framework versions 4.6.1 or newer can opt out of this behavior by adding the following to the `<runtime>` section of the app.config file:</span></span>  
  
```xml  
<AppContextSwitchOverrides value = "Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=true" />  
```  
  
> [!NOTE]
>  <span data-ttu-id="e961b-280">App.config ファイルが既に含まれている場合、`AppContextSwitchOverrides`キーの既存のキーに新しいキーの値をマージします。</span><span class="sxs-lookup"><span data-stu-id="e961b-280">If the app.config file already contains an `AppContextSwitchOverrides` key, merge the new key value into the existing key.</span></span> <span data-ttu-id="e961b-281">たとえば、`<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />` のようにします。</span><span class="sxs-lookup"><span data-stu-id="e961b-281">For example, `<AppContextSwitchOverrides value = "oldKey=oldValue;Switch.System.Windows.Forms.DoNotSupportSelectAllShortcutInMultilineTextBox=false" />`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e961b-282">アンマネージ コードと運用します。</span><span class="sxs-lookup"><span data-stu-id="e961b-282">for operating with unmanaged code.</span></span> <span data-ttu-id="e961b-283">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e961b-283">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.TextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-284">複数行 <see cref="T:System.Windows.Forms.TextBox" /> コントロールに表示されるスクロール バーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-284">Gets or sets which scroll bars should appear in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e961b-285">複数行 <see cref="T:System.Windows.Forms.ScrollBars" /> コントロールにスクロール バーを表示しないのか、水平スクロール バーと垂直スクロール バーのいずれかを表示するのか、またはこれらの両方を表示するのかを示す <see cref="T:System.Windows.Forms.TextBox" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-285">One of the <see cref="T:System.Windows.Forms.ScrollBars" /> enumeration values that indicates whether a multiline <see cref="T:System.Windows.Forms.TextBox" /> control appears with no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both.</span></span> <span data-ttu-id="e961b-286">既定値は、<see langword="ScrollBars.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-286">The default is <see langword="ScrollBars.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-287">水平スクロール バーは表示されない場合、<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティに設定されて`true`の値に関係なく、<xref:System.Windows.Forms.TextBox.ScrollBars%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-287">Horizontal scroll bars will not be shown if the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, regardless of the value of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-288">次のコード例は、複数行を作成します。<xref:System.Windows.Forms.TextBox>垂直スクロール バーを持つコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-288">The following code example creates a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="e961b-289">またこの例では、 <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>、 <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>、および<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>プロパティを複数行<xref:System.Windows.Forms.TextBox>コントロール テキスト ドキュメントを作成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e961b-289">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline <xref:System.Windows.Forms.TextBox> control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.ScrollBars Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.ScrollBars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.ScrollBars Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e961b-290">列挙体の有効値の範囲内にない値が、プロパティに代入されました。</span><span class="sxs-lookup"><span data-stu-id="e961b-290">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-291">このコントロールに関連付けられているテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-291">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="e961b-292">このコントロールに関連付けられたテキスト。</span><span class="sxs-lookup"><span data-stu-id="e961b-292">The text associated with this control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.TextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-293"><see cref="T:System.Windows.Forms.TextBox" /> コントロールでテキストをどのように配置するかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-293">Gets or sets how text is aligned in a <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e961b-294">コントロールでテキストをどのように配置するかを指定する <see cref="T:System.Windows.Forms.HorizontalAlignment" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e961b-294">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned in the control.</span></span> <span data-ttu-id="e961b-295">既定値は、<see langword="HorizontalAlignment.Left" /> です。</span><span class="sxs-lookup"><span data-stu-id="e961b-295">The default is <see langword="HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-296">内のテキストを配置するこのプロパティを使用することができます、<xref:System.Windows.Forms.TextBox>フォーム上のテキストのレイアウトを一致するようにします。</span><span class="sxs-lookup"><span data-stu-id="e961b-296">You can use this property to align the text within a <xref:System.Windows.Forms.TextBox> to match the layout of text on your form.</span></span> <span data-ttu-id="e961b-297">たとえば、コントロールはすべてにある場合、フォームの右側にある、設定できます、<xref:System.Windows.Forms.Label.TextAlign%2A>プロパティを`HorizontalAlignment.Right`、テキストは左の既定の配置ではなく、コントロールの右側に配置するとします。</span><span class="sxs-lookup"><span data-stu-id="e961b-297">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.Label.TextAlign%2A> property to `HorizontalAlignment.Right`, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-298">次のコード例を作成、<xref:System.Windows.Forms.TextBox>パスワードをそのまま使用するために使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-298">The following code example creates a <xref:System.Windows.Forms.TextBox> control that is used to accept a password.</span></span> <span data-ttu-id="e961b-299">この例では、<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>に型指定されたすべての文字を変更するプロパティを小文字、 <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> 8 文字に、パスワードの長さを制限するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-299">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to lowercase, and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="e961b-300">またこの例では、<xref:System.Windows.Forms.TextBox.TextAlign%2A>プロパティでパスワードを中央に、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e961b-300">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/CS/source.cs#1)]
 [!code-vb[Classic TextBox.CharacterCasing Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBox.CharacterCasing Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e961b-301">列挙体の有効値の範囲内にない値が、プロパティに代入されました。</span><span class="sxs-lookup"><span data-stu-id="e961b-301">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-302"><see cref="P:System.Windows.Forms.TextBox.TextAlign" /> プロパティの値が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="e961b-302">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-303">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e961b-303">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e961b-304">次のコード例では、このメンバーの使用を示します。</span><span class="sxs-lookup"><span data-stu-id="e961b-304">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e961b-305">例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.TextBox.TextAlignChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="e961b-305">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span> <span data-ttu-id="e961b-306">このレポートは、イベントが発生し、デバッグに役立ついつかを確認するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e961b-306">This report helps you find out when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e961b-307">複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="e961b-307">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e961b-308">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.TextBox>という`TextBox1`します。</span><span class="sxs-lookup"><span data-stu-id="e961b-308">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="e961b-309">イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.TextBox.TextAlignChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="e961b-309">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBox.TextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#249](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#249)]
 [!code-vb[System.Windows.Forms.EventExamples#249](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#249)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBox.OnTextAlignChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.TextBox.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.TextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e961b-310"><see cref="T:System.Windows.Forms.TextBox" /> コントロール内のテキストを既定のパスワード文字として表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e961b-310">Gets or sets a value indicating whether the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character.</span></span></summary>
        <value><span data-ttu-id="e961b-311"><see cref="T:System.Windows.Forms.TextBox" /> コントロール内のテキストを既定のパスワード文字として表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e961b-311"><see langword="true" /> if the text in the <see cref="T:System.Windows.Forms.TextBox" /> control should appear as the default password character; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e961b-312"><xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>プロパティ経由での優先順位を持つ、<xref:System.Windows.Forms.TextBox.PasswordChar%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e961b-312">The <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> property has precedence over the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span> <span data-ttu-id="e961b-313">たびに、<xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>に設定されている`true`、既定のシステム パスワード文字が使用され、任意の文字を設定<xref:System.Windows.Forms.TextBox.PasswordChar%2A>は無視されます。</span><span class="sxs-lookup"><span data-stu-id="e961b-313">Whenever the <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A> is set to `true`, the default system password character is used and any character set by <xref:System.Windows.Forms.TextBox.PasswordChar%2A> is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e961b-314">ときに、<xref:System.Windows.Forms.TextBox>ためにはパスワード モード<xref:System.Windows.Forms.TextBox.PasswordChar%2A>、 <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>、または<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>は`true`、<xref:System.Windows.Forms.TextBox>制限モードでは、します。</span><span class="sxs-lookup"><span data-stu-id="e961b-314">When the <xref:System.Windows.Forms.TextBox> is in password mode because <xref:System.Windows.Forms.TextBox.PasswordChar%2A>, <xref:System.Windows.Forms.TextBox.UseSystemPasswordChar%2A>, or <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is `true`, the <xref:System.Windows.Forms.TextBox> is in restricted mode.</span></span> <span data-ttu-id="e961b-315">このモードで、<xref:System.Windows.Forms.ImeMode>は無効な場合が現在<xref:System.Windows.Forms.ImeMode>キャッシュされるので、場合に復元できる、<xref:System.Windows.Forms.TextBox>無制限になるとします。</span><span class="sxs-lookup"><span data-stu-id="e961b-315">In this mode, the <xref:System.Windows.Forms.ImeMode> is disabled, but the current <xref:System.Windows.Forms.ImeMode> is cached so that it can be restored if the <xref:System.Windows.Forms.TextBox> ever becomes unrestricted.</span></span> <span data-ttu-id="e961b-316">切り替え、<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>一般的なシナリオです。</span><span class="sxs-lookup"><span data-stu-id="e961b-316">Toggling the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> is a common scenario.</span></span> <span data-ttu-id="e961b-317"><xref:System.Windows.Forms.ImeMode>はシャドウされたコントロールは、制限モードでは。</span><span class="sxs-lookup"><span data-stu-id="e961b-317">The <xref:System.Windows.Forms.ImeMode> is shadowed while the control is in restricted mode.</span></span> <span data-ttu-id="e961b-318">デザイナーの観点から、<xref:System.Windows.Forms.ImeMode>に表示される値は実際の値。</span><span class="sxs-lookup"><span data-stu-id="e961b-318">From the designer perspective, the <xref:System.Windows.Forms.ImeMode> value shown is the actual value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="e961b-319">Windows メッセージ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e961b-319">A Windows Message object.</span></span></param>
        <summary><span data-ttu-id="e961b-320">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="e961b-320">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>