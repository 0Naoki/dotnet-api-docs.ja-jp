<Type Name="Cursor" FullName="System.Windows.Forms.Cursor">
  <TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.CursorEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.CursorConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5889a-101">マウス ポインターの描画に使用されるイメージを表します。</span><span class="sxs-lookup"><span data-stu-id="5889a-101">Represents the image used to paint the mouse pointer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-102">カーソルは、画面上の場所は、マウス、ペン、ボールなどのポインティング デバイスによって制御される小さな画像です。</span><span class="sxs-lookup"><span data-stu-id="5889a-102">A cursor is a small picture whose location on the screen is controlled by a pointing device, such as a mouse, pen, or trackball.</span></span> <span data-ttu-id="5889a-103">ユーザーがポインティング デバイスを移動すると、オペレーティング システムがそれに応じて、カーソルを移動します。</span><span class="sxs-lookup"><span data-stu-id="5889a-103">When the user moves the pointing device, the operating system moves the cursor accordingly.</span></span>  
  
 <span data-ttu-id="5889a-104">別のカーソルの形状は、マウス操作をユーザーに通知するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-104">Different cursor shapes are used to inform the user what operation the mouse will have.</span></span> <span data-ttu-id="5889a-105">例では、編集、または、テキストを選択するときの<xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType>カーソルが通常表示されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-105">For example, when editing or selecting text, a <xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType> cursor is typically displayed.</span></span> <span data-ttu-id="5889a-106">待機カーソルは、通常、プロセスが現在実行されているユーザーを通知するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-106">A wait cursor is commonly used to inform the user that a process is currently running.</span></span> <span data-ttu-id="5889a-107">プロセス、ユーザーが待機する必要がありますの例についてをファイルに保存されたり、コントロールなど、ファイルを開いている、 <xref:System.Windows.Forms.DataGrid>、<xref:System.Windows.Forms.ListBox>または<xref:System.Windows.Forms.TreeView>大量のデータにします。</span><span class="sxs-lookup"><span data-stu-id="5889a-107">Examples of processes you might have the user wait for are opening a file, saving a file, or filling a control such as a <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.TreeView> with a large amount of data.</span></span>  
  
 <span data-ttu-id="5889a-108">派生するすべてのコントロール、<xref:System.Windows.Forms.Control>クラスが、<xref:System.Windows.Forms.Control.Cursor%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5889a-108">All controls that derive from the <xref:System.Windows.Forms.Control> class have a <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="5889a-109">マウス ポインターがコントロールの境界内にある場合に表示されるカーソルを変更するに割り当てる、<xref:System.Windows.Forms.Cursor>を<xref:System.Windows.Forms.Control.Cursor%2A>コントロールのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5889a-109">To change the cursor displayed by the mouse pointer when it is within the bounds of the control, assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control.</span></span> <span data-ttu-id="5889a-110">割り当てることによって、アプリケーション レベルでカーソルを表示することができます、<xref:System.Windows.Forms.Cursor>を<xref:System.Windows.Forms.Cursor.Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5889a-110">Alternatively, you can display cursors at the application level by assigning a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span> <span data-ttu-id="5889a-111">たとえば場合、アプリケーションの目的は、テキスト ファイルを編集するのには、可能性があります設定する、<xref:System.Windows.Forms.Cursor.Current%2A>プロパティを<xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType>中に表示される待機カーソル アプリケーション経由でファイルの読み込みし、保存を任意のマウス イベントが処理されていることを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="5889a-111">For example, if the purpose of your application is to edit a text file, you might set the <xref:System.Windows.Forms.Cursor.Current%2A> property to <xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType> to display a wait cursor over the application while the file loads or saves to prevent any mouse events from being processed.</span></span> <span data-ttu-id="5889a-112">プロセスが完了したら、設定、<xref:System.Windows.Forms.Cursor.Current%2A>プロパティを<xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType>コントロールの種類ごとに適切なカーソルを表示するアプリケーション。</span><span class="sxs-lookup"><span data-stu-id="5889a-112">When the process is complete, set the <xref:System.Windows.Forms.Cursor.Current%2A> property to <xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType> for the application to display the appropriate cursor over each control type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5889a-113">呼び出す場合<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>リセットする前に、<xref:System.Windows.Forms.Cursor.Current%2A>プロパティ、<xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType>カーソル、アプリケーションはマウス イベントのリッスンを再開し、適切な表示を再開<xref:System.Windows.Forms.Cursor>アプリケーションの各コントロールに対してです。</span><span class="sxs-lookup"><span data-stu-id="5889a-113">If you call <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> before resetting the <xref:System.Windows.Forms.Cursor.Current%2A> property back to the <xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType> cursor, the application will resume listening for mouse events and will resume displaying the appropriate <xref:System.Windows.Forms.Cursor> for each control in the application.</span></span>  
  
 <span data-ttu-id="5889a-114">既存のハンドルなど、いくつかのソースからカーソル オブジェクトを作成できます<xref:System.Windows.Forms.Cursor>、標準的な<xref:System.Windows.Forms.Cursor>ファイル、リソース、またはデータ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="5889a-114">Cursor objects can be created from several sources, such as the handle of an existing <xref:System.Windows.Forms.Cursor>, a standard <xref:System.Windows.Forms.Cursor> file, a resource, or a data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5889a-115"><xref:System.Windows.Forms.Cursor>クラスがアニメーション化されたカーソル (.ani ファイル) または黒と白以外の色でカーソルをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="5889a-115">The <xref:System.Windows.Forms.Cursor> class does not support animated cursors (.ani files) or cursors with colors other than black and white.</span></span>  
  
 <span data-ttu-id="5889a-116">使用することができます、カーソルとして使用するイメージが小さすぎる場合、<xref:System.Windows.Forms.Cursor.DrawStretched%2A>カーソルの境界を占めるように画像を強制する方法です。</span><span class="sxs-lookup"><span data-stu-id="5889a-116">If the image you are using as a cursor is too small, you can use the <xref:System.Windows.Forms.Cursor.DrawStretched%2A> method to force the image to fill the bounds of the cursor.</span></span> <span data-ttu-id="5889a-117">一時的に非表示にする、カーソルを呼び出して、<xref:System.Windows.Forms.Cursor.Hide%2A>メソッドを呼び出すことによって、復元、<xref:System.Windows.Forms.Cursor.Show%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5889a-117">You can temporarily hide the cursor by calling the <xref:System.Windows.Forms.Cursor.Hide%2A> method, and restore it by calling the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
 <span data-ttu-id="5889a-118">.NET Framework 4.5.2、以降の<xref:System.Windows.Forms.Cursor>app.config ファイルには、次のエントリが含まれている場合は、システム DPI 設定に基づいてのサイズ変更されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-118">Starting with the .NET Framework 4.5.2, the <xref:System.Windows.Forms.Cursor> will be resized based on the system DPI setting when the app.config file contains the following entry:</span></span>  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5889a-119">次のコード例では、カスタムのカーソルを使用する方法を示すフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="5889a-119">The following code example displays a form that demonstrates using a custom cursor.</span></span> <span data-ttu-id="5889a-120">カスタム<xref:System.Windows.Forms.Cursor>アプリケーションのリソース ファイルに埋め込まれています。</span><span class="sxs-lookup"><span data-stu-id="5889a-120">The custom <xref:System.Windows.Forms.Cursor> is embedded in the application's resource file.</span></span> <span data-ttu-id="5889a-121">例では、という名前のカーソル ファイルに含まれているカーソルを必要と`MyCursor.cur`です。</span><span class="sxs-lookup"><span data-stu-id="5889a-121">The example requires a cursor contained in a cursor file named `MyCursor.cur`.</span></span> <span data-ttu-id="5889a-122">コマンドラインを使用して、この例をコンパイルするには、次のフラグを含めます。 `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span><span class="sxs-lookup"><span data-stu-id="5889a-122">To compile this example using the command line, include the following flag: `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span></span>  
  
 [!code-csharp[System.Windows.Forms.Cursor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor/CS/customcursor.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor/VB/customcursor.vb#1)]  
  
 <span data-ttu-id="5889a-123">次のコード例にある顧客情報が表示されます、<xref:System.Windows.Forms.TreeView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5889a-123">The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control.</span></span> <span data-ttu-id="5889a-124">ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。</span><span class="sxs-lookup"><span data-stu-id="5889a-124">The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</span></span> <span data-ttu-id="5889a-125">この例では、1,000 人の顧客が 15 の注文に表示されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-125">In this example, 1,000 customers are displayed with 15 orders each.</span></span> <span data-ttu-id="5889a-126">再描画する、<xref:System.Windows.Forms.TreeView>を使用して抑制、<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>と<xref:System.Windows.Forms.TreeView.EndUpdate%2A>メソッド、および待機<xref:System.Windows.Forms.Cursor>が表示されます中に、<xref:System.Windows.Forms.TreeView>を作成し、描画、<xref:System.Windows.Forms.TreeNode>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-126">The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects.</span></span> <span data-ttu-id="5889a-127">この例では、という名前のカーソル ファイルがある必要があります`MyWait.cur`アプリケーション ディレクトリにします。</span><span class="sxs-lookup"><span data-stu-id="5889a-127">This example requires that you have a cursor file named `MyWait.cur` in the application directory.</span></span> <span data-ttu-id="5889a-128">必要です、`Customer`オブジェクトのコレクションが保持できる`Order`オブジェクト、およびのインスタンスが作成されたこと、<xref:System.Windows.Forms.TreeView>の control 権限、<xref:System.Windows.Forms.Form>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-128">It also requires a `Customer` object that can hold a collection of `Order` objects, and that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Cursors" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5889a-129"><see cref="T:System.Windows.Forms.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-129">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="5889a-130">作成するカーソルの Windows ハンドルを表す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-130">An <see cref="T:System.IntPtr" /> that represents the Windows handle of the cursor to create.</span></span></param>
        <summary><span data-ttu-id="5889a-131">指定した Windows ハンドルで <see cref="T:System.Windows.Forms.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-131">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified Windows handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-132">完了したことと、カーソル ハンドルを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-132">You must free the cursor handle when you are done with it.</span></span> <span data-ttu-id="5889a-133">リソースの破棄に関する詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span><span class="sxs-lookup"><span data-stu-id="5889a-133">For more information about disposing of resources, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-134">次のコード例からカーソルを作成、<xref:System.Windows.Forms.Cursor.Current%2A>カーソルの<xref:System.Windows.Forms.Cursor.Handle%2A>、その位置とクリッピング四角形を変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-134">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="5889a-135">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-135">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="5889a-136">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</span><span class="sxs-lookup"><span data-stu-id="5889a-136">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="5889a-137">この例では、ある必要があります、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Button>がクリックされたときに、このコードを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="5889a-137">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5889a-138"><paramref name="handle" /> は <see cref="F:System.IntPtr.Zero" />です。</span><span class="sxs-lookup"><span data-stu-id="5889a-138"><paramref name="handle" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="5889a-139"><see cref="T:System.Windows.Forms.Cursor" /> の読み込み元のデータ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="5889a-139">The data stream to load the <see cref="T:System.Windows.Forms.Cursor" /> from.</span></span></param>
        <summary><span data-ttu-id="5889a-140">指定したデータ ストリームで <see cref="T:System.Windows.Forms.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified data stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-141">指定されたデータ ストリーム`stream`カーソル (.cur) ファイルを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-141">The data stream specified by `stream` must contain a cursor (.cur) file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5889a-142">は、アニメーション カーソル (.ani ファイル) はサポートされていない、<xref:System.Windows.Forms.Cursor>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5889a-142">Animated cursors (.ani files) are not supported by the <xref:System.Windows.Forms.Cursor> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-143">次のコード例からカーソルを読み込む、<xref:System.IO.Stream>によって作成された、<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>のメソッド、<xref:System.Windows.Forms.OpenFileDialog>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-143">The following code example loads a cursor from a <xref:System.IO.Stream> created by the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method of an <xref:System.Windows.Forms.OpenFileDialog>.</span></span> <span data-ttu-id="5889a-144">メソッドが呼び出されたときに、<xref:System.Windows.Forms.OpenFileDialog>をユーザーに表示されるとタイミング、します。</span><span class="sxs-lookup"><span data-stu-id="5889a-144">When the method is called, an <xref:System.Windows.Forms.OpenFileDialog> is displayed to the user and when a.</span></span> <span data-ttu-id="5889a-145">設定の異なるファイルを選択し、ダイアログを閉じる、ファイルが開かれていると、<xref:System.IO.Stream>返される作成に使用される、<xref:System.Windows.Forms.Cursor>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-145">CUR file is selected and the dialog closed, the file is opened and the <xref:System.IO.Stream> returned is used to create a <xref:System.Windows.Forms.Cursor>.</span></span>  
  
 [!code-cpp[CursorFromResource#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#1)]
 [!code-csharp[CursorFromResource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#1)]
 [!code-vb[CursorFromResource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="5889a-146">読み込むカーソル ファイル。</span><span class="sxs-lookup"><span data-stu-id="5889a-146">The cursor file to load.</span></span></param>
        <summary><span data-ttu-id="5889a-147">指定したファイルで <see cref="T:System.Windows.Forms.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-147">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-148">`fileName`パラメーターは、標準的なカーソル (.cur) ファイルを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-148">The `fileName` parameter must reference a standard cursor (.cur) file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5889a-149">は、アニメーション カーソル (.ani ファイル) はサポートされていない、<xref:System.Windows.Forms.Cursor>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5889a-149">Animated cursors (.ani files) are not supported by the <xref:System.Windows.Forms.Cursor> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-150">次のコード例にある顧客情報が表示されます、<xref:System.Windows.Forms.TreeView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5889a-150">The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control.</span></span> <span data-ttu-id="5889a-151">ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。</span><span class="sxs-lookup"><span data-stu-id="5889a-151">The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</span></span> <span data-ttu-id="5889a-152">この例では、1,000 人の顧客が 15 の注文に表示されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-152">In this example, 1,000 customers are displayed with 15 orders each.</span></span> <span data-ttu-id="5889a-153">再描画する、<xref:System.Windows.Forms.TreeView>を使用して抑制、<xref:System.Windows.Forms.TreeView.BeginUpdate%2A>と<xref:System.Windows.Forms.TreeView.EndUpdate%2A>メソッド、および待機<xref:System.Windows.Forms.Cursor>が表示されます中に、<xref:System.Windows.Forms.TreeView>を作成し、描画、<xref:System.Windows.Forms.TreeNode>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-153">The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects.</span></span> <span data-ttu-id="5889a-154">この例では、ある必要があります、`Customer`オブジェクトのコレクションが保持できる`Order`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-154">This example requires that you have a `Customer` object that can hold a collection of `Order` objects.</span></span> <span data-ttu-id="5889a-155">インスタンスを作成することも必要です、<xref:System.Windows.Forms.TreeView>の control 権限、<xref:System.Windows.Forms.Form>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-155">It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor(Type ^ type, System::String ^ resource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5889a-156">リソース <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-156">The resource <see cref="T:System.Type" />.</span></span></param>
        <param name="resource"><span data-ttu-id="5889a-157">リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="5889a-157">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="5889a-158">指定したリソースの種類を使用し、指定したリソースから <see cref="T:System.Windows.Forms.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-158">Initializes a new instance of the <see cref="T:System.Windows.Forms.Cursor" /> class from the specified resource with the specified resource type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-159">カーソルをアプリケーション内でリソースとして埋め込む方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="5889a-159">The following is an example of how to embed a cursor as a resource within your application.</span></span> <span data-ttu-id="5889a-160">埋め込むには、リソースをリソース名の後に、コンマ、そのアセンブリの完全パスを参照します。</span><span class="sxs-lookup"><span data-stu-id="5889a-160">To embed the resource, reference the resource name followed by a comma, then its full assembly path.</span></span> <span data-ttu-id="5889a-161">埋め込みリソースからカーソルを読み込む方法について説明する例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5889a-161">See the Example section to learn how to load the cursor from the embedded resource.</span></span>  
  
```  
Using the C# compiler:  
csc /resource:"MyWaitCursor.cur","MyCursors.MyWaitCursor.cur" MyCursor.cs  
Using the Visual Basic compiler:  
vbc /resource:"MyWaitCursor.cur","MyCursors.MyWaitCursor.cur" MyCursor.vb  
```  
  
> [!NOTE]
>  <span data-ttu-id="5889a-162">リソース参照コンパイルするときにだけでなく、コードで参照するときは、c# および Visual Basic 両方のコンパイラの大文字小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="5889a-162">The resource reference when compiling as well as when referencing it in code, is case sensitive for both the C# and Visual Basic compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-163">次のコード例を使用して、カスタムのカーソルの使用方法を示すフォームが表示されます、<xref:System.Windows.Forms.Cursor.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="5889a-163">The following code example displays a form that demonstrates using a custom cursor by using the <xref:System.Windows.Forms.Cursor.%23ctor%2A> constructor.</span></span> <span data-ttu-id="5889a-164">カスタム<xref:System.Windows.Forms.Cursor>アプリケーションのリソース ファイルに埋め込まれています。</span><span class="sxs-lookup"><span data-stu-id="5889a-164">The custom <xref:System.Windows.Forms.Cursor> is embedded in the application's resource file.</span></span> <span data-ttu-id="5889a-165">例では、カーソルをという名前のカーソル ファイルに含まれている必要があります。`MyCursor.cur`です。</span><span class="sxs-lookup"><span data-stu-id="5889a-165">The example requires that you have a cursor contained in a cursor file named `MyCursor.cur`.</span></span> <span data-ttu-id="5889a-166">コマンドラインを使用して、この例をコンパイルするには、次のフラグを含めます。 `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span><span class="sxs-lookup"><span data-stu-id="5889a-166">To compile this example using the command line, include the following flag: `/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</span></span>  
  
 [!code-csharp[System.Windows.Forms.Cursor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor/CS/customcursor.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor/VB/customcursor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Rectangle Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Clip As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Rectangle Clip { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-167">カーソルのクリッピング四角形を表す境界を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5889a-167">Gets or sets the bounds that represent the clipping rectangle for the cursor.</span></span></summary>
        <value><span data-ttu-id="5889a-168"><see cref="T:System.Windows.Forms.Cursor" /> のクリッピング四角形を画面座標で表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-168">The <see cref="T:System.Drawing.Rectangle" /> that represents the clipping rectangle for the <see cref="T:System.Windows.Forms.Cursor" />, in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-169">クリップされたカーソルは、クリッピング四角形内でのみの移動を許可します。</span><span class="sxs-lookup"><span data-stu-id="5889a-169">A clipped cursor is allowed to move only within its clipping rectangle.</span></span> <span data-ttu-id="5889a-170">一般に、システムにより、このマウスがキャプチャされている場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="5889a-170">Generally, the system allows this only if the mouse is currently captured.</span></span> <span data-ttu-id="5889a-171">カーソルが現在クリップされていない場合、結果として得られる四角形には、画面全体のサイズが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5889a-171">If the cursor is not currently clipped, the resulting rectangle contains the dimensions of the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-172">次のコード例からカーソルを作成、<xref:System.Windows.Forms.Cursor.Current%2A>カーソルの<xref:System.Windows.Forms.Cursor.Handle%2A>、その位置とクリッピング四角形を変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-172">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="5889a-173">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-173">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="5889a-174">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</span><span class="sxs-lookup"><span data-stu-id="5889a-174">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="5889a-175">この例では、ある必要があります、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Button>がクリックされたときに、このコードを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="5889a-175">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="5889a-176">このプロパティを設定するすべてのウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="5889a-176">for all windows to set this property.</span></span> <span data-ttu-id="5889a-177">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="5889a-177">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CopyHandle">
      <MemberSignature Language="C#" Value="public IntPtr CopyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int CopyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.CopyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr CopyHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-178">この <see cref="T:System.Windows.Forms.Cursor" /> のハンドルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="5889a-178">Copies the handle of this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="5889a-179">カーソルのハンドルを表す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-179">An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-180">このメソッドの呼び出しの結果として作成されたハンドルが完了したら、それは破棄されませんのガベージ コレクターによってためときに破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-180">The handle created as a result of calling this method must be disposed of when you are done with it because it will not be disposed of by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IntPtr" />
        <altmember cref="M:System.Windows.Forms.Cursor.Dispose" />
        <altmember cref="T:System.GC" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Cursor Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Cursor Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Cursor ^ Current { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-181">マウス カーソルを表すカーソル オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5889a-181">Gets or sets a cursor object that represents the mouse cursor.</span></span></summary>
        <value><span data-ttu-id="5889a-182">マウス カーソルを表す <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-182">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse cursor.</span></span> <span data-ttu-id="5889a-183">マウス カーソルが表示されない場合、既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5889a-183">The default is <see langword="null" /> if the mouse cursor is not visible.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-184">設定、<xref:System.Windows.Forms.Cursor.Current%2A>プロパティが現在表示されているカーソルを変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-184">Setting the <xref:System.Windows.Forms.Cursor.Current%2A> property changes the cursor currently displayed.</span></span> <span data-ttu-id="5889a-185">アプリケーションは、マウス イベントをリッスンするように続行できません。</span><span class="sxs-lookup"><span data-stu-id="5889a-185">The application may or may not continue to listen for mouse events.</span></span> <span data-ttu-id="5889a-186">アプリケーションが実行時間の長い操作中のマウス イベントに応答する必要があることを通知するには、使用、<xref:System.Windows.Forms.Application.UseWaitCursor%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5889a-186">To signal that the application should not respond to mouse events during a long-running operation, use the <xref:System.Windows.Forms.Application.UseWaitCursor%2A> property.</span></span> <span data-ttu-id="5889a-187">ただし、ほとんどの場合は、バック グラウンド スレッドを使用して、実行時間の長い操作を管理し、ユーザーがアクセスできるユーザー インターフェイスのままにする方が適切です。</span><span class="sxs-lookup"><span data-stu-id="5889a-187">In most cases, however, it's better to use a background thread to manage a long-running operation, and leave your user interface accessible to the user.</span></span> <span data-ttu-id="5889a-188">バック グラウンド タスクを簡単に実装の詳細については、次を参照してください。<xref:System.ComponentModel.BackgroundWorker>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-188">For more information on easily implementing a background task, see <xref:System.ComponentModel.BackgroundWorker>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="5889a-189">このプロパティを設定する安全なサブウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="5889a-189">for safe subwindows to set this property.</span></span> <span data-ttu-id="5889a-190">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="5889a-190">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-191">
          <see cref="T:System.Windows.Forms.Cursor" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="5889a-191">Releases all resources used by the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-192"><xref:System.Windows.Forms.Cursor.Dispose%2A> を使い終わったら <xref:System.Windows.Forms.Cursor> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5889a-192">Call <xref:System.Windows.Forms.Cursor.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="5889a-193">`Dispose` メソッドによって、<xref:System.Windows.Forms.Cursor> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-193">The `Dispose` method leaves the <xref:System.Windows.Forms.Cursor> in an unusable state.</span></span> <span data-ttu-id="5889a-194">呼び出した後<xref:System.Windows.Forms.Cursor.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Windows.Forms.Cursor>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Windows.Forms.Cursor>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="5889a-194">After calling <xref:System.Windows.Forms.Cursor.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.Cursor> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.Cursor> was occupying.</span></span> <span data-ttu-id="5889a-195">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="5889a-195">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5889a-196"><xref:System.Windows.Forms.Cursor.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Windows.Forms.Cursor> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="5889a-196">Always call <xref:System.Windows.Forms.Cursor.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="5889a-197">それ以外の場合、ガベージ コレクターによって解放されるまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="5889a-197">Otherwise, the resources it is using will not be freed until the garbage collector frees it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-198">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-198">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-199">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>を渡すメソッドが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="5889a-199">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Drawing.Graphics g, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (g As Graphics, targetRect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Drawing::Graphics ^ g, System::Drawing::Rectangle targetRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="5889a-200"><see cref="T:System.Windows.Forms.Cursor" /> が描画される <see cref="T:System.Drawing.Graphics" /> 表面。</span><span class="sxs-lookup"><span data-stu-id="5889a-200">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <param name="targetRect"><span data-ttu-id="5889a-201"><see cref="T:System.Windows.Forms.Cursor" /> の境界を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-201">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <summary><span data-ttu-id="5889a-202">カーソルを、指定した範囲内の、指定した表面に描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-202">Draws the cursor on the specified surface, within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-203">によって表されるグラフィックスの表面上で発生した描画コマンド、`g`パラメーターが、<xref:System.Drawing.Graphics>への呼び出しを渡すために、既存のイメージをレンダリングする方法に関する情報を含まない、<xref:System.Windows.Forms.Cursor>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-203">The drawing command originates on the graphics surface represented by the `g` parameter, but a <xref:System.Drawing.Graphics> does not contain information about how to render a given image, so it passes the call to the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="5889a-204"><xref:System.Windows.Forms.Cursor.Draw%2A>メソッドを指定した寸法にイメージをトリミングしを指定することができます、<xref:System.Drawing.Rectangle>を描画するために、<xref:System.Windows.Forms.Cursor>です。</span><span class="sxs-lookup"><span data-stu-id="5889a-204">The <xref:System.Windows.Forms.Cursor.Draw%2A> method crops the image to the given dimensions and allows you to specify a <xref:System.Drawing.Rectangle> within which to draw the <xref:System.Windows.Forms.Cursor>.</span></span> <span data-ttu-id="5889a-205">このメソッドは通常、グラフィックスの表面にカーソルを描画する場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-205">This method is typically used if you want to draw the cursor on a Graphics surface.</span></span> <span data-ttu-id="5889a-206">たとえば、ユーザーからのカーソルの選択のダイアログがあります、<xref:System.Windows.Forms.ListBox>コントロール、またはグループの<xref:System.Windows.Forms.RadioButton>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5889a-206">For example, you might have a dialog that allows the user to select cursors from a <xref:System.Windows.Forms.ListBox> control, or a group of <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-207">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-207">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-208">この例では、ある必要があります、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>が呼び出されると、メソッドに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-208">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="DrawStretched">
      <MemberSignature Language="C#" Value="public void DrawStretched (System.Drawing.Graphics g, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawStretched(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawStretched (g As Graphics, targetRect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawStretched(System::Drawing::Graphics ^ g, System::Drawing::Rectangle targetRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="5889a-209"><see cref="T:System.Windows.Forms.Cursor" /> が描画される <see cref="T:System.Drawing.Graphics" /> 表面。</span><span class="sxs-lookup"><span data-stu-id="5889a-209">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <param name="targetRect"><span data-ttu-id="5889a-210"><see cref="T:System.Windows.Forms.Cursor" /> の境界を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-210">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></param>
        <summary><span data-ttu-id="5889a-211">カーソルを拡大した書式で、指定した範囲内の、指定した表面に描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-211">Draws the cursor in a stretched format on the specified surface, within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-212">によって表されるグラフィックスの表面上で発生した描画コマンド、`g`パラメーターが、<xref:System.Drawing.Graphics>オブジェクトにへの呼び出しを渡すために、既存のイメージをレンダリングする方法に関する情報が含まれていません、<xref:System.Windows.Forms.Cursor>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-212">The drawing command originates on the graphics surface represented by the `g` parameter, but a <xref:System.Drawing.Graphics> object does not contain information about how to render a given image, so it passes the call to the <xref:System.Windows.Forms.Cursor> object.</span></span> <span data-ttu-id="5889a-213"><xref:System.Windows.Forms.Cursor.DrawStretched%2A>メソッドに指定されたイメージの伸縮<xref:System.Drawing.Rectangle>カーソルを描画するときにします。</span><span class="sxs-lookup"><span data-stu-id="5889a-213">The <xref:System.Windows.Forms.Cursor.DrawStretched%2A> method stretches the image to fill the specified <xref:System.Drawing.Rectangle> when the cursor is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-214">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-214">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-215">この例では、ある必要があります、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>が呼び出されると、メソッドに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-215">This example requires that you have a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5889a-216">比較対象の <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-216">The <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="5889a-217">このカーソルが、指定した <see cref="T:System.Windows.Forms.Cursor" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5889a-217">Returns a value indicating whether this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns>
          <span data-ttu-id="5889a-218">カーソルが、指定した <see cref="T:System.Windows.Forms.Cursor" /> に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-218"><see langword="true" /> if this cursor is equal to the specified <see cref="T:System.Windows.Forms.Cursor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5889a-219">次のコード例からカーソルを作成、<xref:System.Windows.Forms.Cursor.Current%2A>カーソルの<xref:System.Windows.Forms.Cursor.Handle%2A>、その位置とクリッピング四角形を変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-219">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="5889a-220">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-220">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="5889a-221">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</span><span class="sxs-lookup"><span data-stu-id="5889a-221">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="5889a-222">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Button>がクリックされたときに、このコードを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="5889a-222">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Cursor ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-223">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="5889a-223">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-224">現在の <see cref="T:System.Windows.Forms.Cursor" /> のハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="5889a-224">Retrieves the hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="5889a-225">現在の <see cref="T:System.Windows.Forms.Cursor" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="5889a-225">A hash code for the current <see cref="T:System.Windows.Forms.Cursor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-226">カーソルのハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="5889a-226">Gets the handle of the cursor.</span></span></summary>
        <value><span data-ttu-id="5889a-227">カーソルのハンドルを表す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-227">An <see cref="T:System.IntPtr" /> that represents the cursor's handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-228">これは、ハンドルのコピーではありません。その破棄しません。</span><span class="sxs-lookup"><span data-stu-id="5889a-228">This is not a copy of the handle; do not dispose of it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-229">次のコード例からカーソルを作成、<xref:System.Windows.Forms.Cursor.Current%2A>カーソルの<xref:System.Windows.Forms.Cursor.Handle%2A>、その位置とクリッピング四角形を変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-229">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="5889a-230">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-230">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="5889a-231">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</span><span class="sxs-lookup"><span data-stu-id="5889a-231">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="5889a-232">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Button>がクリックされたときに、このコードを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="5889a-232">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5889a-233">ハンドル値は <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="5889a-233">The handle value is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Cursor.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public static void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Hide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-234">カーソルを非表示にします。</span><span class="sxs-lookup"><span data-stu-id="5889a-234">Hides the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-235"><xref:System.Windows.Forms.Cursor.Show%2A>と<xref:System.Windows.Forms.Cursor.Hide%2A>メソッドの呼び出しを分散する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-235">The <xref:System.Windows.Forms.Cursor.Show%2A> and <xref:System.Windows.Forms.Cursor.Hide%2A> method calls must be balanced.</span></span> <span data-ttu-id="5889a-236">呼び出すたびに、<xref:System.Windows.Forms.Cursor.Hide%2A>メソッドに対応する呼び出しが存在する必要があります、<xref:System.Windows.Forms.Cursor.Show%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5889a-236">For every call to the <xref:System.Windows.Forms.Cursor.Hide%2A> method there must be a corresponding call to the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-237">次のコード例では、マウス ポインターがボタンのクライアント領域に入ったときにカーソルを非表示にします。</span><span class="sxs-lookup"><span data-stu-id="5889a-237">The following code example hides the cursor when the mouse pointer enters the button's client area.</span></span> <span data-ttu-id="5889a-238">同様に、マウス ポインターがボタンのクライアント領域を離れると、カーソルが再度表示されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-238">Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</span></span> <span data-ttu-id="5889a-239">この例は、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.Button>という`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="5889a-239">This example requires a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `myButton`.</span></span>  
  
 [!code-cpp[CursorFromResource#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#3)]
 [!code-csharp[CursorFromResource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#3)]
 [!code-vb[CursorFromResource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="5889a-240">すべてのウィンドウには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5889a-240">for all windows call this method.</span></span> <span data-ttu-id="5889a-241">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="5889a-241">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Cursor.Show" />
      </Docs>
    </Member>
    <Member MemberName="HotSpot">
      <MemberSignature Language="C#" Value="public System.Drawing.Point HotSpot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point HotSpot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.HotSpot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HotSpot As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point HotSpot { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-242">カーソルのホット スポットを取得します。</span><span class="sxs-lookup"><span data-stu-id="5889a-242">Gets the cursor hot spot.</span></span></summary>
        <value><span data-ttu-id="5889a-243">カーソルのホット スポットを表す <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-243">A <see cref="T:System.Drawing.Point" /> representing the cursor hot spot.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-244"><xref:System.Windows.Forms.Cursor.HotSpot%2A>は、<xref:System.Drawing.Point>画面の他の要素と連携する、カーソル内です。</span><span class="sxs-lookup"><span data-stu-id="5889a-244">The <xref:System.Windows.Forms.Cursor.HotSpot%2A> is the <xref:System.Drawing.Point> in the cursor that interacts with other elements on the screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.Cursor left, System.Windows.Forms.Cursor right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.Cursor left, class System.Windows.Forms.Cursor right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Cursor, right As Cursor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::Cursor ^ left, System::Windows::Forms::Cursor ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.Cursor" />
        <Parameter Name="right" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="5889a-245">比較する <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-245">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="5889a-246">比較する <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-246">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="5889a-247"><see cref="T:System.Windows.Forms.Cursor" /> クラスの 2 つのインスタンスが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5889a-247">Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="5889a-248"><see cref="T:System.Windows.Forms.Cursor" /> クラスの 2 つのインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-248"><see langword="true" /> if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="5889a-249">この演算子を同等の方法は、します。 <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5889a-249">The equivalent method for this operator is <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5889a-250">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-250">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-251">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>が呼び出されると、メソッドに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-251">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.Cursor left, System.Windows.Forms.Cursor right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.Cursor left, class System.Windows.Forms.Cursor right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Cursor, right As Cursor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::Cursor ^ left, System::Windows::Forms::Cursor ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.Cursor" />
        <Parameter Name="right" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="5889a-252">比較する <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-252">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="5889a-253">比較する <see cref="T:System.Windows.Forms.Cursor" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-253">A <see cref="T:System.Windows.Forms.Cursor" /> to compare.</span></span></param>
        <summary><span data-ttu-id="5889a-254"><see cref="T:System.Windows.Forms.Cursor" /> クラスの 2 つのインスタンスが等しくないかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5889a-254">Returns a value indicating whether two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="5889a-255"><see cref="T:System.Windows.Forms.Cursor" /> クラスの 2 つのインスタンスが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-255"><see langword="true" /> if two instances of the <see cref="T:System.Windows.Forms.Cursor" /> class are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="5889a-256">この演算子を同等の方法は、します。 <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5889a-256">The equivalent method for this operator is <xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5889a-257">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-257">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-258">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>を渡すメソッドが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="5889a-258">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point Position { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-259">カーソルの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5889a-259">Gets or sets the cursor's position.</span></span></summary>
        <value><span data-ttu-id="5889a-260">カーソルの位置を画面座標で表す <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-260">A <see cref="T:System.Drawing.Point" /> that represents the cursor's position in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-261"><xref:System.Windows.Forms.Cursor.Position%2A>プロパティと同じ、<xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5889a-261">The <xref:System.Windows.Forms.Cursor.Position%2A> property is identical to the <xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-262">次のコード例からカーソルを作成、<xref:System.Windows.Forms.Cursor.Current%2A>カーソルの<xref:System.Windows.Forms.Cursor.Handle%2A>、その位置とクリッピング四角形を変更します。</span><span class="sxs-lookup"><span data-stu-id="5889a-262">The following code example creates a cursor from the <xref:System.Windows.Forms.Cursor.Current%2A> cursor's <xref:System.Windows.Forms.Cursor.Handle%2A>, changes its position and clipping rectangle.</span></span> <span data-ttu-id="5889a-263">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</span><span class="sxs-lookup"><span data-stu-id="5889a-263">The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</span></span> <span data-ttu-id="5889a-264">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</span><span class="sxs-lookup"><span data-stu-id="5889a-264">Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</span></span> <span data-ttu-id="5889a-265">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Button>がクリックされたときに、このコードを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="5889a-265">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Button> to call this code when it is clicked.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursor Members#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#1)]
 [!code-vb[System.Windows.Forms.Cursor Members#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.Show" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-266">カーソルを表示します。</span><span class="sxs-lookup"><span data-stu-id="5889a-266">Displays the cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5889a-267"><xref:System.Windows.Forms.Cursor.Show%2A>と<xref:System.Windows.Forms.Cursor.Hide%2A>メソッドの呼び出しを分散する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5889a-267">The <xref:System.Windows.Forms.Cursor.Show%2A> and <xref:System.Windows.Forms.Cursor.Hide%2A> method calls must be balanced.</span></span> <span data-ttu-id="5889a-268">呼び出すたびに、<xref:System.Windows.Forms.Cursor.Hide%2A>メソッドに対応する呼び出しが存在する必要があります、<xref:System.Windows.Forms.Cursor.Show%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5889a-268">For every call to the <xref:System.Windows.Forms.Cursor.Hide%2A> method there must be a corresponding call to the <xref:System.Windows.Forms.Cursor.Show%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5889a-269">次のコード例では、マウス ポインターがボタンのクライアント領域に入ったときにカーソルを非表示にします。</span><span class="sxs-lookup"><span data-stu-id="5889a-269">The following code example hides the cursor when the mouse pointer enters the button's client area.</span></span> <span data-ttu-id="5889a-270">同様に、マウス ポインターがボタンのクライアント領域を離れると、カーソルが再度表示されます。</span><span class="sxs-lookup"><span data-stu-id="5889a-270">Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</span></span> <span data-ttu-id="5889a-271">この例は、<xref:System.Windows.Forms.Form>で、<xref:System.Windows.Forms.Button>という`myButton`です。</span><span class="sxs-lookup"><span data-stu-id="5889a-271">This example requires a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `myButton`.</span></span>  
  
 [!code-cpp[CursorFromResource#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CursorFromResource/CPP/mycursor.cpp#3)]
 [!code-csharp[CursorFromResource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CursorFromResource/CS/mycursor.cs#3)]
 [!code-vb[CursorFromResource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CursorFromResource/VB/mycursor.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Cursor.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-272">カーソル オブジェクトのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="5889a-272">Gets the size of the cursor object.</span></span></summary>
        <value><span data-ttu-id="5889a-273"><see cref="T:System.Windows.Forms.Cursor" /> の幅と高さを表す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-273">A <see cref="T:System.Drawing.Size" /> that represents the width and height of the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5889a-274">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</span><span class="sxs-lookup"><span data-stu-id="5889a-274">The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</span></span> <span data-ttu-id="5889a-275">この例は、<xref:System.Windows.Forms.Form>と<xref:System.Windows.Forms.Cursor>が呼び出されると、メソッドに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5889a-275">This example requires a <xref:System.Windows.Forms.Form> and a <xref:System.Windows.Forms.Cursor> object to pass into the method when it is called.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CPP/cursorstuff.cpp#2)]
 [!code-csharp[System.Windows.Forms.Cursor Members#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/CS/cursorstuff.cs#2)]
 [!code-vb[System.Windows.Forms.Cursor Members#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursor Members/VB/cursorstuff.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si"><span data-ttu-id="5889a-276"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラス。</span><span class="sxs-lookup"><span data-stu-id="5889a-276">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class.</span></span></param>
        <param name="context"><span data-ttu-id="5889a-277"><see cref="T:System.Runtime.Serialization.StreamingContext" /> クラス。</span><span class="sxs-lookup"><span data-stu-id="5889a-277">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> class.</span></span></param>
        <summary><span data-ttu-id="5889a-278">オブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5889a-278">Serializes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Cursor.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5889a-279"><see cref="T:System.Windows.Forms.Cursor" /> に関するデータを格納するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5889a-279">Gets or sets the object that contains data about the <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <value><span data-ttu-id="5889a-280"><see cref="T:System.Windows.Forms.Cursor" /> に関するデータを格納している <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-280">An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Windows.Forms.Cursor" />.</span></span> <span data-ttu-id="5889a-281">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="5889a-281">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Cursor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5889a-282">この <see cref="T:System.Windows.Forms.Cursor" /> を表すユーザーが判読できる文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="5889a-282">Retrieves a human readable string representing this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="5889a-283">この <see cref="T:System.Windows.Forms.Cursor" /> を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="5889a-283">A <see cref="T:System.String" /> that represents this <see cref="T:System.Windows.Forms.Cursor" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>