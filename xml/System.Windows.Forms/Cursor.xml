<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cursor.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e8cf468bc493a426f0c909ac5571fe37cd37eb18.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8cf468bc493a426f0c909ac5571fe37cd37eb18</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Cursor">
          <source>Represents the image used to paint the mouse pointer.</source>
          <target state="translated">マウス ポインターの描画に使用されるイメージを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>A cursor is a small picture whose location on the screen is controlled by a pointing device, such as a mouse, pen, or trackball.</source>
          <target state="translated">カーソルは、画面上の場所は、マウス、ペン、ボールなどのポインティング デバイスによって制御される小さな画像です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>When the user moves the pointing device, the operating system moves the cursor accordingly.</source>
          <target state="translated">ユーザーがポインティング デバイスを移動すると、オペレーティング システムがそれに応じて、カーソルを移動します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Different cursor shapes are used to inform the user what operation the mouse will have.</source>
          <target state="translated">別のカーソルの形状は、マウス操作をユーザーに通知するために使用されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>For example, when editing or selecting text, a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType&gt;</ph> cursor is typically displayed.</source>
          <target state="translated">例では、編集、または、テキストを選択するときの<ph id="ph1">&lt;xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType&gt;</ph>カーソルが通常表示されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>A wait cursor is commonly used to inform the user that a process is currently running.</source>
          <target state="translated">待機カーソルは、通常、プロセスが現在実行されているユーザーを通知するために使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Examples of processes you might have the user wait for are opening a file, saving a file, or filling a control such as a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> with a large amount of data.</source>
          <target state="translated">プロセス、ユーザーが待機する必要がありますの例についてをファイルに保存されたり、コントロールなど、ファイルを開いている、 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>大量のデータにします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>All controls that derive from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class have a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property.</source>
          <target state="translated">派生するすべてのコントロール、<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>クラスが、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>To change the cursor displayed by the mouse pointer when it is within the bounds of the control, assign a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control.</source>
          <target state="translated">マウス ポインターがコントロールの境界内にある場合に表示されるカーソルを変更するに割り当てる、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>を<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph>コントロールのプロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Alternatively, you can display cursors at the application level by assigning a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
          <target state="translated">割り当てることによって、アプリケーション レベルでカーソルを表示することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>を<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>For example, if the purpose of your application is to edit a text file, you might set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType&gt;</ph> to display a wait cursor over the application while the file loads or saves to prevent any mouse events from being processed.</source>
          <target state="translated">たとえば場合、アプリケーションの目的は、テキスト ファイルを編集するのには、可能性があります設定する、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType&gt;</ph>中に表示される待機カーソル アプリケーション経由でファイルの読み込みし、保存を任意のマウス イベントが処理されていることを防ぐためにします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>When the process is complete, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> for the application to display the appropriate cursor over each control type.</source>
          <target state="translated">プロセスが完了したら、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph>コントロールの種類ごとに適切なカーソルを表示するアプリケーション。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType&gt;</ph> before resetting the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property back to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> cursor, the application will resume listening for mouse events and will resume displaying the appropriate <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> for each control in the application.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType&gt;</ph>リセットする前に、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>プロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph>カーソル、アプリケーションはマウス イベントのリッスンを再開し、適切な表示を再開<ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>アプリケーションの各コントロールに対してです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Cursor objects can be created from several sources, such as the handle of an existing <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>, a standard <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> file, a resource, or a data stream.</source>
          <target state="translated">既存のハンドルなど、いくつかのソースからカーソル オブジェクトを作成できます<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>、標準的な<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>ファイル、リソース、またはデータ ストリーム。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class does not support animated cursors (.ani files) or cursors with colors other than black and white.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>クラスがアニメーション化されたカーソル (.ani ファイル) または黒と白以外の色でカーソルをサポートしていません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>If the image you are using as a cursor is too small, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> method to force the image to fill the bounds of the cursor.</source>
          <target state="translated">使用することができます、カーソルとして使用するイメージが小さすぎる場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph>カーソルの境界を占めるように画像を強制する方法です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>You can temporarily hide the cursor by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method, and restore it by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">一時的に非表示にする、カーソルを呼び出して、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph>メソッドを呼び出すことによって、復元、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Starting with the .NET Framework 4.5.2, the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> will be resized based on the system DPI setting when the app.config file contains the following entry:</source>
          <target state="translated">.NET Framework 4.5.2、以降の<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>app.config ファイルには、次のエントリが含まれている場合は、システム DPI 設定に基づいてのサイズ変更されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The following code example displays a form that demonstrates using a custom cursor.</source>
          <target state="translated">次のコード例では、カスタムのカーソルを使用する方法を示すフォームを表示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The custom <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is embedded in the application's resource file.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>アプリケーションのリソース ファイルに埋め込まれています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The example requires a cursor contained in a cursor file named <ph id="ph1">`MyCursor.cur`</ph>.</source>
          <target state="translated">例では、という名前のカーソル ファイルに含まれているカーソルを必要と<ph id="ph1">`MyCursor.cur`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>To compile this example using the command line, include the following flag: <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></source>
          <target state="translated">コマンドラインを使用して、この例をコンパイルするには、次のフラグを含めます。 <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The following code example displays customer information in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
          <target state="translated">次のコード例にある顧客情報が表示されます、<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</source>
          <target state="translated">ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>In this example, 1,000 customers are displayed with 15 orders each.</source>
          <target state="translated">この例では、1,000 人の顧客が 15 の注文に表示されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The repainting of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is suppressed by using the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> methods, and a wait <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is displayed while the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> creates and paints the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects.</source>
          <target state="translated">再描画する、<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>を使用して抑制、<ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph>メソッド、および待機<ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が表示されます中に、<ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>を作成し、描画、<ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>This example requires that you have a cursor file named <ph id="ph1">`MyWait.cur`</ph> in the application directory.</source>
          <target state="translated">この例では、という名前のカーソル ファイルがある必要があります<ph id="ph1">`MyWait.cur`</ph>アプリケーション ディレクトリにします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>It also requires a <ph id="ph1">`Customer`</ph> object that can hold a collection of <ph id="ph2">`Order`</ph> objects, and that you have created an instance of a <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">必要です、<ph id="ph1">`Customer`</ph>オブジェクトのコレクションが保持できる<ph id="ph2">`Order`</ph>オブジェクト、およびのインスタンスが作成されたこと、<ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>の control 権限、<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Cursor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the Windows handle of the cursor to create.</source>
          <target state="translated">作成するカーソルの Windows ハンドルを表す <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified Windows handle.</source>
          <target state="translated">指定した Windows ハンドルで <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>You must free the cursor handle when you are done with it.</source>
          <target state="translated">完了したことと、カーソル ハンドルを解放する必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>For more information about disposing of resources, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">リソースの破棄に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">次のコード例からカーソルを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>カーソルの<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>、その位置とクリッピング四角形を変更します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>がクリックされたときに、このコードを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="handle" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handle" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The data stream to load the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> の読み込み元のデータ ストリーム。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified data stream.</source>
          <target state="translated">指定したデータ ストリームで <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The data stream specified by <ph id="ph1">`stream`</ph> must contain a cursor (.cur) file.</source>
          <target state="translated">指定されたデータ ストリーム<ph id="ph1">`stream`</ph>カーソル (.cur) ファイルを含める必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>Animated cursors (.ani files) are not supported by the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class.</source>
          <target state="translated">は、アニメーション カーソル (.ani ファイル) はサポートされていない、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The following code example loads a cursor from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> created by the <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method of an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">次のコード例からカーソルを読み込む、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>によって作成された、<ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>When the method is called, an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is displayed to the user and when a.</source>
          <target state="translated">メソッドが呼び出されたときに、<ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>をユーザーに表示されるとタイミング、します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>CUR file is selected and the dialog closed, the file is opened and the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> returned is used to create a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated">設定の異なるファイルを選択し、ダイアログを閉じる、ファイルが開かれていると、<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>返される作成に使用される、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The cursor file to load.</source>
          <target state="translated">読み込むカーソル ファイル。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified file.</source>
          <target state="translated">指定したファイルで <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The <ph id="ph1">`fileName`</ph> parameter must reference a standard cursor (.cur) file.</source>
          <target state="translated"><ph id="ph1">`fileName`</ph>パラメーターは、標準的なカーソル (.cur) ファイルを参照する必要があります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>Animated cursors (.ani files) are not supported by the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class.</source>
          <target state="translated">は、アニメーション カーソル (.ani ファイル) はサポートされていない、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The following code example displays customer information in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
          <target state="translated">次のコード例にある顧客情報が表示されます、<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</source>
          <target state="translated">ツリーのルート ノードは、顧客名を表示し、子ツリー ノードは、各顧客に割り当てられている注文番号を表示します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>In this example, 1,000 customers are displayed with 15 orders each.</source>
          <target state="translated">この例では、1,000 人の顧客が 15 の注文に表示されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The repainting of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is suppressed by using the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> methods, and a wait <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is displayed while the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> creates and paints the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects.</source>
          <target state="translated">再描画する、<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>を使用して抑制、<ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph>メソッド、および待機<ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が表示されます中に、<ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>を作成し、描画、<ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>This example requires that you have a <ph id="ph1">`Customer`</ph> object that can hold a collection of <ph id="ph2">`Order`</ph> objects.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">`Customer`</ph>オブジェクトのコレクションが保持できる<ph id="ph2">`Order`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>It also requires that you have created an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">インスタンスを作成することも必要です、<ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>の control 権限、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The resource <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">リソース <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified resource with the specified resource type.</source>
          <target state="translated">指定したリソースの種類を使用し、指定したリソースから <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The following is an example of how to embed a cursor as a resource within your application.</source>
          <target state="translated">カーソルをアプリケーション内でリソースとして埋め込む方法の例を次に示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>To embed the resource, reference the resource name followed by a comma, then its full assembly path.</source>
          <target state="translated">埋め込むには、リソースをリソース名の後に、コンマ、そのアセンブリの完全パスを参照します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>See the Example section to learn how to load the cursor from the embedded resource.</source>
          <target state="translated">埋め込みリソースからカーソルを読み込む方法について説明する例を参照してください。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The resource reference when compiling as well as when referencing it in code, is case sensitive for both the C# and Visual Basic compilers.</source>
          <target state="translated">リソース参照コンパイルするときにだけでなく、コードで参照するときは、c# および Visual Basic 両方のコンパイラの大文字小文字を区別します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The following code example displays a form that demonstrates using a custom cursor by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">次のコード例を使用して、カスタムのカーソルの使用方法を示すフォームが表示されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The custom <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is embedded in the application's resource file.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>アプリケーションのリソース ファイルに埋め込まれています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The example requires that you have a cursor contained in a cursor file named <ph id="ph1">`MyCursor.cur`</ph>.</source>
          <target state="translated">例では、カーソルをという名前のカーソル ファイルに含まれている必要があります。<ph id="ph1">`MyCursor.cur`</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>To compile this example using the command line, include the following flag: <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></source>
          <target state="translated">コマンドラインを使用して、この例をコンパイルするには、次のフラグを含めます。 <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Gets or sets the bounds that represent the clipping rectangle for the cursor.</source>
          <target state="translated">カーソルのクリッピング四角形を表す境界を取得または設定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the clipping rectangle for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> のクリッピング四角形を画面座標で表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>A clipped cursor is allowed to move only within its clipping rectangle.</source>
          <target state="translated">クリップされたカーソルは、クリッピング四角形内でのみの移動を許可します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Generally, the system allows this only if the mouse is currently captured.</source>
          <target state="translated">一般に、システムにより、このマウスがキャプチャされている場合にのみです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>If the cursor is not currently clipped, the resulting rectangle contains the dimensions of the entire screen.</source>
          <target state="translated">カーソルが現在クリップされていない場合、結果として得られる四角形には、画面全体のサイズが含まれています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">次のコード例からカーソルを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>カーソルの<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>、その位置とクリッピング四角形を変更します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>がクリックされたときに、このコードを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>for all windows to set this property.</source>
          <target state="translated">このプロパティを設定するすべてのウィンドウ。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>Copies the handle of this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> のハンドルをコピーします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the cursor's handle.</source>
          <target state="translated">カーソルのハンドルを表す <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>The handle created as a result of calling this method must be disposed of when you are done with it because it will not be disposed of by the garbage collector.</source>
          <target state="translated">このメソッドの呼び出しの結果として作成されたハンドルが完了したら、それは破棄されませんのガベージ コレクターによってためときに破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Gets or sets a cursor object that represents the mouse cursor.</source>
          <target state="translated">マウス カーソルを表すカーソル オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> that represents the mouse cursor.</source>
          <target state="translated">マウス カーソルを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the mouse cursor is not visible.</source>
          <target state="translated">マウス カーソルが表示されない場合、既定値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property changes the cursor currently displayed.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>プロパティが現在表示されているカーソルを変更します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>The application may or may not continue to listen for mouse events.</source>
          <target state="translated">アプリケーションは、マウス イベントをリッスンするように続行できません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>To signal that the application should not respond to mouse events during a long-running operation, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UseWaitCursor%2A&gt;</ph> property.</source>
          <target state="translated">アプリケーションが実行時間の長い操作中のマウス イベントに応答する必要があることを通知するには、使用、<ph id="ph1">&lt;xref:System.Windows.Forms.Application.UseWaitCursor%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>In most cases, however, it's better to use a background thread to manage a long-running operation, and leave your user interface accessible to the user.</source>
          <target state="translated">ただし、ほとんどの場合は、バック グラウンド スレッドを使用して、実行時間の長い操作を管理し、ユーザーがアクセスできるユーザー インターフェイスのままにする方が適切です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>For more information on easily implementing a background task, see <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph>.</source>
          <target state="translated">バック グラウンド タスクを簡単に実装の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>for safe subwindows to set this property.</source>
          <target state="translated">このプロパティを設定する安全なサブウィンドウです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> メソッドによって、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector frees it.</source>
          <target state="translated">それ以外の場合、ガベージ コレクターによって解放されるまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to pass into the method when it is called.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>を渡すメソッドが呼び出されるとします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> surface on which to draw the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> が描画される <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 表面。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> の境界を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Draws the cursor on the specified surface, within the specified bounds.</source>
          <target state="translated">カーソルを、指定した範囲内の、指定した表面に描画します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The drawing command originates on the graphics surface represented by the <ph id="ph1">`g`</ph> parameter, but a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> does not contain information about how to render a given image, so it passes the call to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated">によって表されるグラフィックスの表面上で発生した描画コマンド、<ph id="ph1">`g`</ph>パラメーターが、<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>への呼び出しを渡すために、既存のイメージをレンダリングする方法に関する情報を含まない、<ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Draw%2A&gt;</ph> method crops the image to the given dimensions and allows you to specify a <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> within which to draw the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Draw%2A&gt;</ph>メソッドを指定した寸法にイメージをトリミングしを指定することができます、<ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph>を描画するために、<ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This method is typically used if you want to draw the cursor on a Graphics surface.</source>
          <target state="translated">このメソッドは通常、グラフィックスの表面にカーソルを描画する場合に使用されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>For example, you might have a dialog that allows the user to select cursors from a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, or a group of <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.</source>
          <target state="translated">たとえば、ユーザーからのカーソルの選択のダイアログがあります、<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>コントロール、またはグループの<ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が呼び出されると、メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> surface on which to draw the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> が描画される <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 表面。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> の境界を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Draws the cursor in a stretched format on the specified surface, within the specified bounds.</source>
          <target state="translated">カーソルを拡大した書式で、指定した範囲内の、指定した表面に描画します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The drawing command originates on the graphics surface represented by the <ph id="ph1">`g`</ph> parameter, but a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object does not contain information about how to render a given image, so it passes the call to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object.</source>
          <target state="translated">によって表されるグラフィックスの表面上で発生した描画コマンド、<ph id="ph1">`g`</ph>パラメーターが、<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>オブジェクトにへの呼び出しを渡すために、既存のイメージをレンダリングする方法に関する情報が含まれていません、<ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> method stretches the image to fill the specified <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> when the cursor is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph>メソッドに指定されたイメージの伸縮<ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph>カーソルを描画するときにします。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が呼び出されると、メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">比較対象の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>Returns a value indicating whether this cursor is equal to the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">このカーソルが、指定した <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> に等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this cursor is equal to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">カーソルが、指定した <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> に等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">次のコード例からカーソルを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>カーソルの<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>、その位置とクリッピング四角形を変更します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>がクリックされたときに、このコードを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.GetHashCode">
          <source>Retrieves the hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> のハッシュ コードを取得します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> のハッシュ コード。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>Gets the handle of the cursor.</source>
          <target state="translated">カーソルのハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the cursor's handle.</source>
          <target state="translated">カーソルのハンドルを表す <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>This is not a copy of the handle; do not dispose of it.</source>
          <target state="translated">これは、ハンドルのコピーではありません。その破棄しません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">次のコード例からカーソルを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>カーソルの<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>、その位置とクリッピング四角形を変更します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>がクリックされたときに、このコードを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The handle value is <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">ハンドル値は <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Hides the cursor.</source>
          <target state="translated">カーソルを非表示にします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method calls must be balanced.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph>メソッドの呼び出しを分散する必要があります。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>For every call to the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method there must be a corresponding call to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">呼び出すたびに、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph>メソッドに対応する呼び出しが存在する必要があります、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>The following code example hides the cursor when the mouse pointer enters the button's client area.</source>
          <target state="translated">次のコード例では、マウス ポインターがボタンのクライアント領域に入ったときにカーソルを非表示にします。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</source>
          <target state="translated">同様に、マウス ポインターがボタンのクライアント領域を離れると、カーソルが再度表示されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`myButton`</ph>.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>で、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>という<ph id="ph3">`myButton`</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>for all windows call this method.</source>
          <target state="translated">すべてのウィンドウには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>Gets the cursor hot spot.</source>
          <target state="translated">カーソルのホット スポットを取得します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> representing the cursor hot spot.</source>
          <target state="translated">カーソルのホット スポットを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.HotSpot%2A&gt;</ph> is the <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> in the cursor that interacts with other elements on the screen.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.HotSpot%2A&gt;</ph>は、<ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>画面の他の要素と連携する、カーソル内です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">比較する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">比較する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>Returns a value indicating whether two instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの 2 つのインスタンスが等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if two instances of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの 2 つのインスタンスが等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が呼び出されると、メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">比較する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">比較する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>Returns a value indicating whether two instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの 2 つのインスタンスが等しくないかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if two instances of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> クラスの 2 つのインスタンスが等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to pass into the method when it is called.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>を渡すメソッドが呼び出されるとします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Position">
          <source>Gets or sets the cursor's position.</source>
          <target state="translated">カーソルの位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the cursor's position in screen coordinates.</source>
          <target state="translated">カーソルの位置を画面座標で表す <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Position%2A&gt;</ph> property is identical to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Position%2A&gt;</ph>プロパティと同じ、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">次のコード例からカーソルを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph>カーソルの<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>、その位置とクリッピング四角形を変更します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">カーソルに移動、左から 50 ピクセルが、コードの実行時になります。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">フォームの境界内にカーソルのクリッピング四角形を変更するさらに、(既定では、ユーザーの画面全体)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>がクリックされたときに、このコードを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Show">
          <source>Displays the cursor.</source>
          <target state="translated">カーソルを表示します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method calls must be balanced.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph>メソッドの呼び出しを分散する必要があります。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>For every call to the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method there must be a corresponding call to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">呼び出すたびに、<ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph>メソッドに対応する呼び出しが存在する必要があります、<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>The following code example hides the cursor when the mouse pointer enters the button's client area.</source>
          <target state="translated">次のコード例では、マウス ポインターがボタンのクライアント領域に入ったときにカーソルを非表示にします。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</source>
          <target state="translated">同様に、マウス ポインターがボタンのクライアント領域を離れると、カーソルが再度表示されます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`myButton`</ph>.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>で、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>という<ph id="ph3">`myButton`</ph>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Size">
          <source>Gets the size of the cursor object.</source>
          <target state="translated">カーソル オブジェクトのサイズを取得します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the width and height of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> の幅と高さを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">次のコード例では、フォームの通常のサイズとストレッチ モードで 2 倍のサイズを指定したカーソルを描画します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">この例は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>が呼び出されると、メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> クラス。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> クラス。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Serializes the object.</source>
          <target state="translated">オブジェクトをシリアル化します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>Gets or sets the object that contains data about the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> に関するデータを格納するオブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> に関するデータを格納している <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.ToString">
          <source>Retrieves a human readable string representing this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> を表すユーザーが判読できる文字列を取得します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> を表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>