<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommonDialog.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef82f18578aa834eff3f8037feb0af84a5f009e69c6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f18578aa834eff3f8037feb0af84a5f009e69c6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.CommonDialog">
          <source>Specifies the base class used for displaying dialog boxes on the screen.</source>
          <target state="translated">画面上にダイアログ ボックスを表示するために使用する基本クラスを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CommonDialog">
          <source>Inherited classes are required to implement <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph> by invoking <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> to create a specific common dialog box.</source>
          <target state="translated">継承するクラスが実装に必要な<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph>を呼び出すことによって<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>を特定のコモン ダイアログ ボックスを作成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CommonDialog">
          <source>Inherited classes can optionally override <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> to implement specific dialog box hook functionality.</source>
          <target state="translated">継承するクラスが必要に応じてオーバーライドできます<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>特定のダイアログ ボックスのフック機能を実装します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CommonDialog">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> and illustrates creating and showing a dialog box.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph>の実装<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>示されているを作成して、ダイアログ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CommonDialog">
          <source>This example requires that the method is called from within an existing form, which has a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> placed on it.</source>
          <target state="translated">この例を持つ既存のフォーム内から、メソッドが呼び出されることが必要です、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>に配置されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CommonDialog" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CommonDialog" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>Occurs when the user clicks the Help button on a common dialog box.</source>
          <target state="translated">ユーザーがコモン ダイアログ ボックスの [?] ボタンをクリックすると発生します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>For information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベントの処理方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>The following code example demonstrates initializing a <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> object setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ColorDialog.AnyColor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A&gt;</ph> properties.</source>
          <target state="translated">次のコード例では、初期化を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph>オブジェクトの設定、 <ph id="ph2">&lt;xref:System.Windows.Forms.ColorDialog.AnyColor%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph>オブジェクトでは、ユーザーをカスタムの色を設定することはできませんが、表示される基本の色の完全なセットを許可します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>By setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A&gt;</ph> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors.</source>
          <target state="translated">設定して、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A&gt;</ph>プロパティを false には、256 個以下の色のシステムでは、他の色の組み合わせである色の表示できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>The example also shows setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog.ShowHelp%2A&gt;</ph> property and handling a <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.HelpRequest&gt;</ph> event for a dialog box.</source>
          <target state="translated">この例では、設定も示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog.ShowHelp%2A&gt;</ph>プロパティと処理、<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.HelpRequest&gt;</ph>イベント ダイアログ ボックスをします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>To run the example, paste the following code in a form and call the <ph id="ph1">`InitializeColorDialog`</ph> method in the form's constructor or <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">例を実行するには、フォームと呼び出しで、次のコードを貼り付けます、<ph id="ph1">`InitializeColorDialog`</ph>フォームのコンス トラクターのメソッドまたは<ph id="ph2">`Load`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CommonDialog.HelpRequest">
          <source>This example requires that the <ph id="ph1">`Click`</ph> event of the button is connected to the event handler defined in the example.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">`Click`</ph>ボタンのイベントがこの例で定義されているイベント ハンドラーに関連付けられています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The handle to the dialog box window.</source>
          <target state="translated">ダイアログ ボックス ウィンドウを識別するハンドル。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The message being received.</source>
          <target state="translated">受信しているメッセージ。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Additional information about the message.</source>
          <target state="translated">メッセージについての追加情報。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Additional information about the message.</source>
          <target state="translated">メッセージについての追加情報。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、コモン ダイアログ ボックスのフック プロシージャを定義します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</source>
          <target state="translated">既定のダイアログ ボックス プロシージャでメッセージを処理する場合は値 0。既定のダイアログ ボックス プロシージャではメッセージを無視する場合は 0 以外の値。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>A hook procedure is a mechanism by which a function can intercept events before they reach an application.</source>
          <target state="translated">用のフック プロシージャは、関数がアプリケーションに到達する前に、イベントをインターセプトするメカニズムです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>When you override the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> class, the operating system invokes your override of the function to post operating system messages to the window.</source>
          <target state="translated">オーバーライドする場合、<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>クラス、オペレーティング システムが、ウィンドウにオペレーティング システムのメッセージを投稿する関数のオーバーライドを呼び出します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</source>
          <target state="translated">既定では、画面 WM_INITDIALOG メッセージへの応答で、ダイアログ ボックスの中央にフック プロシージャ。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> to prevent it from being called from untrusted code; only the immediate caller is required to have <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType&gt;</ph> permission.</source>
          <target state="translated">このメソッドを使用して<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>されないようにする、信頼されていないコードから呼び出す以外の直前の呼び出し元のみする必要がある<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType&gt;</ph>権限です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>If your code can be called from partially trusted code, do not pass user input to <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class methods without validation.</source>
          <target state="translated">場合は、コードは、部分的に信頼されたコードから呼び出すことができますはユーザーの入力を渡さない<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph>クラスの検証を伴わないメソッドです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>For important limitations on using the <ph id="ph1">`LinkDemand`</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">使用してに関する重要な制限事項、 <ph id="ph1">`LinkDemand`</ph> 、メンバーを参照してください<bpt id="p1">[</bpt>Demand とします。LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>This property also uses the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType&gt;</ph> security attribute; to override this member, the derived class must have the <ph id="ph2">`CustomPermission`</ph> permission.</source>
          <target state="translated">このプロパティを使用しても、<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType&gt;</ph>セキュリティ属性がある、このメンバーをオーバーライドする派生クラスである必要があります、<ph id="ph2">`CustomPermission`</ph>権限です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例をオーバーライドする方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The example consists of a class that inherits the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> class.</source>
          <target state="translated">例では、継承するクラスから成る、<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>In the class's <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> override, the example evaluates the method's <ph id="ph2">`msg`</ph> parameter against constant values for particular Windows messages.</source>
          <target state="translated">クラスの<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>override、例では、評価、メソッドの<ph id="ph2">`msg`</ph>パラメーターの特定の Windows メッセージの定数値です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>If the <ph id="ph1">`msg`</ph> parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> method.</source>
          <target state="translated">場合、<ph id="ph1">`msg`</ph>例では、パラメーターには、指定した定数と等しいに渡された Windows メッセージを識別するトレース出力を書き込みます、<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>This example assumes that the class in which the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph> method is declared inherits the <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> class.</source>
          <target state="translated">この例では、クラス、<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.HookProc%2A&gt;</ph>メソッドは継承を宣言、<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">アンマネージ コードを呼び出す即時呼び出し元がします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Inheriting classes can override this method to add specific functionality to a common dialog box.</source>
          <target state="translated">クラスを継承すると、コモン ダイアログ ボックスに特定の機能を追加するには、このメソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph> that provides the event data.</source>
          <target state="translated">イベント データを提供する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HelpEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)">
          <source>This method is invoked when the Help button is clicked.</source>
          <target state="translated">[ヘルプ] ボタンがクリックされたときに、このメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)">
          <source>Inheriting classes can override this method to handle the event.</source>
          <target state="translated">クラスを継承すると、イベントを処理するには、このメソッドがオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The window handle of the message to send.</source>
          <target state="translated">送信するメッセージのウィンドウ ハンドル。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The Win32 message to send.</source>
          <target state="translated">送信する Win32 メッセージ。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>wparam<ept id="p1">&lt;/c&gt;</ept> to send with the message.</source>
          <target state="translated">メッセージと一緒に送信する <bpt id="p1">&lt;c&gt;</bpt>wparam<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lparam<ept id="p1">&lt;/c&gt;</ept> to send with the message.</source>
          <target state="translated">メッセージと一緒に送信する <bpt id="p1">&lt;c&gt;</bpt>lparam<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、オーナー ウィンドウ プロシージャを定義します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>The result of the message processing, which is dependent on the message sent.</source>
          <target state="translated">送信されたメッセージの処理結果 (メッセージによって異なる)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Control is transferred here when messages are sent to the owner window of the common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスのオーナー ウィンドウに送信されたメッセージは、コントロールをここに転送されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Inheriting classes can override this method to add specific functionality to a common dialog box.</source>
          <target state="translated">クラスを継承すると、コモン ダイアログ ボックスに特定の機能を追加するには、このメソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>for the immediate caller to call unmanaged code.</source>
          <target state="translated">アンマネージ コードを呼び出す即時呼び出し元がします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.Reset">
          <source>When overridden in a derived class, resets the properties of a common dialog box to their default values.</source>
          <target state="translated">派生クラスでオーバーライドされるときに、コモン ダイアログ ボックスのプロパティを既定値にリセットします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.Reset">
          <source>for unmanaged code to call this method.</source>
          <target state="translated">このメソッドを呼び出すアンマネージ コードです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.Reset">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.Reset">
          <source>Inheriting classes can override this method to reset their properties.</source>
          <target state="translated">クラスを継承すると、そのプロパティをリセットするには、このメソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source>A value that represents the window handle of the owner window for the common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスのオーナー ウィンドウのウィンドウ ハンドルを表す値。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source>When overridden in a derived class, specifies a common dialog box.</source>
          <target state="translated">派生クラスでオーバーライドされるときに、コモン ダイアログ ボックスを指定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dialog box was successfully run; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ダイアログ ボックスが正常に動作した場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source>This method is invoked when the user of a common dialog box calls <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>, and it must be overridden by inherited classes of <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> to implement a specific common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスのユーザーが呼び出すときに、このメソッドが呼び出される<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>の継承クラスによってオーバーライドする必要がありますと<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>特定コモン ダイアログ ボックスを実装します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source>for unmanaged code to call this method.</source>
          <target state="translated">このメソッドを呼び出すアンマネージ コードです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.CommonDialog">
          <source>Runs a common dialog box.</source>
          <target state="translated">コモン ダイアログ ボックスを実行します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>Runs a common dialog box with a default owner.</source>
          <target state="translated">既定のオーナーを使用してコモン ダイアログ ボックスを実行します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.DialogResult.OK" /&gt;</ph> if the user clicks OK in the dialog box; otherwise, <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DialogResult.Cancel" /&gt;</ph>.</source>
          <target state="translated">ユーザーがダイアログ ボックスの [OK] をクリックした場合は <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DialogResult.OK" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DialogResult.Cancel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>This method implements <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.RunDialog%2A&gt;</ph> を実装します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph> and illustrates creating and showing a dialog box.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph>の実装<ph id="ph2">&lt;xref:System.Windows.Forms.CommonDialog&gt;</ph>示されているを作成して、ダイアログ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>This example requires that the method is called from within an existing form, which has a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> placed on it.</source>
          <target state="translated">この例を持つ既存のフォーム内から、メソッドが呼び出されることが必要です、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>に配置されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>to print from a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PrintDialog" /&gt;</ph>.</source>
          <target state="translated">印刷する、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.PrintDialog" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>for safe subwindows to call this method.</source>
          <target state="translated">このメソッドを呼び出すセーフ サブウィンドウです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> that represents the top-level window that will own the modal dialog box.</source>
          <target state="translated">モーダル ダイアログ ボックスを所有するトップレベル ウィンドウを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> を実装しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Runs a common dialog box with the specified owner.</source>
          <target state="translated">指定したオーナーを使用してコモン ダイアログ ボックスを実行します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Forms.DialogResult.OK" /&gt;</ph> if the user clicks <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> in the dialog box; otherwise, <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DialogResult.Cancel" /&gt;</ph>.</source>
          <target state="translated">ユーザーがダイアログ ボックスの <bpt id="p1">**</bpt>[OK]<ept id="p1">**</ept> をクリックした場合は <ph id="ph1">&lt;see cref="F:System.Windows.Forms.DialogResult.OK" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see cref="F:System.Windows.Forms.DialogResult.Cancel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph> method allows you to specify a specific form or control that will own the dialog box that is shown.</source>
          <target state="translated">このバージョンの<ph id="ph1">&lt;xref:System.Windows.Forms.CommonDialog.ShowDialog%2A&gt;</ph>メソッドでは、特定のフォームまたはコントロールに表示されるダイアログ ボックスを所有するを指定することができます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.</source>
          <target state="translated">このパラメーターを持たないメソッドのバージョンを使用する場合、ダイアログ ボックスが表示されているは所有自動的に、アプリケーションの現在アクティブなウィンドウです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>to print from a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PrintDialog" /&gt;</ph>.</source>
          <target state="translated">印刷する、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.PrintDialog" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>for safe subwindows to call this method.</source>
          <target state="translated">このメソッドを呼び出すセーフ サブウィンドウです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.CommonDialog.Tag">
          <source>Gets or sets an object that contains data about the control.</source>
          <target state="translated">コントロールに関するデータを格納するオブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CommonDialog.Tag">
          <source>The object that contains data about the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CommonDialog" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CommonDialog" /&gt;</ph> に関するデータを格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CommonDialog.Tag">
          <source>Use this property to store arbitrary information about the control.</source>
          <target state="translated">このプロパティを使用して、コントロールの任意の情報を格納します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>