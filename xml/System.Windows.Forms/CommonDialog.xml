<Type Name="CommonDialog" FullName="System.Windows.Forms.CommonDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="951c76de7638cf9538a3121ee131c85d27efb3e0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CommonDialog : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonDialog extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonDialog&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonDialog abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="81967-101">画面上にダイアログ ボックスを表示するために使用する基本クラスを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81967-101">Specifies the base class used for displaying dialog boxes on the screen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-102">継承するクラスが実装に必要な<xref:System.Windows.Forms.CommonDialog.RunDialog%2A>を呼び出すことによって<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>を特定のコモン ダイアログ ボックスを作成します。</span><span class="sxs-lookup"><span data-stu-id="81967-102">Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box.</span></span> <span data-ttu-id="81967-103">継承するクラスが必要に応じてオーバーライドできます<xref:System.Windows.Forms.CommonDialog.HookProc%2A>特定のダイアログ ボックスのフック機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="81967-103">Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81967-104">次のコード例では、<xref:System.Windows.Forms.ColorDialog>の実装<xref:System.Windows.Forms.CommonDialog>示されているを作成して、ダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="81967-104">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="81967-105">この例を持つ既存のフォーム内から、メソッドが呼び出されることが必要です、<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.Button>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="81967-105">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommonDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81967-106">
            <see cref="T:System.Windows.Forms.CommonDialog" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.CommonDialog" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CommonDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81967-107">ユーザーがコモン ダイアログ ボックスの [?] ボタンをクリックすると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-107">Occurs when the user clicks the Help button on a common dialog box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-108">イベントの処理方法の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="81967-108">For information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81967-109">次のコード例では、初期化を示しています、<xref:System.Windows.Forms.ColorDialog>オブジェクトの設定、 <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>、<xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81967-109">The following code example demonstrates initializing a <xref:System.Windows.Forms.ColorDialog> object setting the <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> properties.</span></span> <span data-ttu-id="81967-110"><xref:System.Windows.Forms.ColorDialog>オブジェクトでは、ユーザーをカスタムの色を設定することはできませんが、表示される基本の色の完全なセットを許可します。</span><span class="sxs-lookup"><span data-stu-id="81967-110">The <xref:System.Windows.Forms.ColorDialog> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed.</span></span> <span data-ttu-id="81967-111">設定して、<xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A>プロパティを false には、256 個以下の色のシステムでは、他の色の組み合わせである色の表示できます。</span><span class="sxs-lookup"><span data-stu-id="81967-111">By setting the <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors.</span></span> <span data-ttu-id="81967-112">この例では、設定も示しています、<xref:System.Windows.Forms.ColorDialog.ShowHelp%2A>プロパティと処理、<xref:System.Windows.Forms.CommonDialog.HelpRequest>イベント ダイアログ ボックスをします。</span><span class="sxs-lookup"><span data-stu-id="81967-112">The example also shows setting the <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> property and handling a <xref:System.Windows.Forms.CommonDialog.HelpRequest> event for a dialog box.</span></span> <span data-ttu-id="81967-113">例を実行するには、フォームと呼び出しで、次のコードを貼り付けます、`InitializeColorDialog`フォームのコンス トラクターのメソッドまたは`Load`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="81967-113">To run the example, paste the following code in a form and call the `InitializeColorDialog` method in the form's constructor or `Load` method.</span></span> <span data-ttu-id="81967-114">この例では、する必要があります、`Click`ボタンのイベントがこの例で定義されているイベント ハンドラーに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="81967-114">This example requires that the `Click` event of the button is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">
          <span data-ttu-id="81967-115">ダイアログ ボックス ウィンドウを識別するハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-115">The handle to the dialog box window.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="81967-116">受信しているメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-116">The message being received.</span>
          </span>
        </param>
        <param name="wparam">
          <span data-ttu-id="81967-117">メッセージについての追加情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-117">Additional information about the message.</span>
          </span>
        </param>
        <param name="lparam">
          <span data-ttu-id="81967-118">メッセージについての追加情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-118">Additional information about the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81967-119">コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、コモン ダイアログ ボックスのフック プロシージャを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-119">Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81967-120">既定のダイアログ ボックス プロシージャでメッセージを処理する場合は値 0。既定のダイアログ ボックス プロシージャではメッセージを無視する場合は 0 以外の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-120">A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-121">用のフック プロシージャは、関数がアプリケーションに到達する前に、イベントをインターセプトするメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="81967-121">A hook procedure is a mechanism by which a function can intercept events before they reach an application.</span></span> <span data-ttu-id="81967-122">オーバーライドする場合、<xref:System.Windows.Forms.CommonDialog.HookProc%2A>のメソッド、<xref:System.Windows.Forms.CommonDialog>クラス、オペレーティング システムが、ウィンドウにオペレーティング システムのメッセージを投稿する関数のオーバーライドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="81967-122">When you override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.</span></span>  
  
 <span data-ttu-id="81967-123">既定では、画面 WM_INITDIALOG メッセージへの応答で、ダイアログ ボックスの中央にフック プロシージャ。</span><span class="sxs-lookup"><span data-stu-id="81967-123">By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="81967-124">このメソッドを使用して<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>されないようにする、信頼されていないコードから呼び出す以外の直前の呼び出し元のみする必要がある<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType>権限です。</span><span class="sxs-lookup"><span data-stu-id="81967-124">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="81967-125">場合は、コードは、部分的に信頼されたコードから呼び出すことができますはユーザーの入力を渡さない<xref:System.Runtime.InteropServices.Marshal>クラスの検証を伴わないメソッドです。</span><span class="sxs-lookup"><span data-stu-id="81967-125">If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.</span></span> <span data-ttu-id="81967-126">使用してに関する重要な制限事項、 `LinkDemand` 、メンバーを参照してください[Demand とします。LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)です。</span><span class="sxs-lookup"><span data-stu-id="81967-126">For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span>  
  
 <span data-ttu-id="81967-127">このプロパティを使用しても、<xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType>セキュリティ属性がある、このメンバーをオーバーライドする派生クラスである必要があります、`CustomPermission`権限です。</span><span class="sxs-lookup"><span data-stu-id="81967-127">This property also uses the <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> security attribute; to override this member, the derived class must have the `CustomPermission` permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81967-128">次のコード例をオーバーライドする方法を示しています、<xref:System.Windows.Forms.CommonDialog.HookProc%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="81967-128">The following code example demonstrates how to override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="81967-129">例では、継承するクラスから成る、<xref:System.Windows.Forms.CommonDialog>クラスです。</span><span class="sxs-lookup"><span data-stu-id="81967-129">The example consists of a class that inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span> <span data-ttu-id="81967-130">クラスの<xref:System.Windows.Forms.CommonDialog.HookProc%2A>override、例では、評価、メソッドの`msg`パラメーターの特定の Windows メッセージの定数値です。</span><span class="sxs-lookup"><span data-stu-id="81967-130">In the class's <xref:System.Windows.Forms.CommonDialog.HookProc%2A> override, the example evaluates the method's `msg` parameter against constant values for particular Windows messages.</span></span> <span data-ttu-id="81967-131">場合、`msg`例では、パラメーターには、指定した定数と等しいに渡された Windows メッセージを識別するトレース出力を書き込みます、<xref:System.Windows.Forms.CommonDialog.HookProc%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="81967-131">If the `msg` parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="81967-132">この例では、クラス、<xref:System.Windows.Forms.CommonDialog.HookProc%2A>メソッドは継承を宣言、<xref:System.Windows.Forms.CommonDialog>クラスです。</span><span class="sxs-lookup"><span data-stu-id="81967-132">This example assumes that the class in which the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method is declared inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span>  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="81967-133">アンマネージ コードを呼び出す即時呼び出し元がします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-133">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="81967-134">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="81967-135">クラスを継承すると、コモン ダイアログ ボックスに特定の機能を追加するには、このメソッドをオーバーライドできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="81967-135">Inheriting classes can override this method to add specific functionality to a common dialog box.</span>
            </span>
            <span data-ttu-id="81967-136">オーバーライドする場合<see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="81967-136">When overriding <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequest (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequest(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequest (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequest(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="81967-137">イベント データを提供する <see cref="T:System.Windows.Forms.HelpEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-137">An <see cref="T:System.Windows.Forms.HelpEventArgs" /> that provides the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81967-138">
            <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-138">Raises the <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-139">[ヘルプ] ボタンがクリックされたときに、このメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="81967-139">This method is invoked when the Help button is clicked.</span></span> <span data-ttu-id="81967-140">クラスを継承すると、イベントを処理するには、このメソッドがオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="81967-140">Inheriting classes can override this method to handle the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerWndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int OwnerWndProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OwnerWndProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">
          <span data-ttu-id="81967-141">送信するメッセージのウィンドウ ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-141">The window handle of the message to send.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="81967-142">送信する Win32 メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-142">The Win32 message to send.</span>
          </span>
        </param>
        <param name="wparam">
          <span data-ttu-id="81967-143">メッセージと一緒に送信する <c>wparam</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-143">The <c>wparam</c> to send with the message.</span>
          </span>
        </param>
        <param name="lparam">
          <span data-ttu-id="81967-144">メッセージと一緒に送信する <c>lparam</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-144">The <c>lparam</c> to send with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81967-145">コモン ダイアログ ボックスに特定の機能を追加するためにオーバーライドされる、オーナー ウィンドウ プロシージャを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-145">Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81967-146">送信されたメッセージの処理結果 (メッセージによって異なる)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-146">The result of the message processing, which is dependent on the message sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-147">コモン ダイアログ ボックスのオーナー ウィンドウに送信されたメッセージは、コントロールをここに転送されます。</span><span class="sxs-lookup"><span data-stu-id="81967-147">Control is transferred here when messages are sent to the owner window of the common dialog box.</span></span> <span data-ttu-id="81967-148">クラスを継承すると、コモン ダイアログ ボックスに特定の機能を追加するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="81967-148">Inheriting classes can override this method to add specific functionality to a common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="81967-149">アンマネージ コードを呼び出す即時呼び出し元がします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-149">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="81967-150">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-150">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81967-151">派生クラスでオーバーライドされるときに、コモン ダイアログ ボックスのプロパティを既定値にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-151">When overridden in a derived class, resets the properties of a common dialog box to their default values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="81967-152">このメソッドを呼び出すアンマネージ コードです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-152">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="81967-153">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="81967-154">クラスを継承すると、そのプロパティをリセットするには、このメソッドをオーバーライドできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="81967-154">Inheriting classes can override this method to reset their properties.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected abstract bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool RunDialog(IntPtr hwndOwner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">
          <span data-ttu-id="81967-155">コモン ダイアログ ボックスのオーナー ウィンドウのウィンドウ ハンドルを表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-155">A value that represents the window handle of the owner window for the common dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81967-156">派生クラスでオーバーライドされるときに、コモン ダイアログ ボックスを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-156">When overridden in a derived class, specifies a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81967-157">ダイアログ ボックスが正常に動作した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-157">
              <see langword="true" /> if the dialog box was successfully run; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-158">コモン ダイアログ ボックスのユーザーが呼び出すときに、このメソッドが呼び出される<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>の継承クラスによってオーバーライドする必要がありますと<xref:System.Windows.Forms.CommonDialog>特定コモン ダイアログ ボックスを実装します。</span><span class="sxs-lookup"><span data-stu-id="81967-158">This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="81967-159">このメソッドを呼び出すアンマネージ コードです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-159">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="81967-160">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
        <altmember cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81967-161">コモン ダイアログ ボックスを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-161">Runs a common dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81967-162">既定のオーナーを使用してコモン ダイアログ ボックスを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-162">Runs a common dialog box with a default owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81967-163">ユーザーがダイアログ ボックスの [OK] をクリックした場合は <see cref="F:System.Windows.Forms.DialogResult.OK" />。それ以外の場合は <see cref="F:System.Windows.Forms.DialogResult.Cancel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-163">
              <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-164">このメソッドは、<xref:System.Windows.Forms.CommonDialog.RunDialog%2A> を実装します。</span><span class="sxs-lookup"><span data-stu-id="81967-164">This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81967-165">次のコード例では、<xref:System.Windows.Forms.ColorDialog>の実装<xref:System.Windows.Forms.CommonDialog>示されているを作成して、ダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="81967-165">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="81967-166">この例を持つ既存のフォーム内から、メソッドが呼び出されることが必要です、<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.Button>に配置されます。</span><span class="sxs-lookup"><span data-stu-id="81967-166">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="81967-167">印刷する、<see cref="T:System.Windows.Forms.PrintDialog" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-167">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span>
          </span>
          <span data-ttu-id="81967-168">関連する列挙。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-168">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="81967-169">このメソッドを呼び出すセーフ サブウィンドウです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-169">for safe subwindows to call this method.</span>
          </span>
          <span data-ttu-id="81967-170">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-170">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="81967-171">モーダル ダイアログ ボックスを所有するトップレベル ウィンドウを表す <see cref="T:System.Windows.Forms.IWin32Window" /> を実装しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-171">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81967-172">指定したオーナーを使用してコモン ダイアログ ボックスを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-172">Runs a common dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81967-173">ユーザーがダイアログ ボックスの **[OK]** をクリックした場合は <see cref="F:System.Windows.Forms.DialogResult.OK" />。それ以外の場合は <see cref="F:System.Windows.Forms.DialogResult.Cancel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-173">
              <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks **OK** in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-174">このバージョンの<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>メソッドでは、特定のフォームまたはコントロールに表示されるダイアログ ボックスを所有するを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="81967-174">This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown.</span></span> <span data-ttu-id="81967-175">このパラメーターを持たないメソッドのバージョンを使用する場合、ダイアログ ボックスが表示されているは所有自動的に、アプリケーションの現在アクティブなウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="81967-175">If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="81967-176">印刷する、<see cref="T:System.Windows.Forms.PrintDialog" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-176">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span>
          </span>
          <span data-ttu-id="81967-177">関連する列挙。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-177">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="81967-178">このメソッドを呼び出すセーフ サブウィンドウです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-178">for safe subwindows to call this method.</span>
          </span>
          <span data-ttu-id="81967-179">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-179">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CommonDialog.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81967-180">コントロールに関するデータを格納するオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-180">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81967-181">
            <see cref="T:System.Windows.Forms.CommonDialog" /> に関するデータを格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81967-181">The object that contains data about the <see cref="T:System.Windows.Forms.CommonDialog" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81967-182">このプロパティを使用して、コントロールの任意の情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="81967-182">Use this property to store arbitrary information about the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>