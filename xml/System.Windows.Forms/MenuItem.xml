<Type Name="MenuItem" FullName="System.Windows.Forms.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca5a4ab59a1098252e54e3eb34f9835cd5d93de0" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70371476" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuItem extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6e4cf-101"><see cref="T:System.Windows.Forms.MainMenu" /> または <see cref="T:System.Windows.Forms.ContextMenu" /> 内に表示される個別の項目を表します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-101">Represents an individual item that is displayed within a <see cref="T:System.Windows.Forms.MainMenu" /> or <see cref="T:System.Windows.Forms.ContextMenu" />.</span></span> <span data-ttu-id="6e4cf-102"><see cref="T:System.Windows.Forms.ToolStripMenuItem" /> コントロールは、以前のバージョンの <see cref="T:System.Windows.Forms.MenuItem" /> コントロールに代わると共に追加の機能を提供します。ただし、<see cref="T:System.Windows.Forms.MenuItem" /> コントロールは、下位互換性を保つ目的および将来使用する目的で保持されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-102">Although <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> replaces and adds functionality to the <see cref="T:System.Windows.Forms.MenuItem" /> control of previous versions, <see cref="T:System.Windows.Forms.MenuItem" /> is retained for both backward compatibility and future use if you choose.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-103">を表示するに<xref:System.Windows.Forms.MainMenu>は、をまたは<xref:System.Windows.Forms.ContextMenu>に追加する必要があります。 <xref:System.Windows.Forms.MenuItem></span><span class="sxs-lookup"><span data-stu-id="6e4cf-103">In order for a <xref:System.Windows.Forms.MenuItem> to be displayed, you must add it to a <xref:System.Windows.Forms.MainMenu> or <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="6e4cf-104">サブメニューを作成するには<xref:System.Windows.Forms.MenuItem> 、親<xref:System.Windows.Forms.MenuItem>の<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティにオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-104">To create submenus, you can add <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.Menu.MenuItems%2A> property of the parent <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 <span data-ttu-id="6e4cf-105">クラス<xref:System.Windows.Forms.MenuItem>には、メニュー項目の外観と機能を構成できるようにするプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-105">The <xref:System.Windows.Forms.MenuItem> class provides properties that enable you to configure the appearance and functionality of a menu item.</span></span> <span data-ttu-id="6e4cf-106">メニュー項目の横にチェックマークを表示するには、 <xref:System.Windows.Forms.MenuItem.Checked%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-106">To display a check mark next to a menu item, use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property.</span></span> <span data-ttu-id="6e4cf-107">この機能を使用すると、相互に排他的なメニュー項目の一覧で選択されているメニュー項目を識別できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-107">You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</span></span> <span data-ttu-id="6e4cf-108">たとえば、 <xref:System.Windows.Forms.TextBox>コントロールのテキストの色を設定するための一連のメニュー項目がある場合は、 <xref:System.Windows.Forms.MenuItem.Checked%2A>プロパティを使用して、現在選択されている色を識別できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-108">For example, if you have a set of menu items for setting the color of text in a <xref:System.Windows.Forms.TextBox> control, you can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify which color is currently selected.</span></span> <span data-ttu-id="6e4cf-109"><xref:System.Windows.Forms.MenuItem.Shortcut%2A>プロパティを使用して、メニュー項目を選択するために押すことができるキーボードの組み合わせを定義できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-109">The <xref:System.Windows.Forms.MenuItem.Shortcut%2A> property can be used to define a keyboard combination that can be pressed to select the menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-110">マルチ<xref:System.Windows.Forms.MenuItem>ドキュメントインターフェイス (mdi) アプリケーションに表示されるオブジェクトの場合は、 <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>メソッドを使用して、の MDI 親のメニューを子フォームと結合して、統合メニュー構造を作成できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-110">For <xref:System.Windows.Forms.MenuItem> objects displayed in a Multiple Document Interface (MDI) application, you can use the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</span></span> <span data-ttu-id="6e4cf-111"><xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>となど<xref:System.Windows.Forms.ContextMenu>では、を同時に複数の場所で再利用することはできないため、メソッドを使用して、別の場所で使用するのコピーを作成できます。 <xref:System.Windows.Forms.MainMenu></span><span class="sxs-lookup"><span data-stu-id="6e4cf-111">Because a <xref:System.Windows.Forms.MenuItem> cannot be reused in multiple locations at the same time, such as in a <xref:System.Windows.Forms.MainMenu> and a <xref:System.Windows.Forms.ContextMenu>, you can use the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> for use in another location.</span></span>  
  
 <span data-ttu-id="6e4cf-112"><xref:System.Windows.Forms.MenuItem.Popup>イベントを使用すると、メニューが表示される前にタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-112">The <xref:System.Windows.Forms.MenuItem.Popup> event enables you to perform tasks before a menu is displayed.</span></span> <span data-ttu-id="6e4cf-113">たとえば、このイベントのイベントハンドラーを作成して、コードの状態に基づいてメニュー項目を表示または非表示にすることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-113">For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</span></span> <span data-ttu-id="6e4cf-114">この<xref:System.Windows.Forms.MenuItem.Select>イベントを使用すると、ユーザーがメニュー項目の上にマウスポインターを置いたときに、アプリケーションのメニュー項目の詳細なヘルプを提供するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-114">The <xref:System.Windows.Forms.MenuItem.Select> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-115">次のコード例では、フォームのメニュー構造を作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-115">The following code example creates a menu structure for a form.</span></span> <span data-ttu-id="6e4cf-116">このコード例では<xref:System.Windows.Forms.MenuItem> 、トップレベルのメニュー項目を表すを追加し、フォントサイズを選択するためにサブメニュー項目を追加して、アプリケーションで大きいフォントと小さいフォントの選択肢を表すメニュー項目に2つのサブメニュー項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-116">The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</span></span> <span data-ttu-id="6e4cf-117">この例では、という<xref:System.Windows.Forms.MainMenu>名前`mainMenu1`のオブジェクトと<xref:System.Windows.Forms.MenuItem> 、 `menuItem2`、 `menuItem1`、 `menuItem3`、およびと`menuItem4`いう名前の4つのオブジェクトが必要です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-117">The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.</span></span>  
  
 [!code-cpp[Classic Menu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu Example/CS/source.cs#1)]
 [!code-vb[Classic Menu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MainMenu" />
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuMerge" />
    <altmember cref="T:System.Windows.Forms.ContextMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e4cf-118"><see cref="T:System.Windows.Forms.MenuItem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-119">空白のキャプションを使用して、<see cref="T:System.Windows.Forms.MenuItem" /> を初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-119">Initializes a <see cref="T:System.Windows.Forms.MenuItem" /> with a blank caption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-120">このコンストラクターを使用して<xref:System.Windows.Forms.MenuItem>空のを作成した後は、 <xref:System.Windows.Forms.MenuItem>クラスのプロパティとメソッドを使用して、 <xref:System.Windows.Forms.MenuItem>の外観と動作を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-120">Once you have created a blank <xref:System.Windows.Forms.MenuItem> using this constructor, you can use the properties and methods of the <xref:System.Windows.Forms.MenuItem> class to specify the appearance and behavior of your <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-121">次のコード例では<xref:System.Windows.Forms.MenuItem> 、このバージョンのコンストラクターを使用してを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-121">The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="6e4cf-122">メニュー項目のキャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-122">The caption for the menu item.</span></span></param>
        <summary><span data-ttu-id="6e4cf-123">メニュー項目のキャプションを指定して、<see cref="T:System.Windows.Forms.MenuItem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-123">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-124">`text`パラメーターを使用してメニュー項目のキャプションを指定する場合、アクセスキーとして使用する文字の前に ' & ' 文字を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-124">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' character before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-125">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-125">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-126">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-126">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="6e4cf-127">パラメーターを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。 `text`</span><span class="sxs-lookup"><span data-stu-id="6e4cf-127">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-128">次のコード例では<xref:System.Windows.Forms.MenuItem> 、構築時にメニュー項目のキャプションを指定するを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-128">The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, onClick As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="6e4cf-129">メニュー項目のキャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-129">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="6e4cf-130">このメニュー項目の <see cref="T:System.EventHandler" /> イベントを処理する <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-130">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <summary><span data-ttu-id="6e4cf-131">メニュー項目のキャプション、<see cref="E:System.Windows.Forms.MenuItem.Click" /> イベントを処理するイベント ハンドラーを指定して、クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-131">Initializes a new instance of the class with a specified caption and event handler for the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event of the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-132">`text`パラメーターを使用してメニュー項目のキャプションを指定する場合、アクセスキーとして使用する文字の前に ' & ' を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-132">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-133">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-133">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-134">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-134">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="6e4cf-135">パラメーターを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。 `text`</span><span class="sxs-lookup"><span data-stu-id="6e4cf-135">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-136">また、このコンストラクターを使用して、作成されるメニュー項目の<xref:System.Windows.Forms.MenuItem.Click>イベントを処理するデリゲートを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-136">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="6e4cf-137">この<xref:System.EventHandler>コンストラクターに渡すは、 <xref:System.Windows.Forms.MenuItem.Click>イベントを処理できるイベントハンドラーを呼び出すように構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-137">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="6e4cf-138">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-138">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-139">次のコード例では<xref:System.Windows.Forms.MenuItem> 、指定されたキャプション<xref:System.EventHandler>と、メニュー項目の<xref:System.Windows.Forms.MenuItem.Click>イベントを処理するイベントハンドラーに接続されたデリゲートを使用して、オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-139">The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="6e4cf-140">メニュー項目のキャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-140">The caption for the menu item.</span></span></param>
        <param name="items"><span data-ttu-id="6e4cf-141">このメニュー項目のサブメニュー項目が格納されている <see cref="T:System.Windows.Forms.MenuItem" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-141">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="6e4cf-142">メニュー項目のキャプション、メニュー項目に対して定義されているサブメニュー項目の配列を指定して、クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-142">Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-143">`text`パラメーターを使用してメニュー項目のキャプションを指定する場合、アクセスキーとして使用する文字の前に ' & ' を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-143">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-144">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-144">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-145">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-145">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="6e4cf-146">パラメーターを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。 `text`</span><span class="sxs-lookup"><span data-stu-id="6e4cf-146">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-147">パラメーター `items`を使用すると、メニュー項目の配列を割り当てて、このメニュー項目のサブメニューを定義できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-147">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="6e4cf-148">配列内の各項目には、メニュー項目の配列を割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-148">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="6e4cf-149">これにより、完全なメニュー構造を作成し、メニュー項目のコンストラクターに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-149">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-150">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-150">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-151">次のコード例では、指定されたキャプションを使用してオブジェクトを作成します。このイベントハンドラーは、サブメニュー項目の配列内の各メニュー項目のイベントを処理するメソッドに接続されています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-151">The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.EventHandler onClick, valuetype System.Windows.Forms.Shortcut shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, EventHandler ^ onClick, System::Windows::Forms::Shortcut shortcut);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : string * EventHandler * System.Windows.Forms.Shortcut -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (text, onClick, shortcut)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="6e4cf-152">メニュー項目のキャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-152">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="6e4cf-153">このメニュー項目の <see cref="T:System.EventHandler" /> イベントを処理する <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-153">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="shortcut"><span data-ttu-id="6e4cf-154"><see cref="T:System.Windows.Forms.Shortcut" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-154">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <summary><span data-ttu-id="6e4cf-155">メニュー項目のキャプション、イベント ハンドラー、関連付けられているショートカット キーを指定して、クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-155">Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-156">`text`パラメーターを使用してメニュー項目のキャプションを指定する場合、アクセスキーとして使用する文字の前に ' & ' を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-156">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-157">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-157">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-158">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-158">You can use this feature to provide keyboard navigation for your menus.</span></span> <span data-ttu-id="6e4cf-159">このコンストラクターを使用すると、アクセスキーに加えてショートカットキーを指定して、キーボードナビゲーションを行うこともできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-159">This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</span></span> <span data-ttu-id="6e4cf-160">ショートカットキーを使用すると、メニュー項目のアクティブ化に使用できるキーの組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-160">Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-161">パラメーターを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。 `text`</span><span class="sxs-lookup"><span data-stu-id="6e4cf-161">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-162">また、このコンストラクターを使用して、作成されるメニュー項目の<xref:System.Windows.Forms.MenuItem.Click>イベントを処理するデリゲートを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-162">In addition, you can use this constructor to specify a delegate that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item being created.</span></span> <span data-ttu-id="6e4cf-163">この<xref:System.EventHandler>コンストラクターに渡すは、 <xref:System.Windows.Forms.MenuItem.Click>イベントを処理できるイベントハンドラーを呼び出すように構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-163">The <xref:System.EventHandler> that you pass to this constructor must be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="6e4cf-164">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-164">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-165">次のコード例では、指定されたキャプション、ショートカットキー、およびメニュー項目のイベントを処理するメソッドに接続されているイベントハンドラーを使用して、オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-165">The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MenuMerge mergeType, int32 mergeOrder, valuetype System.Windows.Forms.Shortcut shortcut, string text, class System.EventHandler onClick, class System.EventHandler onPopup, class System.EventHandler onSelect, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::Windows::Forms::MenuMerge mergeType, int mergeOrder, System::Windows::Forms::Shortcut shortcut, System::String ^ text, EventHandler ^ onClick, EventHandler ^ onPopup, EventHandler ^ onSelect, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MenuItem : System.Windows.Forms.MenuMerge * int * System.Windows.Forms.Shortcut * string * EventHandler * EventHandler * EventHandler * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="new System.Windows.Forms.MenuItem (mergeType, mergeOrder, shortcut, text, onClick, onPopup, onSelect, items)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeType" Type="System.Windows.Forms.MenuMerge" />
        <Parameter Name="mergeOrder" Type="System.Int32" />
        <Parameter Name="shortcut" Type="System.Windows.Forms.Shortcut" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="onPopup" Type="System.EventHandler" />
        <Parameter Name="onSelect" Type="System.EventHandler" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="mergeType"><span data-ttu-id="6e4cf-166"><see cref="T:System.Windows.Forms.MenuMerge" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-166">One of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></param>
        <param name="mergeOrder"><span data-ttu-id="6e4cf-167">メニュー項目がマージされた場合に、このメニュー項目がマージ後のメニューで占める位置を相対的に示す値。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-167">The relative position that this menu item will take in a merged menu.</span></span></param>
        <param name="shortcut"><span data-ttu-id="6e4cf-168"><see cref="T:System.Windows.Forms.Shortcut" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-168">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></param>
        <param name="text"><span data-ttu-id="6e4cf-169">メニュー項目のキャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-169">The caption for the menu item.</span></span></param>
        <param name="onClick"><span data-ttu-id="6e4cf-170">このメニュー項目の <see cref="T:System.EventHandler" /> イベントを処理する <see cref="E:System.Windows.Forms.MenuItem.Click" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-170">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event for this menu item.</span></span></param>
        <param name="onPopup"><span data-ttu-id="6e4cf-171">このメニュー項目の <see cref="T:System.EventHandler" /> イベントを処理する <see cref="E:System.Windows.Forms.MenuItem.Popup" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-171">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event for this menu item.</span></span></param>
        <param name="onSelect"><span data-ttu-id="6e4cf-172">このメニュー項目の <see cref="T:System.EventHandler" /> イベントを処理する <see cref="E:System.Windows.Forms.MenuItem.Select" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-172">The <see cref="T:System.EventHandler" /> that handles the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></param>
        <param name="items"><span data-ttu-id="6e4cf-173">このメニュー項目のサブメニュー項目が格納されている <see cref="T:System.Windows.Forms.MenuItem" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-173">An array of <see cref="T:System.Windows.Forms.MenuItem" /> objects that contains the submenu items for this menu item.</span></span></param>
        <summary><span data-ttu-id="6e4cf-174">キャプション、<see cref="T:System.Windows.Forms.MenuItem" />、<see cref="E:System.Windows.Forms.MenuItem.Click" />、<see cref="E:System.Windows.Forms.MenuItem.Select" /> の各イベントに対して定義されているイベント ハンドラー、メニュー項目のショートカット キー、マージの種類、およびマージ順序を指定して、<see cref="E:System.Windows.Forms.MenuItem.Popup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-174">Initializes a new instance of the <see cref="T:System.Windows.Forms.MenuItem" /> class with a specified caption; defined event-handlers for the <see cref="E:System.Windows.Forms.MenuItem.Click" />, <see cref="E:System.Windows.Forms.MenuItem.Select" /> and <see cref="E:System.Windows.Forms.MenuItem.Popup" /> events; a shortcut key; a merge type; and order specified for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-175">`text`パラメーターを使用してメニュー項目のキャプションを指定する場合、アクセスキーとして使用する文字の前に ' & ' を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-175">When you specify a caption for your menu item with the `text` parameter, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-176">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-176">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-177">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-177">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="6e4cf-178">パラメーターを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。 `text`</span><span class="sxs-lookup"><span data-stu-id="6e4cf-178">Setting the `text` parameter to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-179">パラメーター `items`を使用すると、メニュー項目の配列を割り当てて、このメニュー項目のサブメニューを定義できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-179">The `items` parameter enables you to assign an array of menu items to define a submenu of this menu item.</span></span> <span data-ttu-id="6e4cf-180">配列内の各項目には、メニュー項目の配列を割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-180">Each item in the array can also have an array of menu items assigned to it.</span></span> <span data-ttu-id="6e4cf-181">これにより、完全なメニュー構造を作成し、メニュー項目のコンストラクターに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-181">This enables you to create complete menu structures and assign them to the constructor for the menu item.</span></span>  
  
 <span data-ttu-id="6e4cf-182">パラメーター `mergeType` と`mergeOrder`パラメーターを使用すると、メニュー項目が別のメニューにマージされた場合に、このメニュー項目がどのように動作するかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-182">The `mergeType` and `mergeOrder` parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</span></span> <span data-ttu-id="6e4cf-183">`mergeType`パラメーターに指定する値に応じて、メニュー項目とそのサブメニュー項目を、マージするメニューと共に追加、削除、置換、またはマージできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-183">Depending on the value you specify for the `mergeType` parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</span></span> <span data-ttu-id="6e4cf-184">パラメーター `mergeOrder`は、メニューをマージするときに、作成されるメニュー項目を配置する場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-184">The `mergeOrder` parameter determines where the menu item being created will be positioned when the menu is merged.</span></span>  
  
 <span data-ttu-id="6e4cf-185">また、このコンストラクターを使用してを<xref:System.Windows.Forms.MenuItem>作成し、メニュー項目のクリックを処理するコード内のイベントハンドラーに接続することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-185">In addition, you can use this constructor to create a <xref:System.Windows.Forms.MenuItem> and have it connected to an event handler in your code that will process the click of the menu item.</span></span> <span data-ttu-id="6e4cf-186">この<xref:System.EventHandler>コンストラクターに渡すは、 <xref:System.Windows.Forms.MenuItem.Click>イベントを処理できるイベントハンドラーを呼び出すように構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-186">The <xref:System.EventHandler> that you pass into this constructor should be configured to call an event handler that can handle the <xref:System.Windows.Forms.MenuItem.Click> event.</span></span> <span data-ttu-id="6e4cf-187">このコンストラクターのバージョンを使用する<xref:System.Windows.Forms.MenuItem.Popup>と、イベントと<xref:System.Windows.Forms.MenuItem.Select>イベントを接続して、このメニュー項目がいつ選択されたかを判断することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-187">By using this constructor version, you can also connect the <xref:System.Windows.Forms.MenuItem.Popup> and <xref:System.Windows.Forms.MenuItem.Select> events to determine when this menu item is selected.</span></span> <span data-ttu-id="6e4cf-188">これらのイベントは、サブメニュー項目の横にチェックマークを表示するかどうかや、アプリケーションの状態に基づいてメニュー項目を有効または無効にするかどうかを決定するなどのタスクに使用できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-188">You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</span></span> <span data-ttu-id="6e4cf-189">イベント<xref:System.Windows.Forms.MenuItem.Select>と<xref:System.Windows.Forms.MenuItem.Click>イベントは、親メニュー <xref:System.Windows.Forms.MenuItem>項目ではないオブジェクトに対してのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-189">The <xref:System.Windows.Forms.MenuItem.Select> and <xref:System.Windows.Forms.MenuItem.Click> events are raised only for <xref:System.Windows.Forms.MenuItem> objects that are not parent menu items.</span></span> <span data-ttu-id="6e4cf-190">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-190">For more information on handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-191">次のコード例では、キャプションとショートカットキーを持つメニュー項目を作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-191">The following code example creates a menu item that has a caption and shortcut key.</span></span> <span data-ttu-id="6e4cf-192">メニュー項目には<xref:System.Windows.Forms.MenuItem.Popup>、、 <xref:System.Windows.Forms.MenuItem.Click>、および<xref:System.Windows.Forms.MenuItem.Select>の各イベントに対して定義されたイベントハンドラーもあります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-192">The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events.</span></span> <span data-ttu-id="6e4cf-193">このメニュー項目がマージされると、メニュー項目がメニューに追加され、結合順序が0になります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-193">If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</span></span>  
  
 [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MenuItem5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Popup" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Select" />
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="BarBreak">
      <MemberSignature Language="C#" Value="public bool BarBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BarBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.BarBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property BarBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BarBreak { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BarBreak : bool with get, set" Usage="System.Windows.Forms.MenuItem.BarBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-194"><see cref="T:System.Windows.Forms.MenuItem" /> が、新しい行 (<see cref="T:System.Windows.Forms.MainMenu" /> オブジェクトに追加されたメニュー項目の場合) または新しい列 (<see cref="T:System.Windows.Forms.ContextMenu" /> に表示されるサブメニュー項目またはメニュー項目の場合) に配置されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-194">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" /> is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a submenu item or menu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="6e4cf-195">メニュー項目が新しい行または新しい列に配置される場合は <see langword="true" />。メニュー項目が既定の位置に配置される場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-195"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="6e4cf-196">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-196">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-197">プロパティを使用し<xref:System.Windows.Forms.MenuItem.BarBreak%2A>てメニューを作成し、各メニュー項目を縦に並べて表示するのではなく、横方向に配置することができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-197">You can use the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="6e4cf-198">このプロパティを使用して、トップレベルメニュー項目の複数行を含むメニューバーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-198">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
 <span data-ttu-id="6e4cf-199">このプロパティは、プロパティ<xref:System.Windows.Forms.MenuItem.Break%2A>がに`true`設定されている<xref:System.Windows.Forms.MenuItem.Break%2A>各メニュー項目の左端にバーが表示されるという点で、プロパティとは異なります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-199">This property differs from the <xref:System.Windows.Forms.MenuItem.Break%2A> property in that a bar is displayed on the left edge of each menu item that has the <xref:System.Windows.Forms.MenuItem.Break%2A> property set to `true`.</span></span> <span data-ttu-id="6e4cf-200">バーは、メニュー項目がトップレベルのメニュー項目ではない場合にのみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-200">The bar is only displayed when the menu item is not a top-level menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-201">次のコード例では<xref:System.Windows.Forms.MenuItem> 、2つのサブメニュー項目を持つを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-201">The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items.</span></span> <span data-ttu-id="6e4cf-202">2つのサブメニュー項目は、 <xref:System.Windows.Forms.MenuItem.BarBreak%2A>プロパティを使用して垂直方向ではなく、水平方向に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-202">The two submenu items are displayed horizontally instead of vertically using the <xref:System.Windows.Forms.MenuItem.BarBreak%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.BarBreak Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.BarBreak Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.BarBreak Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Break" />
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public bool Break { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Break" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Break" />
      <MemberSignature Language="VB.NET" Value="Public Property Break As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Break { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Break : bool with get, set" Usage="System.Windows.Forms.MenuItem.Break" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-203">項目が、新しい行 (<see cref="T:System.Windows.Forms.MainMenu" /> オブジェクトに追加されたメニュー項目の場合) または新しい列 (<see cref="T:System.Windows.Forms.ContextMenu" /> に表示されるサブメニュー項目またはメニュー項目の場合) に配置されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-203">Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <see cref="T:System.Windows.Forms.MainMenu" /> object) or in a new column (for a menu item or submenu item displayed in a <see cref="T:System.Windows.Forms.ContextMenu" />).</span></span></summary>
        <value><span data-ttu-id="6e4cf-204">メニュー項目が新しい行または新しい列に配置される場合は <see langword="true" />。メニュー項目が既定の位置に配置される場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-204"><see langword="true" /> if the menu item is placed on a new line or in a new column; <see langword="false" /> if the menu item is left in its default placement.</span></span> <span data-ttu-id="6e4cf-205">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-206">プロパティを使用し<xref:System.Windows.Forms.MenuItem.Break%2A>てメニューを作成し、各メニューを縦に並べた一覧ではなく、横方向に配置できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-206">You can use the <xref:System.Windows.Forms.MenuItem.Break%2A> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</span></span> <span data-ttu-id="6e4cf-207">このプロパティを使用して、トップレベルメニュー項目の複数行を含むメニューバーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-207">You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-208">次のコード例では、一番上の行にトップレベルのメニュー項目を2つ、一番下の行に1つのメニュー項目を含むメニューを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-208">The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</span></span>  
  
 [!code-cpp[Classic MenuItem.Break Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Break Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Break Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Break Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Break Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.BarBreak" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.MenuItem.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-209">メニュー項目のテキストの横にチェック マークを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-209">Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-210">メニュー項目の隣にチェック マークがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-210"><see langword="true" /> if there is a check mark next to the menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e4cf-211">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-212"><xref:System.Windows.Forms.MenuItem.Checked%2A>プロパティをメニュー内の他のメニュー項目と組み合わせて使用すると、アプリケーションの状態を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-212">You can use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property in combination with other menu items in a menu to provide state for an application.</span></span> <span data-ttu-id="6e4cf-213">たとえば、項目グループのメニュー項目にチェックマークを付けて、アプリケーションのテキストに表示されるフォントのサイズを特定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-213">For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</span></span> <span data-ttu-id="6e4cf-214">また、 <xref:System.Windows.Forms.MenuItem.Checked%2A>プロパティを使用して、相互に排他的なメニュー項目のグループで選択したメニュー項目を識別することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-214">You can also use the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to identify the selected menu item in a group of mutually exclusive menu items.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4cf-215">トップレベルのメニュー項目の`true`場合、このプロパティをに設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-215">This property cannot be set to `true` for top-level menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-216">次のコード例では<xref:System.Windows.Forms.MenuItem.Checked%2A> 、プロパティを使用して、アプリケーションの状態を指定しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-216">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to provide the state in an application.</span></span> <span data-ttu-id="6e4cf-217">この例では、メニュー項目のグループを使用して、 <xref:System.Windows.Forms.TextBox>コントロール内のテキストの色を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-217">In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="6e4cf-218">指定されたイベントハンドラーは、 <xref:System.Windows.Forms.MenuItem.Click> 3 つのメニュー項目のイベントによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-218">The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items.</span></span> <span data-ttu-id="6e4cf-219">各メニュー項目は、テキストの色`menuItemRed` 、(赤) `menuItemGreen` 、(緑)、 `menuItemBlue`または (青) を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-219">Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue).</span></span> <span data-ttu-id="6e4cf-220">イベントハンドラーは、どのメニュー項目がクリックされたかを判断し、選択されたメニュー項目にチェックマークを配置<xref:System.Windows.Forms.TextBox>し、フォームのコントロールのテキストの色を変更します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-220">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="6e4cf-221">この例では、 <xref:System.Drawing>このコードが配置されているフォームに名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-221">The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in.</span></span> <span data-ttu-id="6e4cf-222">また、この例では<xref:System.Windows.Forms.TextBox> 、という名前のであるという`textBox1`形式のにが追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-222">The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Checked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Checked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Checked Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Checked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Checked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6e4cf-223"><see cref="T:System.Windows.Forms.MenuItem" /> はトップレベル メニューであるか、子があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-223">The <see cref="T:System.Windows.Forms.MenuItem" /> is a top-level menu or has children.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-224">メニュー項目に対して定義されているショートカット キーまたはアクセス キーを使用して、そのメニュー項目がクリックまたは選択されると発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-224">Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-225">イベントは、ユーザーが<xref:System.Windows.Forms.MenuItem>これをクリックしたときに発生します。 <xref:System.Windows.Forms.MenuItem.Click></span><span class="sxs-lookup"><span data-stu-id="6e4cf-225">The <xref:System.Windows.Forms.MenuItem.Click> event occurs when this <xref:System.Windows.Forms.MenuItem> is clicked by the user.</span></span> <span data-ttu-id="6e4cf-226">このイベントは、ユーザーがキーボードを使用してメニュー項目を選択し、Enter キーを押した場合にも発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-226">This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</span></span> <span data-ttu-id="6e4cf-227">また、 <xref:System.Windows.Forms.MenuItem>に関連付けられているアクセスキーまたはショートカットキーが押されている場合にも発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-227">It can also occur if an access key or shortcut key is pressed that is associated with the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-228">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-228">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4cf-229">のプロパティ<xref:System.Windows.Forms.Menu.MenuItems%2A> <xref:System.Windows.Forms.MenuItem>に項目が含まれている場合、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-229">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="6e4cf-230">このイベントは、親メニュー項目に対しては発生しません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-230">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-231"><xref:System.Windows.Forms.MenuItem.Click>イベントを使用してを<xref:System.Windows.Forms.MenuItem>クリックしたときにタスクを実行する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-231">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="6e4cf-232">この例では<xref:System.Windows.Forms.MainMenu> 、 `mainMenu1`というを作成し`topMenuItem` 、`File`2 つ`menuItem1` <xref:System.Windows.Forms.MenuItem>の`Open`オブジェクト () と () を追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-232">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="6e4cf-233">`Click` 次`menuItem1_Click`に、イベントをイベントハンドラーに接続します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-233">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="6e4cf-234">ユーザーが`Open`メニュー項目<xref:System.Windows.Forms.OpenFileDialog>をクリックすると、が初期化されて表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-234">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="6e4cf-235">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-235">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloneMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e4cf-236"><see cref="T:System.Windows.Forms.MenuItem" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-236">Creates a copy of a <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ CloneMenu();" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.CloneMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-237">現在の <see cref="T:System.Windows.Forms.MenuItem" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-237">Creates a copy of the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="6e4cf-238">複製されたメニュー項目を表す <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-238">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the duplicated menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-239"><xref:System.Windows.Forms.MenuItem>のコピーを取得しない限り、 <xref:System.Windows.Forms.MenuItem>複数の場所でオブジェクトを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-239"><xref:System.Windows.Forms.MenuItem> objects cannot be used in more than one place unless you obtain a copy of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-240">このメソッドを呼び出して<xref:System.Windows.Forms.ContextMenu>、アプリケーション内の、、またはその他の<xref:System.Windows.Forms.MenuItem>で使用<xref:System.Windows.Forms.MainMenu>するために、このメニュー項目のコピーを作成できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-240">You can call this method to create a copy of this menu item for use in a <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, or other <xref:System.Windows.Forms.MenuItem> within your application.</span></span> <span data-ttu-id="6e4cf-241">メニュー項目が複製されると、元のメニュー項目に指定されているすべてのイベントハンドラーは、複製されたバージョンのメニュー項目で引き続き機能します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-241">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="6e4cf-242">たとえば、を<xref:System.Windows.Forms.MenuItem>作成し、イベントをイベントハンドラー <xref:System.Windows.Forms.MenuItem.Click>に接続した場合などです。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-242">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="6e4cf-243">メニュー項目が複製されると、複製されたメニュー項目は同じイベントハンドラーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-243">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-244">を<xref:System.Windows.Forms.MenuItem>複製し、 <xref:System.Windows.Forms.ContextMenu>に表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-244">The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="6e4cf-245">この例では、 <xref:System.Windows.Forms.MenuItem>が`menuItem1`という<xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.ContextMenu>名前のフォーム上のに存在し、という`contextMenu1`名前のオブジェクトがフォームにも存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-245">The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CloneMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CloneMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CloneMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.CloneMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="6e4cf-246">コピー対象のメニュー項目を表す <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-246">The <see cref="T:System.Windows.Forms.MenuItem" /> that represents the menu item to copy.</span></span></param>
        <summary><span data-ttu-id="6e4cf-247">指定した <see cref="T:System.Windows.Forms.MenuItem" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-247">Creates a copy of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-248">ショートカットメニューまたはアプリケーション内の別のメニュー構造で使用するために既に作成したメニュー項目のコピーを作成するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-248">Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</span></span> <span data-ttu-id="6e4cf-249">このバージョンの<xref:System.Windows.Forms.MenuItem.CloneMenu%2A>では、メソッドを呼び出す<xref:System.Windows.Forms.MenuItem>メニュー項目ではなく、コピーする特定のを指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-249">This version of <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> allows you to specify a specific <xref:System.Windows.Forms.MenuItem> to copy instead of the menu item that is calling the method.</span></span> <span data-ttu-id="6e4cf-250">このメソッドを使用すると、別<xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MenuItem>ののコピーを使用して新しいオブジェクトを初期化できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-250">You can use this method to initialize a new <xref:System.Windows.Forms.MenuItem> object with a copy of another <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-251">メニュー項目が複製されると、元のメニュー項目に指定されているすべてのイベントハンドラーは、複製されたバージョンのメニュー項目で引き続き機能します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-251">When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</span></span> <span data-ttu-id="6e4cf-252">たとえば、を<xref:System.Windows.Forms.MenuItem>作成し、イベントをイベントハンドラー <xref:System.Windows.Forms.MenuItem.Click>に接続した場合などです。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-252">For example, if you created a <xref:System.Windows.Forms.MenuItem> and connected its <xref:System.Windows.Forms.MenuItem.Click> event to an event handler.</span></span> <span data-ttu-id="6e4cf-253">メニュー項目が複製されると、複製されたメニュー項目は同じイベントハンドラーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-253">When the menu item is cloned, the cloned menu item will call the same event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-254">次のコード例では、 <xref:System.Windows.Forms.MenuItem>フォームので<xref:System.Windows.Forms.MainMenu>使用される<xref:System.Windows.Forms.MenuItem>既存ののコピーを使用して、新しいを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-254">The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form.</span></span> <span data-ttu-id="6e4cf-255"><xref:System.Windows.Forms.MenuItem> 次<xref:System.Windows.Forms.ContextMenu>に、複製されたをフォームのに追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-255">The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form.</span></span> <span data-ttu-id="6e4cf-256">この例では、 <xref:System.Windows.Forms.MenuItem>が既に作成さ`menuItem1`れ、と<xref:System.Windows.Forms.ContextMenu>いう名前で、コントロールが`contextMenu1`作成され、という名前が付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-256">This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.CloneMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultItem">
      <MemberSignature Language="C#" Value="public bool DefaultItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultItem : bool with get, set" Usage="System.Windows.Forms.MenuItem.DefaultItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-257">メニュー項目が既定のメニュー項目かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-257">Gets or sets a value indicating whether the menu item is the default menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-258">メニュー項目がメニューの既定の項目の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-258"><see langword="true" /> if the menu item is the default item in a menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e4cf-259">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-260">メニューの既定のメニュー項目は、太字になっています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-260">The default menu item for a menu is boldfaced.</span></span> <span data-ttu-id="6e4cf-261">ユーザーが既定の項目を含むサブメニューをダブルクリックすると、既定の項目が選択され、サブメニューが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-261">When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</span></span> <span data-ttu-id="6e4cf-262"><xref:System.Windows.Forms.MenuItem.DefaultItem%2A>プロパティを使用して、メニューまたはショートカットメニューに表示される既定のアクションを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-262">You can use the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property to indicate, the default action that is expected in a menu or shortcut menu.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-263">次のコード例では、2つのサブメニュー項目を含むメニュー項目を作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-263">The following code example creates a menu item with two submenu items.</span></span> <span data-ttu-id="6e4cf-264">この例で`menuItem2`は、 <xref:System.Windows.Forms.MenuItem.DefaultItem%2A>プロパティを使用して、既定のメニュー項目としてを設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-264">The example sets `menuItem2` as the default menu item using the <xref:System.Windows.Forms.MenuItem.DefaultItem%2A> property.</span></span>  
  
 [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.DefaultItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.DefaultItem Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="menuItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6e4cf-265">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-265"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6e4cf-266"><see cref="T:System.Windows.Forms.MenuItem" /> で使用されていたリソース (メモリを除く) を解放します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-266">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-267"><xref:System.Windows.Forms.MenuItem> を使い終わったら、<xref:System.Windows.Forms.MenuItem.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-267">Call <xref:System.Windows.Forms.MenuItem.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-268"><xref:System.Windows.Forms.MenuItem.Dispose%2A>メソッドによって、<xref:System.Windows.Forms.MenuItem> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-268">The <xref:System.Windows.Forms.MenuItem.Dispose%2A> method leaves the <xref:System.Windows.Forms.MenuItem> in an unusable state.</span></span> <span data-ttu-id="6e4cf-269">を呼び出し<xref:System.Windows.Forms.MenuItem.Dispose%2A>た後は、に対するすべての<xref:System.Windows.Forms.MenuItem>参照を解放して、占有していたメモリがガベージコレクションによって回収されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-269">After calling <xref:System.Windows.Forms.MenuItem.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.MenuItem> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4cf-270"><xref:System.Windows.Forms.MenuItem>への最後の参照を解放する前に、必ず<xref:System.Windows.Forms.MenuItem.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-270">Always call <xref:System.Windows.Forms.MenuItem.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-271">それ以外の場合、 <xref:System.Windows.Forms.MenuItem>が使用しているリソースは、ガベージコレクションが<xref:System.Windows.Forms.MenuItem>オブジェクトのデストラクターを呼び出すまで解放されません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-271">Otherwise, the resources the <xref:System.Windows.Forms.MenuItem> is using will not be freed until garbage collection calls the <xref:System.Windows.Forms.MenuItem> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-272">メニュー項目の <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> プロパティが <see langword="true" /> に設定されていて、そのメニュー項目の描画が要求された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-272">Occurs when the <see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /> property of a menu item is set to <see langword="true" /> and a request is made to draw the menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-273">イベントハンドラー <xref:System.Windows.Forms.DrawItemEventArgs> <xref:System.Drawing.Graphics>に渡される引数は、オブジェクトを提供します。このオブジェクトを使用すると、メニュー項目の表面で描画やその他のグラフィカル操作を実行できます。 <xref:System.Windows.Forms.MenuItem.DrawItem></span><span class="sxs-lookup"><span data-stu-id="6e4cf-273">The <xref:System.Windows.Forms.DrawItemEventArgs> argument passed to a <xref:System.Windows.Forms.MenuItem.DrawItem> event handler provides a <xref:System.Drawing.Graphics> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</span></span> <span data-ttu-id="6e4cf-274">このイベントハンドラーを使用すると、アプリケーションのニーズを満たすカスタムメニューを作成できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-274">You can use this event handler to create custom menus that meet the needs of your application.</span></span> <span data-ttu-id="6e4cf-275">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-275">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-276"><xref:System.Windows.Forms.MenuItem.DrawItem>イベントを処理する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-276">The following code example demonstrates how to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="6e4cf-277">この例では、 <xref:System.Drawing.Brush> <xref:System.Drawing.Font>とを使用してメニュー項目を描画し<xref:System.Drawing.Rectangle> 、メニュー項目の周囲にを描画します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-277">This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item.</span></span> <span data-ttu-id="6e4cf-278">描画は<xref:System.Drawing.Graphics>オブジェクトを使用して実行され、 <xref:System.Windows.Forms.DrawItemEventArgs>パラメーターのイベントハンドラーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-278">The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter.</span></span> <span data-ttu-id="6e4cf-279">この例では、項目の<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>プロパティをに`true`初期化している必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-279">This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`.</span></span> <span data-ttu-id="6e4cf-280">このC#例では、次のコードをフォームのコンストラクターのの後`InitializeComponent`に追加して、イベントをフックします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-280">For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:</span></span>  
  
 `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  
  
 [!code-cpp[OwnerDraw example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/OwnerDraw example/CPP/form1.cpp#1)]
 [!code-csharp[OwnerDraw example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/OwnerDraw example/CS/form1.cs#1)]
 [!code-vb[OwnerDraw example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/OwnerDraw example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.MeasureItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-281">メニュー項目が有効であるどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-281">Gets or sets a value indicating whether the menu item is enabled.</span></span></summary>
        <value><span data-ttu-id="6e4cf-282">メニュー項目が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-282"><see langword="true" /> if the menu item is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e4cf-283">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-283">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-284">無効<xref:System.Windows.Forms.MenuItem>になっているは、その状態を示す灰色の色で表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-284">A <xref:System.Windows.Forms.MenuItem> that is disabled is displayed in a gray color to indicate its state.</span></span> <span data-ttu-id="6e4cf-285">親メニュー項目が無効になっている場合、すべてのサブメニュー項目は表示されません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-285">When a parent menu item is disabled, all submenu items are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-286">次のコード例は、 <xref:System.Windows.Forms.MenuItem.Popup>イベントを使用して、切り取り、コピー、および削除の各操作をサポートするオブジェクトが、表示されるメニューの前に有効になっているかどうか<xref:System.Windows.Forms.MenuItem>を判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-286">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="6e4cf-287">この例では`textBox1`、フォーム<xref:System.Windows.Forms.TextBox>上のコントロールが有効であるかどうか、入力フォーカスがあるかどうか、 <xref:System.Windows.Forms.MenuItem>およびオブジェクトを有効にする前にテキストが選択されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-287">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="6e4cf-288">この例では、 <xref:System.Windows.Forms.MenuItem> 、 `menuCopy`、およびと`menuCut` `menuDelete`いう名前の3つのオブジェクトが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-288">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.MenuItem.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-289">親メニュー内のメニュー項目の位置を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-289">Gets or sets a value indicating the position of the menu item in its parent menu.</span></span></summary>
        <value><span data-ttu-id="6e4cf-290">親メニュー内のメニュー項目の位置を表す 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-290">The zero-based index representing the position of the menu item in its parent menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-291">このプロパティは、親メニューのメニュー項目コレクション内のメニュー項目のインデックス位置を提供します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-291">This property provides the indexed position of a menu item in the menu item collection of its parent menu.</span></span> <span data-ttu-id="6e4cf-292">このプロパティを使用すると、メニュー項目の位置をメニュー内の別の場所に変更できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-292">You can use this property to reposition a menu item to a different location within its menu.</span></span> <span data-ttu-id="6e4cf-293">作成時にメニュー構造内の位置を<xref:System.Windows.Forms.MenuItem>指定するために、を作成するときにこのプロパティを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-293">You can also use this property when creating a <xref:System.Windows.Forms.MenuItem> to specify its position in a menu structure at the time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-294">次のコード例では、メニュー内の2つのメニュー項目の位置を切り替えます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-294">The following code example switches the position of two menu items in a menu.</span></span> <span data-ttu-id="6e4cf-295">次のコード例では、 <xref:System.Windows.Forms.MenuItem>とと`menuItem2`いう名前`menuItem1`の2つのオブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-295">The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`.</span></span> <span data-ttu-id="6e4cf-296">メニュー `menuItem1`項目は、メニュー内で1つ上の位置`menuItem2`に移動し、1つ上の位置に移動します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-296">The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.</span></span>  
  
 [!code-cpp[Classic MenuItem.Index Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Index Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Index Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Index Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Index Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6e4cf-297">代入された値が 0 未満か、項目数より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-297">The assigned value is less than zero or greater than the item count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsParent">
      <MemberSignature Language="C#" Value="public override bool IsParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.IsParent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsParent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsParent : bool" Usage="System.Windows.Forms.MenuItem.IsParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-298">メニュー項目に子メニュー項目が含まれているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-298">Gets a value indicating whether the menu item contains child menu items.</span></span></summary>
        <value><span data-ttu-id="6e4cf-299">メニュー項目に子メニュー項目が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-299"><see langword="true" /> if the menu item contains child menu items; <see langword="false" /> if the menu is a standalone menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-300">このプロパティをプロパティと共に<xref:System.Windows.Forms.MenuItem.Parent%2A>使用すると、メニュー構造全体を通じてコード内を移動できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-300">You can use this property with the <xref:System.Windows.Forms.MenuItem.Parent%2A> property to navigate in code through an entire menu structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-301">次のコード例では、 <xref:System.Windows.Forms.MenuItem>という名前`menuItem1`のに関連付けられているサブメニューがあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-301">The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`.</span></span> <span data-ttu-id="6e4cf-302">サブメニューが存在する場合は、 <xref:System.Windows.Forms.MenuItem.Enabled%2A>プロパティをに`false`設定して無効にします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-302">If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="6e4cf-303">この例では、という<xref:System.Windows.Forms.MenuItem>名前`menuItem1`のが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-303">The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.IsParent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.IsParent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.IsParent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.IsParent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MdiList">
      <MemberSignature Language="C#" Value="public bool MdiList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MdiList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MdiList" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MdiList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MdiList : bool with get, set" Usage="System.Windows.Forms.MenuItem.MdiList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-304">メニュー項目に、関連付けられているフォーム内に表示されるマルチ ドキュメント インターフェイス (MDI) 子ウィンドウのリストを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-304">Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</span></span></summary>
        <value><span data-ttu-id="6e4cf-305">このメニュー項目に MDI 子ウィンドウのリストを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-305"><see langword="true" /> if a list of the MDI child windows is displayed in this menu item; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e4cf-306">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-306">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-307">メニュー項目を選択して MDI 子ウィンドウの一覧を表示すると、そのリストがメニュー項目のサブメニューとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-307">When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</span></span> <span data-ttu-id="6e4cf-308">[ウィンドウ] の一覧には、MDI 子フォームとして定義されているフォームのみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-308">Only forms that are defined as MDI child forms are displayed in the window list.</span></span> <span data-ttu-id="6e4cf-309">一度に表示できる子ウィンドウは9つだけです。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-309">Only nine child windows can be displayed at a time.</span></span> <span data-ttu-id="6e4cf-310">9個を超える子ウィンドウが表示されている場合は、"その他のウィンドウ..."メニュー項目は、ウィンドウの一覧の最後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-310">If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</span></span> <span data-ttu-id="6e4cf-311">このメニュー項目をクリックすると、現在アクティブになっている子ウィンドウの完全な一覧を含むダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-311">Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-312">次のコード例では<xref:System.Windows.Forms.MenuItem> 、mdi フォームで現在開いている mdi 子フォームの一覧を表示するために使用するを作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-312">The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.</span></span>  
  
 [!code-cpp[Classic MenuItem.MdiList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MdiList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MdiList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MdiList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberSignature Language="F#" Value="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " Usage="member this.MeasureItem : System.Windows.Forms.MeasureItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-313">メニューにメニュー項目を描画する前に、そのメニュー項目のサイズを確認する必要がある場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-313">Occurs when the menu needs to know the size of a menu item before drawing it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-314">このイベントを発生させるには、メニュー項目の<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>プロパティがに`true`設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-314">In order for this event to be raised, you must have the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property of the menu item set to `true`.</span></span> <span data-ttu-id="6e4cf-315">このイベントは、メニュー項目のサイズを指定できるように、オーナー描画メニューが描画される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-315">This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</span></span> <span data-ttu-id="6e4cf-316">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-316">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-317">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-317">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="6e4cf-318">この例では、イベントハンドラーが<xref:System.Windows.Forms.MenuItem.MeasureItem>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-318">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span> <span data-ttu-id="6e4cf-319">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-319">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="6e4cf-320">コード例を実行するには、という名前<xref:System.Windows.Forms.MenuItem> `MenuItem1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-320">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`.</span></span> <span data-ttu-id="6e4cf-321">次に、イベントハンドラーが<xref:System.Windows.Forms.MenuItem.MeasureItem>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-321">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.MenuItem.MeasureItem> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#499](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#499)]
 [!code-vb[System.Windows.Forms.EventExamples#499](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#499)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.MenuItem.DrawItem" />
      </Docs>
    </Member>
    <Member MemberName="MenuID">
      <MemberSignature Language="C#" Value="protected int MenuID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MenuID" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MenuID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MenuID As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int MenuID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MenuID : int" Usage="System.Windows.Forms.MenuItem.MenuID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-322">メニュー項目の Windows 識別子を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-322">Gets a value indicating the Windows identifier for this menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-323">メニュー項目の Windows 識別子。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-323">The Windows identifier for this menu item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeMenu">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e4cf-324">この <see cref="T:System.Windows.Forms.MenuItem" /> と別の <see cref="T:System.Windows.Forms.MenuItem" /> をマージします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-324">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem MergeMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem MergeMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeMenu () As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ MergeMenu();" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : unit -&gt; System.Windows.Forms.MenuItem" Usage="menuItem.MergeMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-325">この <see cref="T:System.Windows.Forms.MenuItem" /> と別の <see cref="T:System.Windows.Forms.MenuItem" /> をマージし、マージ後に作成された <see cref="T:System.Windows.Forms.MenuItem" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-325">Merges this <see cref="T:System.Windows.Forms.MenuItem" /> with another <see cref="T:System.Windows.Forms.MenuItem" /> and returns the resulting merged <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="6e4cf-326">マージされたメニュー項目を表す <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-326">A <see cref="T:System.Windows.Forms.MenuItem" /> that represents the merged menu item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-327">このバージョンの<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>を呼び出すと、 <xref:System.Windows.Forms.MenuItem>現在の項目の機能に影響を与えずに別のメニュー項目とマージできる、現在のメニュー項目のコピーが返されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-327">When you call this version of <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>, the <xref:System.Windows.Forms.MenuItem> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</span></span> <span data-ttu-id="6e4cf-328">このバージョンの<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>メソッドは、 <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>パラメーターを含まないメソッドを呼び出す場合と似ています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-328">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method is similar to calling the <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> method that contains no parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeMenu">
      <MemberSignature Language="C#" Value="public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeMenu(class System.Windows.Forms.MenuItem itemSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeMenu (itemSrc As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeMenu(System::Windows::Forms::MenuItem ^ itemSrc);" />
      <MemberSignature Language="F#" Value="override this.MergeMenu : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItem.MergeMenu itemSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemSrc" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="itemSrc"><span data-ttu-id="6e4cf-329">このメニュー項目とマージするメニュー項目を指定する <see cref="T:System.Windows.Forms.MenuItem" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-329">A <see cref="T:System.Windows.Forms.MenuItem" /> that specifies the menu item to merge with this one.</span></span></param>
        <summary><span data-ttu-id="6e4cf-330">別のメニュー項目とこのメニュー項目をマージします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-330">Merges another menu item with this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-331">メニュー項目は、メニュー項目の<xref:System.Windows.Forms.MenuItem.MergeType%2A>プロパティと<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>プロパティの値に従ってマージされます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-331">Menu items are merged according to the value of the menu item's <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> properties.</span></span> <span data-ttu-id="6e4cf-332">このバージョンの<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>メソッドを使用すると、2 <xref:System.Windows.Forms.MenuItem>つのオブジェクト (およびそのサブメニュー) を1つのメニューにマージできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-332">This version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method enables you to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenus) into a single menu.</span></span> <span data-ttu-id="6e4cf-333">複数のドキュメントインターフェイス (MDI) 親フォームと子の両方にメニューがある場合、メニューのマージは自動的に処理されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-333">Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</span></span> <span data-ttu-id="6e4cf-334">このバージョンのメソッドを使用すると、 <xref:System.Windows.Forms.MenuItem> <xref:System.Windows.Forms.MainMenu> <xref:System.Windows.Forms.ContextMenu>コントロールに配置されている2つのオブジェクト (およびそのサブメニュー項目) を内の1つのメニューにマージできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-334">You can use this version of the method to merge two <xref:System.Windows.Forms.MenuItem> objects (and their submenu items) located in a <xref:System.Windows.Forms.MainMenu> control into a single menu within a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="6e4cf-335">たとえば、このバージョン<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>のメソッドを呼び出して、ファイルと編集メニューのメニュー項目を、に追加して<xref:System.Windows.Forms.ContextMenu>表示する<xref:System.Windows.Forms.MenuItem>ことができる単一のにマージできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-335">For example, you can call this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to merge the menu items of a File and Edit menu into a single <xref:System.Windows.Forms.MenuItem> that can then be added to and displayed by a <xref:System.Windows.Forms.ContextMenu>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-336">次のコード例では、このバージョン<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>のメソッドを使用して、 <xref:System.Windows.Forms.MenuItem>のコピーを作成し、別のにマージします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-336">The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another.</span></span> <span data-ttu-id="6e4cf-337"><xref:System.Windows.Forms.MenuItem> 次<xref:System.Windows.Forms.ContextMenu>に、マージされたをコントロールに追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-337">The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control.</span></span> <span data-ttu-id="6e4cf-338">この例`menuItem1`では、と`menuItem2`いう2つのメニュー項目があり、そこにサブメニュー項目`contextMenu1`と、メニュー項目を表示するという名前の<xref:System.Windows.Forms.ContextMenu>が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-338">This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items.</span></span> <span data-ttu-id="6e4cf-339">`menuItem1`と`menuItem2`には、それぞれ異なるメニュー項目が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-339">`menuItem1` and `menuItem2` have different menu items contained within them.</span></span> <span data-ttu-id="6e4cf-340">の呼び出し<xref:System.Windows.Forms.MenuItem.MergeMenu%2A>が行われると、統合メニューが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-340">After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrder">
      <MemberSignature Language="C#" Value="public int MergeOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeOrder { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOrder : int with get, set" Usage="System.Windows.Forms.MenuItem.MergeOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-341">メニュー項目が別のメニューにマージされた場合に、そのメニュー項目がマージ後のメニューで占める位置を相対的に示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-341">Gets or sets a value indicating the relative position of the menu item when it is merged with another.</span></span></summary>
        <value><span data-ttu-id="6e4cf-342">メニュー項目のマージ後の位置を示す 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-342">A zero-based index representing the merge order position for this menu item.</span></span> <span data-ttu-id="6e4cf-343">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-343">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-344">メニュー項目のマージ順序では、 <xref:System.Windows.Forms.MenuItem>が含まれているメニュー構造が別のメニューにマージされた場合に、このメニュー項目が実行する相対位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-344">The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <xref:System.Windows.Forms.MenuItem> is contained in is merged with another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-345">次のコード例では、 <xref:System.Windows.Forms.MenuItem.MergeOrder%2A>プロパティを使用して、マージされたメニューの表示方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-345">The following code example demonstrates using the <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> property to control the way a merged menu is displayed.</span></span> <span data-ttu-id="6e4cf-346">これは完全な例であり、プロジェクトに追加すると実行できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-346">This is a complete example, ready to run once you add it to your project.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemMergeOrder/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeType" />
        <altmember cref="M:System.Windows.Forms.MenuItem.MergeMenu" />
      </Docs>
    </Member>
    <Member MemberName="MergeType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuMerge MergeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MenuMerge MergeType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.MergeType" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeType As MenuMerge" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuMerge MergeType { System::Windows::Forms::MenuMerge get(); void set(System::Windows::Forms::MenuMerge value); };" />
      <MemberSignature Language="F#" Value="member this.MergeType : System.Windows.Forms.MenuMerge with get, set" Usage="System.Windows.Forms.MenuItem.MergeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuMerge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-347">メニュー項目が別のメニューにマージされた場合に、そのメニュー項目がどのように動作するかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-347">Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</span></span></summary>
        <value><span data-ttu-id="6e4cf-348">メニュー項目のマージの種類を表す <see cref="T:System.Windows.Forms.MenuMerge" /> 値。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-348">A <see cref="T:System.Windows.Forms.MenuMerge" /> value that represents the menu item's merge type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-349">メニュー項目のマージの種類は、マージされている別のメニュー項目と同じマージ順序を持つメニュー項目の動作を示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-349">The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</span></span> <span data-ttu-id="6e4cf-350">結合されたメニューを使用して、2つ以上の既存のメニューに基づいて統合メニューを作成できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-350">You can use merged menus to create a consolidated menu based on two or more existing menus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-351">次のコード例では<xref:System.Windows.Forms.MenuItem> 、 <xref:System.Windows.Forms.MenuItem.MergeType%2A>と<xref:System.Windows.Forms.MenuItem.MergeOrder%2A>を指定してを作成し、メニュー項目が最初の位置にマージされたメニューに追加されるようにします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-351">The following code example creates a <xref:System.Windows.Forms.MenuItem> with the <xref:System.Windows.Forms.MenuItem.MergeType%2A> and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.</span></span>  
  
 [!code-cpp[Classic MenuItem.MergeType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.MergeType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.MergeType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.MergeType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6e4cf-352">代入された値が、<see cref="T:System.Windows.Forms.MenuMerge" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-352">The assigned value is not one of the <see cref="T:System.Windows.Forms.MenuMerge" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.MenuMerge" />
        <altmember cref="P:System.Windows.Forms.MenuItem.MergeOrder" />
      </Docs>
    </Member>
    <Member MemberName="Mnemonic">
      <MemberSignature Language="C#" Value="public char Mnemonic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Mnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mnemonic As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char Mnemonic { char get(); };" />
      <MemberSignature Language="F#" Value="member this.Mnemonic : char" Usage="System.Windows.Forms.MenuItem.Mnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-353">メニュー項目に関連付けられているニーモニック文字を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-353">Gets a value indicating the mnemonic character that is associated with this menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-354">メニュー項目に関連付けられているニーモニック文字を表す文字。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-354">A character that represents the mnemonic character associated with this menu item.</span></span> <span data-ttu-id="6e4cf-355"><see cref="T:System.Windows.Forms.MenuItem" /> のテキストでニーモニック文字が指定されていない場合は、NUL 文字 (ASCII 値 0) を返します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-355">Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-356">ニーモニック文字は、 <xref:System.Windows.Forms.MenuItem>のテキストのアンパサンド文字 (&) の後の最初の文字です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-356">The mnemonic character is the first character after an ampersand character (&) in the text of the <xref:System.Windows.Forms.MenuItem>.</span></span> <span data-ttu-id="6e4cf-357">アンパサンドは、ニーモニック文字を定義する代わりに、 <xref:System.Windows.Forms.MenuItem>のテキストにアンパサンドを表示するために使用されるため、このプロパティはニーモニックを返しません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-357">This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <xref:System.Windows.Forms.MenuItem> instead of defining a mnemonic character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Text" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="menuItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-358">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-359"><see cref="E:System.Windows.Forms.MenuItem.Click" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-359">Raises the <see cref="E:System.Windows.Forms.MenuItem.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-360">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-360">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6e4cf-361">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-361">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-362"><xref:System.Windows.Forms.MenuItem.Click>イベントを使用してを<xref:System.Windows.Forms.MenuItem>クリックしたときにタスクを実行する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-362">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked.</span></span> <span data-ttu-id="6e4cf-363">この例では<xref:System.Windows.Forms.MainMenu> 、 `mainMenu1`というを作成し`topMenuItem` 、`File`2 つ`menuItem1` <xref:System.Windows.Forms.MenuItem>の`Open`オブジェクト () と () を追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-363">The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`).</span></span> <span data-ttu-id="6e4cf-364">`Click` 次`menuItem1_Click`に、イベントをイベントハンドラーに接続します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-364">It then connects the `Click` event to the `menuItem1_Click` event handler.</span></span> <span data-ttu-id="6e4cf-365">ユーザーが`Open`メニュー項目<xref:System.Windows.Forms.OpenFileDialog>をクリックすると、が初期化されて表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-365">When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed.</span></span> <span data-ttu-id="6e4cf-366">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-366">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[MenuItemClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItemClick/CPP/form1.cpp#1)]
 [!code-csharp[MenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItemClick/CS/form1.cs#1)]
 [!code-vb[MenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItemClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e4cf-367">派生クラス<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />でをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-367">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawItemEventArgs -&gt; unit" Usage="menuItem.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-368">イベント データを格納している <see cref="T:System.Windows.Forms.DrawItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-368">A <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-369"><see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-369">Raises the <see cref="E:System.Windows.Forms.MenuItem.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-370">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-370">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6e4cf-371">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-371">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e4cf-372">派生クラス<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />でをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-372">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInitMenuPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnInitMenuPopup : EventArgs -&gt; unit&#xA;override this.OnInitMenuPopup : EventArgs -&gt; unit" Usage="menuItem.OnInitMenuPopup e" />
      <MemberSignature Language="C#" Value="protected virtual void OnInitMenuPopup (EventArgs e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitMenuPopup(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitMenuPopup (e As EventArgs)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitMenuPopup(EventArgs ^ e);" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-373">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-373">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-374"><see cref="E:System.Windows.Forms.MenuItem.Popup" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-374">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit&#xA;override this.OnMeasureItem : System.Windows.Forms.MeasureItemEventArgs -&gt; unit" Usage="menuItem.OnMeasureItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-375">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-375">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-376"><see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-376">Raises the <see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-377">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-377">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6e4cf-378">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-378">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e4cf-379">派生クラス<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />でをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-379">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.MeasureItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="menuItem.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-380">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-380">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-381"><see cref="E:System.Windows.Forms.MenuItem.Popup" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-381">Raises the <see cref="E:System.Windows.Forms.MenuItem.Popup" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-382">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-382">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6e4cf-383">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-383">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-384">次のコード例は、 <xref:System.Windows.Forms.MenuItem.Popup>イベントを使用して、切り取り、コピー、および削除の各操作をサポートするオブジェクトが、表示されるメニューの前に有効になっているかどうか<xref:System.Windows.Forms.MenuItem>を判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-384">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="6e4cf-385">この例では`textBox1`、フォーム<xref:System.Windows.Forms.TextBox>上のコントロールが有効であるかどうか、入力フォーカスがあるかどうか、 <xref:System.Windows.Forms.MenuItem>およびオブジェクトを有効にする前にテキストが選択されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-385">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="6e4cf-386">この例では、 <xref:System.Windows.Forms.MenuItem> 、 `menuCopy`、およびと`menuCut` `menuDelete`いう名前の3つのオブジェクトが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-386">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e4cf-387">派生クラス<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />でをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-387">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnSelect (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelect(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelect (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelect(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelect : EventArgs -&gt; unit&#xA;override this.OnSelect : EventArgs -&gt; unit" Usage="menuItem.OnSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6e4cf-388">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-388">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6e4cf-389"><see cref="E:System.Windows.Forms.MenuItem.Select" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-389">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-390">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-390">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6e4cf-391">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-391">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-392">クラスのイベントを<xref:System.Windows.Forms.StatusBar>使用<xref:System.Windows.Forms.StatusBarPanel>して、コントロールのにヘルプテキストを割り当てる方法を次のコード例に示します。 <xref:System.Windows.Forms.MenuItem.Select> <xref:System.Windows.Forms.MenuItem></span><span class="sxs-lookup"><span data-stu-id="6e4cf-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="6e4cf-393">この例では<xref:System.Windows.Forms.MenuItem> 、、 `menuOpen` `menuSave`、および`menuExit`という名前のオブジェクト<xref:System.Windows.Forms.MainMenu>がフォーム上のコントロールに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-393">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="6e4cf-394">この例では、と<xref:System.Windows.Forms.StatusBar>いう名前`statusBar1`のコントロールがフォームに追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-394">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="6e4cf-395">コントロール<xref:System.Windows.Forms.StatusBar>には、 <xref:System.Windows.Forms.StatusBarPanel>が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-395">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6e4cf-396">派生クラス<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />でをオーバーライドする場合は、必ず基底クラスの<see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" />メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-396">When overriding <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.MenuItem.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-397">指定したコードがメニュー項目を描画するのか、Windows がメニュー項目を描画するのかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-397">Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-398">コードがメニュー項目を描画する場合は <see langword="true" />。Windows がメニュー項目を描画する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-398"><see langword="true" /> if the menu item is to be drawn using code; <see langword="false" /> if the menu item is to be drawn by Windows.</span></span> <span data-ttu-id="6e4cf-399">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-399">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-400">プロパティが<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>に`true`設定されている場合は、メニュー項目のすべての描画を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-400">When the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property is set to `true`, you need to handle all drawing of the menu item.</span></span> <span data-ttu-id="6e4cf-401">この機能を使用して、独自の特殊なメニュー表示を作成できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-401">You can use this capability to create your own special menu displays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-402">次のコード例は、オーナー描画のメニュー項目を持つメニューを示しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-402">The following code example demonstrates a menu with an owner-drawn menu item.</span></span> <span data-ttu-id="6e4cf-403">この例では<xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> 、プロパティを設定`AddHandler`し、ステートメント`AddressOf`と<xref:System.Windows.Forms.MenuItem.DrawItem>演算子を使用して、イベントを処理するデリゲートを指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-403">This example set the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event.</span></span> <span data-ttu-id="6e4cf-404">この例を実行するには、、 <xref:System> <xref:System.Windows.Forms>、および<xref:System.Drawing>の各名前空間をインポートするフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-404">To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="6e4cf-405">フォーム`InitializeMenu`のコンストラクターまたは`Load`メソッドからを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-405">Call `InitializeMenu` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MenuItemOwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ Parent { System::Windows::Forms::Menu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Menu" Usage="System.Windows.Forms.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-406">このメニュー項目が含まれているメニューを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-406">Gets a value indicating the menu that contains this menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-407">このメニュー項目が含まれているメニューを表す <see cref="T:System.Windows.Forms.Menu" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-407">A <see cref="T:System.Windows.Forms.Menu" /> that represents the menu that contains this menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-408">このプロパティを使用して、 <xref:System.Windows.Forms.Menu>サブメニューのオブジェクトを取得できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-408">You can use this property to obtain the <xref:System.Windows.Forms.Menu> object for a submenu.</span></span> <span data-ttu-id="6e4cf-409">このプロパティによっ<xref:System.Windows.Forms.Menu>て返されたオブジェクト<xref:System.Windows.Forms.MenuItem>をオブジェクトにキャストして、それを操作できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-409">You can cast the <xref:System.Windows.Forms.Menu> object returned by this property to a <xref:System.Windows.Forms.MenuItem> object to manipulate it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-410">この例では、メインメニューとトップレベルメニュー項目`menuItem1` (`File`) を作成します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-410">In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`).</span></span> <span data-ttu-id="6e4cf-411">また、 `menuItem2` (`New`) と`menuItem3` `menuItem1`(`Open`) の2つのメニュー項目を作成し、のメニュー項目リストに追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-411">You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`.</span></span> <span data-ttu-id="6e4cf-412">次に、が親メニュー `menuItem3` (true) を持っているかどうかを確認し、メッセージボックスにこの親メニューの情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-412">Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box.</span></span> <span data-ttu-id="6e4cf-413">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成している必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-413">This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[ParentMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ParentMenu/CPP/form1.cpp#1)]
 [!code-csharp[ParentMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ParentMenu/CS/form1.cs#1)]
 [!code-vb[ParentMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ParentMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="menuItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-414"><see cref="E:System.Windows.Forms.Control.Click" /> の <see cref="T:System.Windows.Forms.MenuItem" /> イベントを生成し、ユーザーによるクリック操作をシミュレートします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-414">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for the <see cref="T:System.Windows.Forms.MenuItem" />, simulating a click by a user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-415">このメニューを使用すると、イベント情報を渡さずに、コードを使用してメニュー項目をアクティブにすることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-415">You can use this menu to activate a menu item through code without passing any event information.</span></span> <span data-ttu-id="6e4cf-416">たとえば、アプリケーションで発生したアクションに基づいてメニュー項目をアクティブ化する場合は、その<xref:System.Windows.Forms.MenuItem.PerformClick%2A> <xref:System.Windows.Forms.MenuItem>のメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-416">For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <xref:System.Windows.Forms.MenuItem.PerformClick%2A> method for that <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-417">この例では、 `PerformClick`メソッドを使用して、プログラムでメニュー項目をクリックします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-417">In this example you programmatically click a menu item by using the `PerformClick` method.</span></span> <span data-ttu-id="6e4cf-418">まず、メインメニュー (`mainMenu1`) を作成し、それに2つ`File`の`menuItem1`メニュー項目 () と`menuItem2` (`Edit`) を追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-418">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="6e4cf-419">また、 <xref:System.Windows.Forms.MenuItem.Click>イベントを使用して、メニュー項目がクリックされたときにイベントハンドラーにデータを送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-419">You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked.</span></span> <span data-ttu-id="6e4cf-420">次に、 `PerformClick`メソッドを使用して`File`メニュー項目をクリックします。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-420">Then you use the `PerformClick` method to click the `File` menu item.</span></span> <span data-ttu-id="6e4cf-421">アプリケーションを起動すると、 `File`メニュー項目がアクティブになり、"ファイルメニューがクリックされました" というテキストを含むメッセージボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-421">When you start the application, the `File` menu item is activated, and a message box that contains the text "The File menu is clicked."</span></span> <span data-ttu-id="6e4cf-422">画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-422">appears on the screen.</span></span> <span data-ttu-id="6e4cf-423">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-423">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformClick/CPP/form1.cpp#1)]
 [!code-csharp[PerformClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformClick/CS/form1.cs#1)]
 [!code-vb[PerformClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="public virtual void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformSelect();" />
      <MemberSignature Language="F#" Value="abstract member PerformSelect : unit -&gt; unit&#xA;override this.PerformSelect : unit -&gt; unit" Usage="menuItem.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-424">このメニュー項目に <see cref="E:System.Windows.Forms.MenuItem.Select" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-424">Raises the <see cref="E:System.Windows.Forms.MenuItem.Select" /> event for this menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-425">このメソッドを使用すると、 <xref:System.Windows.Forms.MenuItem.Select>イベントハンドラーにイベント情報を渡さずにイベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-425">This method allows you to raise the <xref:System.Windows.Forms.MenuItem.Select> event without passing any event information to the event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-426">この例では、 `PerformSelect`メソッドを使用して、プログラムでメニュー項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-426">In this example you programmatically select a menu item by using the `PerformSelect` method.</span></span> <span data-ttu-id="6e4cf-427">まず、メインメニュー (`mainMenu1`) を作成し、それに2つ`File`の`menuItem1`メニュー項目 () と`menuItem2` (`Edit`) を追加します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-427">First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`).</span></span> <span data-ttu-id="6e4cf-428">また、 <xref:System.Windows.Forms.MenuItem.Select>イベントを使用して、メニュー項目が選択されたときにイベントハンドラーにデータを送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-428">You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected.</span></span> <span data-ttu-id="6e4cf-429">次に、 `PerformSelect`メソッドを使用して`File`メニュー項目を選択します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-429">Then you use the `PerformSelect` method to select the `File` menu item.</span></span> <span data-ttu-id="6e4cf-430">アプリケーションを`File`起動すると、メニュー項目が選択され、"ファイルメニューが選択されています" というテキストを含むメッセージボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-430">When you start the application, the `File` menu item is selected, and a message box that contains the text "The File menu is selected."</span></span> <span data-ttu-id="6e4cf-431">画面に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-431">appears on the screen.</span></span> <span data-ttu-id="6e4cf-432">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-432">The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[PerformSelect#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PerformSelect/CPP/form1.cpp#1)]
 [!code-csharp[PerformSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PerformSelect/CS/form1.cs#1)]
 [!code-vb[PerformSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PerformSelect/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MenuItem.PerformClick" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-433">メニュー項目のリストが表示される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-433">Occurs before a menu item's list of menu items is displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-434">このイベントは、メニュー項目にサブメニュー項目が表示されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-434">This event only occurs when a menu item has submenu items to display.</span></span> <span data-ttu-id="6e4cf-435">このイベントハンドラーを使用すると、アプリケーションの状態に基づいてメニュー項目を追加、削除、有効化、無効化、チェック、またはオフにすることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-435">You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</span></span> <span data-ttu-id="6e4cf-436">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-436">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-437">次のコード例は、 <xref:System.Windows.Forms.MenuItem.Popup>イベントを使用して、切り取り、コピー、および削除の各操作をサポートするオブジェクトが、表示されるメニューの前に有効になっているかどうか<xref:System.Windows.Forms.MenuItem>を判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-437">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</span></span> <span data-ttu-id="6e4cf-438">この例では`textBox1`、フォーム<xref:System.Windows.Forms.TextBox>上のコントロールが有効であるかどうか、入力フォーカスがあるかどうか、 <xref:System.Windows.Forms.MenuItem>およびオブジェクトを有効にする前にテキストが選択されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-438">The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects.</span></span> <span data-ttu-id="6e4cf-439">この例では、 <xref:System.Windows.Forms.MenuItem> 、 `menuCopy`、およびと`menuCut` `menuDelete`いう名前の3つのオブジェクトが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-439">This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.</span></span>  
  
 [!code-cpp[MenuItem.Popup#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Popup/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Popup#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Popup/CS/form1.cs#1)]
 [!code-vb[MenuItem.Popup#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Popup/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioCheck">
      <MemberSignature Language="C#" Value="public bool RadioCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RadioCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property RadioCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RadioCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RadioCheck : bool with get, set" Usage="System.Windows.Forms.MenuItem.RadioCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-440"><see cref="T:System.Windows.Forms.MenuItem" /> がチェックされている場合、チェック マークの代わりにオプション ボタンを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-440">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.MenuItem" />, if checked, displays a radio-button instead of a check mark.</span></span></summary>
        <value><span data-ttu-id="6e4cf-441">メニュー項目がチェックされた場合に、チェック マークの代わりにオプション ボタンが使用される場合は <see langword="true" />。標準のチェック マークが表示される場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-441"><see langword="true" /> if a radio-button is to be used instead of a check mark; <see langword="false" /> if the standard check mark is to be displayed when the menu item is checked.</span></span> <span data-ttu-id="6e4cf-442">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-442">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-443">チェックマークは、メニュー項目のグループに対して相互排他的な状態を示すとは限りません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-443">Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</span></span> <span data-ttu-id="6e4cf-444">このプロパティを使用すると、メニュー項目のチェックマークが相互に排他的であることをユーザーに示すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-444">You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-445">次のコード例では<xref:System.Windows.Forms.MenuItem.Checked%2A> 、プロパティを使用して、アプリケーションの状態を変更します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-445">The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application.</span></span> <span data-ttu-id="6e4cf-446">この例では、 <xref:System.Windows.Forms.TextBox>コントロールのテキストの色を指定するために使用されるメニュー項目のグループが用意されています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-446">In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="6e4cf-447">この例では、3つのメニュー項目の<xref:System.Windows.Forms.MenuItem.Click>イベントによって、指定されたイベントハンドラーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-447">In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items.</span></span> <span data-ttu-id="6e4cf-448">各メニュー項目は、色`menuItemRed` `menuItemGreen`、、、また`menuItemBlue`はを指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-448">Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`.</span></span> <span data-ttu-id="6e4cf-449">イベントハンドラーは、どのメニュー項目がクリックされたかを判断し、選択したメニュー項目にチェックマークを付け、 <xref:System.Windows.Forms.TextBox>という名前`textBox1`のフォームコントロールのテキストの色を変更します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-449">The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`.</span></span> <span data-ttu-id="6e4cf-450">また、この例で<xref:System.Windows.Forms.MenuItem.RadioCheck%2A>は、プロパティを使用して、相互に排他的なメニュー項目を表示するためにラジオボタンチェックを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-450">The example also uses the <xref:System.Windows.Forms.MenuItem.RadioCheck%2A> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</span></span> <span data-ttu-id="6e4cf-451">この例では、 <xref:System.Drawing?displayProperty=nameWithType>このコードを含むフォームに名前空間が追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-451">This example requires that the <xref:System.Drawing?displayProperty=nameWithType> namespace has been added to the form that contains this code.</span></span>  
  
 [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.RadioCheck Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.RadioCheck Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Checked" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public event EventHandler Select;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Select" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MenuItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Select As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Select;" />
      <MemberSignature Language="F#" Value="member this.Select : EventHandler " Usage="member this.Select : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-452">ユーザーがメニュー項目の上にポインターを置いた場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-452">Occurs when the user places the pointer over a menu item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-453">このイベントは、通常、ユーザーがメニュー項目の上にマウスポインターを置いたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-453">This event is typically raised when the user places the mouse pointer over the menu item.</span></span> <span data-ttu-id="6e4cf-454">イベントは、ユーザーがキーボードを使用してメニュー項目を強調表示したときに、方向キーを持つメニュー項目にスクロールすることによっても発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-454">The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</span></span> <span data-ttu-id="6e4cf-455">このイベントを使用すると、アプリケーションのステータスバーでこのメニュー項目に関連する詳細なヘルプ文字列を表示できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-455">You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</span></span> <span data-ttu-id="6e4cf-456">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-456">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e4cf-457">のプロパティ<xref:System.Windows.Forms.Menu.MenuItems%2A> <xref:System.Windows.Forms.MenuItem>に項目が含まれている場合、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-457">If the <xref:System.Windows.Forms.Menu.MenuItems%2A> property for the <xref:System.Windows.Forms.MenuItem> contains any items, this event is not raised.</span></span> <span data-ttu-id="6e4cf-458">このイベントは、親メニュー項目に対しては発生しません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-458">This event is not raised for parent menu items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-459">クラスのイベントを<xref:System.Windows.Forms.StatusBar>使用<xref:System.Windows.Forms.StatusBarPanel>して、コントロールのにヘルプテキストを割り当てる方法を次のコード例に示します。 <xref:System.Windows.Forms.MenuItem.Select> <xref:System.Windows.Forms.MenuItem></span><span class="sxs-lookup"><span data-stu-id="6e4cf-459">The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control.</span></span> <span data-ttu-id="6e4cf-460">この例では<xref:System.Windows.Forms.MenuItem> 、、 `menuOpen` `menuSave`、および`menuExit`という名前のオブジェクト<xref:System.Windows.Forms.MainMenu>がフォーム上のコントロールに追加されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-460">This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form.</span></span> <span data-ttu-id="6e4cf-461">この例では、と<xref:System.Windows.Forms.StatusBar>いう名前`statusBar1`のコントロールがフォームに追加されている必要もあります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-461">The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form.</span></span> <span data-ttu-id="6e4cf-462">コントロール<xref:System.Windows.Forms.StatusBar>には、 <xref:System.Windows.Forms.StatusBarPanel>が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-462">The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.</span></span>  
  
 [!code-cpp[MenuItem.Select#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuItem.Select/CPP/form1.cpp#1)]
 [!code-csharp[MenuItem.Select#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuItem.Select/CS/form1.cs#1)]
 [!code-vb[MenuItem.Select#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuItem.Select/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MenuItem.Click" />
      </Docs>
    </Member>
    <Member MemberName="Shortcut">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Shortcut Shortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Shortcut Shortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Shortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property Shortcut As Shortcut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Shortcut Shortcut { System::Windows::Forms::Shortcut get(); void set(System::Windows::Forms::Shortcut value); };" />
      <MemberSignature Language="F#" Value="member this.Shortcut : System.Windows.Forms.Shortcut with get, set" Usage="System.Windows.Forms.MenuItem.Shortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Shortcut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-463">メニュー項目に関連付けられているショートカット キーを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-463">Gets or sets a value indicating the shortcut key associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-464"><see cref="T:System.Windows.Forms.Shortcut" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-464">One of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span> <span data-ttu-id="6e4cf-465">既定値は、<see langword="Shortcut.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-465">The default is <see langword="Shortcut.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-466">ショートカットキーは、ユーザーがメニューシステムで頻繁に使用するメニュー項目をアクティブ化したり、マウスやその他のポインターデバイスにアクセスできないユーザーに対して、アプリケーションへのキーボードアクセスを提供したりするための方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-466">Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-467">次のコード例では、メニュー項目を作成し、キャプションを設定し、ショートカットキーを割り当てて、メニュー項目を表示し、メニュー項目のショートカットキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-467">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="6e4cf-468">この例では、 <xref:System.Windows.Forms.MenuItem>という名前`menuItem1`のが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-468">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="6e4cf-469">代入された値が、<see cref="T:System.Windows.Forms.Shortcut" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-469">The assigned value is not one of the <see cref="T:System.Windows.Forms.Shortcut" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="ShowShortcut">
      <MemberSignature Language="C#" Value="public bool ShowShortcut { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowShortcut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowShortcut { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowShortcut : bool with get, set" Usage="System.Windows.Forms.MenuItem.ShowShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-470">メニュー項目のキャプションの横に、そのメニュー項目に関連付けられているショートカット キーを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-470">Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</span></span></summary>
        <value><span data-ttu-id="6e4cf-471">ショートカット キーの組み合わせをメニュー項目のキャプションの横に表示する場合は <see langword="true" />。ショートカット キーの組み合わせを表示しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-471"><see langword="true" /> if the shortcut key combination is displayed next to the menu item caption; <see langword="false" /> if the shortcut key combination is not to be displayed.</span></span> <span data-ttu-id="6e4cf-472">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-472">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-473">このプロパティを使用すると、メニュー領域を節約したり、ショートカットキーが表示されないようにするためにユーザーがメニューからショートカットを非表示にするオプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-473">You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-474">次のコード例では、メニュー項目を作成し、キャプションを設定し、ショートカットキーを割り当てて、メニュー項目を表示し、メニュー項目のショートカットキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-474">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="6e4cf-475">この例では、 <xref:System.Windows.Forms.MenuItem>という名前`menuItem1`のが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-475">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Shortcut" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-476">メニュー項目のキャプションを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-476">Gets or sets a value indicating the caption of the menu item.</span></span></summary>
        <value><span data-ttu-id="6e4cf-477">メニュー項目のテキスト キャプション。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-477">The text caption of the menu item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-478">メニュー項目のキャプションを指定する場合は、アクセスキーとして使用する文字の前に ' & ' を配置することで、アクセスキーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-478">When you specify a caption for your menu item, you can also specify an access key by placing an '&' before the character to be used as the access key.</span></span> <span data-ttu-id="6e4cf-479">たとえば、"File" の "F" をアクセスキーとして指定するには、メニュー項目のキャプションを "& ファイル" として指定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-479">For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&File".</span></span> <span data-ttu-id="6e4cf-480">この機能を使用して、メニューにキーボードナビゲーションを提供できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-480">You can use this feature to provide keyboard navigation for your menus.</span></span>  
  
 <span data-ttu-id="6e4cf-481">このプロパティを "`-`" に設定すると、メニュー項目は標準のメニュー項目ではなく、区切り記号 (水平線) として表示されます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-481">Setting this property to "`-`" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-482">次のコード例では、メニュー項目を作成し、キャプションを設定し、ショートカットキーを割り当てて、メニュー項目を表示し、メニュー項目のショートカットキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-482">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="6e4cf-483">この例では、 <xref:System.Windows.Forms.MenuItem>という名前`menuItem1`のが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-483">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MenuItem.Mnemonic" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MenuItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="menuItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e4cf-484"><see cref="T:System.Windows.Forms.MenuItem" /> を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-484">Returns a string that represents the <see cref="T:System.Windows.Forms.MenuItem" />.</span></span></summary>
        <returns><span data-ttu-id="6e4cf-485">現在の <see cref="T:System.Windows.Forms.MenuItem" /> を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-485">A string that represents the current <see cref="T:System.Windows.Forms.MenuItem" />.</span></span> <span data-ttu-id="6e4cf-486">コントロールの種類と <see cref="P:System.Windows.Forms.MenuItem.Text" /> プロパティを格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-486">The string includes the type and the <see cref="P:System.Windows.Forms.MenuItem.Text" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MenuItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.MenuItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e4cf-487">メニュー項目を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-487">Gets or sets a value indicating whether the menu item is visible.</span></span></summary>
        <value><span data-ttu-id="6e4cf-488">メニュー項目をメニューに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-488"><see langword="true" /> if the menu item will be made visible on the menu; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e4cf-489">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-489">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e4cf-490">このプロパティを使用すると、メニューを結合したり、メニューを無効にしたりしなくても、メニュー構造を変更できます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-490">You can use this property to modify a menu structure without having to merge menus or disable menus.</span></span> <span data-ttu-id="6e4cf-491">たとえば、アプリケーションのメニューから機能の完全なセクションを非表示にする場合は、このプロパティをに設定する`false`ことによって、ユーザーに表示されないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-491">For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e4cf-492">次のコード例では、メニュー項目を作成し、キャプションを設定し、ショートカットキーを割り当てて、メニュー項目を表示し、メニュー項目のショートカットキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-492">The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</span></span> <span data-ttu-id="6e4cf-493">この例では、 <xref:System.Windows.Forms.MenuItem>という名前`menuItem1`のが作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="6e4cf-493">The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.</span></span>  
  
 [!code-cpp[Classic MenuItem.Text Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MenuItem.Text Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MenuItem.Text Example/CS/source.cs#1)]
 [!code-vb[Classic MenuItem.Text Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MenuItem.Text Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
