<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ad46ab912e486c7ef414fa6f9c49514a556da3c" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48622434" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="92aa8-101">
        <see cref="T:System.Windows.Forms.ListBox" /> 内の項目のコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92aa8-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-102"><xref:System.Windows.Forms.ListBox.ObjectCollection>クラスに表示される項目を格納する、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-102">The <xref:System.Windows.Forms.ListBox.ObjectCollection> class stores the items displayed in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="92aa8-103">内で定義されたその他の 2 つのコレクションがある、<xref:System.Windows.Forms.ListBox>このコレクション内でどのような項目が選択されているかを判断するためのクラス。</span><span class="sxs-lookup"><span data-stu-id="92aa8-103">There are two other collections defined within the <xref:System.Windows.Forms.ListBox> class that enable you to determine what items are selected within this collection.</span></span> <span data-ttu-id="92aa8-104"><xref:System.Windows.Forms.ListBox.SelectedObjectCollection>クラス プロパティとメソッド内でどのような項目が選択されているを決定するための提供、 <xref:System.Windows.Forms.ListBox.ObjectCollection>、中に、<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>クラスでは、内でインデックスを決定することができます、<xref:System.Windows.Forms.ListBox.ObjectCollection>が選択されています。</span><span class="sxs-lookup"><span data-stu-id="92aa8-104">The <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> class provides properties and methods for determining what items are selected within the <xref:System.Windows.Forms.ListBox.ObjectCollection>, while the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> class enables you to determine what indexes within the <xref:System.Windows.Forms.ListBox.ObjectCollection> are selected.</span></span>  
  
 <span data-ttu-id="92aa8-105">コレクションに項目を追加する方法を数多くあります。</span><span class="sxs-lookup"><span data-stu-id="92aa8-105">There are a number of ways to add items to the collection.</span></span> <span data-ttu-id="92aa8-106"><xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>メソッドが 1 つのオブジェクトをコレクションに追加する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-106">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method provides the ability to add a single object to the collection.</span></span> <span data-ttu-id="92aa8-107">コレクションにオブジェクトの数を追加する項目の配列を作成およびに割り当てる、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-107">To add a number of objects to the collection, you create an array of items and assign it to the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="92aa8-108">コレクション内の特定の場所にオブジェクトを挿入する場合は、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-108">If you want to insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="92aa8-109">項目を削除する、いずれかを使用できる、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッドまたは<xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A>メソッド項目がコレクション内にあることがわかっている場合。</span><span class="sxs-lookup"><span data-stu-id="92aa8-109">To remove items, you can use either the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method if you know where the item is located within the collection.</span></span> <span data-ttu-id="92aa8-110"><xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A>メソッドでは、使用する代わりに、コレクションからすべての項目を削除することができます、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>一度に 1 つの項目を削除する方法。</span><span class="sxs-lookup"><span data-stu-id="92aa8-110">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method enables you to remove all items from the collection instead of using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method to remove a single item at a time.</span></span>  
  
 <span data-ttu-id="92aa8-111">項目を操作することも、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="92aa8-111">You can also manipulate the items of a <xref:System.Windows.Forms.ListBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property.</span></span> <span data-ttu-id="92aa8-112">使用する場合、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティに項目を追加、 <xref:System.Windows.Forms.ListBox>、内の項目を表示することができます、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.Items%2A>プロパティが追加または削除できない項目のメソッドを使用してリストから、<xref:System.Windows.Forms.ListBox.ObjectCollection>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-112">If you use the <xref:System.Windows.Forms.ListControl.DataSource%2A> property to add items to a <xref:System.Windows.Forms.ListBox>, you can view the items in the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.Items%2A> property but you cannot add or remove items from the list using the methods of the <xref:System.Windows.Forms.ListBox.ObjectCollection>.</span></span>  
  
 <span data-ttu-id="92aa8-113">メソッドとプロパティを追加すると、項目を削除するだけでなく、<xref:System.Windows.Forms.ListBox.ObjectCollection>コレクション内の項目を検索するメソッドも提供されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-113">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ListBox.ObjectCollection> also provides methods to find items within the collection.</span></span> <span data-ttu-id="92aa8-114"><xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A>メソッドでは、オブジェクト、コレクションのメンバーであるかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-114">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method enables you to determine whether an object is a member of the collection.</span></span> <span data-ttu-id="92aa8-115">使用することができます、項目がコレクション内にあることがわかったら、<xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A>項目がコレクション内にあるかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-115">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92aa8-116">次のコード例に示しますオーナー描画<xref:System.Windows.Forms.ListBox>を設定して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティを`OwnerDrawVariable`値と処理、<xref:System.Windows.Forms.ListBox.DrawItem>と<xref:System.Windows.Forms.ListBox.MeasureItem>イベント。</span><span class="sxs-lookup"><span data-stu-id="92aa8-116">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="92aa8-117">設定も示しています、<xref:System.Windows.Forms.ListBox.BorderStyle%2A>と<xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A>プロパティとを使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-117">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="92aa8-118">この例を実行するをインポートする空のフォームに貼り付け、<xref:System.Drawing>名前空間と<xref:System.Windows.Forms>名前空間。</span><span class="sxs-lookup"><span data-stu-id="92aa8-118">To run this example, paste it into an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="92aa8-119">呼び出す`InitializeOwnerDrawnListBox`フォームのコンス トラクターからまたは`Load`メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-119">Call `InitializeOwnerDrawnListBox` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-120">
            <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-120">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="92aa8-121">コレクションを所有している <see cref="T:System.Windows.Forms.ListBox" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-121">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-122">
            <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-122">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-123">関連付けることがなく、このクラスのインスタンスを作成することはできません、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="92aa8-123">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * obj[] -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="92aa8-124">コレクションを所有している <see cref="T:System.Windows.Forms.ListBox" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-124">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="92aa8-125">コレクションに追加するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-125">An array of objects to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-126">オブジェクトの配列を格納している <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-126">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> containing an array of objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-127">関連付けることがなく、このクラスのインスタンスを作成することはできません、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="92aa8-127">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * System.Windows.Forms.ListBox.ObjectCollection -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="92aa8-128">コレクションを所有している <see cref="T:System.Windows.Forms.ListBox" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-128">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="92aa8-129">コレクションにコピーされる内容を保持している <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-129">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> from which the contents are copied to this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-130">別の <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> に基づいて、<see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-130">Initializes a new instance of <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> based on another <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-131">関連付けることがなく、このクラスのインスタンスを作成することはできません、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="92aa8-131">You cannot create an instance of this class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="92aa8-132">コンス トラクターのこのバージョンでは、既存のインスタンスで指定された項目を使用することができます、<xref:System.Windows.Forms.ListBox.ObjectCollection>作成時にその項目をコレクションに追加するクラス。</span><span class="sxs-lookup"><span data-stu-id="92aa8-132">This version of the constructor enables you to use the items specified in an existing instance of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class to add items to the collection when it is created.</span></span> <span data-ttu-id="92aa8-133">このコンス トラクターを使用するには別の指定した項目を使用する<xref:System.Windows.Forms.ListBox>このコレクションにコントロール。</span><span class="sxs-lookup"><span data-stu-id="92aa8-133">You can use this constructor to use the items specified in another <xref:System.Windows.Forms.ListBox> control with this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92aa8-134">コレクションに追加する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-134">An object representing the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-135">
            <see cref="T:System.Windows.Forms.ListBox" /> の項目のリストに項目を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-135">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92aa8-136">コレクション内の項目の 0 から始まるインデックス。<see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> が呼び出された場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-136">The zero-based index of the item in the collection, or -1 if <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> has been called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-137">場合、<xref:System.Windows.Forms.ListBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`true`、アルファベット順に項目がリストに挿入します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-137">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="92aa8-138">それ以外の場合、項目はリストの末尾に挿入されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-138">Otherwise, the item is inserted at the end of the list.</span></span> <span data-ttu-id="92aa8-139">特定の位置にあるリスト ボックスには、項目を挿入するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-139">To insert an item into the list box at a specific position, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="92aa8-140">1 回の操作で、リスト ボックスには、一連の項目を追加するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-140">To add a set of items to the list box in a single operation, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="92aa8-141">使用する場合、<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>リストに多数のアイテムを追加、使用するメソッド、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A>と<xref:System.Windows.Forms.ListBox.EndUpdate%2A>ようにする方法、<xref:System.Windows.Forms.ListBox>たびに再描画から項目が一覧に追加のすべての項目が一覧に追加されるまでです。</span><span class="sxs-lookup"><span data-stu-id="92aa8-141">If you want to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method to add a large number of items to the list, use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to prevent the <xref:System.Windows.Forms.ListBox> from repainting each time an item is added to the list until all items are added to the list.</span></span> <span data-ttu-id="92aa8-142">項目を追加するときに、 <xref:System.Windows.Forms.ListBox>、最初の項目の並べ替えし、新しい項目を追加する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-142">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span>  
  
 <span data-ttu-id="92aa8-143">オブジェクトがコレクションに追加されたときに、<xref:System.Windows.Forms.ListBox>かどうかを最初に確認、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>のプロパティ、<xref:System.Windows.Forms.ListControl>クラスには、項目のテキストを取得するときに参照を指定したオブジェクトからメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="92aa8-143">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="92aa8-144">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティに指定すると、メンバーがない、<xref:System.Windows.Forms.ListBox>を呼び出して、<xref:System.Object.ToString%2A>メソッドの一覧に表示するテキストを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92aa8-144">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92aa8-145">次のコード例は、作成する方法を示します、<xref:System.Windows.Forms.ListBox>コントロールの列に複数の項目を表示し、コントロールのリストで選択した 1 つ以上の項目を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-145">The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list.</span></span> <span data-ttu-id="92aa8-146">例のコードに 50 個の項目の追加、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>を使用して、一覧から項目を 3 つのクラスと、選択、<xref:System.Windows.Forms.ListBox.SetSelected%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-146">The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.</span></span> <span data-ttu-id="92aa8-147">コードからの値を表示、<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>コレクション (を通じて、<xref:System.Windows.Forms.ListBox.SelectedItems%2A>プロパティ) および<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>(を通じて、<xref:System.Windows.Forms.ListBox.SelectedIndices%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="92aa8-147">The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property).</span></span> <span data-ttu-id="92aa8-148">この例は、コードが記載されから呼び出すことが必要です、<xref:System.Windows.Forms.Form>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-148">This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="92aa8-149">新しい項目をリストに追加するための空き領域が不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-149">There is insufficient space available to add the new item to the list.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92aa8-150">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-150">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-151">
            <see cref="T:System.Windows.Forms.ListBox" /> の項目のリストに項目のグループを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-151">Adds a group of items to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="92aa8-152">リストに追加するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-152">An array of objects to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-153">
            <see cref="T:System.Windows.Forms.ListBox" /> の項目のリストに、項目の配列を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-153">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-154">場合、<xref:System.Windows.Forms.ListBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`true`項目がリストにアルファベット順に挿入します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-154">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="92aa8-155">それ以外の場合、項目は、配列内で出現する順序で挿入されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-155">Otherwise, the items are inserted in the order that they occur within the array.</span></span> <span data-ttu-id="92aa8-156">このメソッドが通常の配列を渡されて<xref:System.String>オブジェクトではなく任意の種類のオブジェクトの配列は、このメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-156">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="92aa8-157">オブジェクトがコレクションに追加されたときに、<xref:System.Windows.Forms.ListBox>かどうかを最初に確認、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>のプロパティ、<xref:System.Windows.Forms.ListControl>クラスには、項目のテキストを取得するときに参照を指定したオブジェクトからメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="92aa8-157">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="92aa8-158">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティに指定すると、メンバーがない、<xref:System.Windows.Forms.ListBox>を呼び出して、<xref:System.Object.ToString%2A>メソッドの一覧に表示するテキストを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92aa8-158">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span> <span data-ttu-id="92aa8-159">このメソッドを使用して項目を追加する場合、<xref:System.Windows.Forms.ListBox>を呼び出す必要はありません、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A>と<xref:System.Windows.Forms.ListBox.EndUpdate%2A>パフォーマンスを最適化する方法。</span><span class="sxs-lookup"><span data-stu-id="92aa8-159">When using this method to add items to the <xref:System.Windows.Forms.ListBox>, you do not need to call the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to optimize performance.</span></span> <span data-ttu-id="92aa8-160">項目を追加するときに、 <xref:System.Windows.Forms.ListBox>、最初の項目の並べ替えし、新しい項目を追加する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-160">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span> <span data-ttu-id="92aa8-161">このメソッドを使用するには、リストに項目のグループを追加するか、別に格納された項目を再利用する<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-161">You can use this method to add a group of items to the list or to reuse the items stored in a different <xref:System.Windows.Forms.ListBox>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92aa8-162">次のコード例に示しますオーナー描画<xref:System.Windows.Forms.ListBox>を設定して、<xref:System.Windows.Forms.ListBox.DrawMode%2A>プロパティを`OwnerDrawVariable`値と処理、<xref:System.Windows.Forms.ListBox.DrawItem>と<xref:System.Windows.Forms.ListBox.MeasureItem>イベント。</span><span class="sxs-lookup"><span data-stu-id="92aa8-162">The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events.</span></span> <span data-ttu-id="92aa8-163">設定も示しています、<xref:System.Windows.Forms.ListBox.BorderStyle%2A>と<xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A>プロパティとを使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-163">It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.</span></span>  
  
 <span data-ttu-id="92aa8-164">この例を実行するをインポートする空のフォームに貼り付け、<xref:System.Drawing>名前空間と<xref:System.Windows.Forms>名前空間。</span><span class="sxs-lookup"><span data-stu-id="92aa8-164">To run this example, paste it into an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace.</span></span> <span data-ttu-id="92aa8-165">呼び出す`InitializeOwnerDrawnListBox`フォームのコンス トラクターからまたは`Load`メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-165">Call `InitializeOwnerDrawnListBox` from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.ObjectCollection -&gt; unit" Usage="objectCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92aa8-166">コレクションに読み込む <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-166">A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> to load into this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-167">既存の <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の項目を <see cref="T:System.Windows.Forms.ListBox" /> の項目のリストに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-167">Adds the items of an existing <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> to the list of items in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-168">場合、<xref:System.Windows.Forms.ListBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されている`true`項目がリストにアルファベット順に挿入します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-168">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `true`, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="92aa8-169">それ以外の場合、項目は、配列内で出現する順序で挿入されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-169">Otherwise, the items are inserted in the order that they occur within the array.</span></span> <span data-ttu-id="92aa8-170">このメソッドが通常の配列を渡されて<xref:System.String>オブジェクトではなく任意の種類のオブジェクトの配列は、このメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-170">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="92aa8-171">オブジェクトがコレクションに追加されたときに、<xref:System.Windows.Forms.ListBox>かどうかを最初に確認、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>のプロパティ、<xref:System.Windows.Forms.ListControl>クラスには、項目のテキストを取得するときに参照を指定したオブジェクトからメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="92aa8-171">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="92aa8-172">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティに指定すると、メンバーがない、<xref:System.Windows.Forms.ListBox>を呼び出して、<xref:System.Object.ToString%2A>メソッドの一覧に表示するテキストを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92aa8-172">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
 <span data-ttu-id="92aa8-173">このメソッドを使用して項目を追加する場合、<xref:System.Windows.Forms.ListBox>を呼び出す必要はありません、<xref:System.Windows.Forms.ListBox.BeginUpdate%2A>と<xref:System.Windows.Forms.ListBox.EndUpdate%2A>パフォーマンスを最適化する方法。</span><span class="sxs-lookup"><span data-stu-id="92aa8-173">When using this method to add items to the <xref:System.Windows.Forms.ListBox>, you do not need to call the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods to optimize performance.</span></span> <span data-ttu-id="92aa8-174">項目を追加するときに、 <xref:System.Windows.Forms.ListBox>、最初の項目の並べ替えし、新しい項目を追加する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-174">When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.</span></span> <span data-ttu-id="92aa8-175">このメソッドを使用するには別に格納された項目を再利用する<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-175">You can use this method to reuse the items stored in a different <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-176">コレクションからすべての項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-176">Removes all items from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-177">一覧から項目を削除すると、削除された項目についての情報は失われます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-177">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="92aa8-178">1 つの項目を削除する、<xref:System.Windows.Forms.ListBox>を使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>または<xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-178">To remove a single item from the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92aa8-179">コレクション内で検索する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-179">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-180">指定した項目がコレクション内にあるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-180">Determines whether the specified item is located within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92aa8-181">項目がコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-181">
              <see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-182"><xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A>メソッドでは、オブジェクト、コレクションのメンバーであるかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-182">The <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method enables you to determine whether an object is a member of the collection.</span></span> <span data-ttu-id="92aa8-183">使用することができます、項目がコレクション内にあることがわかったら、<xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A>項目がコレクション内にあるかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-183">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92aa8-184">
            <paramref name="value" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-184">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="92aa8-185">コレクションの項目をコピーする対象のオブジェクト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-185">The object array in which the items from the collection are copied to.</span>
          </span>
        </param>
        <param name="dest">To be added.</param>
        <param name="arrayIndex">
          <span data-ttu-id="92aa8-186">コレクションの項目をコピーする対象の配列内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-186">The location within the destination array to copy the items from the collection to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-187">既存のオブジェクト配列内の指定した位置にコレクション全体をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-187">Copies the entire collection into an existing array of objects at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-188">このメソッドは、1 つの配列に複数のコレクションから項目を組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-188">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="92aa8-189">この配列の内容を別の設定を使用できます<xref:System.Windows.Forms.ListBox>制御を使用して、<xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection>クラス。</span><span class="sxs-lookup"><span data-stu-id="92aa8-189">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-190">コレクション内の項目の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-190">Gets the number of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-191">コレクション内の項目数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-191">The number of items in the collection</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-192">このプロパティでは、内の項目の数を決定することができます、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-192">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="92aa8-193">コレクションの値をループして、ループの反復回数を指定する必要があるときに、この値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-193">You can then use this value when you are looping through the values of the collection and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-194">項目コレクションを反復処理するために使用する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-194">Returns an enumerator to use to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92aa8-195">項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-195">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92aa8-196">コレクション内で検索する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-196">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-197">指定した項目のコレクション内のインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-197">Returns the index within the collection of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92aa8-198">項目がコレクション内に存在する場合は、その項目の 0 から始まるインデックス。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-198">The zero-based index where the item is located within the collection; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-199"><xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A>メソッドでは、項目がコレクション内にある場所を決定することができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-199">The <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="92aa8-200">項目がこのメソッドを呼び出す前に、コレクション内にあるかどうかを調べるには、<xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-200">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92aa8-201">
            <paramref name="value" /> パラメーターが null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-201">The <paramref name="value" /> parameter is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92aa8-202">項目を挿入する、0 から始まるインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-202">The zero-based index location where the item is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="92aa8-203">挿入する項目を表示するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-203">An object representing the item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-204">リスト ボックス内の指定したインデックスに項目を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-204">Inserts an item into the list box at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-205">このメソッドでは、特定の位置に項目を挿入することができます、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-205">This method enables you to insert an item at a specific position within the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="92aa8-206">場合、<xref:System.Windows.Forms.ListBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ListBox>に設定されているで指定された値に関係なく、並べ替えられたリスト内の正しい位置に項目が追加、true、`index`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="92aa8-206">If the <xref:System.Windows.Forms.ListBox.Sorted%2A> property of the <xref:System.Windows.Forms.ListBox> is set to true, the item is added in the correct position within the sorted list regardless of the values specified in the `index` parameter.</span></span> <span data-ttu-id="92aa8-207">オブジェクトがコレクションに追加されたときに、<xref:System.Windows.Forms.ListBox>かどうかを最初に確認、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>のプロパティ、<xref:System.Windows.Forms.ListControl>クラスには、項目のテキストを取得するときに参照を指定したオブジェクトからメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="92aa8-207">When an object is added to the collection, the <xref:System.Windows.Forms.ListBox> first checks to see if the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the <xref:System.Windows.Forms.ListControl> class has the name of a member from the object specified to reference when obtaining the item text.</span></span> <span data-ttu-id="92aa8-208">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティに指定すると、メンバーがない、<xref:System.Windows.Forms.ListBox>を呼び出して、<xref:System.Object.ToString%2A>メソッドの一覧に表示するテキストを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="92aa8-208">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property does not have a member specified, the <xref:System.Windows.Forms.ListBox> then calls the <xref:System.Object.ToString%2A> method of the object to obtain the text to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92aa8-209">
            <paramref name="index" /> パラメーターが 0 以下か、または <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> クラスの<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> プロパティの値を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-209">The <paramref name="index" /> parameter is less than zero or greater than value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92aa8-210">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-210">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-211">コレクションが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-211">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-212">コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-212">
              <see langword="true" /> if this collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-213">このプロパティは常に`false`このコレクションにします。</span><span class="sxs-lookup"><span data-stu-id="92aa8-213">This property is always `false` for this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ListBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92aa8-214">コレクション内で取得または設定する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-214">The index of the item in the collection to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-215">コレクション内の指定したインデックスにある項目を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-215">Gets or sets the item at the specified index within the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-216">コレクション内の指定したインデックスにある項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-216">An object representing the item located at the specified index within the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-217">このメソッドを使用して取得することができます、<xref:System.Windows.Forms.ListBox>コレクション内の特定の場所に格納されている項目。</span><span class="sxs-lookup"><span data-stu-id="92aa8-217">You can use this method to obtain the <xref:System.Windows.Forms.ListBox> item stored at a specific location within the collection.</span></span> <span data-ttu-id="92aa8-218">コレクション内の特定の項目のインデックスを調べるには、<xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-218">To determine the index of a specific item within the collection, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92aa8-219">
            <paramref name="index" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-219">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92aa8-220">コレクションから削除する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-220">An object representing the item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-221">指定されたオブジェクトをコレクションから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-221">Removes the specified object from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-222">一覧から項目を削除するときにリスト内の後続の項目のインデックスを変更します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-222">When you remove an item from the list, the indexes change for subsequent items in the list.</span></span> <span data-ttu-id="92aa8-223">削除された項目に関するすべての情報が削除されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-223">All information about the removed item is deleted.</span></span> <span data-ttu-id="92aa8-224">このメソッドを使用して、一覧から削除する実際の項目を指定することで、一覧から特定の項目を削除することができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-224">You can use this method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="92aa8-225">項目自体ではなく削除する項目のインデックスを指定するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-225">To specify the index of the item to remove instead of the item itself, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="92aa8-226">一覧からすべての項目を削除するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-226">To remove all items from the list, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92aa8-227">削除する項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-227">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-228">コレクション内の指定されたインデックスにある項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-228">Removes the item at the specified index within the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-229">一覧から項目を削除するときにリスト内の後続の項目のインデックスを変更します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-229">When you remove an item from the list, the indexes change for subsequent items in the list.</span></span> <span data-ttu-id="92aa8-230">削除された項目に関するすべての情報が削除されます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-230">All information about the removed item is deleted.</span></span> <span data-ttu-id="92aa8-231">このメソッドを使用して、一覧から削除する項目のインデックスを指定することで、一覧から特定の項目を削除することができます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-231">You can use this method to remove a specific item from the list by specifying the index of the item to remove from the list.</span></span> <span data-ttu-id="92aa8-232">項目をインデックスではなく削除する項目を指定するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-232">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method.</span></span> <span data-ttu-id="92aa8-233">一覧からすべての項目を削除するには、使用、<xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-233">To remove all items from the list, use the <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92aa8-234">次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.ListBox.SelectedIndex%2A>プロパティを<xref:System.Windows.Forms.ListBox.TopIndex%2A>プロパティの表示領域内の項目の一覧の一番上に現在選択されている項目を移動する、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-234">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="92aa8-235">さらに例を使用して項目を削除する方法を示します、<xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A>のメソッド、<xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType>クラス、および使用してすべての項目の選択をクリアする方法、<xref:System.Windows.Forms.ListBox.ClearSelected%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="92aa8-235">The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method.</span></span> <span data-ttu-id="92aa8-236">コードは最初現在選択されている項目を移動、<xref:System.Windows.Forms.ListBox>一覧の先頭にします。</span><span class="sxs-lookup"><span data-stu-id="92aa8-236">The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list.</span></span> <span data-ttu-id="92aa8-237">コードは、現在選択されている項目の前にすべての項目を削除しですべての選択をクリアします、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-237">The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="92aa8-238">この例では、する必要があります、<xref:System.Windows.Forms.ListBox>フォームに追加の項目を含むされで選択した項目が現在は、<xref:System.Windows.Forms.ListBox>します。</span><span class="sxs-lookup"><span data-stu-id="92aa8-238">This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.</span></span>  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92aa8-239">
            <paramref name="index" /> パラメーターの値がゼロ未満か、<see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> クラスの <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> プロパティの値以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-239">The <paramref name="index" /> parameter is less than zero or greater than or equal to the value of the <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> property of the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> class.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="92aa8-240">
            <see cref="T:System.Collections.ICollection" /> から要素がコピーされる 1 次元の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-240">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="92aa8-241">配列には、0 から始まるインデックスが設定されている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-241">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="dest">To be added.</param>
        <param name="index">
          <span data-ttu-id="92aa8-242">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-242">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-243">特定の配列インデックスを開始位置として、配列にコレクションの要素をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-243">Copies the elements of the collection to an array, starting at a particular array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-244">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-244">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="92aa8-245">これは、<xref:System.Windows.Forms.ListBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-245">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="92aa8-246">配列型と <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> の項目に互換性がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-246">The array type is not compatible with the items in the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-247">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-247">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-248">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-248">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-249">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="92aa8-250">これは、<xref:System.Windows.Forms.ListBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-250">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-251">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-251">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-252">
            <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-252">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-253">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="92aa8-254">これは、<xref:System.Windows.Forms.ListBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-254">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92aa8-255">
            <see cref="T:System.Windows.Forms.ListBox" /> に追加するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-255">The object to be added to the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92aa8-256">オブジェクトを <see cref="T:System.Windows.Forms.ListBox" /> クラスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-256">Adds an object to the <see cref="T:System.Windows.Forms.ListBox" /> class.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-257">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="92aa8-258">これは、<xref:System.Windows.Forms.ListBox.ObjectCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-258">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92aa8-259">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-259">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92aa8-260">現在の <see cref="T:System.Windows.Forms.ListBox" /> にデータ ソースが割り当てられています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-260">The current <see cref="T:System.Windows.Forms.ListBox" /> has a data source.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="92aa8-261">新しい項目を格納するための領域が不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-261">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92aa8-262">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-262">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92aa8-263">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92aa8-263">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92aa8-264">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="92aa8-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="92aa8-265">これは、<xref:System.Windows.Forms.ListBox.ObjectCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="92aa8-265">It can be used only when the <xref:System.Windows.Forms.ListBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>