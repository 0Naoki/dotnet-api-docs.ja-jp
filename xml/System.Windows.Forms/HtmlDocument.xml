<Type Name="HtmlDocument" FullName="System.Windows.Forms.HtmlDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed4bf637c479156f7003d2c17a0807086453c823" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70474048" /></Metadata><TypeSignature Language="C#" Value="public sealed class HtmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlDocument sealed" />
  <TypeSignature Language="F#" Value="type HtmlDocument = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="63d47-101"><see cref="T:System.Windows.Forms.WebBrowser" /> コントロールでホストされている HTML ドキュメントに、トップレベルのプログラムによるアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-101">Provides top-level programmatic access to an HTML document hosted by the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-102"><xref:System.Windows.Forms.HtmlDocument>Internet Explorer のドキュメントオブジェクト (HTML ドキュメントオブジェクトモデル (DOM) とも呼ばれます) に関するマネージラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-102"><xref:System.Windows.Forms.HtmlDocument> provides a managed wrapper around Internet Explorer's document object, also known as the HTML Document Object Model (DOM).</span></span> <span data-ttu-id="63d47-103">の<xref:System.Windows.Forms.HtmlDocument>インスタンスを取得するには<xref:System.Windows.Forms.WebBrowser.Document%2A> 、 <xref:System.Windows.Forms.WebBrowser>コントロールのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-103">You obtain an instance of <xref:System.Windows.Forms.HtmlDocument> through the <xref:System.Windows.Forms.WebBrowser.Document%2A> property of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="63d47-104">HTML ドキュメント内の HTML タグは、入れ子にすることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-104">HTML tags inside of an HTML document can be nested inside one another.</span></span> <span data-ttu-id="63d47-105"><xref:System.Windows.Forms.HtmlDocument>したがって<xref:System.Windows.Forms.HtmlElement> 、子がクラスのインスタンスであるドキュメントツリーを表します。</span><span class="sxs-lookup"><span data-stu-id="63d47-105"><xref:System.Windows.Forms.HtmlDocument> thus represents a document tree, whose children are instances of the <xref:System.Windows.Forms.HtmlElement> class.</span></span> <span data-ttu-id="63d47-106">単純な HTML ファイルのコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-106">The following code example shows a simple HTML file.</span></span>  
  
```  
<HTML>  
    <BODY>  
        <DIV name="Span1">Simple HTML Form</DIV>  
        <FORM>  
            <SPAN name="TextLabel">Enter Your Name:</SPAN>  
            <INPUT type="text" size="20" name="Text1">  
        </FORM>  
    </BODY>  
</HTML>  
```  
  
 <span data-ttu-id="63d47-107">この例では<xref:System.Windows.Forms.HtmlDocument> 、は、 `HTML`タグ内のドキュメント全体を表します。</span><span class="sxs-lookup"><span data-stu-id="63d47-107">In this example, <xref:System.Windows.Forms.HtmlDocument> represents the entire document inside the `HTML` tags.</span></span> <span data-ttu-id="63d47-108">、 `BODY` <xref:System.Windows.Forms.HtmlElement> 、およびの `SPAN` 各タグは、個々のオブジェクトによって表されます。 `FORM` `DIV`</span><span class="sxs-lookup"><span data-stu-id="63d47-108">The `BODY`, `DIV`, `FORM` and `SPAN` tags are represented by individual <xref:System.Windows.Forms.HtmlElement> objects.</span></span>  
  
 <span data-ttu-id="63d47-109">このツリー内の要素にアクセスするには、いくつかの方法があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-109">There are several ways you can access the elements in this tree.</span></span> <span data-ttu-id="63d47-110">プロパティを使用して、 `BODY`タグとそのすべての子にアクセスします。 <xref:System.Windows.Forms.HtmlDocument.Body%2A></span><span class="sxs-lookup"><span data-stu-id="63d47-110">Use the <xref:System.Windows.Forms.HtmlDocument.Body%2A> property to access the `BODY` tag and all of its children.</span></span> <span data-ttu-id="63d47-111">プロパティ<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>は、ユーザー入力<xref:System.Windows.Forms.HtmlElement>フォーカスのある HTML ページ上の要素のを提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-111">The <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property gives you the <xref:System.Windows.Forms.HtmlElement> for the element on an HTML page that has user input focus.</span></span> <span data-ttu-id="63d47-112">HTML ページ内のすべての要素に名前を付けることができます。コレクション<xref:System.Windows.Forms.HtmlDocument.All%2A>では、インデックスと<xref:System.Windows.Forms.HtmlElement>して名前を使用して、各にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-112">All elements within an HTML page can have a name; the <xref:System.Windows.Forms.HtmlDocument.All%2A> collection provides access to each <xref:System.Windows.Forms.HtmlElement> using its name as an index.</span></span> <span data-ttu-id="63d47-113"><xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A>は、 <xref:System.Windows.Forms.HtmlElementCollection> <xref:System.Windows.Forms.HtmlElement> や `TABLE` など、特定の HTML タグ名を持つすべてのオブジェクトのを返します。 `DIV`</span><span class="sxs-lookup"><span data-stu-id="63d47-113"><xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A> will return an <xref:System.Windows.Forms.HtmlElementCollection> of all <xref:System.Windows.Forms.HtmlElement> objects with a given HTML tag name, such as `DIV` or `TABLE`.</span></span> <span data-ttu-id="63d47-114"><xref:System.Windows.Forms.HtmlDocument.GetElementById%2A>は、指定し<xref:System.Windows.Forms.HtmlElement>た一意の ID に対応する1つのを返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-114"><xref:System.Windows.Forms.HtmlDocument.GetElementById%2A> will return the single <xref:System.Windows.Forms.HtmlElement> corresponding to the unique ID that you supply.</span></span> <span data-ttu-id="63d47-115"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A>は、 <xref:System.Windows.Forms.HtmlElement>指定されたマウスポインター座標で画面に表示されるを返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-115"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> will return the <xref:System.Windows.Forms.HtmlElement> that can be found on the screen at the supplied mouse pointer coordinates.</span></span>  
  
 <span data-ttu-id="63d47-116">また、コレクション<xref:System.Windows.Forms.HtmlDocument.Forms%2A>および<xref:System.Windows.Forms.HtmlDocument.Images%2A>コレクションを使用して、ユーザー入力フォームとグラフィックスを表す要素を反復処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-116">You can also use the <xref:System.Windows.Forms.HtmlDocument.Forms%2A> and <xref:System.Windows.Forms.HtmlDocument.Images%2A> collection to iterate through elements that represent user input forms and graphics, respectively.</span></span>  
  
 <span data-ttu-id="63d47-117"><xref:System.Windows.Forms.HtmlDocument>は`IHTMLDocument` `IHTMLDocument2` 、Internet `IHTMLDocument4` Explorer の DHTML DOM によって実装されているアンマネージインターフェイス (、、、 ) に基づいています。 `IHTMLDocument3`</span><span class="sxs-lookup"><span data-stu-id="63d47-117"><xref:System.Windows.Forms.HtmlDocument> is based on the unmanaged interfaces implemented by Internet Explorer's DHTML DOM: `IHTMLDocument`, `IHTMLDocument2`, `IHTMLDocument3`, and `IHTMLDocument4`.</span></span> <span data-ttu-id="63d47-118">これらのアンマネージインターフェイスで最も頻繁に使用されるプロパティとメソッド<xref:System.Windows.Forms.HtmlDocument>のみがによって公開されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-118">Only the most frequently used properties and methods on these unmanaged interfaces are exposed by <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="63d47-119"><xref:System.Windows.Forms.HtmlDocument.DomDocument%2A>プロパティを使用して、他のすべてのプロパティおよびメソッドに直接アクセスできます。このプロパティは、必要なアンマネージインターフェイスポインターにキャストできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-119">You can access all other properties and methods directly using the <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> property, which you can cast to the desired unmanaged interface pointer.</span></span>  
  
 <span data-ttu-id="63d47-120">HTML ドキュメントには、 <xref:System.Windows.Forms.WebBrowser>コントロール内の異なるウィンドウであるフレームを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-120">An HTML document may contain frames, which are different windows inside of the <xref:System.Windows.Forms.WebBrowser> control.</span></span> <span data-ttu-id="63d47-121">各フレームには、独自の HTML ページが表示されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-121">Each frame displays its own HTML page.</span></span> <span data-ttu-id="63d47-122">コレクションは、プロパティを<xref:System.Windows.Forms.HtmlDocument.Window%2A>使用して取得できます。 <xref:System.Windows.Forms.HtmlWindow.Frames%2A></span><span class="sxs-lookup"><span data-stu-id="63d47-122">The <xref:System.Windows.Forms.HtmlWindow.Frames%2A> collection is available through the <xref:System.Windows.Forms.HtmlDocument.Window%2A> property.</span></span> <span data-ttu-id="63d47-123">また、 <xref:System.Windows.Forms.HtmlDocument.Window%2A>プロパティを使用して、表示されるページのサイズを変更したり、ドキュメントをスクロールしたり、警告やプロンプトをユーザーに表示したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-123">You may also use the <xref:System.Windows.Forms.HtmlDocument.Window%2A> property to resize the displayed page, scroll the document, or display alerts and prompts to the user.</span></span>  
  
 <span data-ttu-id="63d47-124"><xref:System.Windows.Forms.HtmlDocument>HTML ページをホストするときに処理することが予想される最も一般的なイベントを公開します。</span><span class="sxs-lookup"><span data-stu-id="63d47-124"><xref:System.Windows.Forms.HtmlDocument> exposes the most common events you would expect to handle when hosting HTML pages.</span></span> <span data-ttu-id="63d47-125">インターフェイスによって直接公開されていないイベントの場合は、を使用<xref:System.Windows.Forms.HtmlDocument.AttachEventHandler%2A>してイベントのハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-125">For events not exposed directly by the interface, you can add a handler for the event using <xref:System.Windows.Forms.HtmlDocument.AttachEventHandler%2A>.</span></span>  
  
 <span data-ttu-id="63d47-126">HTML ファイルには`SCRIPT` 、JScript や VBScript など、アクティブなスクリプト言語のいずれかで記述されたコードをカプセル化するタグを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-126">HTML files may contain `SCRIPT` tags that encapsulate code written in one of the Active Scripting languages, such as JScript or VBScript.</span></span> <span data-ttu-id="63d47-127">メソッド<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>は、 `SCRIPT`タグで定義されたプロパティとメソッドを実行するためのを提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-127">The <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> method provides for execution of properties and methods defined in a `SCRIPT` tag.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63d47-128">のプロパティ、メソッド、およびイベント<xref:System.Windows.Forms.HtmlDocument>のほとんどは、アンマネージ DOM の場合と同じ名前を保持してい[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]ますが、との一貫性を保つために一部が変更されています。</span><span class="sxs-lookup"><span data-stu-id="63d47-128">While most of the properties, methods, and events on <xref:System.Windows.Forms.HtmlDocument> have kept the same names as they have on the unmanaged DOM, some have been changed for consistency with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-129">次のコード例では、Northwind データベースのデータを使用`HTML TABLE`して<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>、を使用して動的にを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d47-129">The following code example uses data from the Northwind database to create an `HTML TABLE` dynamically using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>.</span></span> <span data-ttu-id="63d47-130">また、`TD` `TR`メソッドも使用されます。まず、セル (要素) を行 (要素) に追加し、次にテーブルに行を追加して、最後にテーブルを現在のドキュメントの末尾に追加します。 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A></span><span class="sxs-lookup"><span data-stu-id="63d47-130">The <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method is also used, first to add cells (`TD` elements) to rows (`TR` elements), then to add rows to the table, and finally to append the table to the end of the current document.</span></span> <span data-ttu-id="63d47-131">このコード例では、アプリケーションにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="63d47-131">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span> <span data-ttu-id="63d47-132">このコードは、ドキュメントが読み込まれた後に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-132">The code should be called after a document has been loaded.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#10)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://developer.mozilla.org/docs/Web/API/Document"><span data-ttu-id="63d47-133">ドキュメント-Web Api</span><span class="sxs-lookup"><span data-stu-id="63d47-133">document - Web APIs</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752574(v=vs.85)"><span data-ttu-id="63d47-134">IHTMLDocument2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="63d47-134">IHTMLDocument2 Interface</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ActiveElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement ActiveElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement ActiveElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ActiveElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ ActiveElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlDocument.ActiveElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-135">現在ユーザーの入力フォーカスがある <see cref="T:System.Windows.Forms.HtmlElement" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-135">Provides the <see cref="T:System.Windows.Forms.HtmlElement" /> which currently has user input focus.</span></span></summary>
        <value><span data-ttu-id="63d47-136">現在ユーザーの入力フォーカスがある <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-136">The <see cref="T:System.Windows.Forms.HtmlElement" /> which currently has user input focus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-137">ドキュメントにフォーカスがあり、ドキュメントの要素がフォーカスされていない場合<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>は、 `<BODY>`タグに対応する要素を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-137">When the document has focus, but no element of the document has been given focus, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> returns the element corresponding to the `<BODY>` tag.</span></span>  
  
 <span data-ttu-id="63d47-138">ドキュメントにフォーカスがない場合は、 <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>を`null`返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-138">If the document does not have focus, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> returns `null`.</span></span>  
  
 <span data-ttu-id="63d47-139">入力フォーカスを持つ現在`TD`の要素が HTML `TABLE`タグ内のセル () である<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>場合、は`TABLE`要素を含む要素を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-139">If the current element with input focus is a cell (`TD`) in an HTML `TABLE` tag, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> will return the element that contains the `TABLE` element.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752581(v=vs.85)"><span data-ttu-id="63d47-140">activeElement プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-140">activeElement Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.HtmlDocument.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-141">ユーザーがハイパーリンクをクリックしたときのハイパーリンクの <see cref="T:System.Drawing.Color" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-141">Gets or sets the <see cref="T:System.Drawing.Color" /> of a hyperlink when clicked by a user.</span></span></summary>
        <value><span data-ttu-id="63d47-142">アクティブなリンクの <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-142">The <see cref="T:System.Drawing.Color" /> for active links.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-143">リンクは、ユーザーがクリックしたときにアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="63d47-143">A link is active when a user is clicking on it.</span></span> <span data-ttu-id="63d47-144">ナビゲーションの前にリンクの色を変更するには、このプロパティを変更します。</span><span class="sxs-lookup"><span data-stu-id="63d47-144">Change this property to change the color of the link prior to navigation.</span></span>  
  
 <span data-ttu-id="63d47-145">の<xref:System.Drawing.Color> `Alpha`型は値をサポートしていますが、HTML DOM ではサポートされていません。 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="63d47-145">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="63d47-146">したがって`Alpha` 、このプロパティに割り当てられている場合、による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-146">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752564.aspx"><span data-ttu-id="63d47-147">alinkColor プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-147">alinkColor Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection All" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.All" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property All As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ All { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.All : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlDocument.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-148"><see cref="T:System.Windows.Forms.HtmlElementCollection" /> のインスタンスを取得します。これは、ドキュメントのすべての <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトを格納します。</span><span class="sxs-lookup"><span data-stu-id="63d47-148">Gets an instance of <see cref="T:System.Windows.Forms.HtmlElementCollection" />, which stores all <see cref="T:System.Windows.Forms.HtmlElement" /> objects for the document.</span></span></summary>
        <value><span data-ttu-id="63d47-149">ドキュメント内のすべての要素の <see cref="T:System.Windows.Forms.HtmlElementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-149">The <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all elements in the document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-150">コレクション<xref:System.Windows.Forms.HtmlDocument.All%2A>は、ドキュメントツリー内の位置に関係なく、HTML ドキュメント内の任意の要素へのランダムアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="63d47-150">The <xref:System.Windows.Forms.HtmlDocument.All%2A> collection provides random access to any element in the HTML document, regardless of its position in the document tree.</span></span> <span data-ttu-id="63d47-151">名前、ID、またはインデックスを使用して HTML ドキュメント内の任意の要素にアクセスするには、これを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-151">Use it to access any element in an HTML document by name, ID, or index.</span></span> <span data-ttu-id="63d47-152">また、ドキュメント内のすべての要素を反復処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-152">You may also iterate over all of the elements within a document.</span></span>  
  
 <span data-ttu-id="63d47-153">`HEAD` や `TITLE` などの一部の要素には、名前が関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="63d47-153">Some elements, such as `HEAD` and `TITLE`, will never have names associated with them.</span></span> <span data-ttu-id="63d47-154">他のすべての要素の名前は、HTML ファイルの作成者によって割り当てられた場合のみになります。</span><span class="sxs-lookup"><span data-stu-id="63d47-154">All other elements will have names only if the author of the HTML file assigned them.</span></span> <span data-ttu-id="63d47-155">名前のない要素には、ID またはインデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-155">You can access elements without names by ID or index.</span></span>  
  
 <span data-ttu-id="63d47-156">要素を<xref:System.Windows.Forms.HtmlDocument.All%2A>コレクションに直接追加することはできません。これは、 `HTML`タグの外側にある HTML ファイル内のすべての要素が親要素を持つ必要があるためです。</span><span class="sxs-lookup"><span data-stu-id="63d47-156">You cannot add elements directly to the <xref:System.Windows.Forms.HtmlDocument.All%2A> collection, because all elements in an HTML file outside of the `HTML` tag must have a parent element.</span></span> <span data-ttu-id="63d47-157">ツリーに新しい要素を<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>追加する<xref:System.Windows.Forms.HtmlElement>には、のメソッドまたはプロパティを使用します。 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A></span><span class="sxs-lookup"><span data-stu-id="63d47-157">Use the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method or the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property on <xref:System.Windows.Forms.HtmlElement> to add new elements to the tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-158">次のコード例では、ドキュメント内のすべての要素を反復`Enabled=True`処理し、を設定して、ドキュメントの読み込み中にユーザーが入力できないように、既定で無効になっている可能性のあるすべての要素を有効にします。</span><span class="sxs-lookup"><span data-stu-id="63d47-158">The following code example iterates through all of the elements in a document and sets `Enabled=True`, enabling any elements that may have been disabled by default to prevent user input while the document was loading.</span></span> <span data-ttu-id="63d47-159">このコード例では、アプリケーションにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-159">The code example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752582.aspx"><span data-ttu-id="63d47-160">すべてのプロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-160">all Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.AttachEventHandler : string * EventHandler -&gt; unit" Usage="htmlDocument.AttachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="63d47-161">処理するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-161">The name of the event you want to handle.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="63d47-162">イベントを処理するマネージド コード。</span><span class="sxs-lookup"><span data-stu-id="63d47-162">The managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="63d47-163">指定した HTML DOM イベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="63d47-163">Adds an event handler for the named HTML DOM event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-164">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトの1つにイベントをアタッチしないでください。</span><span class="sxs-lookup"><span data-stu-id="63d47-164">You should not attach an event to the document or one of its objects until the document has completed loading.</span></span> <span data-ttu-id="63d47-165">このメソッドを呼び出す必要がある最も早い<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>方法は、 <xref:System.Windows.Forms.WebBrowser>コントロールのイベントです。</span><span class="sxs-lookup"><span data-stu-id="63d47-165">The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="63d47-166">このメソッドを使用すると、によって公開されて<xref:System.Windows.Forms.HtmlDocument>いないアンマネージ DOM イベントにハンドラーをアタッチできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-166">This method allows you to attach handlers to unmanaged DOM events not exposed by <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="63d47-167">使用できるアンマネージ DOM イベントの詳細については、「[マネージ HTML ドキュメントオブジェクトモデルの非公開メンバーへのアクセス](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)」および「IHTMLDocument インターフェイス: [IHTMLDocument](https://go.microsoft.com/fwlink/?LinkId=104882)、 [IHTMLDocument2](https://go.microsoft.com/fwlink/?LinkId=104884)、 [IHTMLDocument3](https://go.microsoft.com/fwlink/?LinkId=104886)」を参照してください。[IHTMLDocument4](https://go.microsoft.com/fwlink/?LinkId=104887)、 [IHTMLDocument5](https://go.microsoft.com/fwlink/?LinkId=104888)。</span><span class="sxs-lookup"><span data-stu-id="63d47-167">For more information about available unmanaged DOM events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLDocument interfaces: [IHTMLDocument](https://go.microsoft.com/fwlink/?LinkId=104882), [IHTMLDocument2](https://go.microsoft.com/fwlink/?LinkId=104884), [IHTMLDocument3](https://go.microsoft.com/fwlink/?LinkId=104886), [IHTMLDocument4](https://go.microsoft.com/fwlink/?LinkId=104887), [IHTMLDocument5](https://go.microsoft.com/fwlink/?LinkId=104888).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752535.aspx"><span data-ttu-id="63d47-168">attachEvent メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-168">attachEvent Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.HtmlDocument.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-169">HTML ドキュメントの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-169">Gets or sets the background color of the HTML document.</span></span></summary>
        <value><span data-ttu-id="63d47-170">ドキュメントの背景の <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-170">The <see cref="T:System.Drawing.Color" /> of the document's background.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-171"><xref:System.Windows.Forms.HtmlDocument.BackColor%2A>他の要素が画面の領域を占有していない場合は、が表示されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-171"><xref:System.Windows.Forms.HtmlDocument.BackColor%2A> will display when no other element occupies that area of the screen.</span></span>  
  
 <span data-ttu-id="63d47-172">の<xref:System.Drawing.Color> `Alpha`型は値をサポートしていますが、HTML DOM ではサポートされていません。 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="63d47-172">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="63d47-173">したがって`Alpha` 、このプロパティに割り当てられている場合、による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-173">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
        <related type="Article" href="https://msdn.microsoft.com/library/aa752565.aspx"><span data-ttu-id="63d47-174">bgColor プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-174">bgColor Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement Body" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Body" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Body As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ Body { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Body : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlDocument.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-175"><c>BODY</c> タグの <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-175">Gets the <see cref="T:System.Windows.Forms.HtmlElement" /> for the <c>BODY</c> tag.</span></span></summary>
        <value><span data-ttu-id="63d47-176"><c>BODY タグ</c>の<see cref="T:System.Windows.Forms.HtmlElement" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="63d47-176">The <see cref="T:System.Windows.Forms.HtmlElement" /> object for the <c>BODY</c> tag.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-177">HTML ドキュメントは、次の2つの主要なセクションに分割されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-177">An HTML document is split into two major sections:</span></span>  
  
-   <span data-ttu-id="63d47-178">`HEAD`。ドキュメントのタイトル、任意のドキュメントメタデータ、および`SCRIPT`要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="63d47-178">`HEAD`, which contains the document's title, any document meta-data, and `SCRIPT` elements.</span></span>  
  
-   <span data-ttu-id="63d47-179">`BODY`。ドキュメントの画面上の外観に関係するすべての要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="63d47-179">`BODY`, which contains all of the elements involved in the on-screen appearance of the document.</span></span>  
  
 <span data-ttu-id="63d47-180">に同等`Head`の<xref:System.Windows.Forms.HtmlDocument>プロパティはありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-180">There is no equivalent `Head` property on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="63d47-181">`HEAD`要素を取得するには<xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A>、を使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-181">To obtain the `HEAD` element, use <xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-182">次のコード例では、 `DIV` <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドを使用して新しい要素を作成し、ドキュメントの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="63d47-182">The following code example creates a new `DIV` element and appends it to the bottom of the document using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlDocument#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752585.aspx"><span data-ttu-id="63d47-183">body プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-183">body Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Click : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-184">ユーザーがドキュメント内の任意の場所をクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-184">Occurs when the user clicks anywhere on the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-185">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-185">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-186">次のコード例では、ドキュメントをクリックして要素を検索し、 <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A>を使用して要素を Web ページの上部に揃えます。</span><span class="sxs-lookup"><span data-stu-id="63d47-186">The following code example detects a click on the document, finds the element, and uses <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A> to align the element with the top of the Web page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752611.aspx"><span data-ttu-id="63d47-187">onclick イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-187">onclick Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler ContextMenuShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler ContextMenuShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.ContextMenuShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuShowing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ ContextMenuShowing;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuShowing : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.ContextMenuShowing : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-188">ユーザーがドキュメントのコンテキスト メニューの表示を要求したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-188">Occurs when the user requests to display the document's context menu.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-189">既定では、ドキュメントまたはドキュメント内の要素でマウスを右クリックすると、要素に固有の既定のコンテキストメニューが表示されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-189">By default, if you right-click your mouse on a document or an element in a document, it will display a default context menu particular to the element.</span></span> <span data-ttu-id="63d47-190">このイベントを使用して、コンテキストメニューの表示をキャンセルし、独自のメニューを表示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-190">Use this event to cancel the display of the context menu and display one of your own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-191"><xref:System.Windows.Forms.HtmlDocument.ContextMenuShowing>イベントをキャプチャし、それを使用してを<xref:System.Windows.Forms.ContextMenuStrip>表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-191">The following code example captures the <xref:System.Windows.Forms.HtmlDocument.ContextMenuShowing> event and uses it to display a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ms536914.aspx"><span data-ttu-id="63d47-192">oncontextmenu イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-192">oncontextmenu Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cookie">
      <MemberSignature Language="C#" Value="public string Cookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Cookie" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Cookie" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookie As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Cookie { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cookie : string with get, set" Usage="System.Windows.Forms.HtmlDocument.Cookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-193">このドキュメントに関連付けられている HTTP クッキーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-193">Gets or sets the HTTP cookies associated with this document.</span></span></summary>
        <value><span data-ttu-id="63d47-194">セミコロンで各クッキーを区切った、クッキーのリストを格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-194">A <see cref="T:System.String" /> containing a list of cookies, with each cookie separated by a semicolon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-195"><xref:System.Windows.Forms.HtmlDocument.Cookie%2A> の <xref:System.Windows.Forms.HtmlDocument> プロパティは、Web ページに設定されているすべての cookie を公開します。</span><span class="sxs-lookup"><span data-stu-id="63d47-195">The <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property of <xref:System.Windows.Forms.HtmlDocument> exposes all cookies set for a Web page.</span></span>  
  
 <span data-ttu-id="63d47-196">*Cookie*は、特定の Web ページに関連付けられている任意の名前と値のペアです。</span><span class="sxs-lookup"><span data-stu-id="63d47-196">A *cookie* is an arbitrary name/value pair associated with a given Web page.</span></span> <span data-ttu-id="63d47-197">Web 開発者は、cookie を使用して、ユーザーが Web サイトにアクセスしたり、Web サイトに戻ったりするタイミングを追跡します。</span><span class="sxs-lookup"><span data-stu-id="63d47-197">Web developers use cookies to track when users visit or return to a Web site.</span></span> <span data-ttu-id="63d47-198">Cookie は、cookie あると呼ばれる複数の部分で構成され、次の項目を決定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-198">A cookie is composed of multiple parts, called cookie crumbs, that determine the following:</span></span>  
  
-   <span data-ttu-id="63d47-199">クッキーが適用されるドキュメントセット。ドメインとパス。</span><span class="sxs-lookup"><span data-stu-id="63d47-199">The document set to which the cookie applies; its domain and path.</span></span>  
  
-   <span data-ttu-id="63d47-200">クッキーの名前と値。</span><span class="sxs-lookup"><span data-stu-id="63d47-200">The name and value of the cookie.</span></span>  
  
-   <span data-ttu-id="63d47-201">クッキーの有効期限。</span><span class="sxs-lookup"><span data-stu-id="63d47-201">The expiration date of the cookie.</span></span>  
  
-   <span data-ttu-id="63d47-202">セキュリティで保護された接続を使用してのみ、cookie を送信できるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-202">Whether the cookie can only be sent using a secure connection.</span></span>  
  
 <span data-ttu-id="63d47-203">プロパティ<xref:System.Windows.Forms.HtmlDocument.Cookie%2A>には、複数の cookie を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-203">The <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property may contain multiple cookies.</span></span>  
  
 <span data-ttu-id="63d47-204">プロパティは<xref:System.Windows.Forms.HtmlDocument.Cookie%2A> 、一度に1つの cookie を設定するためにのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-204">You can only use the <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property to set one cookie at a time.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752569.aspx"><span data-ttu-id="63d47-205">cookie プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-205">cookie Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement CreateElement (string elementTag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement CreateElement(string elementTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (elementTag As String) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ CreateElement(System::String ^ elementTag);" />
      <MemberSignature Language="F#" Value="member this.CreateElement : string -&gt; System.Windows.Forms.HtmlElement" Usage="htmlDocument.CreateElement elementTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementTag"><span data-ttu-id="63d47-206">作成する HTML 要素の名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-206">The name of the HTML element to create.</span></span></param>
        <summary><span data-ttu-id="63d47-207">指定した HTML タグの種類の新しい <see langword="HtmlElement" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="63d47-207">Creates a new <see langword="HtmlElement" /> of the specified HTML tag type.</span></span></summary>
        <returns><span data-ttu-id="63d47-208">指定したタグの種類の新しい要素。</span><span class="sxs-lookup"><span data-stu-id="63d47-208">A new element of the specified tag type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-209">`elementTag`または`FRAME` `IFRAME`を除く、Internet Explorer でサポートされている HTML タグのいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-209">`elementTag` may be one of any of the supported HTML tags in Internet Explorer, except for `FRAME` or `IFRAME`.</span></span>  
  
 <span data-ttu-id="63d47-210"><xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>現在のドキュメントツリーにアタッチされていない要素を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-210"><xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> returns an element unattached to the current document tree.</span></span> <span data-ttu-id="63d47-211">要素をドキュメントに追加するに<xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>は、メソッドまたは<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-211">To add the element to the document, use either the <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> or <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> methods.</span></span>  
  
 <span data-ttu-id="63d47-212">このメソッドは、コントロールの<xref:System.Windows.Forms.WebBrowser> <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> **[ソースの表示]** コンテキストメニューコマンドまたは<xref:System.Windows.Forms.WebBrowser>コントロールのプロパティと<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>プロパティを使用する場合、既存のドキュメントのソースコードの状態には影響しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-212">This method will not affect the state of an existing document's source code when you use the <xref:System.Windows.Forms.WebBrowser> control's **View Source** context menu command or the <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> and <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> properties of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="63d47-213">を使用<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>して新しい要素を作成する場合、などの特定の`Name`プロパティを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="63d47-213">When you create new elements with <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, you will not be able to set certain properties, such as `Name`.</span></span> <span data-ttu-id="63d47-214">Name 属性を設定する必要がある場合は、ドキュメント内の別のオブジェクト<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>のプロパティに HTML として割り当てます。</span><span class="sxs-lookup"><span data-stu-id="63d47-214">In cases where you need to set the Name attribute, assign them as HTML to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of another object in the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-215">次のコード例では、Northwind データベースのデータを使用して、 <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>を使用して HTML テーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d47-215">The following code example uses data from the Northwind database to create an HTML table using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>.</span></span> <span data-ttu-id="63d47-216">また、`TD` `TR`メソッドも使用されます。まず、セル (要素) を行 (要素) に追加し、次にテーブルに行を追加して、最後にテーブルを現在のドキュメントの末尾に追加します。 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A></span><span class="sxs-lookup"><span data-stu-id="63d47-216">The <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method is also used, first to add cells (`TD` elements) to rows (`TR` elements), then to add rows to the table, and finally to append the table to the end of the current document.</span></span> <span data-ttu-id="63d47-217">このコード例では、アプリケーションにと<xref:System.Windows.Forms.WebBrowser>いう`WebBrowser1`コントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="63d47-217">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control called `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752570.aspx"><span data-ttu-id="63d47-218">createElement メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-218">createElement Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncoding">
      <MemberSignature Language="C#" Value="public string DefaultEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.DefaultEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEncoding : string" Usage="System.Windows.Forms.HtmlDocument.DefaultEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-219">現在のドキュメントに既定で使用されるエンコーディングを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-219">Gets the encoding used by default for the current document.</span></span></summary>
        <value><span data-ttu-id="63d47-220">ページが最初に表示されたときにブラウザーが使用するエンコーディングを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-220">The <see cref="T:System.String" /> representing the encoding that the browser uses when the page is first displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-221">既定のエンコーディングは、ページが最初に読み込まれたときに、マネージ HTML ドキュメントオブジェクトモデル (DOM) が使用しようとするエンコーディングです。</span><span class="sxs-lookup"><span data-stu-id="63d47-221">The default encoding is the encoding the managed HTML Document Object Model (DOM) will attempt to use when the page is initially loaded.</span></span> <span data-ttu-id="63d47-222">このエンコードは、Internet Explorer の**エンコード**設定から、またはページ内`META`に埋め込まれたタグから派生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-222">This encoding is derived either from Internet Explorer's **Encoding** settings, or from a `META` tag embedded within the page.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ms537500.aspx"><span data-ttu-id="63d47-223">文字セット認識</span><span class="sxs-lookup"><span data-stu-id="63d47-223">Character Set Recognition</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ms533714.aspx"><span data-ttu-id="63d47-224">defaultCharset プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-224">defaultCharset Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.DetachEventHandler : string * EventHandler -&gt; unit" Usage="htmlDocument.DetachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="63d47-225">処理を終了するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-225">The name of the event you want to cease handling.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="63d47-226">イベントを処理するマネージド コード。</span><span class="sxs-lookup"><span data-stu-id="63d47-226">The managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="63d47-227">HTML DOM の指定したイベントからイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="63d47-227">Removes an event handler from a named event on the HTML DOM.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752539.aspx"><span data-ttu-id="63d47-228">detachEvent メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-228">detachEvent Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Windows.Forms.HtmlDocument.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-229">セキュリティのためにこのドキュメントのドメインを記述する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-229">Gets or sets the string describing the domain of this document for security purposes.</span></span></summary>
        <value><span data-ttu-id="63d47-230">有効なドメイン。</span><span class="sxs-lookup"><span data-stu-id="63d47-230">A valid domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-231">既定では、異なるフレーム内の2つの Web ページは、script を使用して互いのコンテンツにアクセスできません。さら `www.microsoft.com` に、このインスタンスでは、異なるドメインと見なされます。 `docs.microsoft.com`</span><span class="sxs-lookup"><span data-stu-id="63d47-231">By default, two Web pages in different frames are prevented from accessing each other's content using script; even `www.microsoft.com` and `docs.microsoft.com` are, in this instance, considered different domains.</span></span> <span data-ttu-id="63d47-232">同じトップレベルドメインのページに対してクロスフレームスクリプトを有効にするには、 <xref:System.Windows.Forms.HtmlDocument.Domain%2A>プロパティに新しい値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-232">To enable cross-frame scripting for pages from the same top-level domain, you can assign a new value to the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property.</span></span> <span data-ttu-id="63d47-233">前の URL の例では<xref:System.Windows.Forms.HtmlDocument.Domain%2A> 、を microsoft.com に設定すると、両方のページが互いに通信できるようになります。</span><span class="sxs-lookup"><span data-stu-id="63d47-233">In the previous URL example, setting <xref:System.Windows.Forms.HtmlDocument.Domain%2A> to microsoft.com would allow both pages to communicate with one another.</span></span>  
  
 <span data-ttu-id="63d47-234">プロパティに割り当てら<xref:System.Windows.Forms.HtmlDocument.Domain%2A>れた文字列は、有効なトップレベルドメインである必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-234">Strings assigned to the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property must be valid top-level domains.</span></span> <span data-ttu-id="63d47-235">前の URL の例では、を<xref:System.Windows.Forms.HtmlDocument.Domain%2A> microsoft.com に設定できますが、.com には設定できません。これにより、インターネット上の任意のページでページの内容のスクリプトを作成できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-235">In the previous URL example, you can set <xref:System.Windows.Forms.HtmlDocument.Domain%2A> to microsoft.com, but not to .com, which would enable any page on the Internet to script a page's contents.</span></span>  
  
 <span data-ttu-id="63d47-236">プロパティを使用し<xref:System.Windows.Forms.HtmlDocument.Domain%2A>て、2つの異なるプロトコルを使用してアクセスされるページに対してクロスフレームスクリプトを有効にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="63d47-236">You cannot use the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property to enable cross-frame scripting for pages accessed using two different protocols.</span></span> <span data-ttu-id="63d47-237">ページ内の1つのフレームが Web サーバー (http://プロトコル) から取得され、別のフレームがファイルシステム (file://) プロトコルに由来する場合、 <xref:System.Windows.Forms.HtmlDocument.Domain%2A>プロパティの値に関係なく相互に通信することはできません。</span><span class="sxs-lookup"><span data-stu-id="63d47-237">If one frame in your page comes from a Web server (the http:// protocol) and another comes from the file system (the file://) protocol, they will not be able to communicate with one another regardless of the value of the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63d47-238"><c>Domain</c> プロパティの引数は、ドメイン ネーム システム (DNS: Domain Name System) 規則に従った有効なドメイン名である必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-238">The argument for the <c>Domain</c> property must be a valid domain name using Domain Name System (DNS) conventions.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752575.aspx"><span data-ttu-id="63d47-239">ドメインプロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-239">domain Property</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ms533028.aspx"><span data-ttu-id="63d47-240">クロスフレームスクリプトとセキュリティについて</span><span class="sxs-lookup"><span data-stu-id="63d47-240">About Cross-Frame Scripting and Security</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ms535250.aspx"><span data-ttu-id="63d47-241">frame オブジェクト</span><span class="sxs-lookup"><span data-stu-id="63d47-241">frame Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DomDocument">
      <MemberSignature Language="C#" Value="public object DomDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomDocument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.DomDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomDocument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomDocument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomDocument : obj" Usage="System.Windows.Forms.HtmlDocument.DomDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-242">この <see cref="T:System.Windows.Forms.HtmlDocument" /> のアンマネージ インターフェイスへのポインターを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-242">Gets the unmanaged interface pointer for this <see cref="T:System.Windows.Forms.HtmlDocument" />.</span></span></summary>
        <value><span data-ttu-id="63d47-243">アンマネージドキュメントへの<c>IDispatch</c>ポインターを表す。 <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="63d47-243">An <see cref="T:System.Object" /> representing an <c>IDispatch</c> pointer to the unmanaged document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-244"><xref:System.Windows.Forms.HtmlDocument>は、COM で記述された Internet Explorer ドキュメントオブジェクトモデル (DOM) のラッパーです。</span><span class="sxs-lookup"><span data-stu-id="63d47-244"><xref:System.Windows.Forms.HtmlDocument> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written in COM.</span></span> <span data-ttu-id="63d47-245">など、基になる COM インターフェイスの非公開プロパティやメソッドにアクセスする必要が`IHTMLDocument2`ある場合は、このオブジェクトを使用してクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-245">If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLDocument2`, you can use this object to query for them.</span></span>  
  
 <span data-ttu-id="63d47-246">アンマネージインターフェイスを使用するには、MSHTML ライブラリ (mshtml) をアプリケーションにインポートします。</span><span class="sxs-lookup"><span data-stu-id="63d47-246">To use the unmanaged interfaces, import the MSHTML library (mshtml.dll) into your application.</span></span> <span data-ttu-id="63d47-247">ただし、 `IDispatch::Invoke`メソッドを使用して、非公開のプロパティとメソッドを実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="63d47-247">However, you can also execute unexposed properties and methods using the `IDispatch::Invoke` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-248">次のコード例では<xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> 、を`IHTMLDocument2`ポインターにキャストし、 `lastModified`プロパティの値を表示します。これは、ドキュメントの所有者が最後にコンテンツを更新した日時を示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-248">The following code example casts the <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> to an `IHTMLDocument2` pointer and displays the value of the `lastModified` property, which tells when the owner of the document last updated its contents.</span></span> <span data-ttu-id="63d47-249">このコード例では、という<xref:System.Windows.Forms.Button>名前`Button6`のをフォームに持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-249">The code example requires that you have a <xref:System.Windows.Forms.Button> on your form named `Button6`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlDocument#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="63d47-250">アクセス<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />許可の場合。</span><span class="sxs-lookup"><span data-stu-id="63d47-250">For <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission.</span></span> <span data-ttu-id="63d47-251">関連付けられた列挙型:<see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></span><span class="sxs-lookup"><span data-stu-id="63d47-251">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></span></span></permission>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752574(v=vs.85)"><span data-ttu-id="63d47-252">IHTMLDocument2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="63d47-252">IHTMLDocument2 Interface</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=128638"><span data-ttu-id="63d47-253">MSHTML リファレンス</span><span class="sxs-lookup"><span data-stu-id="63d47-253">MSHTML Reference</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Windows.Forms.HtmlDocument.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-254">このドキュメントの文字エンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-254">Gets or sets the character encoding for this document.</span></span></summary>
        <value><span data-ttu-id="63d47-255">現在の文字エンコーディングを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-255">The <see cref="T:System.String" /> representing the current character encoding.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ms537500.aspx"><span data-ttu-id="63d47-256">文字セット認識</span><span class="sxs-lookup"><span data-stu-id="63d47-256">Character Set Recognition</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752566.aspx"><span data-ttu-id="63d47-257">charset プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-257">charset Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="htmlDocument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="63d47-258">テストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="63d47-258">The object to test.</span></span></param>
        <summary><span data-ttu-id="63d47-259">指定したオブジェクトと現在のオブジェクトとを比較し、等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="63d47-259">Tests the object for equality against the current object.</span></span></summary>
        <returns><span data-ttu-id="63d47-260">オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-260"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecCommand">
      <MemberSignature Language="C#" Value="public void ExecCommand (string command, bool showUI, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecCommand(string command, bool showUI, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.ExecCommand(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecCommand (command As String, showUI As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecCommand(System::String ^ command, bool showUI, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ExecCommand : string * bool * obj -&gt; unit" Usage="htmlDocument.ExecCommand (command, showUI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="63d47-261">実行するコマンド名です。</span><span class="sxs-lookup"><span data-stu-id="63d47-261">The name of the command to execute.</span></span></param>
        <param name="showUI"><span data-ttu-id="63d47-262">コマンド固有のダイアログ ボックスまたはメッセージ ボックスをユーザーに表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="63d47-262">Whether or not to show command-specific dialog boxes or message boxes to the user.</span></span></param>
        <param name="value"><span data-ttu-id="63d47-263">コマンドを使用して代入する値。</span><span class="sxs-lookup"><span data-stu-id="63d47-263">The value to assign using the command.</span></span> <span data-ttu-id="63d47-264">すべてのコマンドに適用されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-264">Not applicable for all commands.</span></span></param>
        <summary><span data-ttu-id="63d47-265">ドキュメントに対して指定したコマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-265">Executes the specified command against the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-266"><xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>は、で<xref:System.Windows.Forms.HtmlDocument>公開されているメソッドがない、多数のコマンドから成る配列を公開します。</span><span class="sxs-lookup"><span data-stu-id="63d47-266"><xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A> exposes a large array of commands for which there are no methods exposed on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="63d47-267">を<xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>使用すると、新しい HTML 要素の挿入、テキストの選択と書式設定、キャッシュされた認証資格情報のクリアを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-267">Using <xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A> you can insert new HTML elements, select and format text, and clear any cached authentication credentials.</span></span> <span data-ttu-id="63d47-268">コマンドの完全な一覧については、「[コマンド識別子](https://go.microsoft.com/fwlink/?LinkId=198814)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-268">For a full list of commands, see [Command Identifiers](https://go.microsoft.com/fwlink/?LinkId=198814).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63d47-269">Copy などの特定のコマンドには戻り値があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-269">Certain commands, such as copy, have return values.</span></span> <span data-ttu-id="63d47-270">の現在の<xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>実装では、呼び出しから戻り値を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="63d47-270">In the current implementation of <xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>, you cannot obtain a return value from your call.</span></span> <span data-ttu-id="63d47-271">戻り値を取得するには、代わりに、 <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A>参照に対応するアンマネージメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-271">To retrieve return values, use the corresponding unmanaged method on a <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> reference instead.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ms536419.aspx"><span data-ttu-id="63d47-272">execCommand メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-272">execCommand Method</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=198814"><span data-ttu-id="63d47-273">コマンド識別子</span><span class="sxs-lookup"><span data-stu-id="63d47-273">Command Identifiers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; unit" Usage="htmlDocument.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d47-274">ユーザーの入力フォーカスを現在のドキュメントに設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-274">Sets user input focus on the current document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-275">現在<xref:System.Windows.Forms.HtmlDocument.Focus%2A>コントロールにフォーカスがない<xref:System.Windows.Forms.WebBrowser>場合、を呼び出すと、コントロールにフォーカスが設定されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-275">Calling <xref:System.Windows.Forms.HtmlDocument.Focus%2A> will set focus on the <xref:System.Windows.Forms.WebBrowser> control, if the control currently does not have focus.</span></span> <span data-ttu-id="63d47-276">ドキュメントがの`FRAME`内部でホストされている場合、このメソッドは`FRAME`内`FRAMESET`のにフォーカスを移します。</span><span class="sxs-lookup"><span data-stu-id="63d47-276">If the document is hosted inside of a `FRAME`, this method will put focus on that `FRAME` within the `FRAMESET`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="63d47-277">フォームにフォーカスを設定する権限。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="63d47-277">For <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> permission to set focus on a form.</span></span> <span data-ttu-id="63d47-278">関連付けられた列挙型:<see cref="T:System.Security.Permissions.UIPermissionWindow" /></span><span class="sxs-lookup"><span data-stu-id="63d47-278">Associated enumeration: <see cref="T:System.Security.Permissions.UIPermissionWindow" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752527.aspx"><span data-ttu-id="63d47-279">フォーカス方法</span><span class="sxs-lookup"><span data-stu-id="63d47-279">focus Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Focused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.HtmlDocument.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-280">ドキュメントにユーザーの入力フォーカスがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-280">Gets a value indicating whether the document has user input focus.</span></span></summary>
        <value><span data-ttu-id="63d47-281">ドキュメントにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-281"><see langword="true" /> if the document has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.Focus" />
        <altmember cref="E:System.Windows.Forms.HtmlDocument.Focusing" />
        <altmember cref="E:System.Windows.Forms.HtmlDocument.LosingFocus" />
      </Docs>
    </Member>
    <Member MemberName="Focusing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Focusing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Focusing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Focusing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Focusing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Focusing;" />
      <MemberSignature Language="F#" Value="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-282">ドキュメントがフォーカスを得る前に発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-282">Occurs before focus is given to the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-283">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-283">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-284">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-284">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-285">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Focusing>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-285">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Focusing> event.</span></span> <span data-ttu-id="63d47-286">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-286">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="63d47-287">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-287">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-288">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Focusing>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-288">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Focusing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#424](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#424)]
 [!code-vb[System.Windows.Forms.EventExamples#424](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#424)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752520.aspx"><span data-ttu-id="63d47-289">onfocusin イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-289">onfocusin Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.HtmlDocument.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-290">ドキュメントのテキストの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-290">Gets or sets the text color for the document.</span></span></summary>
        <value><span data-ttu-id="63d47-291">ドキュメントのテキストの色。</span><span class="sxs-lookup"><span data-stu-id="63d47-291">The color of the text in the document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-292"><xref:System.Drawing.Color> <xref:System.Drawing.Color>の型は値をサポートしていますが、HTML DOM ではサポートされていません。 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]  `Alpha`</span><span class="sxs-lookup"><span data-stu-id="63d47-292">The <xref:System.Drawing.Color><xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="63d47-293">したがって`Alpha` 、このプロパティに割り当てられている場合、による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-293">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
        <related type="Article" href="https://msdn.microsoft.com/library/aa752580.aspx"><span data-ttu-id="63d47-294">fgColor プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-294">fgColor Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Forms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Forms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Forms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Forms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Forms As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Forms { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Forms : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlDocument.Forms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-295">ドキュメント内のすべての <c>&lt;FORM&gt;</c> 要素のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-295">Gets a collection of all of the <c>&lt;FORM&gt;</c> elements in the document.</span></span></summary>
        <value><span data-ttu-id="63d47-296">ドキュメント内の<c>&lt;フォーム &gt;</c>要素の。 <see cref="T:System.Windows.Forms.HtmlElementCollection" /></span><span class="sxs-lookup"><span data-stu-id="63d47-296">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of the <c>&lt;FORM&gt;</c> elements within the document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-297">HTML ドキュメントには、データをサーバー `FORM`に送信するための入力フィールドを持つ1つ以上の要素が含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-297">An HTML document may have one or more `FORM` elements with input fields for submitting data back to a server.</span></span>  
  
 <span data-ttu-id="63d47-298">を`FORM` <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>取得し、メソッドを使用してその`Submit`メソッドを呼び出すことによって、をプログラムで送信できます。 <xref:System.Windows.Forms.HtmlElement></span><span class="sxs-lookup"><span data-stu-id="63d47-298">You can programmatically submit a `FORM` by obtaining its <xref:System.Windows.Forms.HtmlElement> and calling its `Submit` method using the <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> method.</span></span>  
  
 <span data-ttu-id="63d47-299">新しい`FORM`をドキュメントに追加するには、新しい`FORM`タグを文字列として作成<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>し、それを<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> HTML DOM に追加した要素のプロパティに割り当てるか、またはメソッドを使用してプロパティを設定します。<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を使用 <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> して、既存の要素の子として追加します。</span><span class="sxs-lookup"><span data-stu-id="63d47-299">To add a new `FORM` to a document, you can either create a new `FORM` tag as a string, and assign it to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of an element previously added to the HTML DOM; or you can use the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method, set its properties using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>, and add it as a child of an existing element using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-300">次のコード例では、Web ページ`Form`上のすべての要素を反復処理し、すべてのユーザー入力をクリアして、フォームを既定値に戻します。</span><span class="sxs-lookup"><span data-stu-id="63d47-300">The following code example iterates through all of the `Form` elements on a Web page and clears all user input, setting the forms back to their default values.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.HtmlDocument#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752591.aspx"><span data-ttu-id="63d47-301">forms プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-301">forms Property</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752432.aspx"><span data-ttu-id="63d47-302">IHTMLFormElement インターフェイス</span><span class="sxs-lookup"><span data-stu-id="63d47-302">IHTMLFormElement Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement GetElementById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement GetElementById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementById (id As String) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ GetElementById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetElementById : string -&gt; System.Windows.Forms.HtmlElement" Usage="htmlDocument.GetElementById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="63d47-303">取得する要素の ID 属性。</span><span class="sxs-lookup"><span data-stu-id="63d47-303">The ID attribute of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="63d47-304">要素の <c>ID</c> 属性を検索キーとして使用して、1 つの <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-304">Retrieves a single <see cref="T:System.Windows.Forms.HtmlElement" /> using the element's <c>ID</c> attribute as a search key.</span></span></summary>
        <returns><span data-ttu-id="63d47-305">指定した値と同じ <c>ID</c> 属性を持つ最初のオブジェクト、または <see langword="null" /> が見つからない場合は <paramref name="id" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-305">Returns the first object with the same <c>ID</c> attribute as the specified value, or <see langword="null" /> if the <paramref name="id" /> cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-306">同じ ID 値を持つ複数の要素がドキュメント内に存在する<xref:System.Windows.Forms.HtmlDocument.GetElementById%2A>場合、は最初に見つかった要素を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-306">If there are multiple elements in the document with the same ID value, <xref:System.Windows.Forms.HtmlDocument.GetElementById%2A> will return the first one it finds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-307">次のコード例では、 `TABLE`ドキュメントからという名前のを取得し、行数をカウントして、Web ページに結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-307">The following code example retrieves a named `TABLE` from a document, counts up the number of rows, and displays the result in the Web page.</span></span> <span data-ttu-id="63d47-308">このコード例では、という<xref:System.Windows.Forms.WebBrowser>名前`WebBrowser1`のコントロールがプロジェクトにあり、 `ID`属性が`Table1`で`TABLE`ある Web ページを読み込んでいる必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-308">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> control in your project named `WebBrowser1`, and that you have loaded a Web page with a `TABLE` whose `ID` attribute is `Table1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.HtmlDocument#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752543.aspx"><span data-ttu-id="63d47-309">Document.getelementbyid メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-309">getElementById Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement GetElementFromPoint (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement GetElementFromPoint(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementFromPoint(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ GetElementFromPoint(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.GetElementFromPoint : System.Drawing.Point -&gt; System.Windows.Forms.HtmlElement" Usage="htmlDocument.GetElementFromPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="63d47-310">ドキュメントの左上隅を基準とした、画面上の要素の (x,y) 位置。</span><span class="sxs-lookup"><span data-stu-id="63d47-310">The x,y position of the element on the screen, relative to the top-left corner of the document.</span></span></param>
        <summary><span data-ttu-id="63d47-311">指定されたクライアント座標にある HTML 要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-311">Retrieves the HTML element located at the specified client coordinates.</span></span></summary>
        <returns><span data-ttu-id="63d47-312">ドキュメント内の指定した画面位置にある <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-312">The <see cref="T:System.Windows.Forms.HtmlElement" /> at the specified screen location in the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-313"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A>クライアント座標を使用します。この座標では、ドキュメントの左上隅に値 (0, 0) が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="63d47-313"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> uses client coordinates, in which the upper-left corner of the document is assigned the value (0,0).</span></span> <span data-ttu-id="63d47-314">カーソルの現在位置のクライアント座標は、 <xref:System.Windows.Forms.HtmlWindow.Position%2A>プロパティを使用して取得できます。</span><span class="sxs-lookup"><span data-stu-id="63d47-314">Client coordinates for the current position of the cursor can be obtained using the <xref:System.Windows.Forms.HtmlWindow.Position%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-315">次のコード例では、ドキュメントをクリックして要素を検索し、 <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A>を使用して要素を Web ページの上部に揃えます。</span><span class="sxs-lookup"><span data-stu-id="63d47-315">The following code example detects a click on the document, finds the element, and uses <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A> to align the element with the top of the Web page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752576.aspx"><span data-ttu-id="63d47-316">elementFromPoint メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-316">elementFromPoint Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElementCollection GetElementsByTagName(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementsByTagName (tagName As String) As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElementCollection ^ GetElementsByTagName(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="member this.GetElementsByTagName : string -&gt; System.Windows.Forms.HtmlElementCollection" Usage="htmlDocument.GetElementsByTagName tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="63d47-317">取得する <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトの HTML タグの名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-317">The name of the HTML tag for the <see cref="T:System.Windows.Forms.HtmlElement" /> objects you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="63d47-318">指定した HTML タグを持つ要素のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-318">Retrieve a collection of elements with the specified HTML tag.</span></span></summary>
        <returns><span data-ttu-id="63d47-319">タグ名が <paramref name="tagName" /> 引数と同じである要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="63d47-319">The collection of elements who tag name is equal to the <paramref name="tagName" /> argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63d47-320">多くの場合、HTML `META`ページはタグを使用して、ドキュメントに関する任意の情報を埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="63d47-320">HTML pages often use the `META` tag to embed arbitrary information about the document.</span></span> <span data-ttu-id="63d47-321">次の html コード例では、html `META`ドキュメント内のすべてのタグを取得`META`し、という`Description`名前のタグを検索して、ユーザーに表示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-321">The following HTML code example retrieves all of the `META` tags within an HTML document, finds the `META` tag with the name `Description`, and displays it to the user.</span></span> <span data-ttu-id="63d47-322">このコード例では、アプリケーションにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="63d47-322">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752545.aspx"><span data-ttu-id="63d47-323">getElementsByTagName メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-323">getElementsByTagName Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="htmlDocument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63d47-324">このオブジェクトのハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-324">Retrieves the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="63d47-325">このオブジェクトのインメモリ ハッシュを表す <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-325">An <see cref="T:System.Int32" /> representing an in-memory hash of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Images { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Images : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlDocument.Images" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-326">ドキュメント内のすべてのイメージ タグのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-326">Gets a collection of all image tags in the document.</span></span></summary>
        <value><span data-ttu-id="63d47-327">ドキュメント内の IMG タグごとに 1 つある <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="63d47-327">A collection of <see cref="T:System.Windows.Forms.HtmlElement" /> objects, one for each IMG tag in the document.</span></span> <span data-ttu-id="63d47-328">要素は、格納されている順序でコレクションから返されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-328">Elements are returned from the collection in source order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-329"><xref:System.Windows.Forms.HtmlDocument.Images%2A>オブジェクトの<xref:System.Windows.Forms.HtmlElement>コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-329"><xref:System.Windows.Forms.HtmlDocument.Images%2A> returns a collection of <xref:System.Windows.Forms.HtmlElement> objects.</span></span> <span data-ttu-id="63d47-330">`ALT`によっ`SRC`て直接 <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> 公開されない属性 (やなど) にアクセスするには、メソッドを使用します。 <xref:System.Windows.Forms.HtmlElement></span><span class="sxs-lookup"><span data-stu-id="63d47-330">To access attributes, such as `ALT` and `SRC`, that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, use the <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> method.</span></span>  
  
 <span data-ttu-id="63d47-331">新しいイメージをドキュメントに追加する`IMG`には、新しいタグを文字列として作成し、それを HTML <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> DOM に追加した要素のプロパティに割り当てます。または、メソッドを使用して<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>プロパティを設定し、として追加します。を使用する<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>既存の要素の子。</span><span class="sxs-lookup"><span data-stu-id="63d47-331">To add a new image to a document, either create a new `IMG` tag as a string, and assign it to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of an element previously added to the HTML DOM; or use the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method, set its properties using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>, and add it as a child of an existing element using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-332">次のコード例では`ALT` 、ドキュメント内のすべてのイメージの属性を調べ、値が`ALT`まだ設定されていない場合は既定の属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-332">The following code example examines the `ALT` attribute of all of the images in the document, and sets a default `ALT` attribute if a value is not already set.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlDocument#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752593.aspx"><span data-ttu-id="63d47-333">images プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-333">images Property</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeScript">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63d47-334">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-334">Executes an Active Scripting function defined in an HTML page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63d47-335">次のコード例では、Web ページ内のスクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-335">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="63d47-336">このコード例では、次の Web ページが読み込まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-336">The code example requires that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
<SCRIPT>  
function test(name, address) {  
window.alert("Name is " + name + "; address is " + address);  
}  
</SCRIPT>  
  
<BODY>  
</BODY>  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName);" />
      <MemberSignature Language="F#" Value="member this.InvokeScript : string -&gt; obj" Usage="htmlDocument.InvokeScript scriptName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName"><span data-ttu-id="63d47-337">呼び出されるスクリプト メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-337">The name of the script method to invoke.</span></span></param>
        <summary><span data-ttu-id="63d47-338">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-338">Executes an Active Scripting function defined in an HTML page.</span></span></summary>
        <returns><span data-ttu-id="63d47-339">アクティブ スクリプト呼び出しによって返されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="63d47-339">The object returned by the Active Scripting call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-340">によって<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>返されるオブジェクトの基になる型は異なります。</span><span class="sxs-lookup"><span data-stu-id="63d47-340">The underlying type of the object returned by <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will vary.</span></span> <span data-ttu-id="63d47-341">呼び出されたアクティブスクリプト関数が、文字列や整数などのスカラーデータを返す場合は、文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-341">If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</span></span> <span data-ttu-id="63d47-342">JScript または VBScript の`new`演算子を使用して作成されたオブジェクトなど、スクリプトベースのオブジェクトが返された場合は、型`Object`になります。</span><span class="sxs-lookup"><span data-stu-id="63d47-342">If it returns a script-based object, such as an object created using JScript or VBScript's `new` operator, it will be of type `Object`.</span></span> <span data-ttu-id="63d47-343">(を呼び出し<xref:System.Object.GetType%2A> 、を使用<xref:System.Type.InvokeMember%2A>して、このようなオブジェクトに対して呼び出しを行うことができます)。`DIV`または`Object`などの HTML DOM 要素を返す場合は、型になります。 MSHTML にプロジェクト参照を追加した場合は、になります。 `TABLE`ただし、DLL は、特定のアンマネージ DOM 型にキャストされます。</span><span class="sxs-lookup"><span data-stu-id="63d47-343">(You can make calls on such objects by calling <xref:System.Object.GetType%2A> and using <xref:System.Type.InvokeMember%2A>.) If it returns an HTML DOM element, such as a `DIV` or a `TABLE`, it will be of type `Object`; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</span></span>  
  
 <span data-ttu-id="63d47-344">JScript や VBScript など、ユーザーのコンピューターにインストールされている任意のアクティブスクリプト言語で記述された任意の関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-344">You may call any function written in any Active Scripting language installed on the user's computer, including JScript and VBScript.</span></span>  
  
 <span data-ttu-id="63d47-345"><xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>ユーザーが Internet Explorer でスクリプトの実行を明示的に無効にした場合、または Web ページの現在のセキュリティ構成で許可されていない場合、は何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-345">The <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-346">次のコード例では、Web ページ内のスクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-346">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="63d47-347">このコード例では、アプリケーション<xref:System.Windows.Forms.WebBrowser>にがという名前`WebBrowser1`で、次の Web ページが読み込まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-347">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> in your application called `WebBrowser1`, and that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
  
    <HEAD>  
        <TITLE>Invoke Script Sample</TITLE>  
  
        <SCRIPT>  
            function MyObject() {  
                this.Data = "Data for my private object.";  
            }  
            // Return a string.  
            function test() {  
                return("This is a test.");  
            }  
            // Return a JScript object.  
            function testJScriptObject() {  
                return(new(MyObject));  
            }  
            // Return a DOM element.  
            function testElement() {  
                return(div1);  
            }  
        </SCRIPT>  
    </HEAD>  
  
    <BODY>  
  
        <DIV id="div1">  
        </DIV>  
  
    </BODY>  
  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.HtmlDocument#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.InvokeScript : string * obj[] -&gt; obj" Usage="htmlDocument.InvokeScript (scriptName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="scriptName"><span data-ttu-id="63d47-348">呼び出されるスクリプト メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="63d47-348">The name of the script method to invoke.</span></span></param>
        <param name="args"><span data-ttu-id="63d47-349">スクリプト メソッドに渡す引数。</span><span class="sxs-lookup"><span data-stu-id="63d47-349">The arguments to pass to the script method.</span></span></param>
        <summary><span data-ttu-id="63d47-350">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-350">Executes an Active Scripting function defined in an HTML page.</span></span></summary>
        <returns><span data-ttu-id="63d47-351">アクティブ スクリプト呼び出しによって返されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="63d47-351">The object returned by the Active Scripting call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-352">によって<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>返されるオブジェクトの基になる型は異なります。</span><span class="sxs-lookup"><span data-stu-id="63d47-352">The underlying type of the object returned by <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will vary.</span></span> <span data-ttu-id="63d47-353">呼び出されたアクティブスクリプト関数が、文字列や整数などのスカラーデータを返す場合は、文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-353">If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</span></span> <span data-ttu-id="63d47-354">JScript または VBScript の`new`演算子を使用して作成されたオブジェクトなど、スクリプトベースのオブジェクトが返された場合は、型`Object`になります。</span><span class="sxs-lookup"><span data-stu-id="63d47-354">If it returns a script-based object, such as an object created using JScript or VBScript's `new` operator, it will be of type `Object`.</span></span> <span data-ttu-id="63d47-355">(を呼び出し<xref:System.Object.GetType%2A> 、を使用<xref:System.Type.InvokeMember%2A>して、このようなオブジェクトに対して呼び出しを行うことができます)。`DIV`または`Object`などの HTML DOM 要素を返す場合は、型になります。 MSHTML にプロジェクト参照を追加した場合は、になります。 `TABLE`ただし、DLL は、特定のアンマネージ DOM 型にキャストされます。</span><span class="sxs-lookup"><span data-stu-id="63d47-355">(You can make calls on such objects by calling <xref:System.Object.GetType%2A> and using <xref:System.Type.InvokeMember%2A>.) If it returns an HTML DOM element, such as a `DIV` or a `TABLE`, it will be of type `Object`; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</span></span>  
  
 <span data-ttu-id="63d47-356">JScript や VBScript など、ユーザーのコンピューターにインストールされている任意のアクティブスクリプト言語で記述された任意の関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-356">You may call any function written in any Active Scripting language installed on the user's machine, including JScript and VBScript.</span></span>  
  
 <span data-ttu-id="63d47-357">ユーザーが Internet Explorer でスクリプトの実行を明示的に無効にした場合、または Web ページの現在のセキュリティ構成で許可されていない場合、このメソッドは何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-357">This method will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-358">次のコード例では、Web ページ内のスクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="63d47-358">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="63d47-359">このコード例では、アプリケーション<xref:System.Windows.Forms.WebBrowser>にがという名前`WebBrowser1`で、次の Web ページが読み込まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="63d47-359">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> in your application called `WebBrowser1`, and that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
    <SCRIPT>  
        function test(name, address) {  
            window.alert("Name is " + name + "; address is " + address);  
        }  
    </SCRIPT>  
  
    <BODY>  
    </BODY>  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.HtmlDocument.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-360">ハイパーリンクの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-360">Gets or sets the color of hyperlinks.</span></span></summary>
        <value><span data-ttu-id="63d47-361">現在のドキュメント内のハイパーリンクの色。</span><span class="sxs-lookup"><span data-stu-id="63d47-361">The color for hyperlinks in the current document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-362">の<xref:System.Drawing.Color> `Alpha`型は値をサポートしていますが、HTML DOM ではサポートされていません。 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="63d47-362">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="63d47-363">したがって`Alpha` 、このプロパティに割り当てられている場合、による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-363">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
        <related type="Article" href="https://msdn.microsoft.com/library/aa752608.aspx"><span data-ttu-id="63d47-364">linkColor プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-364">linkColor Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Links" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Links { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlDocument.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-365">この HTML ドキュメント内のすべてのハイパーリンクのリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-365">Gets a list of all the hyperlinks within this HTML document.</span></span></summary>
        <value><span data-ttu-id="63d47-366"><see cref="T:System.Windows.Forms.HtmlElementCollection" /> オブジェクトの <see cref="T:System.Windows.Forms.HtmlElement" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-366">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of <see cref="T:System.Windows.Forms.HtmlElement" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-367">このコレクションには`A`、HTML で、、 `AREA`タグ`LINK`を使用して作成されたすべてのリンクが含まれます。</span><span class="sxs-lookup"><span data-stu-id="63d47-367">This collection will contain all links created using the `A`, `LINK`, and `AREA` tags in HTML.</span></span>  
  
 <span data-ttu-id="63d47-368">この<xref:System.Windows.Forms.HtmlElement>コレクションに含まれるオブジェクトは、アン`IHTMLLinkElement`マネージインターフェイスをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="63d47-368">The <xref:System.Windows.Forms.HtmlElement> objects contained within this collection encapsulate the unmanaged `IHTMLLinkElement` interface.</span></span> <span data-ttu-id="63d47-369">基になるインターフェイスのプロパティに安全にアクセスするに<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-369">To access the properties of the underlying interface safely, use the <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752595.aspx"><span data-ttu-id="63d47-370">links プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-370">links Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LosingFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LosingFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.LosingFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LosingFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LosingFocus;" />
      <MemberSignature Language="F#" Value="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-371">コントロールからフォーカスが失われるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-371">Occurs while focus is leaving a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-372">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-372">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-373">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-373">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-374">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.LosingFocus>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-374">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.LosingFocus> event.</span></span> <span data-ttu-id="63d47-375">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-375">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="63d47-376">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-376">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-377">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.LosingFocus>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-377">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.LosingFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#425](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#425)]
 [!code-vb[System.Windows.Forms.EventExamples#425](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#425)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752521.aspx"><span data-ttu-id="63d47-378">onfocusout イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-378">onfocusout Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-379">ユーザーがマウスの左ボタンをクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-379">Occurs when the user clicks the left mouse button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-380">イベントは、イベントの<xref:System.Windows.Forms.HtmlDocument.Click>前に発生します。 <xref:System.Windows.Forms.HtmlDocument.MouseDown></span><span class="sxs-lookup"><span data-stu-id="63d47-380">The <xref:System.Windows.Forms.HtmlDocument.MouseDown> event occurs before the <xref:System.Windows.Forms.HtmlDocument.Click> event.</span></span>  
  
 <span data-ttu-id="63d47-381">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-381">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-382">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-382">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-383">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseDown>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-383">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event.</span></span> <span data-ttu-id="63d47-384">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-384">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63d47-385">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-385">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63d47-386">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-386">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-387">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseDown>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-387">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#426](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#426)]
 [!code-vb[System.Windows.Forms.EventExamples#426](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#426)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752619.aspx"><span data-ttu-id="63d47-388">onmousedown イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-388">onmousedown Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-389">マウスがドキュメント上から外れた時点で発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-389">Occurs when the mouse is no longer hovering over the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-390">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-390">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-391">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-391">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-392">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseLeave>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-392">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseLeave> event.</span></span> <span data-ttu-id="63d47-393">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-393">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63d47-394">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-394">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63d47-395">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-395">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-396">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseLeave>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-396">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#427](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#427)]
 [!code-vb[System.Windows.Forms.EventExamples#427](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#427)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ms536948.aspx"><span data-ttu-id="63d47-397">onmouseout イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-397">onmouseout Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-398">マウスがドキュメント上を移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-398">Occurs when the mouse is moved over the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-399">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-399">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-400">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-400">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-401">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseMove>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-401">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseMove> event.</span></span> <span data-ttu-id="63d47-402">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-402">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63d47-403">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-403">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63d47-404">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-404">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-405">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseMove>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-405">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseMove> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#428](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#428)]
 [!code-vb[System.Windows.Forms.EventExamples#428](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#428)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752620.aspx"><span data-ttu-id="63d47-406">onmousemove イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-406">onmousemove Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseOver;" />
      <MemberSignature Language="F#" Value="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-407">マウスがドキュメント上を移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-407">Occurs when the mouse is moved over the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-408">イベントを処理の詳細については[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="63d47-408">For more information about handling events, [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-409">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-409">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-410">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseOver>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-410">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseOver> event.</span></span> <span data-ttu-id="63d47-411">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-411">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63d47-412">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-412">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63d47-413">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-413">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-414">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseOver>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-414">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#429](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#429)]
 [!code-vb[System.Windows.Forms.EventExamples#429](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#429)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752622.aspx"><span data-ttu-id="63d47-415">onmouseover イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-415">onmouseover Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-416">ユーザーがマウスの左ボタンを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-416">Occurs when the user releases the left mouse button.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-417">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-417">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-418">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-418">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="63d47-419">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseUp>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="63d47-419">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseUp> event.</span></span> <span data-ttu-id="63d47-420">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="63d47-420">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="63d47-421">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-421">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="63d47-422">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="63d47-422">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="63d47-423">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.MouseUp>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="63d47-423">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#430](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#430)]
 [!code-vb[System.Windows.Forms.EventExamples#430](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#430)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752623.aspx"><span data-ttu-id="63d47-424">onmouseup イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-424">onmouseup Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlDocument left, class System.Windows.Forms.HtmlDocument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.op_Equality(System.Windows.Forms.HtmlDocument,System.Windows.Forms.HtmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlDocument, right As HtmlDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlDocument ^ left, System::Windows::Forms::HtmlDocument ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.HtmlDocument * System.Windows.Forms.HtmlDocument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlDocument" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlDocument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="63d47-425">比較する 1 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="63d47-425">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="63d47-426">比較する 2 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="63d47-426">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="63d47-427">指定した <see cref="T:System.Windows.Forms.HtmlDocument" /> のインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-427">Returns a value that indicates whether the specified <see cref="T:System.Windows.Forms.HtmlDocument" /> instances represent the same value.</span></span></summary>
        <returns><span data-ttu-id="63d47-428">指定したインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-428"><see langword="true" /> if the specified instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="63d47-429">この演算子の同等の方法は次のようになります。<xref:System.Windows.Forms.HtmlDocument.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="63d47-429">The equivalent method for this operator is <xref:System.Windows.Forms.HtmlDocument.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlDocument left, class System.Windows.Forms.HtmlDocument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.op_Inequality(System.Windows.Forms.HtmlDocument,System.Windows.Forms.HtmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlDocument, right As HtmlDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlDocument ^ left, System::Windows::Forms::HtmlDocument ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.HtmlDocument * System.Windows.Forms.HtmlDocument -&gt; bool" Usage="System.Windows.Forms.HtmlDocument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlDocument" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlDocument" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="63d47-430">比較する 1 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="63d47-430">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="63d47-431">比較する 2 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="63d47-431">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="63d47-432">指定した <see cref="T:System.Windows.Forms.HtmlDocument" /> のインスタンスが同じ値を表していないかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="63d47-432">Returns a value that indicates whether the specified <see cref="T:System.Windows.Forms.HtmlDocument" /> instances do not represent the same value.</span></span></summary>
        <returns><span data-ttu-id="63d47-433">指定したインスタンスが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-433"><see langword="true" /> if the specified instances are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument OpenNew (bool replaceInHistory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlDocument OpenNew(bool replaceInHistory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.OpenNew(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (replaceInHistory As Boolean) As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlDocument ^ OpenNew(bool replaceInHistory);" />
      <MemberSignature Language="F#" Value="member this.OpenNew : bool -&gt; System.Windows.Forms.HtmlDocument" Usage="htmlDocument.OpenNew replaceInHistory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replaceInHistory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replaceInHistory"><span data-ttu-id="63d47-434">新しいウィンドウの移動によって、DOM の移動履歴内の前の要素が置換されるかどうか。</span><span class="sxs-lookup"><span data-stu-id="63d47-434">Whether the new window's navigation should replace the previous element in the navigation history of the DOM.</span></span></param>
        <summary><span data-ttu-id="63d47-435"><see cref="M:System.Windows.Forms.HtmlDocument.Write(System.String)" /> メソッドと共に使用する新しい <see cref="T:System.Windows.Forms.HtmlDocument" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-435">Gets a new <see cref="T:System.Windows.Forms.HtmlDocument" /> to use with the <see cref="M:System.Windows.Forms.HtmlDocument.Write(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="63d47-436">書き込み用の新しいドキュメント。</span><span class="sxs-lookup"><span data-stu-id="63d47-436">A new document for writing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-437"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>は、変数など、関連付けられているすべての状態を含む、以前に読み込まれたドキュメントをクリアします。</span><span class="sxs-lookup"><span data-stu-id="63d47-437"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> will clear the previous loaded document, including any associated state, such as variables.</span></span> <span data-ttu-id="63d47-438">で<xref:System.Windows.Forms.WebBrowser>は、ナビゲーションイベントが発生しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-438">It will not cause navigation events in <xref:System.Windows.Forms.WebBrowser> to be raised.</span></span>  
  
 <span data-ttu-id="63d47-439"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>常に現在のウィンドウに新しいドキュメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d47-439"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> always creates a new document in the current window.</span></span> <span data-ttu-id="63d47-440">ドキュメントを新しいウィンドウで開くには、 <xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow>クラスのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-440">To open a document in a new window, use the <xref:System.Windows.Forms.HtmlWindow.Open%2A> method on the <xref:System.Windows.Forms.HtmlWindow> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-441">次のコード例では、 <xref:System.Windows.Forms.HtmlDocument.Write%2A>メソッドを使用して新しいドキュメントを書き込むために DOM を準備します。</span><span class="sxs-lookup"><span data-stu-id="63d47-441">The following code example prepares the DOM for writing and writes a new document using the <xref:System.Windows.Forms.HtmlDocument.Write%2A> method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752628.aspx"><span data-ttu-id="63d47-442">open メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-442">open Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool with get, set" Usage="System.Windows.Forms.HtmlDocument.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-443">現在のドキュメントでのテキストの方向を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-443">Gets or sets the direction of text in the current document.</span></span></summary>
        <value><span data-ttu-id="63d47-444">テキストを右から左に描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-444"><see langword="true" /> if text renders from right to left; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-445"><xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A>は、コードまたは HTML のいずれかで明示的に設定されていない限り、値を持ちません。</span><span class="sxs-lookup"><span data-stu-id="63d47-445"><xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> will not have any value unless it has been set explicitly, either in code or in HTML.</span></span>  
  
 <span data-ttu-id="63d47-446">Windows フォームコントロールの<xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> プロパティとは異なり、マネージ HTML DOM では、ラテンテキストの方向には影響 <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-446">Unlike the <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> property on Windows Forms controls, <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> on the managed HTML DOM will not affect the direction of Latin text.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752540.aspx"><span data-ttu-id="63d47-447">dir プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-447">dir Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Stop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Stop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Stop As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Stop;" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Stop : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-448">別の Web ページへの移動が中断されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="63d47-448">Occurs when navigation to another Web page is halted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-449">プログラムコードが<xref:System.Windows.Forms.WebBrowser.Stop%2A> <xref:System.Windows.Forms.WebBrowser>コントロールのメソッドを呼び出すと、Web ページの読み込みが停止します。</span><span class="sxs-lookup"><span data-stu-id="63d47-449">The loading of a Web page will halt if program code calls the <xref:System.Windows.Forms.WebBrowser.Stop%2A> method of the <xref:System.Windows.Forms.WebBrowser> control.</span></span> <span data-ttu-id="63d47-450">ネットワークの停止や Web サイトの誤動作によって発生<xref:System.Windows.Forms.HtmlDocument.Stop>するナビゲーションエラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="63d47-450">Navigation failures caused by network outages or malfunctioning Web sites will not cause <xref:System.Windows.Forms.HtmlDocument.Stop> to occur.</span></span>  
  
 <span data-ttu-id="63d47-451">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="63d47-451">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-452">次のコード例では、 `Stop`イベントが発生したときに Windows フォームアプリケーションのステータスバーをリセットします。</span><span class="sxs-lookup"><span data-stu-id="63d47-452">The following code example resets the status bar on a Windows Forms application when the `Stop` event has occurred.</span></span> <span data-ttu-id="63d47-453">このコード例では、アプリケーションに<xref:System.Windows.Forms.StatusBar>という`StatusBar1`名前のコントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="63d47-453">The code example requires that you have a <xref:System.Windows.Forms.StatusBar> control named `StatusBar1` in your application.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752561.aspx"><span data-ttu-id="63d47-454">onstop イベント</span><span class="sxs-lookup"><span data-stu-id="63d47-454">onstop Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Forms.HtmlDocument.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-455">現在の HTML ドキュメント内の <c>&lt;TITLE&gt;</c> タグのテキスト値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-455">Gets or sets the text value of the <c>&lt;TITLE&gt;</c> tag in the current HTML document.</span></span></summary>
        <value><span data-ttu-id="63d47-456">現在のドキュメントのタイトル。</span><span class="sxs-lookup"><span data-stu-id="63d47-456">The title of the current document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-457">ユーザーが<xref:System.Windows.Forms.HtmlDocument.Title%2A>判読できる名前を使用してドキュメントを識別するには、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-457">Use the <xref:System.Windows.Forms.HtmlDocument.Title%2A> property to identify the document by way of a human-readable name.</span></span>  
  
 <span data-ttu-id="63d47-458">このプロパティへの変更は、 <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> <xref:System.Windows.Forms.WebBrowser>コントロールのプロパティにも反映されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-458">Changes to this property will also reflect in the <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> property of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-459">次のコード例では、リンクの場所としてドキュメントの URL を使用し、リンクテキストとしてドキュメントのタイトルを使用して、現在のドキュメントへの HTML ハイパーリンクを作成します。</span><span class="sxs-lookup"><span data-stu-id="63d47-459">The following code example creates an HTML hyperlink to the current document using the URL of the document as the link's location and the title of the document as the link text.</span></span> <span data-ttu-id="63d47-460">このコード例では、アプリケーションにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="63d47-460">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#14)]
 [!code-vb[System.Windows.Forms.HtmlDocument#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.Windows.Forms.WebBrowser" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Windows.Forms.HtmlDocument.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-461">このドキュメントの場所を記述する URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-461">Gets the URL describing the location of this document.</span></span></summary>
        <value><span data-ttu-id="63d47-462">このドキュメントの URL を表す <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="63d47-462">A <see cref="T:System.Uri" /> representing this document's URL.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-463">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="63d47-463">This property is read-only.</span></span> <span data-ttu-id="63d47-464">新しいドキュメントに移動するには、 <xref:System.Windows.Forms.WebBrowser.Url%2A> <xref:System.Windows.Forms.WebBrowser>コントロールのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="63d47-464">To navigate to a new document, use the <xref:System.Windows.Forms.WebBrowser.Url%2A> property on the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-465">ユーザーが既にアクセスした HTML ページへのリンクの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-465">Gets or sets the Color of links to HTML pages that the user has already visited.</span></span></summary>
        <value><span data-ttu-id="63d47-466">アクセスしたリンクの色。</span><span class="sxs-lookup"><span data-stu-id="63d47-466">The color of visited links.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-467">の`Color` `Alpha`型は値をサポートしていますが、HTML DOM ではサポートされていません。 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="63d47-467">The `Color` type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="63d47-468">したがって`Alpha` 、このプロパティに割り当てられている場合、による影響はありません。</span><span class="sxs-lookup"><span data-stu-id="63d47-468">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
        <related type="Article" href="https://msdn.microsoft.com/library/aa752638.aspx"><span data-ttu-id="63d47-469">vlinkColor プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-469">vlinkColor Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Window" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Window" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Window As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Window { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Window : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlDocument.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63d47-470">このドキュメントに関連付けられている <see cref="T:System.Windows.Forms.HtmlWindow" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="63d47-470">Gets the <see cref="T:System.Windows.Forms.HtmlWindow" /> associated with this document.</span></span></summary>
        <value><span data-ttu-id="63d47-471">このドキュメントのウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="63d47-471">The window for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-472">すべての HTML ドキュメントには、ウィンドウと呼ばれる HTML DOM オブジェクトがあり<xref:System.Windows.Forms.HtmlHistory>ます。これを使用すると、ドキュメントの画面サイズを操作したり、新しいウィンドウを開いたり、などの重要なオブジェクトにアクセスしたりすることができます。</span><span class="sxs-lookup"><span data-stu-id="63d47-472">All HTML documents have an HTML DOM object called a window, which can be used to manipulate the screen size of the document and open new windows, as well as access other important objects, such as an <xref:System.Windows.Forms.HtmlHistory>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/aa752599.aspx"><span data-ttu-id="63d47-473">parentWindow プロパティ</span><span class="sxs-lookup"><span data-stu-id="63d47-473">parentWindow Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="htmlDocument.Write text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="63d47-474">ドキュメントに書き込まれる HTML テキスト。</span><span class="sxs-lookup"><span data-stu-id="63d47-474">The HTML text to write into the document.</span></span></param>
        <summary><span data-ttu-id="63d47-475">新しい HTML ページを出力します。</span><span class="sxs-lookup"><span data-stu-id="63d47-475">Writes a new HTML page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63d47-476">へ<xref:System.Windows.Forms.HtmlDocument.Write%2A>のすべての呼び出しは、の呼び出しに<xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>先行する必要があります。これにより、現在のドキュメントとそのすべての変数がクリアされます。</span><span class="sxs-lookup"><span data-stu-id="63d47-476">All calls to <xref:System.Windows.Forms.HtmlDocument.Write%2A> should be preceded by a call to <xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>, which will clear the current document and all of its variables.</span></span> <span data-ttu-id="63d47-477">を<xref:System.Windows.Forms.HtmlDocument.Write%2A>呼び出すと、新しい HTML ドキュメントがその場所に作成されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-477">Your calls to <xref:System.Windows.Forms.HtmlDocument.Write%2A> will create a new HTML document in its place.</span></span> <span data-ttu-id="63d47-478">ドキュメントの特定の部分のみを変更するには、適切<xref:System.Windows.Forms.HtmlElement>なを取得<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>し、そのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="63d47-478">To change only a specific portion of the document, obtain the appropriate <xref:System.Windows.Forms.HtmlElement> and set its <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.</span></span>  
  
 <span data-ttu-id="63d47-479">および`HTML` <xref:System.Windows.Forms.HtmlDocument.Write%2A> タグを含む、有効な HTML ドキュメント全体をメソッドを使用して記述することをお勧めします。 `BODY`</span><span class="sxs-lookup"><span data-stu-id="63d47-479">It is recommended that you write an entire valid HTML document using the <xref:System.Windows.Forms.HtmlDocument.Write%2A> method, including `HTML` and `BODY` tags.</span></span> <span data-ttu-id="63d47-480">ただし、HTML 要素だけを記述した場合は、ドキュメントオブジェクトモデル (DOM) によってこれらの要素が提供されます。</span><span class="sxs-lookup"><span data-stu-id="63d47-480">However, if you write just HTML elements, the Document Object Model (DOM) will supply these elements for you.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63d47-481">新しい<xref:System.Windows.Forms.HtmlDocument>を開き、新しい HTML ファイルを書き込むコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="63d47-481">The following code example opens a new <xref:System.Windows.Forms.HtmlDocument> and writes in a new HTML file.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.OpenNew(System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/default.asp?url=/workshop/browser/mshtml/reference/ifaces/document2/write.asp"><span data-ttu-id="63d47-482">write メソッド</span><span class="sxs-lookup"><span data-stu-id="63d47-482">write Method</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
