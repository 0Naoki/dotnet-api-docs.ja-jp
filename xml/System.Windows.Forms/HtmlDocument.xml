<Type Name="HtmlDocument" FullName="System.Windows.Forms.HtmlDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d6ea42599f937798371ada9988169189c5fb02d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlDocument extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlDocument sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5dff8-101">
        <see cref="T:System.Windows.Forms.WebBrowser" /> コントロールでホストされている HTML ドキュメントに、トップレベルのプログラムによるアクセスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5dff8-101">Provides top-level programmatic access to an HTML document hosted by the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-102"><xref:System.Windows.Forms.HtmlDocument> Internet Explorer のドキュメント オブジェクトとも呼ばれる、HTML ドキュメント オブジェクト モデル (DOM) のマネージ ラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-102"><xref:System.Windows.Forms.HtmlDocument> provides a managed wrapper around Internet Explorer's document object, also known as the HTML Document Object Model (DOM).</span></span> <span data-ttu-id="5dff8-103">インスタンスを取得する<xref:System.Windows.Forms.HtmlDocument>を通じて、<xref:System.Windows.Forms.WebBrowser.Document%2A>のプロパティ、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-103">You obtain an instance of <xref:System.Windows.Forms.HtmlDocument> through the <xref:System.Windows.Forms.WebBrowser.Document%2A> property of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="5dff8-104">HTML タグ、HTML ドキュメントの内部では、相互内にネストすることができます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-104">HTML tags inside of an HTML document can be nested inside one another.</span></span> <span data-ttu-id="5dff8-105"><xref:System.Windows.Forms.HtmlDocument> 子供がインスタンスである、ドキュメント ツリーを表すための<xref:System.Windows.Forms.HtmlElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-105"><xref:System.Windows.Forms.HtmlDocument> thus represents a document tree, whose children are instances of the <xref:System.Windows.Forms.HtmlElement> class.</span></span> <span data-ttu-id="5dff8-106">次のコード例では、単純な HTML ファイルを示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-106">The following code example shows a simple HTML file.</span></span>  
  
```  
<HTML>  
    <BODY>  
        <DIV name="Span1">Simple HTML Form</DIV>  
        <FORM>  
            <SPAN name="TextLabel">Enter Your Name:</SPAN>  
            <INPUT type="text" size="20" name="Text1">  
        </FORM>  
    </BODY>  
</HTML>  
```  
  
 <span data-ttu-id="5dff8-107">この例では<xref:System.Windows.Forms.HtmlDocument>内のドキュメント全体を表す、`HTML`タグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-107">In this example, <xref:System.Windows.Forms.HtmlDocument> represents the entire document inside the `HTML` tags.</span></span> <span data-ttu-id="5dff8-108">`BODY`、 `DIV`、`FORM`と`SPAN`タグが個人によって表される<xref:System.Windows.Forms.HtmlElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5dff8-108">The `BODY`, `DIV`, `FORM` and `SPAN` tags are represented by individual <xref:System.Windows.Forms.HtmlElement> objects.</span></span>  
  
 <span data-ttu-id="5dff8-109">このツリーの要素にアクセスすることがいくつかの方法はあります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-109">There are several ways you can access the elements in this tree.</span></span> <span data-ttu-id="5dff8-110">使用して、<xref:System.Windows.Forms.HtmlDocument.Body%2A>プロパティへのアクセスを`BODY`タグとそのすべての子です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-110">Use the <xref:System.Windows.Forms.HtmlDocument.Body%2A> property to access the `BODY` tag and all of its children.</span></span> <span data-ttu-id="5dff8-111"><xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>プロパティを示します、<xref:System.Windows.Forms.HtmlElement>のユーザーの入力フォーカスのある HTML ページ上にある要素。</span><span class="sxs-lookup"><span data-stu-id="5dff8-111">The <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property gives you the <xref:System.Windows.Forms.HtmlElement> for the element on an HTML page that has user input focus.</span></span> <span data-ttu-id="5dff8-112">HTML ページ内のすべての要素が名前を持つことができます。<xref:System.Windows.Forms.HtmlDocument.All%2A>コレクションで各へのアクセスを提供<xref:System.Windows.Forms.HtmlElement>インデックスとその名前を使用します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-112">All elements within an HTML page can have a name; the <xref:System.Windows.Forms.HtmlDocument.All%2A> collection provides access to each <xref:System.Windows.Forms.HtmlElement> using its name as an index.</span></span> <span data-ttu-id="5dff8-113"><xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A> 返されます、<xref:System.Windows.Forms.HtmlElementCollection>すべて<xref:System.Windows.Forms.HtmlElement>などの指定された HTML タグ名を持つオブジェクト`DIV`または`TABLE`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-113"><xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A> will return an <xref:System.Windows.Forms.HtmlElementCollection> of all <xref:System.Windows.Forms.HtmlElement> objects with a given HTML tag name, such as `DIV` or `TABLE`.</span></span> <span data-ttu-id="5dff8-114"><xref:System.Windows.Forms.HtmlDocument.GetElementById%2A> 1 つを返す<xref:System.Windows.Forms.HtmlElement>を指定する一意の ID に対応します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-114"><xref:System.Windows.Forms.HtmlDocument.GetElementById%2A> will return the single <xref:System.Windows.Forms.HtmlElement> corresponding to the unique ID that you supply.</span></span> <span data-ttu-id="5dff8-115"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> 返されます、<xref:System.Windows.Forms.HtmlElement>は指定されたマウス ポインターの座標時に画面に存在します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-115"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> will return the <xref:System.Windows.Forms.HtmlElement> that can be found on the screen at the supplied mouse pointer coordinates.</span></span>  
  
 <span data-ttu-id="5dff8-116">使用することも、<xref:System.Windows.Forms.HtmlDocument.Forms%2A>と<xref:System.Windows.Forms.HtmlDocument.Images%2A>コレクションを反復可能な要素を表すユーザー入力フォームおよびグラフィックス、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-116">You can also use the <xref:System.Windows.Forms.HtmlDocument.Forms%2A> and <xref:System.Windows.Forms.HtmlDocument.Images%2A> collection to iterate through elements that represent user input forms and graphics, respectively.</span></span>  
  
 <span data-ttu-id="5dff8-117"><xref:System.Windows.Forms.HtmlDocument> Internet Explorer の DHTML DOM によって実装されたアンマネージ インターフェイスに基づきます。 `IHTMLDocument`、 `IHTMLDocument2`、 `IHTMLDocument3`、および`IHTMLDocument4`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-117"><xref:System.Windows.Forms.HtmlDocument> is based on the unmanaged interfaces implemented by Internet Explorer's DHTML DOM: `IHTMLDocument`, `IHTMLDocument2`, `IHTMLDocument3`, and `IHTMLDocument4`.</span></span> <span data-ttu-id="5dff8-118">最も頻繁に使用されるプロパティ、これらのアンマネージ インターフェイスのメソッドは、によって公開されるのみで、<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-118">Only the most frequently used properties and methods on these unmanaged interfaces are exposed by <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="5dff8-119">その他のすべてのプロパティとメソッドを使用して直接アクセスすることができます、<xref:System.Windows.Forms.HtmlDocument.DomDocument%2A>プロパティで、必要なアンマネージ インターフェイス ポインターにキャストすることができます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-119">You can access all other properties and methods directly using the <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> property, which you can cast to the desired unmanaged interface pointer.</span></span>  
  
 <span data-ttu-id="5dff8-120">HTML ドキュメントはさまざまなウィンドウ フレームを含む可能性がありますの内側、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-120">An HTML document may contain frames, which are different windows inside of the <xref:System.Windows.Forms.WebBrowser> control.</span></span> <span data-ttu-id="5dff8-121">各フレームには、独自の HTML ページが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-121">Each frame displays its own HTML page.</span></span> <span data-ttu-id="5dff8-122"><xref:System.Windows.Forms.HtmlWindow.Frames%2A>コレクションがを介して使用できる、<xref:System.Windows.Forms.HtmlDocument.Window%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-122">The <xref:System.Windows.Forms.HtmlWindow.Frames%2A> collection is available through the <xref:System.Windows.Forms.HtmlDocument.Window%2A> property.</span></span> <span data-ttu-id="5dff8-123">使用することも、<xref:System.Windows.Forms.HtmlDocument.Window%2A>プロパティを表示されるページのサイズを変更またはドキュメントをスクロール、表示通知し、ユーザーにメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-123">You may also use the <xref:System.Windows.Forms.HtmlDocument.Window%2A> property to resize the displayed page, scroll the document, or display alerts and prompts to the user.</span></span>  
  
 <span data-ttu-id="5dff8-124"><xref:System.Windows.Forms.HtmlDocument> HTML ページをホストしている場合の処理が期待する最も一般的なイベントを公開します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-124"><xref:System.Windows.Forms.HtmlDocument> exposes the most common events you would expect to handle when hosting HTML pages.</span></span> <span data-ttu-id="5dff8-125">イベントのインターフェイスを直接公開されていない場合を使用して、イベントのハンドラーを追加できます<xref:System.Windows.Forms.HtmlDocument.AttachEventHandler%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-125">For events not exposed directly by the interface, you can add a handler for the event using <xref:System.Windows.Forms.HtmlDocument.AttachEventHandler%2A>.</span></span>  
  
 <span data-ttu-id="5dff8-126">HTML ファイルを含めることがあります`SCRIPT`タグで、アクティブ スクリプトの言語、JScript、VBScript などのいずれかで記述されたコードをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-126">HTML files may contain `SCRIPT` tags that encapsulate code written in one of the Active Scripting languages, such as JScript or VBScript.</span></span> <span data-ttu-id="5dff8-127"><xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>プロパティの実行に対してメソッドを提供し、メソッド内で定義、`SCRIPT`タグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-127">The <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> method provides for execution of properties and methods defined in a `SCRIPT` tag.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5dff8-128">プロパティ、メソッド、およびイベントのほとんどを while<xref:System.Windows.Forms.HtmlDocument>がアンマネージ DOM いるということは、同じ名前に保たれる限り、いくつか変更されているとの整合性が、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-128">While most of the properties, methods, and events on <xref:System.Windows.Forms.HtmlDocument> have kept the same names as they have on the unmanaged DOM, some have been changed for consistency with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-129">次のコード例を作成する、Northwind データベースからデータを使用して、`HTML TABLE`を使用して動的に<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-129">The following code example uses data from the Northwind database to create an `HTML TABLE` dynamically using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>.</span></span> <span data-ttu-id="5dff8-130"><xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドは使用も、最初のセルを追加する (`TD`要素) の行に (`TR`要素)、テーブルに行を追加し、最後に、現在のドキュメントの最後に、テーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-130">The <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method is also used, first to add cells (`TD` elements) to rows (`TR` elements), then to add rows to the table, and finally to append the table to the end of the current document.</span></span> <span data-ttu-id="5dff8-131">このコード例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-131">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span> <span data-ttu-id="5dff8-132">ドキュメントが読み込まれた後は、コードを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-132">The code should be called after a document has been loaded.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement ActiveElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement ActiveElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ActiveElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ ActiveElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-133">現在ユーザーの入力フォーカスがある <see cref="T:System.Windows.Forms.HtmlElement" /> を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-133">Provides the <see cref="T:System.Windows.Forms.HtmlElement" /> which currently has user input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-134">現在ユーザーの入力フォーカスがある <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-134">The <see cref="T:System.Windows.Forms.HtmlElement" /> which currently has user input focus.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-135">ドキュメントにフォーカスがドキュメントの要素が指定されていません、フォーカス<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>に対応する要素を返します、`<BODY>`タグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-135">When the document has focus, but no element of the document has been given focus, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> returns the element corresponding to the `<BODY>` tag.</span></span>  
  
 <span data-ttu-id="5dff8-136">ドキュメントがフォーカスを持たない場合<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-136">If the document does not have focus, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> returns `null`.</span></span>  
  
 <span data-ttu-id="5dff8-137">入力フォーカスを持つ現在の要素がセルがかどうか (`TD`)、HTML で`TABLE`タグ、<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>を含む要素を返す、`TABLE`要素。</span><span class="sxs-lookup"><span data-stu-id="5dff8-137">If the current element with input focus is a cell (`TD`) in an HTML `TABLE` tag, <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> will return the element that contains the `TABLE` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-138">ユーザーがハイパーリンクをクリックしたときのハイパーリンクの <see cref="T:System.Drawing.Color" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-138">Gets or sets the <see cref="T:System.Drawing.Color" /> of a hyperlink when clicked by a user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-139">アクティブなリンクの <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-139">The <see cref="T:System.Drawing.Color" /> for active links.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-140">ユーザーがこれをクリックすると、リンクはアクティブです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-140">A link is active when a user is clicking on it.</span></span> <span data-ttu-id="5dff8-141">ナビゲーションの前に、リンクの色を変更するには、このプロパティを変更します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-141">Change this property to change the color of the link prior to navigation.</span></span>  
  
 <span data-ttu-id="5dff8-142"><xref:System.Drawing.Color>に入力、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]をサポートしている、`Alpha`値が、HTML DOM はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-142">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="5dff8-143">したがって、`Alpha`はこのプロパティに割り当てられている場合に効果がありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-143">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection All" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.All" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property All As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ All { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-144">
            <see cref="T:System.Windows.Forms.HtmlElementCollection" /> のインスタンスを取得します。これは、ドキュメントのすべての <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-144">Gets an instance of <see cref="T:System.Windows.Forms.HtmlElementCollection" />, which stores all <see cref="T:System.Windows.Forms.HtmlElement" /> objects for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-145">ドキュメント内のすべての要素の <see cref="T:System.Windows.Forms.HtmlElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-145">The <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all elements in the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-146"><xref:System.Windows.Forms.HtmlDocument.All%2A>コレクションで、ドキュメント ツリー内での位置に関係なく、HTML ドキュメント内の要素へのランダム アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-146">The <xref:System.Windows.Forms.HtmlDocument.All%2A> collection provides random access to any element in the HTML document, regardless of its position in the document tree.</span></span> <span data-ttu-id="5dff8-147">名前、ID、HTML ドキュメント内の要素にアクセスまたはパーティション インデックスを使用します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-147">Use it to access any element in an HTML document by name, ID, or index.</span></span> <span data-ttu-id="5dff8-148">すべてのドキュメント内の要素を反復処理する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-148">You may also iterate over all of the elements within a document.</span></span>  
  
 <span data-ttu-id="5dff8-149">一部の要素など`HEAD`と`TITLE`、それらに関連付けられた名前がなくなります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-149">Some elements, such as `HEAD` and `TITLE`, will never have names associated with them.</span></span> <span data-ttu-id="5dff8-150">その他のすべての要素は、HTML ファイルの作成者には、それらが割り当てられている場合にのみ、名前があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-150">All other elements will have names only if the author of the HTML file assigned them.</span></span> <span data-ttu-id="5dff8-151">ID またはインデックスの名前のない要素にアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-151">You can access elements without names by ID or index.</span></span>  
  
 <span data-ttu-id="5dff8-152">要素に直接追加することはできません、 <xref:System.Windows.Forms.HtmlDocument.All%2A> 、コレクションの外部ファイルに html 要素をすべてため、`HTML`タグは親要素が必要です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-152">You cannot add elements directly to the <xref:System.Windows.Forms.HtmlDocument.All%2A> collection, because all elements in an HTML file outside of the `HTML` tag must have a parent element.</span></span> <span data-ttu-id="5dff8-153">使用して、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドまたは<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティ<xref:System.Windows.Forms.HtmlElement>ツリーに新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-153">Use the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method or the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property on <xref:System.Windows.Forms.HtmlElement> to add new elements to the tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-154">次のコード例はすべての設定し、ドキュメント内の要素を反復処理`Enabled=True`ドキュメントの読み込み中に、ユーザー入力を防ぐために既定で無効には任意の要素を有効にします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-154">The following code example iterates through all of the elements in a document and sets `Enabled=True`, enabling any elements that may have been disabled by default to prevent user input while the document was loading.</span></span> <span data-ttu-id="5dff8-155">コード例では、アプリケーションが含まれている必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-155">The code example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="5dff8-156">処理するイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-156">The name of the event you want to handle.</span>
          </span>
        </param>
        <param name="eventHandler">
          <span data-ttu-id="5dff8-157">イベントを処理するマネージ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-157">The managed code that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-158">指定した HTML DOM イベントのイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-158">Adds an event handler for the named HTML DOM event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-159">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトのいずれかのイベントをアタッチする必要がありますできません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-159">You should not attach an event to the document or one of its objects until the document has completed loading.</span></span> <span data-ttu-id="5dff8-160">できるだけ早くこのメソッドを呼び出す必要がありますが、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>のイベント、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-160">The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="5dff8-161">このメソッドでは、によって公開されていないアンマネージの DOM イベント ハンドラーをアタッチすることができます<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-161">This method allows you to attach handlers to unmanaged DOM events not exposed by <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="5dff8-162">使用可能なアンマネージ DOM イベントの詳細については、次を参照してください。 [、管理されている HTML ドキュメント オブジェクト モデルでのへのアクセスの非公開メンバー](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)と IHTMLDocument インターフェイス: [IHTMLDocument](http://go.microsoft.com/fwlink/?LinkId=104882)、 [IHTMLDocument2](http://go.microsoft.com/fwlink/?LinkId=104884)、 [IHTMLDocument3](http://go.microsoft.com/fwlink/?LinkId=104886)、 [IHTMLDocument4](http://go.microsoft.com/fwlink/?LinkId=104887)、 [IHTMLDocument5](http://go.microsoft.com/fwlink/?LinkId=104888)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-162">For more information about available unmanaged DOM events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLDocument interfaces: [IHTMLDocument](http://go.microsoft.com/fwlink/?LinkId=104882), [IHTMLDocument2](http://go.microsoft.com/fwlink/?LinkId=104884), [IHTMLDocument3](http://go.microsoft.com/fwlink/?LinkId=104886), [IHTMLDocument4](http://go.microsoft.com/fwlink/?LinkId=104887), [IHTMLDocument5](http://go.microsoft.com/fwlink/?LinkId=104888).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-163">HTML ドキュメントの背景色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-163">Gets or sets the background color of the HTML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-164">ドキュメントの背景の <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-164">The <see cref="T:System.Drawing.Color" /> of the document's background.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-165"><xref:System.Windows.Forms.HtmlDocument.BackColor%2A> その他の要素は、画面の領域を占有と表示されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-165"><xref:System.Windows.Forms.HtmlDocument.BackColor%2A> will display when no other element occupies that area of the screen.</span></span>  
  
 <span data-ttu-id="5dff8-166"><xref:System.Drawing.Color>に入力、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]をサポートしている、`Alpha`値が、HTML DOM はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-166">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="5dff8-167">したがって、`Alpha`はこのプロパティに割り当てられている場合に効果がありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-167">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement Body" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Body" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Body As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ Body { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-168">
            <c>BODY</c> タグの <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-168">Gets the <see cref="T:System.Windows.Forms.HtmlElement" /> for the <c>BODY</c> tag.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-169">
            <see cref="T:System.Windows.Forms.HtmlElement" />オブジェクトに対して、<c>本文</c>タグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-169">The <see cref="T:System.Windows.Forms.HtmlElement" /> object for the <c>BODY</c> tag.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-170">HTML ドキュメントは、次の 2 つの主要なセクションに分かれています。</span><span class="sxs-lookup"><span data-stu-id="5dff8-170">An HTML document is split into two major sections:</span></span>  
  
-   <span data-ttu-id="5dff8-171">`HEAD`、ドキュメントのタイトル、任意の文書メタデータが含まれていますと`SCRIPT`要素。</span><span class="sxs-lookup"><span data-stu-id="5dff8-171">`HEAD`, which contains the document's title, any document meta-data, and `SCRIPT` elements.</span></span>  
  
-   <span data-ttu-id="5dff8-172">`BODY`、を含むすべての要素に関連する、画面に表示されるドキュメントの外観です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-172">`BODY`, which contains all of the elements involved in the on-screen appearance of the document.</span></span>  
  
 <span data-ttu-id="5dff8-173">該当するショートカットはありません`Head`プロパティ<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-173">There is no equivalent `Head` property on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="5dff8-174">取得する、`HEAD`要素を使用して<xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-174">To obtain the `HEAD` element, use <xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-175">次のコード例が新たに作成`DIV`要素を使用して、ドキュメントの一番下に追加され、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-175">The following code example creates a new `DIV` element and appends it to the bottom of the document using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlDocument#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-176">ユーザーがドキュメント内の任意の場所をクリックしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-176">Occurs when the user clicks anywhere on the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-177">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-177">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-178">次のコード例は、ドキュメント上をクリックを検出の要素を検索して、使用<xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A>に要素を Web ページの上部に揃えます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-178">The following code example detects a click on the document, finds the element, and uses <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A> to align the element with the top of the Web page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler ContextMenuShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler ContextMenuShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.ContextMenuShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuShowing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ ContextMenuShowing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-179">ユーザーがドキュメントのコンテキスト メニューの表示を要求したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-179">Occurs when the user requests to display the document's context menu.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-180">既定では、ドキュメントまたはドキュメント内の要素をマウスを右クリックした場合が表示されます、既定のコンテキスト メニューの特定の要素にします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-180">By default, if you right-click your mouse on a document or an element in a document, it will display a default context menu particular to the element.</span></span> <span data-ttu-id="5dff8-181">このイベントを使用して、コンテキスト メニューの表示を取り消すし、独自のいずれかが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-181">Use this event to cancel the display of the context menu and display one of your own.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-182">次のコード例のキャプチャ、<xref:System.Windows.Forms.HtmlDocument.ContextMenuShowing>イベント表示を使用して、<xref:System.Windows.Forms.ContextMenuStrip>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-182">The following code example captures the <xref:System.Windows.Forms.HtmlDocument.ContextMenuShowing> event and uses it to display a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookie">
      <MemberSignature Language="C#" Value="public string Cookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Cookie" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Cookie" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookie As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Cookie { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-183">このドキュメントに関連付けられている HTTP クッキーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-183">Gets or sets the HTTP cookies associated with this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-184">セミコロンで各クッキーを区切った、クッキーのリストを格納する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-184">A <see cref="T:System.String" /> containing a list of cookies, with each cookie separated by a semicolon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-185"><xref:System.Windows.Forms.HtmlDocument.Cookie%2A>プロパティ<xref:System.Windows.Forms.HtmlDocument>Web ページを設定するすべての cookie を公開します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-185">The <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property of <xref:System.Windows.Forms.HtmlDocument> exposes all cookies set for a Web page.</span></span>  
  
 <span data-ttu-id="5dff8-186">A *cookie*は、特定の Web ページに関連付けられた任意の名前/値ペア。</span><span class="sxs-lookup"><span data-stu-id="5dff8-186">A *cookie* is an arbitrary name/value pair associated with a given Web page.</span></span> <span data-ttu-id="5dff8-187">Web 開発者は、ユーザーを参照してくださいまたは Web サイトに戻るときに追跡するために cookie を使用します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-187">Web developers use cookies to track when users visit or return to a Web site.</span></span> <span data-ttu-id="5dff8-188">Cookie は、次を決定する cookie くずリストと呼ばれる複数の部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-188">A cookie is composed of multiple parts, called cookie crumbs, that determine the following:</span></span>  
  
-   <span data-ttu-id="5dff8-189">ドキュメントが cookie を適用する設定です。そのドメインとパスです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-189">The document set to which the cookie applies; its domain and path.</span></span>  
  
-   <span data-ttu-id="5dff8-190">名前と cookie の値。</span><span class="sxs-lookup"><span data-stu-id="5dff8-190">The name and value of the cookie.</span></span>  
  
-   <span data-ttu-id="5dff8-191">Cookie の有効期限です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-191">The expiration date of the cookie.</span></span>  
  
-   <span data-ttu-id="5dff8-192">かどうか、クッキーだけが送信できる、セキュリティで保護された接続を使用します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-192">Whether the cookie can only be sent using a secure connection.</span></span>  
  
 <span data-ttu-id="5dff8-193"><xref:System.Windows.Forms.HtmlDocument.Cookie%2A>プロパティは、複数の cookie を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-193">The <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property may contain multiple cookies.</span></span>  
  
 <span data-ttu-id="5dff8-194">のみ使用できます、<xref:System.Windows.Forms.HtmlDocument.Cookie%2A>プロパティを一度に 1 つの cookie を設定します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-194">You can only use the <xref:System.Windows.Forms.HtmlDocument.Cookie%2A> property to set one cookie at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement CreateElement (string elementTag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement CreateElement(string elementTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.CreateElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateElement (elementTag As String) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ CreateElement(System::String ^ elementTag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementTag">
          <span data-ttu-id="5dff8-195">作成する HTML 要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-195">The name of the HTML element to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-196">指定した HTML タグの種類の新しい <see langword="HtmlElement" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-196">Creates a new <see langword="HtmlElement" /> of the specified HTML tag type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-197">指定したタグの種類の新しい要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-197">A new element of the specified tag type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-198">`elementTag` 除くが Internet Explorer で、サポートされている HTML タグのいずれかのいずれかのあります`FRAME`または`IFRAME`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-198">`elementTag` may be one of any of the supported HTML tags in Internet Explorer, except for `FRAME` or `IFRAME`.</span></span>  
  
 <span data-ttu-id="5dff8-199"><xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> 現在のドキュメント ツリーにアタッチされていない要素を返します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-199"><xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> returns an element unattached to the current document tree.</span></span> <span data-ttu-id="5dff8-200">ドキュメントに要素を追加するには、いずれかを使用、<xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>または<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-200">To add the element to the document, use either the <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> or <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> methods.</span></span>  
  
 <span data-ttu-id="5dff8-201">使用する場合は、このメソッドは既存のドキュメントのソース コードの状態を与えません。、<xref:System.Windows.Forms.WebBrowser>コントロールの**ソースの表示**コンテキスト メニュー コマンドまたは<xref:System.Windows.Forms.WebBrowser.DocumentText%2A>と<xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>のプロパティ、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-201">This method will not affect the state of an existing document's source code when you use the <xref:System.Windows.Forms.WebBrowser> control's **View Source** context menu command or the <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> and <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> properties of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="5dff8-202">使用して新しい要素を作成するとき<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>など、特定のプロパティを設定することはできません`Name`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-202">When you create new elements with <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, you will not be able to set certain properties, such as `Name`.</span></span> <span data-ttu-id="5dff8-203">Name 属性を設定する必要がある場合、割り当てるを HTML として、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>ドキュメント内の別のオブジェクトのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-203">In cases where you need to set the Name attribute, assign them as HTML to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of another object in the document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-204">次のコード例では、HTML を作成する、Northwind データベースからのデータ テーブルを使用して<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-204">The following code example uses data from the Northwind database to create an HTML table using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>.</span></span> <span data-ttu-id="5dff8-205"><xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドは使用も、最初のセルを追加する (`TD`要素) の行に (`TR`要素)、テーブルに行を追加し、最後に、現在のドキュメントの最後に、テーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-205">The <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> method is also used, first to add cells (`TD` elements) to rows (`TR` elements), then to add rows to the table, and finally to append the table to the end of the current document.</span></span> <span data-ttu-id="5dff8-206">このコード例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>と呼ばれるコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-206">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control called `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlDocument#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncoding">
      <MemberSignature Language="C#" Value="public string DefaultEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.DefaultEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultEncoding { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-207">現在のドキュメントに既定で使用されるエンコーディングを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-207">Gets the encoding used by default for the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-208">ページが最初に表示されたときにブラウザーが使用するエンコーディングを表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-208">The <see cref="T:System.String" /> representing the encoding that the browser uses when the page is first displayed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-209">既定のエンコーディングは、エンコード、ページが最初に読み込まれるときに使用するマネージ HTML ドキュメント オブジェクト モデル (DOM) を試みます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-209">The default encoding is the encoding the managed HTML Document Object Model (DOM) will attempt to use when the page is initially loaded.</span></span> <span data-ttu-id="5dff8-210">このエンコードは、派生のいずれかから Internet Explorer の**エンコード**設定、または、`META`ページ内でタグが埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-210">This encoding is derived either from Internet Explorer's **Encoding** settings, or from a `META` tag embedded within the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="5dff8-211">処理を終了するイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-211">The name of the event you want to cease handling.</span>
          </span>
        </param>
        <param name="eventHandler">
          <span data-ttu-id="5dff8-212">イベントを処理するマネージ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-212">The managed code that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-213">HTML DOM の指定したイベントからイベント ハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-213">Removes an event handler from a named event on the HTML DOM.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-214">セキュリティのためにこのドキュメントのドメインを記述する文字列を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-214">Gets or sets the string describing the domain of this document for security purposes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-215">有効なドメイン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-215">A valid domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-216">既定では、別のフレーム内の 2 つの Web ページは、阻止スクリプトを使用して、互いのコンテンツにアクセスします。偶数 www.microsoft.com と msdn.microsoft.com の「は、このインスタンスでと見なされます別のドメイン。</span><span class="sxs-lookup"><span data-stu-id="5dff8-216">By default, two Web pages in different frames are prevented from accessing each other's content using script; even www.microsoft.com and msdn.microsoft.com are, in this instance, considered different domains.</span></span> <span data-ttu-id="5dff8-217">クロス フレームが同じ最上位ドメインからのページのスクリプティングを有効にするには、新しい値を割り当てることができます、<xref:System.Windows.Forms.HtmlDocument.Domain%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-217">To enable cross-frame scripting for pages from the same top-level domain, you can assign a new value to the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property.</span></span> <span data-ttu-id="5dff8-218">例では、以前の URL、設定<xref:System.Windows.Forms.HtmlDocument.Domain%2A>microsoft.com は相互に通信するために両方のページを許可します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-218">In the pervious URL example, setting <xref:System.Windows.Forms.HtmlDocument.Domain%2A> to microsoft.com would allow both pages to communicate with one another.</span></span>  
  
 <span data-ttu-id="5dff8-219">割り当てられている文字列、<xref:System.Windows.Forms.HtmlDocument.Domain%2A>プロパティが有効な最上位ドメインをする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-219">Strings assigned to the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property must be valid top-level domains.</span></span> <span data-ttu-id="5dff8-220">設定することができます、前の URL の例で<xref:System.Windows.Forms.HtmlDocument.Domain%2A>に microsoft.com は .com、スクリプトのページの内容をインターネット上の任意のページを有効にするとします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-220">In the previous URL example, you can set <xref:System.Windows.Forms.HtmlDocument.Domain%2A> to microsoft.com, but not to .com, which would enable any page on the Internet to script a page's contents.</span></span>  
  
 <span data-ttu-id="5dff8-221">使用することはできません、<xref:System.Windows.Forms.HtmlDocument.Domain%2A>クロス フレームが 2 つの異なるプロトコルを使用してアクセスされるページのスクリプトを有効にするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-221">You cannot use the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property to enable cross-frame scripting for pages accessed using two different protocols.</span></span> <span data-ttu-id="5dff8-222">場合は、ページ内の 1 つのフレームは、Web サーバー (http:// プロトコル) から取得し、ファイル システム (file://) プロトコルに由来別、することはできませんの値に関係なく、相互に通信するために、<xref:System.Windows.Forms.HtmlDocument.Domain%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-222">If one frame in your page comes from a Web server (the http:// protocol) and another comes from the file system (the file://) protocol, they will not be able to communicate with one another regardless of the value of the <xref:System.Windows.Forms.HtmlDocument.Domain%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5dff8-223">
            <c>Domain</c> プロパティの引数は、ドメイン ネーム システム (DNS: Domain Name System) 規則に従った有効なドメイン名である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-223">The argument for the <c>Domain</c> property must be a valid domain name using Domain Name System (DNS) conventions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DomDocument">
      <MemberSignature Language="C#" Value="public object DomDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomDocument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.DomDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomDocument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomDocument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-224">この <see cref="T:System.Windows.Forms.HtmlDocument" /> のアンマネージ インターフェイスへのポインターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-224">Gets the unmanaged interface pointer for this <see cref="T:System.Windows.Forms.HtmlDocument" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-225">
            <see cref="T:System.Object" />を表す、 <c>IDispatch</c>アンマネージ ドキュメントへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-225">An <see cref="T:System.Object" /> representing an <c>IDispatch</c> pointer to the unmanaged document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-226"><xref:System.Windows.Forms.HtmlDocument> ラッパーの Internet Explorer ドキュメント オブジェクト モデル (DOM)、COM に書き込まれるは</span><span class="sxs-lookup"><span data-stu-id="5dff8-226"><xref:System.Windows.Forms.HtmlDocument> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written in COM.</span></span> <span data-ttu-id="5dff8-227">など、非公開のプロパティまたはメソッドに、基になる COM インターフェイスにアクセスする必要がある場合`IHTMLDocument2`、それらのクエリには、このオブジェクトを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-227">If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLDocument2`, you can use this object to query for them.</span></span>  
  
 <span data-ttu-id="5dff8-228">アンマネージ インターフェイスを使用するのには、アプリケーションに MSHTML ライブラリ (mshtml.dll) をインポートします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-228">To use the unmanaged interfaces, import the MSHTML library (mshtml.dll) into your application.</span></span> <span data-ttu-id="5dff8-229">ただし、実行することも公開されていないプロパティとメソッドを使用して、`IDispatch::Invoke`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-229">However, you can also execute unexposed properties and methods using the `IDispatch::Invoke` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-230">次のコード例のキャスト、<xref:System.Windows.Forms.HtmlDocument.DomDocument%2A>を`IHTMLDocument2`ポインターの値を表示し、`lastModified`プロパティは、ドキュメントの所有者が最終の内容を更新日時が示されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-230">The following code example casts the <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> to an `IHTMLDocument2` pointer and displays the value of the `lastModified` property, which tells when the owner of the document last updated its contents.</span></span> <span data-ttu-id="5dff8-231">このコード例が必要です、<xref:System.Windows.Forms.Button>という名前のフォームに`Button6`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-231">The code example requires that you have a <xref:System.Windows.Forms.Button> on your form named `Button6`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlDocument#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5dff8-232">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-232">For <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission.</span>
          </span>
          <span data-ttu-id="5dff8-233">関連する列挙。 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-233">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-234">このドキュメントの文字エンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-234">Gets or sets the character encoding for this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-235">現在の文字エンコーディングを表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-235">The <see cref="T:System.String" /> representing the current character encoding.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5dff8-236">テストするオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-236">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-237">指定したオブジェクトと現在のオブジェクトとを比較し、等しいかどうかをテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-237">Tests the object for equality against the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-238">オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-238">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecCommand">
      <MemberSignature Language="C#" Value="public void ExecCommand (string command, bool showUI, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecCommand(string command, bool showUI, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.ExecCommand(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecCommand (command As String, showUI As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecCommand(System::String ^ command, bool showUI, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="5dff8-239">実行するコマンド名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-239">The name of the command to execute.</span>
          </span>
        </param>
        <param name="showUI">
          <span data-ttu-id="5dff8-240">コマンド固有のダイアログ ボックスまたはメッセージ ボックスをユーザーに表示するかどうか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-240">Whether or not to show command-specific dialog boxes or message boxes to the user.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5dff8-241">コマンドを使用して代入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-241">The value to assign using the command.</span>
          </span>
          <span data-ttu-id="5dff8-242">すべてのコマンドに適用されるわけではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-242">Not applicable for all commands.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-243">ドキュメントに対して指定したコマンドを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-243">Executes the specified command against the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-244"><xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A> コマンドの大きな配列で公開されたメソッドがない公開<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-244"><xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A> exposes a large array of commands for which there are no methods exposed on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="5dff8-245">使用して<xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>新しい HTML 要素を挿入を選択し、テキスト、書式を設定および解除認証資格情報をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-245">Using <xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A> you can insert new HTML elements, select and format text, and clear any cached authentication credentials.</span></span> <span data-ttu-id="5dff8-246">コマンドの一覧については、次を参照してください。[コマンド識別子](http://go.microsoft.com/fwlink/?LinkId=198814)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-246">For a full list of commands, see [Command Identifiers](http://go.microsoft.com/fwlink/?LinkId=198814).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5dff8-247">コピーなどの特定のコマンドでは、戻り値があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-247">Certain commands, such as copy, have return values.</span></span> <span data-ttu-id="5dff8-248">現在の実装で<xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>、呼び出しから戻り値を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-248">In the current implementation of <xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A>, you cannot obtain a return value from your call.</span></span> <span data-ttu-id="5dff8-249">戻り値を取得するに対応するアンマネージ メソッドを使用する<xref:System.Windows.Forms.HtmlDocument.DomDocument%2A>代わりに参照します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-249">To retrieve return values, use the corresponding unmanaged method on a <xref:System.Windows.Forms.HtmlDocument.DomDocument%2A> reference instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-250">ユーザーの入力フォーカスを現在のドキュメントに設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-250">Sets user input focus on the current document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-251">呼び出す<xref:System.Windows.Forms.HtmlDocument.Focus%2A>にフォーカスを設定、<xref:System.Windows.Forms.WebBrowser>コントロール現在フォーカスがない場合は、制御します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-251">Calling <xref:System.Windows.Forms.HtmlDocument.Focus%2A> will set focus on the <xref:System.Windows.Forms.WebBrowser> control, if the control currently does not have focus.</span></span> <span data-ttu-id="5dff8-252">内のドキュメントがホストされている場合、 `FRAME`、このメソッドはそのフォーカスを移す`FRAME`内で、`FRAMESET`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-252">If the document is hosted inside of a `FRAME`, this method will put focus on that `FRAME` within the `FRAMESET`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="5dff8-253">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />フォームにフォーカスを設定する権限です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-253">For <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> permission to set focus on a form.</span>
          </span>
          <span data-ttu-id="5dff8-254">関連する列挙。 <see cref="T:System.Security.Permissions.UIPermissionWindow" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-254">Associated enumeration: <see cref="T:System.Security.Permissions.UIPermissionWindow" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Focused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-255">ドキュメントにユーザーの入力フォーカスがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-255">Gets a value indicating whether the document has user input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-256">ドキュメントにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-256">
              <see langword="true" /> if the document has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.Focus" />
        <altmember cref="E:System.Windows.Forms.HtmlDocument.Focusing" />
        <altmember cref="E:System.Windows.Forms.HtmlDocument.LosingFocus" />
      </Docs>
    </Member>
    <Member MemberName="Focusing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Focusing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Focusing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Focusing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Focusing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Focusing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-257">ドキュメントがフォーカスを得る前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-257">Occurs before focus is given to the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-258">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-258">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-259">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-259">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-260">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.Focusing>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-260">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Focusing> event.</span></span> <span data-ttu-id="5dff8-261">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-261">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="5dff8-262">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-262">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-263">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.Focusing>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-263">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Focusing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#424](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#424)]
 [!code-vb[System.Windows.Forms.EventExamples#424](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#424)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-264">ドキュメントのテキストの色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-264">Gets or sets the text color for the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-265">ドキュメントのテキストの色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-265">The color of the text in the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-266"><xref:System.Drawing.Color> <xref:System.Drawing.Color>に入力、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]をサポートしている、`Alpha`値が、HTML DOM はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-266">The <xref:System.Drawing.Color><xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="5dff8-267">したがって、`Alpha`はこのプロパティに割り当てられている場合に効果がありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-267">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Forms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Forms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Forms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Forms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Forms As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Forms { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-268">ドキュメント内のすべての <c>&lt;FORM&gt;</c> 要素のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-268">Gets a collection of all of the <c>&lt;FORM&gt;</c> elements in the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-269">
            <see cref="T:System.Windows.Forms.HtmlElementCollection" />の<c>&lt;フォーム&gt;</c>ドキュメント内の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-269">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of the <c>&lt;FORM&gt;</c> elements within the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-270">HTML ドキュメントが 1 つまたは複数あります`FORM`データを送信するための入力フィールドを持つ要素がサーバーにバックアップします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-270">An HTML document may have one or more `FORM` elements with input fields for submitting data back to a server.</span></span>  
  
 <span data-ttu-id="5dff8-271">プログラムで送信することができます、`FORM`を取得してその<xref:System.Windows.Forms.HtmlElement>呼び出しとその`Submit`メソッドを使用して、<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-271">You can programmatically submit a `FORM` by obtaining its <xref:System.Windows.Forms.HtmlElement> and calling its `Submit` method using the <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> method.</span></span>  
  
 <span data-ttu-id="5dff8-272">新しいを追加する`FORM`、ドキュメントを作成することも、新しい`FORM`を文字列としてタグを割り当てる、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>要素のプロパティが、HTML DOM に追加済みまたは使用することができます、<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>メソッドを使用してそのプロパティを設定する<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>、し、要素を使用して既存の子として追加<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-272">To add a new `FORM` to a document, you can either create a new `FORM` tag as a string, and assign it to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of an element previously added to the HTML DOM; or you can use the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method, set its properties using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>, and add it as a child of an existing element using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-273">次のコード例は、すべての反復、 `Form` Web 上の要素がページし、すべてのユーザー入力フォームの既定値をクリアします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-273">The following code example iterates through all of the `Form` elements on a Web page and clears all user input, setting the forms back to their default values.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.HtmlDocument#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement GetElementById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement GetElementById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementById (id As String) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ GetElementById(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="5dff8-274">取得する要素の ID 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-274">The ID attribute of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-275">要素の <c>ID</c> 属性を検索キーとして使用して、1 つの <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-275">Retrieves a single <see cref="T:System.Windows.Forms.HtmlElement" /> using the element's <c>ID</c> attribute as a search key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-276">指定した値と同じ <c>ID</c> 属性を持つ最初のオブジェクト、または <see langword="null" /> が見つからない場合は <paramref name="id" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-276">Returns the first object with the same <c>ID</c> attribute as the specified value, or <see langword="null" /> if the <paramref name="id" /> cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-277">ドキュメント内で同じ ID 値では、複数の要素がある場合<xref:System.Windows.Forms.HtmlDocument.GetElementById%2A>は、見つかった最初の 1 つを返します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-277">If there are multiple elements in the document with the same ID value, <xref:System.Windows.Forms.HtmlDocument.GetElementById%2A> will return the first one it finds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-278">次のコード例は、名前付き取得`TABLE`ドキュメントから、行の数をカウントし、Web ページに結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-278">The following code example retrieves a named `TABLE` from a document, counts up the number of rows, and displays the result in the Web page.</span></span> <span data-ttu-id="5dff8-279">コード例が必要です、<xref:System.Windows.Forms.WebBrowser>というプロジェクトの管理`WebBrowser1`、Web ページが読み込まれていると、`TABLE`が`ID`属性は`Table1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-279">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> control in your project named `WebBrowser1`, and that you have loaded a Web page with a `TABLE` whose `ID` attribute is `Table1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.HtmlDocument#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement GetElementFromPoint (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement GetElementFromPoint(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementFromPoint(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ GetElementFromPoint(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5dff8-280">ドキュメントの左上隅を基準とした、画面上の要素の (x,y) 位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-280">The x,y position of the element on the screen, relative to the top-left corner of the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-281">指定されたクライアント座標にある HTML 要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-281">Retrieves the HTML element located at the specified client coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-282">ドキュメント内の指定した画面位置にある <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-282">The <see cref="T:System.Windows.Forms.HtmlElement" /> at the specified screen location in the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-283"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> ドキュメントの左上隅にあるが値 (0, 0) を割り当て、クライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-283"><xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A> uses client coordinates, in which the upper-left corner of the document is assigned the value (0,0).</span></span> <span data-ttu-id="5dff8-284">使用して、カーソルの現在位置をクライアント座標を取得することができます、<xref:System.Windows.Forms.HtmlWindow.Position%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-284">Client coordinates for the current position of the cursor can be obtained using the <xref:System.Windows.Forms.HtmlWindow.Position%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-285">次のコード例は、ドキュメント上をクリックを検出の要素を検索して、使用<xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A>に要素を Web ページの上部に揃えます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-285">The following code example detects a click on the document, finds the element, and uses <xref:System.Windows.Forms.HtmlElement.ScrollIntoView%2A> to align the element with the top of the Web page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlDocument#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElementCollection GetElementsByTagName(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementsByTagName (tagName As String) As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElementCollection ^ GetElementsByTagName(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="5dff8-286">取得する <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトの HTML タグの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-286">The name of the HTML tag for the <see cref="T:System.Windows.Forms.HtmlElement" /> objects you want to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-287">指定した HTML タグを持つ要素のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-287">Retrieve a collection of elements with the specified HTML tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-288">タグ名が <paramref name="tagName" /> 引数と同じである要素のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-288">The collection of elements who tag name is equal to the <paramref name="tagName" /> argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5dff8-289">通常の HTML ページを使用して、`META`ドキュメントに関する任意の情報を埋め込むにはタグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-289">HTML pages often use the `META` tag to embed arbitrary information about the document.</span></span> <span data-ttu-id="5dff8-290">次の HTML コード例は、すべての取得、`META`タグ、HTML ドキュメント内を検索、`META`名前を持つタグ`Description`、し、それをユーザーに表示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-290">The following HTML code example retrieves all of the `META` tags within an HTML document, finds the `META` tag with the name `Description`, and displays it to the user.</span></span> <span data-ttu-id="5dff8-291">このコード例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-291">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-292">このオブジェクトのハッシュ コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-292">Retrieves the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-293">このオブジェクトのインメモリ ハッシュを表す <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-293">An <see cref="T:System.Int32" /> representing an in-memory hash of this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Images { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-294">ドキュメント内のすべてのイメージ タグのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-294">Gets a collection of all image tags in the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-295">ドキュメント内の IMG タグごとに 1 つある <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのコレクションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-295">A collection of <see cref="T:System.Windows.Forms.HtmlElement" /> objects, one for each IMG tag in the document.</span>
          </span>
          <span data-ttu-id="5dff8-296">要素は、格納されている順序でコレクションから返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-296">Elements are returned from the collection in source order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-297"><xref:System.Windows.Forms.HtmlDocument.Images%2A> コレクションを返します<xref:System.Windows.Forms.HtmlElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5dff8-297"><xref:System.Windows.Forms.HtmlDocument.Images%2A> returns a collection of <xref:System.Windows.Forms.HtmlElement> objects.</span></span> <span data-ttu-id="5dff8-298">属性にアクセスするなど`ALT`と`SRC`、によって直接公開されていないを<xref:System.Windows.Forms.HtmlElement>を使用して、<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-298">To access attributes, such as `ALT` and `SRC`, that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, use the <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> method.</span></span>  
  
 <span data-ttu-id="5dff8-299">イメージを追加する、新しいドキュメントに、作成するか、新しい`IMG`を文字列としてタグを割り当てる、 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> ; HTML DOM に追加された要素のプロパティを使用して、または、<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>メソッドを使用してそのプロパティを設定する<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>、し、要素を使用して既存の子として追加<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-299">To add a new image to a document, either create a new `IMG` tag as a string, and assign it to the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property of an element previously added to the HTML DOM; or use the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method, set its properties using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>, and add it as a child of an existing element using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-300">次のコード例を調べ、 `ALT` 、ドキュメント内のイメージのすべての属性、既定値を設定および`ALT`属性値が既に設定されていない場合。</span><span class="sxs-lookup"><span data-stu-id="5dff8-300">The following code example examines the `ALT` attribute of all of the images in the document, and sets a default `ALT` attribute if a value is not already set.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlDocument#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeScript">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-301">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-301">Executes an Active Scripting function defined in an HTML page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5dff8-302">次のコード例では、Web ページで、スクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-302">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="5dff8-303">このコード例では、次の Web ページが読み込まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-303">The code example requires that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
<SCRIPT>  
function test(name, address) {  
window.alert("Name is " + name + "; address is " + address);  
}  
</SCRIPT>  
  
<BODY>  
</BODY>  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">
          <span data-ttu-id="5dff8-304">呼び出されるスクリプト メソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-304">The name of the script method to invoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-305">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-305">Executes an Active Scripting function defined in an HTML page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-306">アクティブ スクリプト呼び出しによって返されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-306">The object returned by the Active Scripting call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-307">によって返されるオブジェクトの基になる型<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>は異なります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-307">The underlying type of the object returned by <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will vary.</span></span> <span data-ttu-id="5dff8-308">呼び出されたアクティブ スクリプト関数が、整数、文字列などのスカラー データを返す場合が文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-308">If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</span></span> <span data-ttu-id="5dff8-309">JScript または VBScript を使用して作成されたオブジェクトなどのスクリプト ベースのオブジェクトを返す場合`new`演算子、その型である`Object`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-309">If it returns a script-based object, such as an object created using JScript or VBScript's `new` operator, it will be of type `Object`.</span></span> <span data-ttu-id="5dff8-310">(呼び出すことによってこのようなオブジェクトに対する呼び出しを行うことができます<xref:System.Object.GetType%2A>を使用して、 <xref:System.Type.InvokeMember%2A>)。かどうか、HTML DOM の要素を返すなど、`DIV`または`TABLE`、型のことが`Object`MSHTML への参照をプロジェクトに追加した場合です。DLL、その特定の管理されていない DOM 型にキャストするただし、します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-310">(You can make calls on such objects by calling <xref:System.Object.GetType%2A> and using <xref:System.Type.InvokeMember%2A>.) If it returns an HTML DOM element, such as a `DIV` or a `TABLE`, it will be of type `Object`; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</span></span>  
  
 <span data-ttu-id="5dff8-311">JScript および VBScript を含む、ユーザーのコンピューターにインストールされているアクティブなスクリプト言語で記述された関数を呼び出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-311">You may call any function written in any Active Scripting language installed on the user's computer, including JScript and VBScript.</span></span>  
  
 <span data-ttu-id="5dff8-312"><xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>はユーザーが明示的に Internet Explorer でスクリプトの実行を無効になっている場合に何も表示されない、または Web ページの現在のセキュリティ構成では許可されていない場合に実行します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-312">The <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-313">次のコード例では、Web ページで、スクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-313">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="5dff8-314">このコード例が必要です、<xref:System.Windows.Forms.WebBrowser>と呼ばれる、アプリケーションで`WebBrowser1`、次の Web ページが読み込まれているとします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-314">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> in your application called `WebBrowser1`, and that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
  
    <HEAD>  
        <TITLE>Invoke Script Sample</TITLE>  
  
        <SCRIPT>  
            function MyObject() {  
                this.Data = "Data for my private object.";  
            }  
            // Return a string.  
            function test() {  
                return("This is a test.");  
            }  
            // Return a JScript object.  
            function testJScriptObject() {  
                return(new(MyObject));  
            }  
            // Return a DOM element.  
            function testElement() {  
                return(div1);  
            }  
        </SCRIPT>  
    </HEAD>  
  
    <BODY>  
  
        <DIV id="div1">  
        </DIV>  
  
    </BODY>  
  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.HtmlDocument#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="scriptName">
          <span data-ttu-id="5dff8-315">呼び出されるスクリプト メソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-315">The name of the script method to invoke.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5dff8-316">スクリプト メソッドに渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-316">The arguments to pass to the script method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-317">HTML ページで定義されたアクティブ スクリプト関数を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-317">Executes an Active Scripting function defined in an HTML page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-318">アクティブ スクリプト呼び出しによって返されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-318">The object returned by the Active Scripting call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-319">によって返されるオブジェクトの基になる型<xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A>は異なります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-319">The underlying type of the object returned by <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A> will vary.</span></span> <span data-ttu-id="5dff8-320">呼び出されたアクティブ スクリプト関数が、整数、文字列などのスカラー データを返す場合が文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-320">If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</span></span> <span data-ttu-id="5dff8-321">JScript または VBScript を使用して作成されたオブジェクトなどのスクリプト ベースのオブジェクトを返す場合`new`演算子、その型である`Object`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-321">If it returns a script-based object, such as an object created using JScript or VBScript's `new` operator, it will be of type `Object`.</span></span> <span data-ttu-id="5dff8-322">(呼び出すことによってこのようなオブジェクトに対する呼び出しを行うことができます<xref:System.Object.GetType%2A>を使用して、 <xref:System.Type.InvokeMember%2A>)。かどうか、HTML DOM の要素を返すなど、`DIV`または`TABLE`、型のことが`Object`MSHTML への参照をプロジェクトに追加した場合です。DLL、その特定の管理されていない DOM 型にキャストするただし、します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-322">(You can make calls on such objects by calling <xref:System.Object.GetType%2A> and using <xref:System.Type.InvokeMember%2A>.) If it returns an HTML DOM element, such as a `DIV` or a `TABLE`, it will be of type `Object`; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</span></span>  
  
 <span data-ttu-id="5dff8-323">JScript および VBScript を含む、ユーザーのコンピューターにインストールされているアクティブなスクリプト言語で記述された関数を呼び出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="5dff8-323">You may call any function written in any Active Scripting language installed on the user's machine, including JScript and VBScript.</span></span>  
  
 <span data-ttu-id="5dff8-324">このメソッドは、ユーザーが明示的に Internet Explorer でスクリプトの実行を無効になっている場合に何も表示されない、または Web ページの現在のセキュリティ構成では許可されていない場合に実行されます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-324">This method will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-325">次のコード例では、Web ページで、スクリプトの内容を実行します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-325">The following code example executes the contents of a script in a Web page.</span></span> <span data-ttu-id="5dff8-326">このコード例が必要です、<xref:System.Windows.Forms.WebBrowser>と呼ばれる、アプリケーションで`WebBrowser1`、次の Web ページが読み込まれているとします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-326">The code example requires that you have a <xref:System.Windows.Forms.WebBrowser> in your application called `WebBrowser1`, and that you have loaded the following Web page.</span></span>  
  
```  
<HTML>  
    <SCRIPT>  
        function test(name, address) {  
            window.alert("Name is " + name + "; address is " + address);  
        }  
    </SCRIPT>  
  
    <BODY>  
    </BODY>  
</HTML>  
  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlDocument#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-327">ハイパーリンクの色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-327">Gets or sets the color of hyperlinks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-328">現在のドキュメント内のハイパーリンクの色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-328">The color for hyperlinks in the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-329"><xref:System.Drawing.Color>に入力、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]をサポートしている、`Alpha`値が、HTML DOM はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-329">The <xref:System.Drawing.Color> type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="5dff8-330">したがって、`Alpha`はこのプロパティに割り当てられている場合に効果がありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-330">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Links" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Links { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-331">この HTML ドキュメント内のすべてのハイパーリンクのリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-331">Gets a list of all the hyperlinks within this HTML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-332">
            <see cref="T:System.Windows.Forms.HtmlElementCollection" /> オブジェクトの <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-332">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of <see cref="T:System.Windows.Forms.HtmlElement" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-333">このコレクションを使用して作成されたすべてのリンクを含む、 `A`、 `LINK`、および`AREA`html タグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-333">This collection will contain all links created using the `A`, `LINK`, and `AREA` tags in HTML.</span></span>  
  
 <span data-ttu-id="5dff8-334"><xref:System.Windows.Forms.HtmlElement>このコレクションに含まれるオブジェクトをカプセル化、アンマネージ`IHTMLLinkElement`インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-334">The <xref:System.Windows.Forms.HtmlElement> objects contained within this collection encapsulate the unmanaged `IHTMLLinkElement` interface.</span></span> <span data-ttu-id="5dff8-335">基になるインターフェイスのプロパティを安全にアクセスするには、使用、<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-335">To access the properties of the underlying interface safely, use the <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LosingFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LosingFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.LosingFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LosingFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LosingFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-336">コントロールからフォーカスが失われるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-336">Occurs while focus is leaving a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-337">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-337">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-338">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-338">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-339">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.LosingFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-339">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.LosingFocus> event.</span></span> <span data-ttu-id="5dff8-340">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-340">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="5dff8-341">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-341">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-342">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.LosingFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-342">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.LosingFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#425](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#425)]
 [!code-vb[System.Windows.Forms.EventExamples#425](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#425)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-343">ユーザーがマウスの左ボタンをクリックしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-343">Occurs when the user clicks the left mouse button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-344"><xref:System.Windows.Forms.HtmlDocument.MouseDown>イベントが発生する前に、<xref:System.Windows.Forms.HtmlDocument.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-344">The <xref:System.Windows.Forms.HtmlDocument.MouseDown> event occurs before the <xref:System.Windows.Forms.HtmlDocument.Click> event.</span></span>  
  
 <span data-ttu-id="5dff8-345">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-345">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-346">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-346">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-347">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-347">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event.</span></span> <span data-ttu-id="5dff8-348">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-348">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5dff8-349">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-349">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5dff8-350">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-350">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-351">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-351">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#426](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#426)]
 [!code-vb[System.Windows.Forms.EventExamples#426](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#426)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-352">マウスがドキュメント上から外れた時点で発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-352">Occurs when the mouse is no longer hovering over the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-353">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-353">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-354">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-354">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-355">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.MouseLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-355">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseLeave> event.</span></span> <span data-ttu-id="5dff8-356">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-356">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5dff8-357">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-357">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5dff8-358">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-358">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-359">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.MouseLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-359">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#427](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#427)]
 [!code-vb[System.Windows.Forms.EventExamples#427](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#427)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-360">マウスがドキュメント上を移動すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-360">Occurs when the mouse is moved over the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-361">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-361">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-362">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-362">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-363">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.MouseMove>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-363">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseMove> event.</span></span> <span data-ttu-id="5dff8-364">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-364">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5dff8-365">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-365">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5dff8-366">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-366">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-367">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.MouseMove>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-367">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseMove> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#428](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#428)]
 [!code-vb[System.Windows.Forms.EventExamples#428](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#428)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-368">マウスがドキュメント上を移動すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-368">Occurs when the mouse is moved over the document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-369">イベント処理の詳細については[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-369">For more information about handling events, [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-370">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-370">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-371">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.MouseOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-371">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseOver> event.</span></span> <span data-ttu-id="5dff8-372">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-372">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5dff8-373">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-373">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5dff8-374">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-374">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-375">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.MouseOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-375">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#429](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#429)]
 [!code-vb[System.Windows.Forms.EventExamples#429](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#429)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-376">ユーザーがマウスの左ボタンを離したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-376">Occurs when the user releases the left mouse button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-377">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-377">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-378">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-378">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="5dff8-379">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlDocument.MouseUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-379">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.MouseUp> event.</span></span> <span data-ttu-id="5dff8-380">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-380">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="5dff8-381">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-381">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="5dff8-382">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlDocument>という`HtmlDocument1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-382">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`.</span></span> <span data-ttu-id="5dff8-383">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlDocument.MouseUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="5dff8-383">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.MouseUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#430](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#430)]
 [!code-vb[System.Windows.Forms.EventExamples#430](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#430)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlDocument left, class System.Windows.Forms.HtmlDocument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.op_Equality(System.Windows.Forms.HtmlDocument,System.Windows.Forms.HtmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlDocument, right As HtmlDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlDocument ^ left, System::Windows::Forms::HtmlDocument ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlDocument" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlDocument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5dff8-384">比較する 1 番目のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-384">The first instance to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5dff8-385">比較する 2 番目のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-385">The second instance to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-386">指定した <see cref="T:System.Windows.Forms.HtmlDocument" /> のインスタンスが同じ値を表しているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-386">Returns a value that indicates whether the specified <see cref="T:System.Windows.Forms.HtmlDocument" /> instances represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-387">指定したインスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-387">
              <see langword="true" /> if the specified instances are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="5dff8-388">この演算子を同等の方法は、します。 <xref:System.Windows.Forms.HtmlDocument.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5dff8-388">The equivalent method for this operator is <xref:System.Windows.Forms.HtmlDocument.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlDocument left, System.Windows.Forms.HtmlDocument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlDocument left, class System.Windows.Forms.HtmlDocument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.op_Inequality(System.Windows.Forms.HtmlDocument,System.Windows.Forms.HtmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlDocument, right As HtmlDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlDocument ^ left, System::Windows::Forms::HtmlDocument ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlDocument" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlDocument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="5dff8-389">比較する 1 番目のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-389">The first instance to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="5dff8-390">比較する 2 番目のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-390">The second instance to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-391">指定した <see cref="T:System.Windows.Forms.HtmlDocument" /> のインスタンスが同じ値を表していないかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-391">Returns a value that indicates whether the specified <see cref="T:System.Windows.Forms.HtmlDocument" /> instances do not represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-392">指定したインスタンスが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-392">
              <see langword="true" /> if the specified instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument OpenNew (bool replaceInHistory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlDocument OpenNew(bool replaceInHistory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.OpenNew(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (replaceInHistory As Boolean) As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlDocument ^ OpenNew(bool replaceInHistory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replaceInHistory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replaceInHistory">
          <span data-ttu-id="5dff8-393">新しいウィンドウの移動によって、DOM の移動履歴内の前の要素が置換されるかどうか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-393">Whether the new window's navigation should replace the previous element in the navigation history of the DOM.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-394">
            <see cref="M:System.Windows.Forms.HtmlDocument.Write(System.String)" /> メソッドと共に使用する新しい <see cref="T:System.Windows.Forms.HtmlDocument" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-394">Gets a new <see cref="T:System.Windows.Forms.HtmlDocument" /> to use with the <see cref="M:System.Windows.Forms.HtmlDocument.Write(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5dff8-395">書き込み用の新しいドキュメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-395">A new document for writing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-396"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> 変数など、任意の関連付けられた状態を含む、以前の読み込まれたドキュメントがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-396"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> will clear the previous loaded document, including any associated state, such as variables.</span></span> <span data-ttu-id="5dff8-397">ナビゲーション イベントは発生しません<xref:System.Windows.Forms.WebBrowser>が発生します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-397">It will not cause navigation events in <xref:System.Windows.Forms.WebBrowser> to be raised.</span></span>  
  
 <span data-ttu-id="5dff8-398"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> 常に現在のウィンドウで、新しいドキュメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-398"><xref:System.Windows.Forms.HtmlDocument.OpenNew%2A> always creates a new document in the current window.</span></span> <span data-ttu-id="5dff8-399">新しいウィンドウで、ドキュメントを開くには、使用、<xref:System.Windows.Forms.HtmlWindow.Open%2A>メソッドを<xref:System.Windows.Forms.HtmlWindow>クラスです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-399">To open a document in a new window, use the <xref:System.Windows.Forms.HtmlWindow.Open%2A> method on the <xref:System.Windows.Forms.HtmlWindow> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-400">次のコード例は、書き込みのため、DOM を準備し、使用して新しいドキュメントを書き込みます、<xref:System.Windows.Forms.HtmlDocument.Write%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-400">The following code example prepares the DOM for writing and writes a new document using the <xref:System.Windows.Forms.HtmlDocument.Write%2A> method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-401">現在のドキュメントでのテキストの方向を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-401">Gets or sets the direction of text in the current document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-402">テキストを右から左に描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-402">
              <see langword="true" /> if text renders from right to left; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-403"><xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> コード内、または html 形式で明示的に設定されている場合を除き、任意の値はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-403"><xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> will not have any value unless it has been set explicitly, either in code or in HTML.</span></span>  
  
 <span data-ttu-id="5dff8-404">異なり、 <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> 、Windows フォーム コントロールのプロパティ<xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A>マネージ HTML DOM には影響を与えませんラテン語テキストの方向。</span><span class="sxs-lookup"><span data-stu-id="5dff8-404">Unlike the <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> property on Windows Forms controls, <xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A> on the managed HTML DOM will not affect the direction of Latin text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Stop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Stop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlDocument.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Stop As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Stop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-405">別の Web ページへの移動が中断されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-405">Occurs when navigation to another Web page is halted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-406">プログラム コードを呼び出す場合、Web ページの読み込みは中断されます、<xref:System.Windows.Forms.WebBrowser.Stop%2A>のメソッド、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-406">The loading of a Web page will halt if program code calls the <xref:System.Windows.Forms.WebBrowser.Stop%2A> method of the <xref:System.Windows.Forms.WebBrowser> control.</span></span> <span data-ttu-id="5dff8-407">ネットワークの停止や正常に機能しない Web サイトによるナビゲーション エラーは発生しません<xref:System.Windows.Forms.HtmlDocument.Stop>を実行します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-407">Navigation failures caused by network outages or malfunctioning Web sites will not cause <xref:System.Windows.Forms.HtmlDocument.Stop> to occur.</span></span>  
  
 <span data-ttu-id="5dff8-408">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-408">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-409">次のコード例のステータス バーに、Windows フォーム アプリケーションをリセットするときに、`Stop`イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="5dff8-409">The following code example resets the status bar on a Windows Forms application when the `Stop` event has occurred.</span></span> <span data-ttu-id="5dff8-410">このコード例が必要です、<xref:System.Windows.Forms.StatusBar>という名前のコントロール`StatusBar1`アプリケーションでします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-410">The code example requires that you have a <xref:System.Windows.Forms.StatusBar> control named `StatusBar1` in your application.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-411">現在の HTML ドキュメント内の <c>&lt;TITLE&gt;</c> タグのテキスト値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-411">Gets or sets the text value of the <c>&lt;TITLE&gt;</c> tag in the current HTML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-412">現在のドキュメントのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-412">The title of the current document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-413">使用して、<xref:System.Windows.Forms.HtmlDocument.Title%2A>人間が判読できる名前を使用してドキュメントを識別するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-413">Use the <xref:System.Windows.Forms.HtmlDocument.Title%2A> property to identify the document by way of a human-readable name.</span></span>  
  
 <span data-ttu-id="5dff8-414">このプロパティに対する変更が反映されます、<xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A>のプロパティ、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-414">Changes to this property will also reflect in the <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> property of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-415">次のコード例では、リンクの場所と、ドキュメントのタイトルとしてこのリンク テキストとして、ドキュメントの URL を使用して現在のドキュメントへの HTML ハイパーリンクを作成します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-415">The following code example creates an HTML hyperlink to the current document using the URL of the document as the link's location and the title of the document as the link text.</span></span> <span data-ttu-id="5dff8-416">このコード例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-416">The code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#14)]
 [!code-vb[System.Windows.Forms.HtmlDocument#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.Windows.Forms.WebBrowser" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-417">このドキュメントの場所を記述する URL を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-417">Gets the URL describing the location of this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-418">このドキュメントの URL を表す <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-418">A <see cref="T:System.Uri" /> representing this document's URL.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-419">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-419">This property is read-only.</span></span> <span data-ttu-id="5dff8-420">新しいドキュメントに移動するには、使用、<xref:System.Windows.Forms.WebBrowser.Url%2A>プロパティを<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5dff8-420">To navigate to a new document, use the <xref:System.Windows.Forms.WebBrowser.Url%2A> property on the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-421">ユーザーが既にアクセスした HTML ページへのリンクの色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-421">Gets or sets the Color of links to HTML pages that the user has already visited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-422">アクセスしたリンクの色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-422">The color of visited links.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-423">`Color`に入力、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]をサポートしている、`Alpha`値が、HTML DOM はありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-423">The `Color` type in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] supports an `Alpha` value, but the HTML DOM does not.</span></span> <span data-ttu-id="5dff8-424">したがって、`Alpha`はこのプロパティに割り当てられている場合に効果がありません。</span><span class="sxs-lookup"><span data-stu-id="5dff8-424">Therefore, `Alpha` will have no effect when assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.BackColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.ForeColor" />
        <altmember cref="P:System.Windows.Forms.HtmlDocument.LinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Window" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlDocument.Window" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Window As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Window { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5dff8-425">このドキュメントに関連付けられている <see cref="T:System.Windows.Forms.HtmlWindow" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-425">Gets the <see cref="T:System.Windows.Forms.HtmlWindow" /> associated with this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5dff8-426">このドキュメントのウィンドウ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-426">The window for this document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-427">すべての HTML ドキュメント ウィンドウをドキュメントの画面のサイズを操作し、新しいウィンドウを開くために使用するし、その他の重要なオブジェクトへのアクセスと呼ばれる HTML DOM オブジェクトをなどがある、<xref:System.Windows.Forms.HtmlHistory>です。</span><span class="sxs-lookup"><span data-stu-id="5dff8-427">All HTML documents have an HTML DOM object called a window, which can be used to manipulate the screen size of the document and open new windows, as well as access other important objects, such as an <xref:System.Windows.Forms.HtmlHistory>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlDocument.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="5dff8-428">ドキュメントに書き込まれる HTML テキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-428">The HTML text to write into the document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5dff8-429">新しい HTML ページを出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5dff8-429">Writes a new HTML page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5dff8-430">すべての呼び出しを<xref:System.Windows.Forms.HtmlDocument.Write%2A>への呼び出しによって先行されなければなりません<xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>、現在のドキュメントおよびすべての変数をクリアします。</span><span class="sxs-lookup"><span data-stu-id="5dff8-430">All calls to <xref:System.Windows.Forms.HtmlDocument.Write%2A> should be preceded by a call to <xref:System.Windows.Forms.HtmlDocument.OpenNew%2A>, which will clear the current document and all of its variables.</span></span> <span data-ttu-id="5dff8-431">呼び出す<xref:System.Windows.Forms.HtmlDocument.Write%2A>代わりに、新しい HTML ドキュメントを作成します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-431">Your calls to <xref:System.Windows.Forms.HtmlDocument.Write%2A> will create a new HTML document in its place.</span></span> <span data-ttu-id="5dff8-432">ドキュメントの特定の部分だけを変更するには、適切な取得<xref:System.Windows.Forms.HtmlElement>設定とその<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5dff8-432">To change only a specific portion of the document, obtain the appropriate <xref:System.Windows.Forms.HtmlElement> and set its <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.</span></span>  
  
 <span data-ttu-id="5dff8-433">全体有効な HTML ドキュメントを使用して、記述することをお勧め、<xref:System.Windows.Forms.HtmlDocument.Write%2A>メソッドを含む`HTML`と`BODY`タグ。</span><span class="sxs-lookup"><span data-stu-id="5dff8-433">It is recommended that you write an entire valid HTML document using the <xref:System.Windows.Forms.HtmlDocument.Write%2A> method, including `HTML` and `BODY` tags.</span></span> <span data-ttu-id="5dff8-434">ただし、HTML 要素だけを記述する場合ドキュメント オブジェクト モデル (DOM) はこれらの要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="5dff8-434">However, if you write just HTML elements, the Document Object Model (DOM) will supply these elements for you.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5dff8-435">次のコード例は、新しい開きます<xref:System.Windows.Forms.HtmlDocument>新しい HTML ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5dff8-435">The following code example opens a new <xref:System.Windows.Forms.HtmlDocument> and writes in a new HTML file.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlDocument#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.OpenNew(System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>