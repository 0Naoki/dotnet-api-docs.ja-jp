<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextBoxBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56002af143f80f4fe4f8ba0d9d9a16115c4a0f305.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6002af143f80f4fe4f8ba0d9d9a16115c4a0f305</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.TextBoxBase">
          <source>Implements the basic functionality required by text controls.</source>
          <target state="translated">テキスト コントロールに必要な基本機能を実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>This class implements the core features of text manipulation controls, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>.</source>
          <target state="translated">このクラスなど、中核となるテキスト操作、コントロールの機能の実装<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>These include text selection, <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept> functionality, multiline text control support, and many events.</source>
          <target state="translated">テキスト選択範囲が含まれます<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>機能、複数行テキスト コントロールのサポート、および多数のイベントです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行を作成するためのクラスを派生<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>垂直スクロール バーを持つコントロール。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">またこの例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>You do not typically inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</source>
          <target state="translated">通常から継承していない<ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>To create your own text control class, inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>.</source>
          <target state="translated">継承するクラスを作成する独自のテキスト コントロール、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph>または<ph id="ph2">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</source>
          <target state="translated">タブ オーダーに従って次のコントロールにフォーカスを移動させる代わりに、コントロールにタブ文字を入力させる複数行テキスト ボックス コントロールで Tab キーを押すかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if users can enter tabs in a multiline text box using the TAB key; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if pressing the TAB key moves the focus.</source>
          <target state="translated">Tab キーを使用して複数行テキスト ボックスにタブを入力できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。Tab キーを押すとフォーカスが移動する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property must also be <ph id="ph2">`true`</ph> to get a TAB character in the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティがある必要がありますも<ph id="ph2">`true`</ph>をコントロールにタブ文字を取得します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the user must press CTRL+TAB to move the focus to the next control in the tab order.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>ユーザーがタブ オーダーの次のコントロールにフォーカスを移動するには、CTRL + TAB を押す必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行を作成するためのクラスを派生<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>垂直スクロール バーを持つコントロール。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">またこの例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>The text to append to the current contents of the text box.</source>
          <target state="translated">テキスト ボックスの現在の内容に追加するテキスト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>Appends text to the current text of a text box.</source>
          <target state="translated">テキスト ボックスの現在のテキストにテキストを追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドをテキスト文字列を連結する連結演算子 (+) を使用する代わりに、コントロール内の既存のテキストを追加するを使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> property to copy text from one <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to another.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph>プロパティを 1 つからテキストをコピー<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>別にします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>This example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls named, <ph id="ph2">`textBox1`</ph> and <ph id="ph3">`textBox2`</ph>, have been added to a form and that <ph id="ph4">`textBox1`</ph> has text assigned to its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">この例には、その 2 つが必要があります<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>と<ph id="ph3">`textBox2`</ph>、フォームに追加されて<ph id="ph4">`textBox1`</ph>に割り当てられているテキストが含まれて、<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</source>
          <target state="translated">コントロールに割り当てられているフォントが変更されると、コントロールの高さが自動的に調整されるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the height of the control automatically adjusts when the font is changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォントが変更されると、コントロールの高さが自動的に調整される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property to <ph id="ph2">`true`</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> changes, the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> expands or contracts the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> to accommodate the larger or smaller text.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>の<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、ときに、 <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> 、変更、<ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>拡大または縮小、<ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>大きくまたは小さくテキストに合わせてです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>の<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>は変わりません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>If you want to change the size of the control as the user enters text, you can use a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and use its <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.ContentsResized&gt;</ph> event to change its size.</source>
          <target state="translated">テキストを入力すると、コントロールのサイズを変更する場合は、使用、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>制御および使用してその<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.ContentsResized&gt;</ph>サイズを変更するイベントです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</source>
          <target state="translated">この例では、フォームに 2 つのテキスト ボックス、2 つのボタンがあるし、各ボタンのクリックしてイベントを前提としています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property by setting it to <ph id="ph2">`true`</ph> for one text box and <ph id="ph3">`false`</ph> for the other.</source>
          <target state="translated">例を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph>プロパティを設定することによって<ph id="ph2">`true`</ph>の 1 つのテキスト ボックスと<ph id="ph3">`false`</ph>他のです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</source>
          <target state="translated">1 つのボタンをクリックすると、テキスト ボックスで塗りつぶされて、小規模なテキストより大きなテキストを含むテキスト ボックスに入力、他のボタンをクリックするとします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The text box that has <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> set to <ph id="ph2">`true`</ph> expands in height to accommodate the larger text.</source>
          <target state="translated">テキスト ボックス<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph>'éý'<ph id="ph2">`true`</ph>高さより大きなテキストに合わせて拡張します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The width does not change.</source>
          <target state="translated">幅は変更されません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>Gets or sets the background color of the control.</source>
          <target state="translated">コントロールの背景色を取得または設定します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background of the control.</source>
          <target state="translated">コントロールの背景色を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property to change the background color of the text control to blend into the color scheme of your forms.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph>テキスト コントロールをフォームの画面の配色に blend の背景色を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>To change the color of the text within the control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property.</source>
          <target state="translated">コントロール内のテキストの色を変更するには、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</source>
          <target state="translated">設定するときに、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph>テキスト コントロールのプロパティが選択した色がでないが表示されなくなったコントロールのテキストを確認してください。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> properties are both set to <ph id="ph3">`Color.Black`</ph>, the text within your textbox control will not be visible.</source>
          <target state="translated">たとえば場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph>プロパティに設定されて<ph id="ph3">`Color.Black`</ph>、textbox コントロール内のテキストは表示されません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>This property might be over ridden if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">このプロパティもある場合は無効になります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>に設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>The background image for the object.</source>
          <target state="translated">オブジェクトの背景イメージ。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /&gt;</ph> プロパティの値が変更された場合に発生します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /&gt;</ph> プロパティの値が変更された場合に発生します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>Gets or sets the border type of the text box control.</source>
          <target state="translated">テキスト ボックス コントロールの境界線の種類を取得または設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> that represents the border type of the text box control.</source>
          <target state="translated">テキスト コントロールの境界線の種類を表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="Fixed3D" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="Fixed3D" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> property to create borderless and flat style controls, in addition to the default three-dimensional control.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph>プロパティを既定の 3 次元コントロールだけでなく、ふちなしとフラット スタイルのコントロールを作成します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>, does not support the <ph id="ph2">`BorderStyle.FixedSingle`</ph> style.</source>
          <target state="translated">派生クラスでは、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>はサポートしていません、<ph id="ph2">`BorderStyle.FixedSingle`</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>This style will cause the <ph id="ph1">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph> to use the <ph id="ph2">`BorderStyle.Fixed3D`</ph> style instead.</source>
          <target state="translated">このスタイル、<ph id="ph1">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph>を使用する、<ph id="ph2">`BorderStyle.Fixed3D`</ph>代わりにスタイルを設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、1 つの境界線と 20 ポイント Arial を使用してテキストを適切に表示されるテキスト ボックスを作成するためのクラスを派生します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property to determine the appropriate height of the control after the font and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> have been assigned to the control.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph>高さを決定する、適切なコントロールのフォントの後にプロパティと<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph>コントロールに割り当てられています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>A value that is not within the range of valid values for the enumeration was assigned to the property.</source>
          <target state="translated">列挙体の有効値の範囲内にない値が、プロパティに代入されました。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> プロパティをアクティブな値に設定して、IME サポートを有効にできるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph> or if this <ph id="ph4">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> class is set to use a password mask character; otherwise, <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> プロパティが <ph id="ph1">&lt;see langword="false" /&gt;</ph> に設定されているか、この <ph id="ph4">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> クラスがパスワード マスク文字を使用するように設定されている場合は <ph id="ph3">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>Gets a value indicating whether the user can undo the previous operation in a text box control.</source>
          <target state="translated">テキスト ボックス コントロールでユーザーが直前の操作を元に戻すことができるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can undo the previous operation performed in a text box control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">テキスト ボックス コントロールで直前に実行された操作を元に戻すことができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>If this method returns <ph id="ph1">`true`</ph>, you can call the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method to undo the last operation in a text box.</source>
          <target state="translated">このメソッドが戻る場合<ph id="ph1">`true`</ph>、呼び出すことができます、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph>テキスト ボックスの最後の操作を元に戻す方法です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>You can use this method in the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or in code that manages the state of buttons on a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> to enable or disable the ability to undo the previous operation in a text box control.</source>
          <target state="translated">このメソッドを使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>のイベント、 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>、またはボタンの状態を管理するコードで、<ph id="ph3">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>を有効にするにまたはテキスト ボックス コントロールで前の操作を元に戻すことを無効にします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>Clears all text from the text box control.</source>
          <target state="translated">テキスト ボックス コントロールからすべてのテキストを削除します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>You can use this method to clear the contents of the control instead of assigning the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property an empty string.</source>
          <target state="translated">このメソッドを割り当てる代わりに、コントロールの内容を消去を使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティ、空の文字列。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラスにイベント ハンドラーを作成、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The code within the event handler restricts data to numbers.</source>
          <target state="translated">イベント ハンドラー内のコードは、数値データを制限します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>After text has been entered in the control, the code determines if the text entered is a number.</source>
          <target state="translated">コントロールでテキストを入力すると、コードは、入力したテキストが数値を判断します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>If the text is not a number, the code clears the text from the control and a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> is displayed to alert the user that only numbers are accepted.</source>
          <target state="translated">コードがコントロールからテキストをクリア テキストが数値ではない場合、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>に数字のみを受け入れることをユーザーにアラートを表示します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The example requires that a <ph id="ph1">`Boolean`</ph> variable named <ph id="ph2">`flag`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called <ph id="ph4">`textBox1`</ph> are defined outside of this method.</source>
          <target state="translated">例では、する必要があります、<ph id="ph1">`Boolean`</ph>という名前の変数<ph id="ph2">`flag`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>と呼ばれるコントロール<ph id="ph4">`textBox1`</ph>このメソッドの外部で定義されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>This example demonstrates how to use a flag variable to avoid a cascading event in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event.</source>
          <target state="translated">この例は、変数を使用して、フラグでイベントの連鎖を回避する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>Clears information about the most recent operation from the undo buffer of the text box.</source>
          <target state="translated">テキスト ボックスのアンドゥ バッファーから直前に実行された操作に関する情報を削除します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>You can use this method to prevent an undo operation from repeating, based on the state of your application.</source>
          <target state="translated">このメソッドは、アプリケーションの状態に基づいてを繰り返しから元に戻す操作を防ぐために使用できます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>Occurs when the text box is clicked.</source>
          <target state="translated">テキスト ボックスがクリックされたときに発生します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event.</source>
          <target state="translated">次のコード例は、処理する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called TextBox1.</source>
          <target state="translated">例を実行するを含むフォームで、次のコードを貼り付けます、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> TextBox1 と呼ばれるコントロール。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>This example requires that the event-handling method has been associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event.</source>
          <target state="translated">この例では、イベント処理メソッドに関連付けられている必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>Copies the current selection in the text box to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">テキスト ボックスの現在の選択項目を<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>にコピーします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>You can use this method, instead of using the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and place it in the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">代わりに、このメソッドを使用できる、 <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 、テキスト ボックスにテキストをコピーし、それを配置する、クラス、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">コントロールのハンドルを作成します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>for operating with unmanaged code.</source>
          <target state="translated">アンマネージ コードを操作します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>Moves the current selection in the text box to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">テキスト ボックスの現在の選択項目を<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>に移動します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>This method will only cut text from the text box if text is selected in the control.</source>
          <target state="translated">コントロールでテキストが選択されている場合は、このメソッドは、テキスト ボックスからのみテキストを切り取ります。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>You can use this method, instead of using the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and move it to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">代わりに、このメソッドを使用できる、 <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> 、テキスト ボックスにテキストをコピーしに移動する、クラス、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>Gets or sets the default cursor for the control.</source>
          <target state="translated">コントロールの既定のカーソルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the current default cursor.</source>
          <target state="translated">現在の既定のカーソルを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.</source>
          <target state="translated">オーバーライド<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A&gt;</ph>コントロールの既定のカーソルを構成します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</source>
          <target state="translated">これは、コントロールのコンス トラクターでカーソルを設定するよりも効率的でありでは特定のカーソル関連のデザイナー機能の自動サポート。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">コントロールの既定のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">コントロールの既定の <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.DeselectAll">
          <source>Specifies that the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /&gt;</ph> property is zero so that no characters are selected in the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /&gt;</ph> プロパティの値を 0 にするよう指定して、コントロール内で文字が選択されないようにします。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</source>
          <target state="translated">コントロールを表示する前に、コントロールの描画をバッファー内で実行するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to implement double buffering on the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールのダブル バッファリングを実装する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>Gets or sets the foreground color of the control.</source>
          <target state="translated">コントロールの前景色を取得または設定します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the control's foreground color.</source>
          <target state="translated">コントロールの前景色を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property to change the color of the text within the control to match the text of other controls on your form.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph>フォーム上の他のコントロールのテキストに合わせて、コントロール内のテキストの色を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>You can also use this property to highlight a specific text box that contains an invalid value.</source>
          <target state="translated">このプロパティは、強調表示を無効な値を含む特定のテキスト ボックスにも使用できます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>To change the background color of the control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property.</source>
          <target state="translated">コントロールの背景色を変更するには、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</source>
          <target state="translated">設定するときに、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph>テキスト コントロールのプロパティが選択した色がでないが表示されなくなったコントロールのテキストを確認してください。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> properties are both set to <ph id="ph3">`Color.Black`</ph>, the text within your textbox control will not be visible.</source>
          <target state="translated">たとえば場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph>プロパティに設定されて<ph id="ph3">`Color.Black`</ph>、textbox コントロール内のテキストは表示されません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>This property might be over ridden if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">このプロパティもある場合は無効になります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>に設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>The location from which to seek the nearest character.</source>
          <target state="translated">一番近くにある文字をシークする位置。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>Retrieves the character that is closest to the specified location within the control.</source>
          <target state="translated">コントロール内の指定した位置の一番近くにある文字を取得します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>The character at the specified location.</source>
          <target state="translated">指定した位置にある文字。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>If the location specified in the <ph id="ph1">`pt`</ph> parameter is outside the client area of the control, the first character of the string closest to the point specified in <ph id="ph2">`pt`</ph> is returned.</source>
          <target state="translated">場所が指定されている場合、<ph id="ph1">`pt`</ph>パラメーターが文字列で指定した位置に最も近いの最初の文字、コントロールのクライアント領域外<ph id="ph2">`pt`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>You can use this method to determine which characters are located near a specific point within the control.</source>
          <target state="translated">このメソッドを使用すると、コントロール内の特定の時点の近くにあるどの文字を決定します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>You can then use this value to perform operations on the text at that location.</source>
          <target state="translated">この値は、その場所にあるテキストに対して操作を実行し、使用できます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>If the specified location in the <ph id="ph1">`pt`</ph> parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in <ph id="ph2">`pt`</ph> is returned.</source>
          <target state="translated">場合内の指定の場所、<ph id="ph1">`pt`</ph>で指定した位置に最も近い文字列の最後の文字、コントロールのクライアント領域の右側にあるパラメーターがある<ph id="ph2">`pt`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The location to search.</source>
          <target state="translated">検索する位置。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>Retrieves the index of the character nearest to the specified location.</source>
          <target state="translated">指定位置に最も近い文字のインデックスを取得します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The zero-based character index at the specified location.</source>
          <target state="translated">指定した位置の 0 から始まる文字インデックス。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>This method returns the character index that is closest to the position specified in the <ph id="ph1">`pt`</ph> parameter.</source>
          <target state="translated">このメソッドで指定された位置に最も近い文字のインデックスを返します、<ph id="ph1">`pt`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The character index is a zero-based index of text in the control, including spaces.</source>
          <target state="translated">文字インデックスは、スペースを含む、コントロール内のテキストの 0 から始まるインデックスです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</source>
          <target state="translated">このメソッドを使用すると、場所、テキストで、ユーザーが、このメソッドに、マウス座標を渡すことによって、マウスを決定します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</source>
          <target state="translated">ユーザーがコントロールのテキスト内の単語にマウス ポインターを置いたときにタスクを実行する場合に役立ちます。 これができます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</source>
          <target state="translated">か、指定した場所は、コントロールのクライアントの四角形内にありませんは、コントロール内の最後の文字を超える、戻り値は、最後の文字のインデックス。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The line for which to get the index of its first character.</source>
          <target state="translated">最初の文字のインデックスを取得する行。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>Retrieves the index of the first character of a given line.</source>
          <target state="translated">指定された行の先頭文字のインデックスを取得します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The zero-based index of the first character in the specified line.</source>
          <target state="translated">指定された行内の最初の文字に対応する、0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>Line numbering in the text box starts at zero.</source>
          <target state="translated">行番号は、テキスト ボックスには、0 から始まります。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>If the <ph id="ph1">`lineNumber`</ph> parameter is greater than the last line in the text box, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns -1.</source>
          <target state="translated">場合、<ph id="ph1">`lineNumber`</ph>パラメーターが、テキスト ボックスの最後の行より大きい<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph>-1 を返します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns the first character index of a physical line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> 物理行の最初の文字インデックスを返します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The physical line is the displayed line, not the assigned line.</source>
          <target state="translated">物理行は、行に表示される、割り当てられている行ではありません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The number of displayed lines can be greater than the number of assigned lines due to word wrap.</source>
          <target state="translated">表示されている行の数は、右端で折り返すにより割り当てられた行の数より大きくできます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>For example, if you assign two long lines to a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and set <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the two long assigned lines result in four physical (or displayed lines).</source>
          <target state="translated">2 つの長い行を割り当てる場合など、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>を制御し、設定<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>に<ph id="ph4">`true`</ph>、2 つの長時間割り当てられている行と、次の 4 つの物理 (または行が表示されます)。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="lineNumber" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lineNumber" /&gt;</ph> パラメーターの値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine">
          <source>Retrieves the index of the first character of the current line.</source>
          <target state="translated">現在の行の先頭文字のインデックスを取得します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine">
          <source>The zero-based character index in the current line.</source>
          <target state="translated">現在の行における 0 から始まる文字インデックス。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The character index position to search.</source>
          <target state="translated">検索する文字インデックスの位置。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>Retrieves the line number from the specified character position within the text of the control.</source>
          <target state="translated">コントロールのテキスト内で、指定の文字位置からの行数を取得します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The zero-based line number in which the character index is located.</source>
          <target state="translated">文字インデックスを含む行の 0 から始まる行番号。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>This method enables you to determine the line number based on the character index specified in the <ph id="ph1">`index`</ph> parameter of the method.</source>
          <target state="translated">このメソッドで指定された文字のインデックスに基づいて行の数を決定することができます、<ph id="ph1">`index`</ph>メソッドのパラメーターです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The first line of text in the control returns the value zero.</source>
          <target state="translated">コントロール内のテキストの最初の行では、値 0 を返します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns the physical line number where the indexed character is located within the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph>メソッドは、インデックス付きの文字がコントロール内にある物理的な行番号を返します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>For example, if a portion of the first logical line of text in the control wraps to the next line, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns 1 if the character at the specified character index has wrapped to the second physical line.</source>
          <target state="translated">たとえば場合内のテキストの最初の論理行の一部、コントロールが次の行に折り返される、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph>メソッドは、指定された文字のインデックス位置にある文字が 2 番目の物理的な行に折り返されます場合、1 を返します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>行の一部を次に折り返されるなしと指定の文字インデックスの場合は 0 を返します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>You can use this method to determine which line a specific character index is located within.</source>
          <target state="translated">このメソッドを使用するにはのどの行で、特定の文字のインデックスが内にあるかを判断します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>For example, after calling the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to search for text, you can obtain the character index to where the search results are found.</source>
          <target state="translated">呼び出しの後など、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph>テキストを検索する方法、検索結果がある文字のインデックスを取得することができます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>You can call this method with the character index returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to determine which line the word was found.</source>
          <target state="translated">によって返される文字のインデックスを持つこのメソッドを呼び出すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph>という単語が行を決定するメソッドが見つかりました。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>If the character index specified in the <ph id="ph1">`index`</ph> parameter is beyond the available number of lines contained within the control, the last line number is returned.</source>
          <target state="translated">内の文字のインデックスが指定されている場合、<ph id="ph1">`index`</ph>パラメーターは、コントロール内に含まれる使用可能な行数外ですが、最後の行番号が返されます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>The index of the character for which to retrieve the location.</source>
          <target state="translated">位置の取得対象とする文字のインデックス。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>Retrieves the location within the control at the specified character index.</source>
          <target state="translated">指定の文字インデックスにおけるコントロール内の位置を取得します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>The location of the specified character within the client rectangle of the control.</source>
          <target state="translated">コントロールのクライアントの四角形領域内における、指定した文字の位置。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>This method enables you to determine where in the control a specific character index is located.</source>
          <target state="translated">このメソッドでは、コントロールの特定の文字のインデックスが存在を確認することができます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</source>
          <target state="translated">このメソッドは、コントロール内の単語のショートカット メニュー項目またはヘルプ情報を表示するなどのタスクを使用できます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control.</source>
          <target state="translated">たとえば、ユーザーがコントロールに含まれる単語を右クリックしたときに、ユーザーにオプションのメニューを表示する場合は、行うこともできますこのメソッドを正しく表示する単語の位置を決定する、<ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</source>
          <target state="translated">テキスト ボックス コントロールがフォーカスを失ったときに、そのコントロールで選択されているテキストが強調表示されたままかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the selected text does not appear highlighted when the text box control loses focus; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if the selected text remains highlighted when the text box control loses focus.</source>
          <target state="translated">テキスト ボックス コントロールがフォーカスを失ったときに、選択されているテキストが強調表示されない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。テキスト ボックス コントロールがフォーカスを失っても、選択されているテキストが強調表示されたままである場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</source>
          <target state="translated">このプロパティを使用して、別のフォームまたはダイアログ ボックスにフォーカスが、スペル チェック ダイアログ ボックスなどのテキスト ボックス コントロールで強調表示されているテキストを保持することができます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelection%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelection%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>To run the example, paste the following code in a form.</source>
          <target state="translated">例を実行するには、フォームで、次のコードを貼り付けます。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>Call the <ph id="ph1">`InitializeTextBox`</ph> method in the form's constructor or <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">呼び出す、<ph id="ph1">`InitializeTextBox`</ph>フォームのコンス トラクターのメソッドまたは<ph id="ph2">`Load`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ImeModeBase">
          <source>Gets or sets the Input Method Editor (IME) mode of a control.</source>
          <target state="translated">コントロールの IME (Input Method Editor) モードを取得または設定します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ImeModeBase">
          <source>The IME mode of the control.</source>
          <target state="translated">コントロールの IME モード。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the Keys value.</source>
          <target state="translated">キーの値の 1 つ。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is an input key or a special key that requires preprocessing.</source>
          <target state="translated">指定されているキーが、入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is an input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定されているキーが入力キーである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> when the <ph id="ph3">`keyData`</ph> parameter includes the <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> value and the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is <ph id="ph6">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph>メソッドを返します。<ph id="ph2">`true`</ph>ときに、<ph id="ph3">`keyData`</ph>パラメーターが含まれています、<ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph>値、および<ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>プロパティは<ph id="ph6">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if <ph id="ph3">`keyData`</ph> contains both <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Keys.Control&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> 返します<ph id="ph2">`false`</ph>場合<ph id="ph3">`keyData`</ph>両方を含む<ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph>と<ph id="ph5">&lt;xref:System.Windows.Forms.Keys.Control&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>Gets or sets the lines of text in a text box control.</source>
          <target state="translated">テキスト ボックス コントロールのテキスト行を取得または設定します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>An array of strings that contains the text in a text box control.</source>
          <target state="translated">テキスト ボックス コントロールのテキストを格納する文字列の配列。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>Each element in the array becomes a line of text in the text box control.</source>
          <target state="translated">配列内の各要素では、テキスト ボックス コントロール内のテキストの行になります。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property of the text box control is set to <ph id="ph2">`true`</ph> and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> 、テキスト ボックス コントロールのプロパティに設定されて<ph id="ph2">`true`</ph>テキストに改行文字が表示されると、改行文字の後のテキストが、配列内の新しい要素に追加され、別々 の行に表示されます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>By default, the collection of lines is a read-only copy of the lines in the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">既定では、内の行の読み取り専用コピーである行のコレクション、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>To get a writable collection of lines, use code similar to the following: <ph id="ph1">`textBox1.Lines = new string[] { "abcd" };`</ph></source>
          <target state="translated">行の書き込み可能なコレクションを取得するには、次のようなコードを使用します。 <ph id="ph1">`textBox1.Lines = new string[] { "abcd" };`</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行テキスト ボックス コントロールからテキストのすべての文字列を抽出するためのクラスを派生し、それらを表示を使用して、<ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control has been created, named <ph id="ph2">`textBox1`</ph>, and that it has been filled with lines of text.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>コントロールが作成されている、という名前<ph id="ph2">`textBox1`</ph>行のテキストの入力されたとします。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>Gets or sets the maximum number of characters the user can type or paste into the text box control.</source>
          <target state="translated">ユーザーがテキスト ボックス コントロールに入力または貼り付けできる最大文字数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The number of characters that can be entered into the control.</source>
          <target state="translated">コントロールに入力できる文字数。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The default is 32767.</source>
          <target state="translated">既定値は 32767 です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</source>
          <target state="translated">郵便番号や電話番号などの値をコントロールに入力したテキストの長さが制限またはデータがデータベースに入力するときに入力したテキストの長さを制限するには、このプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>You can limit the text entered into the control to the maximum length of the corresponding field in the database.</source>
          <target state="translated">データベース内の対応するフィールドの最大長をコントロールに入力したテキストを制限することができます。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>In code, you can set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property to a value that has a length greater than the value specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property.</source>
          <target state="translated">コードでは、値を設定することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティを持つ、長さで指定された値を超える値を<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This property only affects text entered into the control at run time.</source>
          <target state="translated">このプロパティは、実行時に、コントロールに入力したテキストにのみ影響します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, to create a text box that is used to accept a password.</source>
          <target state="translated">次のコード例は、派生クラスを使用して<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>パスワードを受け入れるように使用されるテキスト ボックスを作成します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph> property to change all characters typed to uppercase and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property to restrict the password length to eight characters.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph>を大文字に型指定されたすべての文字を変更するプロパティと<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph>8 文字に、パスワードの長さを制限するプロパティです。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> property to center the password in the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">またこの例では、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph>中央にパスワードのプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The value assigned to the property is less than 0.</source>
          <target state="translated">プロパティに代入された値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</source>
          <target state="translated">コントロールが作成されてから、またはコントロールが最後に設定されてから、ユーザーがテキスト ボックス コントロールを変更したかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control's contents have been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールの内容が変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>You can use this property to determine if the user has modified the contents of the text box control.</source>
          <target state="translated">このプロパティを使用すると、ユーザーがテキスト ボックス コントロールの内容を変更したかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>You can also set this property in code to indicate that changes were made to the text box control by the application.</source>
          <target state="translated">アプリケーションで、テキスト ボックス コントロールに変更が加えられたかを示すコードでこのプロパティを設定することもできます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</source>
          <target state="translated">このプロパティは、変更された場合、テキスト ボックス コントロールで変更された内容を検証または保存できるように決定する検証とデータ保存メソッドによって使用できます。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>If you change the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">変更する場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティ、プログラムによって、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph>にプロパティを元に戻します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This does not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">これは発生しません、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to determine if the contents of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control have changed since the control was filled with data.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph>イベントを<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、かどうかをクラスを派生の内容、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>コントロールされてから変更されたコントロールがデータを格納します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The example uses a string to store the original contents of the control and compares it against the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to determine if the contents have changed.</source>
          <target state="translated">例では、コントロールの元の内容を格納する文字列を使用して、比較の内容、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>内容が変更されたかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>If the contents have changed, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">内容が変更された場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>Otherwise, it is reset to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">それ以外の場合はリセット<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created and that a <ph id="ph3">`String`</ph> variable named <ph id="ph4">`originalText`</ph> has been created to store the original text for the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されたことと、<ph id="ph3">`String`</ph>という名前の変数<ph id="ph4">`originalText`</ph>の元の文字列の格納用に作成した、<ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Modified" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Modified" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>If you change the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">変更する場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティ、プログラムによって、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph>にプロパティを元に戻します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>This does not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">これは発生しません、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>Occurs when the control is clicked by the mouse.</source>
          <target state="translated">マウスでコントロールをクリックしたときに発生します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control does not raise a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event for right clicks.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>コントロールは発生しません、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph>イベントを右クリックします。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event provides the functional equivalent.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph>イベントは、相当する機能を提供します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Gets or sets a value indicating whether this is a multiline text box control.</source>
          <target state="translated">このコントロールが複数行テキスト ボックス コントロールかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is a multiline text box control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールが複数行テキスト ボックス コントロールである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>A multiline text box allows you to display more than one line of text in the control.</source>
          <target state="translated">複数行テキスト ボックスでは、コントロールに 1 つ以上の行のテキストを表示することができます。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, text entered into the multiline text box is wrapped to the next line in the control.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、複数行テキスト ボックスに入力したテキストがコントロールでは、次の行にラップされます。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`false`</ph>、改行文字を入力するまでにその複数行テキスト ボックス コントロールに入力したテキストが同じ行に表示されます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The following can be used as newline characters:</source>
          <target state="translated">次は改行文字として使用できます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>ControlChars.CrLf</source>
          <target state="translated">ControlChars.CrLf</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>vbCrLf (Visual Basic only)</source>
          <target state="translated">vbCrLf (Visual Basic のみ)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>You can add scroll bars to a text box using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property to display horizontal and/or vertical scroll bars.</source>
          <target state="translated">テキスト ボックスを使用して、スクロール バーを追加することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph>水平/垂直方向のスクロール バーを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This allows the user to scroll through the text that extends beyond the dimensions of the control.</source>
          <target state="translated">これにより、ユーザーがコントロールのサイズを越えるテキストをスクロールできます。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Because the default value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the default size of a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> will be in accordance with the font size even if you resize the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">の既定値、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>の既定のサイズ、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>サイズを変更する場合でも、フォント サイズに従いなります、<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>To get a consistent size for your <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, set its <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">一貫性のあるサイズを取得する、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>設定、その<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph>プロパティを<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>On Japanese operating systems, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, setting the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property will display the text of the password, thus compromising system security.</source>
          <target state="translated">日本語のオペレーティング システムで、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、設定、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph>プロパティは、パスワードのテキストが表示されます。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Therefore, on Japanese operating systems, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id="ph2">`false`</ph> if you set the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property.</source>
          <target state="translated">このため、日本語のオペレーティング システムで次のように設定します。、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>設定した場合、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This property is set to <ph id="ph1">`false`</ph> by default for all derived classes, with the exception of the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
          <target state="translated">このプロパティに設定<ph id="ph1">`false`</ph>既定ではすべての派生クラスの例外を除いて、<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>For a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> property affects whether or not the control will automatically resize, as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph>プロパティは、コントロールが自動的にサイズ変更、次のように動作しているかどうかに影響します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will not automatically resize.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph2">`true`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph4">`true`</ph>、<ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>サイズは自動的に変更されません。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will automatically resize.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph2">`true`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph4">`false`</ph>、<ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>は自動的に変更します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行を作成するためのクラスを派生<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>垂直スクロール バーを持つコントロール。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">またこの例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>Raise the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /&gt;</ph> イベントを発生します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">このクラスでは、このメソッドは無効です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">このクラスでは、このメソッドは無効です。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>This property is not relevant for this class.</source>
          <target state="translated">このクラスでは、このプロパティは使用されません。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.PaddingChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.PaddingChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>Occurs when the control is redrawn.</source>
          <target state="translated">コントロールが再描画されると発生します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>This event is not relevant for this class.</source>
          <target state="translated">このクラスでは、このイベントは使用されません。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>Replaces the current selection in the text box with the contents of the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">テキスト ボックスの現在の選択項目を<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>の内容と置き換えます。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Paste%2A&gt;</ph> method will only paste text into the control if text is currently stored in the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Paste%2A&gt;</ph>方法はのみにコピーするテキスト コントロールにテキストが格納されている場合、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>for reading from the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">読み取るのために、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>Associated enumeration: the <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph>.</source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph>値<ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>Gets the preferred height for a text box.</source>
          <target state="translated">テキスト ボックスの推奨される高さを取得します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The preferred height of a text box.</source>
          <target state="translated">テキスト ボックスの推奨される高さ。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The size returned by this property is based on the font height and border style of the text box.</source>
          <target state="translated">このプロパティによって返されるサイズは、テキスト ボックスのフォントの高さと境界線のスタイルに基づきます。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</source>
          <target state="translated">コントロールにテキストが正しく表示されていることを確認するのにテキスト ボックスの適切なサイズを調べるには、このプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The value returned by this property is in pixels.</source>
          <target state="translated">このプロパティによって返される値は、(ピクセル単位) です。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph>上部または下部のテキストをクリッピングせずに 1 行のテキストを表示するために、テキスト ボックスがあります。 最小の高さを表します。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>This value is the same whether the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>.</source>
          <target state="translated">この値は、同じかどうか、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>または<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference that represents the window message to process.</source>
          <target state="translated">処理するウィンドウ メッセージを表す、参照渡しされた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the shortcut key to process.</source>
          <target state="translated">処理するショートカット キーを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">コマンド キーを処理します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the command key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コマンド キーがコントロールによって処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">アンマネージ コードを操作します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">処理するキーを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">ダイアログ キーを処理します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">キーがコントロールによって処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>Gets or sets a value indicating whether text in the text box is read-only.</source>
          <target state="translated">テキスト ボックスのテキストが読み取り専用かどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the text box is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">テキストが読み取り専用の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the contents of the control cannot be changed by the user at runtime.</source>
          <target state="translated">このプロパティに設定するときに<ph id="ph1">`true`</ph>、実行時にユーザーがコントロールの内容を変更することはできません。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>With this property set to <ph id="ph1">`true`</ph>, you can still set the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property in code.</source>
          <target state="translated">このプロパティ設定して<ph id="ph1">`true`</ph>の値を設定することができます、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>コード内のプロパティです。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>You can use this feature instead of disabling the control with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to allow the contents to be copied and ToolTips to be shown.</source>
          <target state="translated">コントロールを無効にするのではなく、この機能を使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>をコピーする内容を有効にするプロパティおよびに表示されるツールヒント。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>、ように、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">インスタンスを名前<ph id="ph1">`TextBoxBase1`</ph>にイベント ハンドラーが関連付けられていることを確認してください、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>Scrolls the contents of the control to the current caret position.</source>
          <target state="translated">コントロールの内容を現在のキャレット位置までスクロールします。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</source>
          <target state="translated">このメソッドでは、コントロールの表示領域内のキャレットになるまで、コントロールの内容をスクロールすることができます。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>If the caret is positioned below the visible region of the control, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method will scroll the contents of the control until the caret is visible at the bottom of the control.</source>
          <target state="translated">キャレットは、コントロールの表示領域の下にある場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph>メソッドは、カーソルが、コントロールの下部に表示されるまで、コントロールのコンテンツがスクロールします。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</source>
          <target state="translated">コントロールの表示領域の上、キャレットを配置すると場合、このメソッドは、カーソルが、コントロールの上部に表示されるまで、コントロールの内容をスクロールします。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</source>
          <target state="translated">複数行テキスト ボックスにこのメソッドを使用するには、現在のテキストのエントリ ポイントが、コントロールの表示領域内にあることを確認します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</source>
          <target state="translated">コントロールにフォーカスがない場合、またはカレットがコントロールの表示領域に既に配置されている場合は、このメソッドを指定しても効果はありません。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> enumeration and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph>列挙と<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph>ENTER キーが押された後に、カレット、によって表される、テキスト挿入ポイントの画面に表示が常にされることを確認するメソッド。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called <ph id="ph2">`TextBox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control called <ph id="ph4">`RichTextBox1`</ph>.</source>
          <target state="translated">例を実行するを含むフォームで、次のコードを貼り付けます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>と呼ばれるコントロール<ph id="ph2">`TextBox1`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>と呼ばれるコントロール<ph id="ph4">`RichTextBox1`</ph>です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This example requires that the event-handling method has been associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event.</source>
          <target state="translated">この例では、イベント処理メソッドに関連付けられている必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The position of the first character in the current text selection within the text box.</source>
          <target state="translated">テキスト ボックス内で現在選択されているテキストの最初の文字の位置。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The number of characters to select.</source>
          <target state="translated">選択する文字数。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>Selects a range of text in the text box.</source>
          <target state="translated">テキスト ボックスでテキストの範囲を選択します。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If you want to set the start position to the first character in the control's text, set the <ph id="ph1">`start`</ph> parameter to 0.</source>
          <target state="translated">コントロールのテキストの最初の文字を開始位置を設定する場合は、設定、<ph id="ph1">`start`</ph>パラメーターを 0 にします。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</source>
          <target state="translated">このメソッドを使用するには、タイミングなどのテキストの部分文字列を選択するコントロールのテキストの検索と情報を交換します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">`start`</ph> parameter to the position within the text box where you want the caret to move to and set the <ph id="ph2">`length`</ph> parameter to a value of zero (0).</source>
          <target state="translated">設定して、テキスト ボックス内でカレットを移動することができますプログラムによって、<ph id="ph1">`start`</ph>パラメーター カレットを移動し、設定するテキスト ボックス内の位置を<ph id="ph2">`length`</ph>パラメーターにゼロ (0) の値。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The text box must have focus in order for the caret to be moved.</source>
          <target state="translated">テキスト ボックスで、カレットを移動するためにフォーカスが必要です。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If this method is called without any parameters, an alternative method is used.</source>
          <target state="translated">このメソッドはパラメーターを使用せず、代わりの方法が使用されます。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>This alternative method inherits from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">この代替メソッドが継承、<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>When called, it sets the input focus to the control and selects the contents of the control.</source>
          <target state="translated">呼び出されると、そのコントロールに入力フォーカスを設定し、コントロールの内容を選択します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to search the contents of the control for the instance of the word "fox".</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラスのインスタンス"について fox"という単語のコントロールの内容を検索します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If found, the code selects the word in the control using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Select%2A&gt;</ph> method.</source>
          <target state="translated">かどうか、コードの単語を選択を使用して、コントロール、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Select%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph2">`textBox1`</ph> has been created and its <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property contains the sentence "The quick brown fox jumps over the lazy dog."</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という<ph id="ph2">`textBox1`</ph>が作成されて、その<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティには「The quick brown fox 移動することで」という文が含まれています。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="start" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="start" /&gt;</ph> パラメーターの値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>Selects all text in the text box.</source>
          <target state="translated">テキスト ボックスのすべてのテキストを選択します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>This method enables you to select all text within the control.</source>
          <target state="translated">このメソッドでは、コントロール内のすべてのテキストを選択することができます。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>You can use this method in conjunction with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">組み合わせてこのメソッドを使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph>メソッドで、テキストをコントロールでは、コントロールの内容全体をコピーして貼り付けることを選択する必要があります、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to determine if any text is selected in the control.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、任意のテキストがコントロールで選択されているかどうかを決定する、クラスを派生します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>If no text is selected, a call is made to the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectAll%2A&gt;</ph> method before copying the contents of the control to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">呼び出しが行われたテキストが選択されていない場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectAll%2A&gt;</ph>メソッドにコントロールの内容をコピーする前に、<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has been created named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>が作成された名前付き<ph id="ph2">`textBox1`</ph>します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>Gets or sets a value indicating the currently selected text in the control.</source>
          <target state="translated">コントロールで現在選択されているテキストを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>A string that represents the currently selected text in the text box.</source>
          <target state="translated">テキスト ボックスで現在選択されているテキストを表す文字列。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>You can assign text to this property to change the text currently selected in the text box.</source>
          <target state="translated">テキスト ボックスで現在選択されているテキストを変更するには、このプロパティにテキストを割り当てることができます。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>If no text is currently selected in the text box, this property returns a zero-length string.</source>
          <target state="translated">テキストが選択されていない場合、テキスト ボックスに、このプロパティは、長さ 0 の文字列を返します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>Gets or sets the number of characters selected in the text box.</source>
          <target state="translated">テキスト ボックスで選択されている文字数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The number of characters selected in the text box.</source>
          <target state="translated">テキスト ボックス内で選択されている文字の数。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</source>
          <target state="translated">このプロパティを使用すると、かどうか任意の文字は現在選択されているテキスト ボックス コントロールで選択したテキストの操作を実行する前に確認します。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>When the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to a value that is larger than the number of characters within the text of the control, the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to the entire length of text within the control minus the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property (if any value is specified for the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property).</source>
          <target state="translated">ときの値、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>の値、コントロールのテキスト内で文字数よりも大きい値に設定されて、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティの値を減算コントロール内のテキストの全体の長さに設定されて、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>プロパティ (の任意の値が指定されている場合、<ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>プロパティ)。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).</source>
          <target state="translated">設定して、テキスト ボックス内でカレットを移動することができますプログラムによって、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>カレットを移動し、設定をテキスト ボックス内の位置に、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティをゼロ (0) の値にします。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The text box must have focus in order for the caret to be moved.</source>
          <target state="translated">テキスト ボックスで、カレットを移動するためにフォーカスが必要です。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The assigned value is less than zero.</source>
          <target state="translated">割り当てられた値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>Gets or sets the starting point of text selected in the text box.</source>
          <target state="translated">テキスト ボックスで選択されているテキストの開始点を取得または設定します。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The starting position of text selected in the text box.</source>
          <target state="translated">テキスト ボックスで選択されているテキストの開始点。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</source>
          <target state="translated">コントロールのテキストが選択されていない場合、このプロパティは、カーソル、または新しいテキスト用のキャレットを示します。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</source>
          <target state="translated">コントロール内のテキストの長さを超えた位置にこのプロパティを設定すると、選択の開始位置は最後の文字の後に配置されます。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>When text is selected in the text box control, changing this property might decrease the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.</source>
          <target state="translated">テキスト ボックス コントロールでテキストを選択すると、このプロパティを変更する可能性があります値を小さくの<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If the remaining text in the control after the position indicated by the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property is less than the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property, the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is automatically decreased.</source>
          <target state="translated">位置の後にコントロール内の残りのテキストが示される場合、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>プロパティは、の値より小さい、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティ、値の<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティは自動的に小さきます。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property never causes an increase in the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>の増加が、プロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can programmatically move the selection within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> properties.</source>
          <target state="translated">設定して、テキスト ボックス内で選択範囲を移動することができますプログラムによって、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).</source>
          <target state="translated">設定して、テキスト ボックス内でカレットを移動することができますプログラムによって、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>カレットを移動し、設定をテキスト ボックス内の位置に、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph>プロパティをゼロ (0) の値にします。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> must have focus in order for the selection or the caret to be moved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>選択またはカレットを移動する順序にフォーカスがある必要があります。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that is <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> by giving it the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> first.</source>
          <target state="translated">設定することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>つまり<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph>を付けることにより、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>最初。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>例 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>例 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that is <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> by giving it the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> first.</source>
          <target state="translated">次の例のセット、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>つまり<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph>を付けることにより、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph>最初。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The assigned value is less than zero.</source>
          <target state="translated">割り当てられた値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Not used.</source>
          <target state="translated">使用しません。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Sets the specified bounds of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> コントロールの指定した境界を設定します。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> control uses the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property to set the bounds if the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property is <ph id="ph4">`true`</ph> and the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph>場合は、境界を設定するプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph>プロパティは<ph id="ph4">`true`</ph>と<ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティは<ph id="ph6">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Typically, the parameters that correspond to the bounds not included in the <ph id="ph1">`specified`</ph> parameter are passed in with their current values.</source>
          <target state="translated">含まれていない境界に対応するパラメーター、通常、<ph id="ph1">`specified`</ph>パラメーターは、その現在の値で渡されます。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.</source>
          <target state="translated">たとえば、 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>、または<ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>のプロパティ、<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>プロパティは、コントロールの現在のインスタンスへの参照で渡すことができます。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However all values passed in are honored and applied to the control.</source>
          <target state="translated">ただしで渡されるすべての値が受け入れられ、コントロールに適用します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">`specified`</ph> parameter represents the elements of the controls <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.</source>
          <target state="translated"><ph id="ph1">`specified`</ph>パラメーターは、コントロールの要素を表す<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>アプリケーションによって変更します。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, if you change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id="ph2">`specified`</ph> parameter value is the <ph id="ph3">`Size`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">たとえば、変更する場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> 、コントロールの<ph id="ph2">`specified`</ph>パラメーター値が、<ph id="ph3">`Size`</ph>の値<ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id="ph3">`specified`</ph> parameter value is the <ph id="ph4">`None`</ph> value of <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">ただし場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>への応答の調整、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph>プロパティが設定されている、<ph id="ph3">`specified`</ph>パラメーター値が、<ph id="ph4">`None`</ph>の値<ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to force the bounds of the control to change.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>を変更するコントロールの境界を強制する方法です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Derived classes can add size restrictions to the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method.</source>
          <target state="translated">派生クラスがサイズ制限を追加、<ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>Gets or sets a value indicating whether the defined shortcuts are enabled.</source>
          <target state="translated">定義されたショートカットを有効にするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable the shortcuts; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ショートカットを有効にするには <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph>プロパティを有効にするにまたは、次のショートカット キーの組み合わせとコントロールのショートカット メニューを無効にします。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+Z</source>
          <target state="translated">Ctrl + Z</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+E</source>
          <target state="translated">Ctrl + E</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+C</source>
          <target state="translated">Ctrl + C</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+Y</source>
          <target state="translated">Ctrl + Y</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+X</source>
          <target state="translated">Ctrl + X</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+BACKSPACE</source>
          <target state="translated">Ctrl + BackSpace</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+V</source>
          <target state="translated">Ctrl + V</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+DELETE</source>
          <target state="translated">Ctrl + Del</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+A</source>
          <target state="translated">Ctrl + A</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>SHIFT+DELETE</source>
          <target state="translated">SHIFT キーを押しながら DEL キーを押す</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+L</source>
          <target state="translated">Ctrl + L</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>SHIFT+INSERT</source>
          <target state="translated">SHIFT キーを押しながら挿入</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+R</source>
          <target state="translated">Ctrl + R</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>You can override this property to specify other shortcut keys.</source>
          <target state="translated">その他のショートカット キーを指定するには、このプロパティをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>Gets or sets the current text in the text box.</source>
          <target state="translated">テキスト ボックスの現在のテキストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The text displayed in the control.</source>
          <target state="translated">コントロール内に表示するテキスト。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>To display multiple lines of text in a text box, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">テキスト ボックスに複数行のテキストを表示するには、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>To read or set the text of a multiline text box, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt;</ph> property.</source>
          <target state="translated">読み取りや複数行テキスト ボックスのテキストを設定を使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The amount of text that can be entered in the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control is limited only by available system memory.</source>
          <target state="translated">入力できるテキストの量、<ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>コントロールが使用可能なシステム メモリによってのみ制限されます。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行を作成するためのクラスを派生<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>垂直スクロール バーを持つコントロール。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">またこの例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>Gets the length of text in the control.</source>
          <target state="translated">コントロールのテキストの長さを取得します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>The number of characters contained in the text of the control.</source>
          <target state="translated">コントロールのテキストに格納されている文字数。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</source>
          <target state="translated">文字の合計数の知識が必要なコントロールのテキスト内のテキストの特定の文字列の検索などのタスクの文字列の文字数を調べて、このプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> property to copy text from one <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to another.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph>プロパティを 1 つからテキストをコピー<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>別にします。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>This example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls named, <ph id="ph2">`textBox1`</ph> and <ph id="ph3">`textBox2`</ph>, have been added to a form and that <ph id="ph4">`textBox1`</ph> has text assigned to its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">この例には、その 2 つが必要があります<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>と<ph id="ph3">`textBox2`</ph>、フォームに追加されて<ph id="ph4">`textBox1`</ph>に割り当てられているテキストが含まれて、<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> コントロールを表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> を表す文字列。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>The string includes the type and the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> property of the control.</source>
          <target state="translated">コントロールの種類と <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> プロパティを格納する文字列。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>Undoes the last edit operation in the text box.</source>
          <target state="translated">テキスト ボックスで直前に実行された編集操作を元に戻します。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>This method will undo the last <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept> or text change operation performed in the text box control if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このメソッドには、最後は元に戻します<bpt id="p1">**</bpt>クリップボード<ept id="p1">**</ept>テキストを変更する場合は、テキスト ボックス コントロールで実行される操作または、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt;</ph>プロパティから返される<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method does not work with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph>メソッドでは機能しません、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>または<ph id="ph3">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、派生クラス。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">提供<ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>のイベント ハンドラー<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>切り取り、コピー、貼り付け、および元に戻す操作を実行したオブジェクト。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph2">`textBox1`</ph>が作成されました。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">処理対象の Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows メッセージを処理します。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</source>
          <target state="translated">複数行テキスト ボックス コントロールで必要に応じて自動的に次の行に折り返すかどうかを示します。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiline text box control wraps words; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</source>
          <target state="translated">複数行テキスト ボックス コントロールで行が折り返される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。ユーザーがコントロールの右端を超えてテキストを入力すると、複数行テキスト ボックス コントロールが自動的に水平にスクロールする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>If this property is set to <ph id="ph1">`true`</ph>, horizontal scroll bars are not displayed regardless of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property setting.</source>
          <target state="translated">このプロパティ設定されている場合<ph id="ph1">`true`</ph>、無関係に水平スクロール バーは表示されません、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph>プロパティの設定。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>In the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, text within the control will always wrap regardless of the property setting of this property unless the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> property is set to <ph id="ph3">`HorizontalAlignment.Left`</ph>.</source>
          <target state="translated">派生クラスで<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、しない限り、このプロパティのプロパティの設定に関係なくコントロール内のテキストを折り返す常には、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`HorizontalAlignment.Left`</ph>です。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、複数行を作成するためのクラスを派生<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>垂直スクロール バーを持つコントロール。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">またこの例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph>プロパティを複数行テキスト ボックス コントロールのテキスト ドキュメントを作成するのに役立ちます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>