<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bccf49a0da32b1095f4529738d8ecc86dc622b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36513084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButton&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButton : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ToolBarButton = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows ツール バー ボタンを表します。 <see cref="T:System.Windows.Forms.ToolStripButton" /> コントロールは、以前のバージョンの <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールに代わると共に追加の機能を提供します。ただし、<see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールも、下位互換性を保つ目的および必要に応じて将来使用する目的で保持されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton> コントロールの親があるとき<xref:System.Windows.Forms.ToolBar>コントロール。 ツール バー ボタンを作成した後に設定する一般的なプロパティは<xref:System.Windows.Forms.ToolBarButton.Text%2A>と<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>です。 設定、<xref:System.Windows.Forms.ToolBarButton.Text%2A>下にあるか、イメージの右側にテキストを表示するボタンのプロパティです。 ボタンにイメージを作成することで割り当てる、<xref:System.Windows.Forms.ImageList>に割り当てること、 <xref:System.Windows.Forms.ToolBar.ImageList%2A> ; ツールバーのプロパティをイメージのインデックス値を割り当てる、<xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>ボタンのプロパティです。  
  
 ツールバーに割り当てられているツールバーのボタンの外観を変更するには、設定、<xref:System.Windows.Forms.ToolBar.Appearance%2A>親ツールバー コントロールのプロパティです。 `ToolBarAppearance.Flat`外観は、ボタンにフラットな外観を与えます。 マウス ポインターをボタンの上に移動すると、ボタンの外観 3 次元に変化します。 区切り記号は、ボタンにフラットな外観があるときに、ボタンの間のスペースではなく、線として表示されます。 場合、<xref:System.Windows.Forms.ToolBar.Appearance%2A>プロパティに設定されている`ToolBarAppearance.Normal`発生し、3 次元ボタンが表示されます、およびボタンの間にギャップとして区切り記号が表示されます。  
  
 割り当てることができます、<xref:System.Windows.Forms.ContextMenu>ボタンに場合、<xref:System.Windows.Forms.ToolBarButton.Style%2A>プロパティに設定されている`ToolBarButtonStyle.DropDown`です。 ボタンがクリックされたときに割り当てられたメニューが表示されます。  
  
 コレクションを作成する<xref:System.Windows.Forms.ToolBarButton>で表示するコントロールを<xref:System.Windows.Forms.ToolBar>を使用して、ボタンを個別に追加、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.ToolBar.Buttons%2A>プロパティです。 またを使用していくつかのツール バー ボタンを追加することができます、<xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>コントロール。 ツールバーのボタンがボタンのコレクションに割り当てられているコレクションは、ツールバーに割り当てられて、ツールバーは、フォームに追加します。 <xref:System.Windows.Forms.ToolBar.ButtonClick> 、ツールバーのイベント、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A>のプロパティ、<xref:System.Windows.Forms.ToolBarButtonClickEventArgs>が評価される、適切なダイアログ ボックスを開くとします。 このコードでは、する必要があります、 <xref:System.Windows.Forms.Form>、 <xref:System.Windows.Forms.OpenFileDialog>、 <xref:System.Windows.Forms.SaveFileDialog>、および<xref:System.Windows.Forms.PrintDialog>がすべて作成されています。  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しく作成した<xref:System.Windows.Forms.ToolBarButton>既定値を持たない<xref:System.Windows.Forms.ToolBarButton.Text%2A>または<xref:System.Drawing.Image>に割り当てられます。 ボタンの既定のスタイルは`ToolBarButtonStyle.PushButton`します。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBarButton : string -&gt; System.Windows.Forms.ToolBarButton" Usage="new System.Windows.Forms.ToolBarButton text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新しい <see cref="T:System.Windows.Forms.ToolBarButton" /> に表示されるテキスト。</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> クラスの新しいインスタンスを初期化し、割り当てられたテキストをボタン上に表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しく作成された<xref:System.Windows.Forms.ToolBarButton>持たない<xref:System.Drawing.Image>に割り当てられます。 ボタンの既定のスタイルは<xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>します。 `text`にパラメーターが割り当てられた、<xref:System.Windows.Forms.ToolBarButton.Text%2A>プロパティされ、新しいツールバー ボタン コントロールに表示されます。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toolBarButton.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>ph x="1" /&amp;gt; によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。 `Dispose` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。  
  
 ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Windows.Forms.ToolBarButton>参照します。 このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 複数回呼び出す他のオブジェクトから。オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。実装する方法の詳細についての<see langword="Dispose(Boolean)" />、[Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) を実装を参照してください。 します。詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください [アンマネージ Resources](~/docs/standard/garbage-collection/unmanaged.md) をクリーンアップし、[Finalize メソッドをオーバーライドする] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownMenu As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ DropDownMenu { System::Windows::Forms::Menu ^ get(); void set(System::Windows::Forms::Menu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownMenu : System.Windows.Forms.Menu with get, set" Usage="System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドロップダウン ツール バー ボタンに表示されるメニューを取得または設定します。</summary>
        <value>ドロップダウン ツール バー ボタンに表示される <see cref="T:System.Windows.Forms.ContextMenu" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定することができます、<xref:System.Windows.Forms.ContextMenu>ドロップダウン ボタンがクリックされたときに表示されます。 しない限り、このプロパティは使用されませんが、<xref:System.Windows.Forms.ToolBarButton.Style%2A>にプロパティの値が設定されている<xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>です。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A>としてプロパティが定義されている、<xref:System.Windows.Forms.Menu>型を割り当てる必要があります、<xref:System.Windows.Forms.ContextMenu>正しく表示するには。 作成する場合は、独自<xref:System.Windows.Forms.MenuItem>派生クラスがそのオブジェクトを割り当てる必要があります、<xref:System.Windows.Forms.ContextMenu>を割り当てると、<xref:System.Windows.Forms.ContextMenu>を<xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">割り当てられたオブジェクトが <see cref="T:System.Windows.Forms.ContextMenu" /> ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>ボタンが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.ToolBarButton.Enabled%2A>プロパティに設定されている`false`ツールバーのボタンをクリックすることはできません、およびボタンの外観を変更します。 <xref:System.Drawing.Image>と<xref:System.Windows.Forms.ToolBarButton.Text%2A>ボタンに割り当てられた、グレー表示されます。イメージまたはテキストが複数の色を持つ、モノクロ灰色で表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンに割り当てられたイメージのインデックス値を取得または設定します。</summary>
        <value>ツール バー ボタンに割り当てられた <see cref="T:System.Drawing.Image" /> のインデックス値。 既定値は -1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>値内のイメージのインデックス付きの値が参照、<xref:System.Windows.Forms.ImageList>親に割り当てられている<xref:System.Windows.Forms.ToolBar>コントロール。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">代入される値が-1 未満です。</exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンに割り当てられたイメージの名前を取得または設定します。</summary>
        <value>ツール バー ボタンに割り当てられた <see cref="T:System.Drawing.Image" /> の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A>値内のイメージを示す、<xref:System.Windows.Forms.ImageList>親に割り当てられている<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンの名前。</summary>
        <value>ボタンの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得するキーとしてボタンの名前を使用することができます、<xref:System.Windows.Forms.ToolBarButton>から、<xref:System.Windows.Forms.ToolBar.Buttons%2A>のコレクション、<xref:System.Windows.Forms.ToolBar>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ Parent { System::Windows::Forms::ToolBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolBar" Usage="System.Windows.Forms.ToolBarButton.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンを割り当てるツール バー コントロールを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBar" /> を割り当てる <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロール。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialPush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PartialPush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PartialPush : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トグル スタイルのツール バー ボタンが部分的に押されているかどうかを示す値を取得または設定します。</summary>
        <value>トグル スタイルのツール バー ボタンが部分的に押されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>に設定されている`true`、グレーで表示されるボタンをツールバーのボタンが表示されます。 この外観が淡色表示と異なるときに、<xref:System.Windows.Forms.ToolBarButton.Enabled%2A>プロパティに設定されている`false`部分プッシュ外観全体ボタン イメージへのもやを提供するためです。 このプロパティ及ぼしませんしない限り、<xref:System.Windows.Forms.ToolBarButtonStyle>に設定されている`ToggleButton`です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>、および<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>プロパティです。 例を実行するを含むフォームで、次のコードを貼り付けます、<xref:System.Windows.Forms.RichTextBox>と呼ばれるコントロール`RichTextBox1`です。呼び出す、`InitializeToolBar`フォームのコンス トラクターのメソッドまたは`Load`メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberSignature Language="VB.NET" Value="Public Property Pushed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pushed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pushed : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トグル スタイルのツール バー ボタンが現在押されている状態かどうかを示す値を取得または設定します。</summary>
        <value>トグル スタイルのツール バー ボタンが現在押されている状態の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Windows.Forms.ToolBarButton.Pushed%2A>に設定されている`true`、くぼみまたは他のボタンを基準とした埋め込みツールバーのボタンが表示されます。 このプロパティ及ぼしませんしない限り、<xref:System.Windows.Forms.ToolBarButtonStyle>に設定されている`ToggleButton`です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>、および<xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>プロパティです。 例を実行するを含むフォームで、次のコードを貼り付けます、<xref:System.Windows.Forms.RichTextBox>と呼ばれるコントロール`RichTextBox1`です。 呼び出す、`InitializeToolBar`フォームのコンス トラクターのメソッドまたは`Load`メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Rectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンの外接する四角形を取得します。</summary>
        <value>ツール バー ボタンの外接する <see cref="T:System.Drawing.Rectangle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.ToolBar>と現在のボタンの両方<xref:System.Windows.Forms.ToolBarButton.Visible%2A>、このプロパティにボタンが含まれている現在の外接する四角形を取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ToolBarButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButtonStyle Style { System::Windows::Forms::ToolBarButtonStyle get(); void set(System::Windows::Forms::ToolBarButtonStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.ToolBarButtonStyle with get, set" Usage="System.Windows.Forms.ToolBarButton.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンのスタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 値のいずれか 1 つ。 既定値は、<see langword="ToolBarButtonStyle.PushButton" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、ボタン<xref:System.Windows.Forms.ToolBarButton.Style%2A>に設定されている<xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton>を指定することができます、<xref:System.Windows.Forms.MenuItem>ドロップダウン ボタンが押されたときに表示されます。 スタイルに設定されている場合`ToolBarButtonStyle.Separator`ボタンの区切り記号としてとボタンとしてではなく、ツール バー ボタンが表示されます。 `ToolBarButtonStyle.ToggleButton`スタイルでは、ツール バー ボタン、トグル ボタンのように動作以外で実行できますが、オンまたはオフの状態。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">代入された値が、<see cref="T:System.Windows.Forms.ToolBarButtonStyle" /> 値ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolBarButton.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンに関するデータを格納しているオブジェクトを取得または設定します。</summary>
        <value>ツール バー ボタンに関するデータを格納する <see cref="T:System.Object" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得するか、ツールバーのボタンに関連付けられているデータを割り当てます。 どの<xref:System.Object>派生型は、このプロパティに割り当てることができます。 このプロパティは、Windows フォーム デザイナーで設定されていますが、テキストのみが指定できます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>、 <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>、および<xref:System.Windows.Forms.ToolBarButton.Tag%2A>プロパティです。 例を実行するを含むフォームで、次のコードを貼り付けます、<xref:System.Windows.Forms.RichTextBox>と呼ばれるコントロール`RichTextBox1`です。 呼び出す、`InitializeToolBar`フォームのコンス トラクターのメソッドまたは`Load`メソッドです。  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンに表示されているテキストを取得または設定します。</summary>
        <value>ツール バー ボタンに表示されているテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のテキスト プロパティの値は空の文字列 ("") を持つコントロールを作成していない場合、<xref:System.Windows.Forms.ToolBar.%23ctor%2A>をテキスト文字列をパラメーターとして受け取るコンス トラクターです。 ツール バー ボタンのテキストの向きはによって決定されます、<xref:System.Windows.Forms.ToolBar.TextAlign%2A>ボタンの親のプロパティ<xref:System.Windows.Forms.ToolBar>のいずれかに設定できる、<xref:System.Windows.Forms.ToolBarTextAlign>列挙値。 印刷の向きでは、ボタンに割り当てられているイメージとの関連です。 ボタンにイメージが割り当てられていない場合がある領域、ツール バー ボタンの表面上のままにします。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンのツールヒントとして表示されるテキストを取得または設定します。</summary>
        <value>マウス ポインターをツール バー ボタンの上に移動すると表示されるテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ボタンの上にマウス ポインターを移動するとツールヒントのテキストの表示を有効にするには、設定、<xref:System.Windows.Forms.ToolBar.ShowToolTips%2A>ボタンの親のプロパティ<xref:System.Windows.Forms.ToolBar>に`true`です。  
  
   
  
## Examples  
 次のコード例を作成、 <xref:System.Windows.Forms.ToolBar> 3<xref:System.Windows.Forms.ToolBarButton>制御、ツールバーにボタンを割り当てますおよびボタンの共通プロパティの一部を設定します。 このコードでは、する必要があります、 <xref:System.Windows.Forms.MenuItem>、 <xref:System.Windows.Forms.ImageList>、<xref:System.Windows.Forms.ToolTip>と<xref:System.Windows.Forms.Form>作成されていると、<xref:System.Windows.Forms.ImageList>少なくとも 1 つ<xref:System.Drawing.Image>に割り当てられています。  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="toolBarButton.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolBarButton" /> コントロールを表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Windows.Forms.ToolBarButton" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton.ToString%2A>メソッド、型との値を含む文字列を返します、<xref:System.Windows.Forms.ToolBarButton.Style%2A>と<xref:System.Windows.Forms.ToolBarButton.Text%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツール バー ボタンが可視かどうかを示す値を取得または設定します。</summary>
        <value>ツール バー ボタンが可視である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ツール バー ボタンが表示されていない場合は、ツールバーで、表示されませんし、そのため、ユーザー入力を受信することはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>