<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37807cf706cb60b2fcaf0a83cdb1e84a812e7777" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30641046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingList, IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitialize, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="022bb-101">フォームのデータ ソースをカプセル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="022bb-101">Encapsulates the data source for a form.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-102"><xref:System.Windows.Forms.BindingSource>コンポーネントは、多くの役割を果たします。</span><span class="sxs-lookup"><span data-stu-id="022bb-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="022bb-103">最初に、通貨管理、変更通知、および Windows フォーム コントロールとデータ ソースの間で他のサービスを提供することでデータをフォームにコントロールのバインドを簡単になります。</span><span class="sxs-lookup"><span data-stu-id="022bb-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="022bb-104">これを行うにアタッチすることにより、<xref:System.Windows.Forms.BindingSource>コンポーネントを使用してデータ ソース、<xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="022bb-105">複合バインディングのシナリオの必要に応じて設定できます、<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティを特定の列またはデータ ソースの一覧です。</span><span class="sxs-lookup"><span data-stu-id="022bb-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="022bb-106">コントロールをバインド、<xref:System.Windows.Forms.BindingSource>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="022bb-107">データを使用して、さらにすべての対話はへの呼び出しでは実現、<xref:System.Windows.Forms.BindingSource>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="022bb-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="022bb-108">例については、<xref:System.Windows.Forms.BindingSource>バインディング プロセスを簡略化できますを参照してください[する方法: Windows フォーム コントロールを DBNull データベース値にバインド](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md)と[する方法: エラーの処理と例外データ バインドで発生した](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="022bb-109">ナビゲーションと、データ ソースの更新がメソッドによってなど完了<xref:System.Windows.Forms.BindingSource.MoveNext%2A>、 <xref:System.Windows.Forms.BindingSource.MoveLast%2A>、および<xref:System.Windows.Forms.BindingSource.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="022bb-110">によって並べ替えとフィルター処理などの操作が処理される、<xref:System.Windows.Forms.BindingSource.Sort%2A>と<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="022bb-111">詳細について、並べ替えおよびフィルター処理を使用して、<xref:System.Windows.Forms.BindingSource>を参照してください[する方法: 並べ替えとフィルターを Windows フォーム BindingSource コンポーネントで ADO.NET データ](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="022bb-112">さらに、<xref:System.Windows.Forms.BindingSource>コンポーネントは、厳密に型指定されたデータ ソースとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="022bb-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="022bb-113">通常、基になるデータ ソースの種類は、次のメカニズムのいずれかで固定します。</span><span class="sxs-lookup"><span data-stu-id="022bb-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="022bb-114">使用して、<xref:System.Windows.Forms.BindingSource.Add%2A>に項目を追加する方法、<xref:System.Windows.Forms.BindingSource>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="022bb-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="022bb-115">設定、<xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティを一覧、1 つのオブジェクトまたは型。</span><span class="sxs-lookup"><span data-stu-id="022bb-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="022bb-116">どちらのメカニズムは、厳密に型指定されたリストを作成します。</span><span class="sxs-lookup"><span data-stu-id="022bb-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="022bb-117">使用する方法の詳細について、<xref:System.Windows.Forms.BindingSource>型にバインドするを参照してください。[する方法: Windows フォーム コントロールを型にバインド](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="022bb-118">使用することも、<xref:System.Windows.Forms.BindingSource>コントロールをファクトリ オブジェクトにバインドします。</span><span class="sxs-lookup"><span data-stu-id="022bb-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="022bb-119">これを行う方法の詳細については、次を参照してください。[する方法: Windows フォーム コントロールをファクトリ オブジェクトにバインド](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="022bb-120"><xref:System.Windows.Forms.BindingSource>ハンドル両方の単純または複雑なデータ ソース、用語集は問題があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="022bb-121">このクラスのドキュメント内でという用語は、*リスト*がホストされているデータ ソース内のデータ コレクションを参照し、*項目*1 つの要素を表します。</span><span class="sxs-lookup"><span data-stu-id="022bb-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="022bb-122">機能について説明に関連付けられている複雑なデータ ソースと同じ用語*テーブル*と*行*使用されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="022bb-123"><xref:System.Windows.Forms.BindingSource> 基になるデータにアクセスするためには、メンバーを提供します。</span><span class="sxs-lookup"><span data-stu-id="022bb-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="022bb-124">現在の項目を取得できる、<xref:System.Windows.Forms.BindingSource.Current%2A>プロパティ、およびリスト全体を使用して取得できる、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="022bb-125">現在の項目での編集操作がサポートされている<xref:System.Windows.Forms.BindingSource.Current%2A>と<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>、 <xref:System.Windows.Forms.BindingSource.EndEdit%2A>、<xref:System.Windows.Forms.BindingSource.CancelEdit%2A>と<xref:System.Windows.Forms.BindingSource.Add%2A>と<xref:System.Windows.Forms.BindingSource.AddNew%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="022bb-126">このクラスなどに、イベントの数を公開、通貨管理は、基になるすべての種類のデータ ソースの自動的に処理されますが、<xref:System.Windows.Forms.BindingSource.CurrentItemChanged>と<xref:System.Windows.Forms.BindingSource.DataSourceChanged>、カスタマイズ可能にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="022bb-127">データ ソースにバインドされている、<xref:System.Windows.Forms.BindingSource>コンポーネントも移動および管理できると、<xref:System.Windows.Forms.BindingNavigator>リスト内のアイテムを移動するため、VCR のようなユーザー インターフェイス (UI) を提供するクラス。</span><span class="sxs-lookup"><span data-stu-id="022bb-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="022bb-128"><xref:System.Windows.Forms.BindingNavigator>バインドできると統合する任意のデータ ソースに設計された、<xref:System.Windows.Forms.BindingSource>を介してコンポーネント、<xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="022bb-129">既定のプロパティ、<xref:System.Windows.Forms.BindingSource>クラスは<xref:System.Windows.Forms.BindingSource.DataSource%2A>します。</span><span class="sxs-lookup"><span data-stu-id="022bb-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="022bb-130">既定のイベントが<xref:System.Windows.Forms.BindingSource.CurrentChanged>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="022bb-131">メンバーの多くは、<xref:System.Windows.Forms.BindingSource>クラスを基になる一覧によって表される操作、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティだけを基になるリストにその操作を参照してください。</span><span class="sxs-lookup"><span data-stu-id="022bb-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="022bb-132">したがって、ときに、<xref:System.Windows.Forms.BindingSource>のカスタム実装にバインドされた<xref:System.Collections.IList>クラスのドキュメントで説明されている動作からこれらのメンバーの正確な動作が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="022bb-133">たとえば、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>メソッド呼び出し<xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="022bb-134"><xref:System.Windows.Forms.BindingSource>ドキュメントについて説明します、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>理解したうえでメソッドを<xref:System.Collections.IList.RemoveAt%2A>、基になるメソッド<xref:System.Collections.IList>を正しく実装します。</span><span class="sxs-lookup"><span data-stu-id="022bb-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-135">次のコード例を示しています、<xref:System.Windows.Forms.ListBox>にバインドされている、<xref:System.Windows.Forms.BindingSource>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="022bb-136"><xref:System.Windows.Forms.BindingSource>にバインドされて、<xref:System.ComponentModel.BindingList%601>フォントの一覧を格納しています。</span><span class="sxs-lookup"><span data-stu-id="022bb-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-137">
            <see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-138">
            <see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを既定のプロパティ値で初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-139">次の表は、既定値を示しています。<xref:System.Windows.Forms.BindingSource>このコンス トラクターによって初期化されたプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="022bb-139">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="022bb-140">プロパティ</span><span class="sxs-lookup"><span data-stu-id="022bb-140">Property</span></span>|<span data-ttu-id="022bb-141">既定値</span><span class="sxs-lookup"><span data-stu-id="022bb-141">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="022bb-142">現在の <see cref="T:System.ComponentModel.IContainer" /> を追加する <see cref="T:System.Windows.Forms.BindingSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-143">
            <see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化し、その <see cref="T:System.Windows.Forms.BindingSource" /> を指定したコンテナーに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-144">このコンス トラクターが既定のコンス トラクターを呼び出し、現在を追加<xref:System.Windows.Forms.BindingSource>指定されたコンテナーにします。</span><span class="sxs-lookup"><span data-stu-id="022bb-144">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="022bb-145">通常は使用されないソリューション プログラマではなくデザイン時環境の作成者によって。</span><span class="sxs-lookup"><span data-stu-id="022bb-145">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="022bb-146">
            <see cref="T:System.Windows.Forms.BindingSource" /> のデータ ソース。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="022bb-147">バインド先となるデータ ソース内の特定の列またはリストの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-147">The specific column or list name within the data source to bind to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-148">データ ソースとデータ メンバーを指定して、<see cref="T:System.Windows.Forms.BindingSource" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="022bb-149">内部リストに追加する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-150">既存の項目を内部リストに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-150">Adds an existing item to the internal list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-151">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストに <paramref name="value" /> を追加する場所の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-152"><xref:System.Windows.Forms.BindingSource.Add%2A>メソッドは、基になるリストへの呼び出しを指します`Add`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-152">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="022bb-153">内部リストには、同じ種類の型を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-153">The internal list must contain homogenous types.</span></span> <span data-ttu-id="022bb-154">場合、<xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティは既に設定されていない、し、一覧に追加する最初のオブジェクトがリストの型を定義します。</span><span class="sxs-lookup"><span data-stu-id="022bb-154">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="022bb-155">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-155">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-156">次のコード例を使用する方法、<xref:System.Windows.Forms.BindingSource.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-156">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="022bb-157">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます、`PopulateBindingSourceWithFonts`フォームのコンス トラクターからのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-157">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-158">
            <paramref name="value" /> の型が、基底のリストに含まれる既存の項目と異なっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-158">
              <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-159">項目が基底のリストに追加される前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-159">Occurs before an item is added to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-160"><xref:System.Windows.Forms.BindingSource.AddingNew>によって表される、基になるリストに新しいオブジェクトが追加される前に、イベントが発生した、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-160">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="022bb-161">後にこのイベントが発生した、<xref:System.Windows.Forms.BindingSource.AddNew%2A>メソッドが呼び出されると、新しい項目が作成され、基になるリストに追加する前にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-161">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="022bb-162">このイベントを処理することにより、プログラマがカスタム項目の作成を提供できますがないカーソルの動作に追わから派生して、<xref:System.Windows.Forms.BindingSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-162">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="022bb-163">これは、イベント ハンドラーを設定して、<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>のプロパティ、<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType>新しい項目へのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="022bb-163">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="022bb-164">作成した新しいオブジェクト、<xref:System.Windows.Forms.BindingSource.AddingNew>一覧に含まれる型と同じ型のイベントがあります。 または、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-164">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="022bb-165">設定することはできません、<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>プロパティにバインドするとき、<xref:System.Data.DataView>または<xref:System.Data.DataTable>新しい追加できないため、<xref:System.Data.DataRowView>一覧にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-165">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="022bb-166">新しい項目のカスタム機能を指定する方法の詳細については、次を参照してください。、<xref:System.Windows.Forms.BindingSource.AddNew%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-166">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="022bb-167">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-167">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-168">次のコード例では、<xref:System.Windows.Forms.BindingSource>リストにバインドするコンポーネント、<xref:System.Windows.Forms.DataGridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="022bb-168">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="022bb-169">新しい項目で、一覧に追加されます、<xref:System.Windows.Forms.BindingSource.AddingNew>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="022bb-169">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="022bb-170">このコード例に示されている例の一部である[する方法: Windows フォーム BindingSource で項目の追加をカスタマイズ](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-170">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-171">
            <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> の型と、リストに格納されている型が異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-171">
              <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-172">基になるリストに新しい項目を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-172">Adds a new item to the underlying list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-173">作成され、リストに追加された <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-174"><xref:System.Windows.Forms.BindingSource.AddNew%2A>メソッドによって表される、基になるリストに新しい項目の追加、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-174">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="022bb-175">このメソッドは、次の一連のアクションを設定します。</span><span class="sxs-lookup"><span data-stu-id="022bb-175">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="022bb-176"><xref:System.Windows.Forms.BindingSource.EndEdit%2A>メソッドがコミットの保留中の編集操作を自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-176">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="022bb-177"><xref:System.Windows.Forms.BindingSource.AddingNew>イベントが自動的に発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-177">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="022bb-178">このイベントは、新しい項目を構築するためにプログラムで処理できます。</span><span class="sxs-lookup"><span data-stu-id="022bb-178">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="022bb-179">これは、イベント ハンドラーを設定して、<xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>のプロパティ、<xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType>新しい項目へのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="022bb-179">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="022bb-180">作成した新しいオブジェクト、<xref:System.Windows.Forms.BindingSource.AddingNew>一覧に含まれる型と同じ型のイベントがあります。 または、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-180">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="022bb-181">場合、<xref:System.Windows.Forms.BindingSource.AddingNew>イベントが処理されないが、基になる一覧、 <xref:System.ComponentModel.IBindingList>、リストの要求が渡され、<xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-181">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-182">基になるリストが <xref:System.ComponentModel.IBindingList> でない場合は、既定のパブリック コンストラクターを使用して項目が自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-182">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="022bb-183">どちらの場合は、新しい項目はリストの末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-183">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="022bb-184">新しい項目はすぐに一覧に追加内部データ ソースを実装しない限り、<xref:System.ComponentModel.IEditableObject>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-184">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="022bb-185">この場合、新しい項目はコミットされませんを明示的に呼び出すまで<xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A>が行われますか、新しい一覧表示操作が開始されるまでです。</span><span class="sxs-lookup"><span data-stu-id="022bb-185">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="022bb-186">コミットする前に、新しい項目をロールバックできるを呼び出して<xref:System.Windows.Forms.BindingSource.CancelEdit%2A>、その場合、新しい項目は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-186">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="022bb-187">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-187">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-188">次のコード例では、<xref:System.Windows.Forms.BindingSource>リストにバインドするコンポーネント、<xref:System.Windows.Forms.DataGridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="022bb-188">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="022bb-189">新しい項目で、一覧に追加されます、<xref:System.Windows.Forms.BindingSource.AddingNew>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="022bb-189">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="022bb-190">このコード例に示されている例の一部である[する方法: Windows フォーム BindingSource で項目の追加をカスタマイズ](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-190">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-191">
            <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> プロパティが <see langword="false" /> に設定されている。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="022bb-192">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-192">-or-</span>
          </span>
          <span data-ttu-id="022bb-193">現在の項目の型に対応する既定のパブリック コンストラクターがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-193">A public default constructor could not be found for the current item type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-194">基になるリスト内の項目を編集できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-194">Gets a value indicating whether items in the underlying list can be edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-195">リスト項目を編集できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-195">
              <see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-196"><xref:System.Windows.Forms.BindingSource.AllowEdit%2A>プロパティは通常によって使用その他のコンポーネントを一覧内の項目の編集が許可されたかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="022bb-196">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-197">
            <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> メソッドを使用してリストに項目を追加できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-197">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-198">
            <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> を使用してリストに項目を追加できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-198">
              <see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-199">既定値、<xref:System.Windows.Forms.BindingSource.AllowNew%2A>プロパティは、基になるデータ ソースの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="022bb-199">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="022bb-200">基になるリストが実装されている場合、<xref:System.ComponentModel.IBindingList>インターフェイス、このプロパティは、基になるリストに委任されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-200">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="022bb-201">このプロパティを返しますそれ以外の場合、`false`基になるリストに、次の特性のいずれかの場合。</span><span class="sxs-lookup"><span data-stu-id="022bb-201">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="022bb-202">固定サイズでによって決定される、<xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-202">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="022bb-203">読み取り専用によって決定される、<xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-203">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="022bb-204">項目の種類には、既定のコンス トラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="022bb-204">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="022bb-205">このプロパティの値を設定すると、getter は不要になった基になるリストへの呼び出しを指します。</span><span class="sxs-lookup"><span data-stu-id="022bb-205">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="022bb-206">代わりに、単に値を返します、まで設定されている、<xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-206">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="022bb-207">設定がこのプロパティが発生、<xref:System.Windows.Forms.BindingSource.ListChanged>イベントと<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>'éý'<xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-207">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="022bb-208">設定した場合、<xref:System.Windows.Forms.BindingSource.AllowNew%2A>プロパティを`true`基になるリストの種類には既定のコンス トラクターがないと、処理する必要があります、<xref:System.Windows.Forms.BindingSource.AddingNew>イベントし、適切な型を作成します。</span><span class="sxs-lookup"><span data-stu-id="022bb-208">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-209">次のコード例では、使用方法を示します、<xref:System.Windows.Forms.BindingSource.AllowNew%2A>のプロパティ、<xref:System.Windows.Forms.BindingSource>コンポーネントに新しい項目を追加するユーザーを許可するように、<xref:System.Windows.Forms.BindingSource>コンポーネントの一覧を基になります。</span><span class="sxs-lookup"><span data-stu-id="022bb-209">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="022bb-210">このプロパティを設定`true`バインドされていると、<xref:System.Windows.Forms.DataGridView>コントロールに新しいレコードの行を表示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-210">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-211">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストが固定サイズまたは読み取り専用であるにもかかわらず、このプロパティが <see langword="true" /> に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-211">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="022bb-212">基底のリストの型に既定のコンストラクターがないにもかかわらず、このプロパティが <see langword="true" /> に設定され、<see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> イベントが処理されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-212">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-213">基になるリストから項目を削除できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-213">Gets a value indicating whether items can be removed from the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-214">リストからリスト項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-214">
              <see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-215"><xref:System.Windows.Forms.BindingSource.AllowRemove%2A>プロパティは通常によって使用その他のコンポーネントを一覧内の項目の編集が許可されたかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="022bb-215">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-216">指定された並べ替えに関する説明に基づいて、データ ソースを並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-216">Sorts the data source with the specified sort description or descriptions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts">
          <span data-ttu-id="022bb-217">データ ソースに適用する並べ替えに関する説明を格納する <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-217">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-218">指定された並べ替えに関する説明に基づいて、データ ソースを並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-218">Sorts the data source with the specified sort descriptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-219"><xref:System.ComponentModel.IBindingListView> 複数列の並べ替えプロパティの記述子方向のペアのセットとして実装されています。</span><span class="sxs-lookup"><span data-stu-id="022bb-219"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-220">データ ソースが <see cref="T:System.ComponentModel.IBindingListView" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-220">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="022bb-221">データ ソースの並べ替えに使用するプロパティを説明する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-221">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="022bb-222">リストをどのように並べ替えるかを指定する <see cref="T:System.ComponentModel.ListSortDirection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-222">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-223">指定されたプロパティ記述子と並べ替え方向を使用して、データ ソースを並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-223">Sorts the data source using the specified property descriptor and sort direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-224"><xref:System.ComponentModel.IBindingList>を使用して 1 つの列の並べ替えを実装して、<xref:System.ComponentModel.PropertyDescriptor>で並べ替えを行うプロパティを指定して、<xref:System.ComponentModel.ListSortDirection>プロパティの内容を昇順または降順で並べ替える必要があるかどうかを示すです。</span><span class="sxs-lookup"><span data-stu-id="022bb-224">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-225">データ ソースが <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-225">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-226">すべてのクライアントがこの <see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-226">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-227"><xref:System.Windows.Forms.BindingSource.BindingComplete>イベントは、すべてのクライアントでは後に、発生通常、コントロールにバインドされている現在<xref:System.Windows.Forms.BindingSource>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-227">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="022bb-228">このイベントのハンドラーが確認するには、成功した場合、エラー、またはバインド プロセスの例外に基づく適切な操作を実行できます、<xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A>のプロパティ、<xref:System.Windows.Forms.BindingCompleteEventArgs>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="022bb-228">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="022bb-229">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-229">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-230">次のコード例は、処理を示します、<xref:System.Windows.Forms.BindingSource.BindingComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-230">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="022bb-231">このコードを実行するには、空のコード ファイルに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="022bb-231">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-232">現在の編集操作をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-232">Cancels the current edit operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-233">このメソッドは、ので、最後の保存または読み込みの操作の両方の次の条件が満たされた場合、データに対する変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="022bb-233">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="022bb-234">データ ソースの実装、<xref:System.ComponentModel.IEditableObject>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-234">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="022bb-235"><xref:System.Windows.Forms.BindingSource.EndEdit%2A>メソッドが呼び出されていません。</span><span class="sxs-lookup"><span data-stu-id="022bb-235">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="022bb-236">このメソッドは、 <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> 、基になるメソッド<xref:System.Windows.Forms.CurrencyManager>、行レベルの変更を対象とするとします。</span><span class="sxs-lookup"><span data-stu-id="022bb-236">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-237">リストからすべての要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-237">Removes all elements from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-238"><xref:System.Windows.Forms.BindingSource.Clear%2A>メソッドによって表される、基になるリストからすべての要素を削除する、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティと設定、<xref:System.Windows.Forms.BindingSource.Count%2A>プロパティを 0 にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-238">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="022bb-239">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-239">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="022bb-240">
            <see cref="T:System.Object" /> プロパティで表される基底のリストで検索する <see cref="P:System.Windows.Forms.BindingSource.List" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-240">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="022bb-241">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-241">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-242">オブジェクトがリストの項目であるかどうか判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-242">Determines whether an object is an item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-243">
            <paramref name="value" /> パラメーターが <see cref="P:System.Windows.Forms.BindingSource.List" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-243">
              <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-244">実装は、基になるリストの依存`Contains`メソッド、通常、次の特性を適用します。</span><span class="sxs-lookup"><span data-stu-id="022bb-244">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="022bb-245"><xref:System.Windows.Forms.BindingSource.List%2A> 最初の要素の開始日と終了の最後の要素に検索されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-245"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="022bb-246">基になるメソッドは一方向の検索を実行しますしたがって、平均実行時間の値に比例して、<xref:System.Windows.Forms.BindingSource.Count%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-246">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="022bb-247">基になるメソッドを呼び出して等しいかどうかを決定する、<xref:System.Object.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-247">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="022bb-248">コピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-248">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="022bb-249">コピー操作の開始位置を示す、コピー先の配列内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-249">The index in the destination array at which to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-250">指定したインデックスを開始位置として、指定した配列に <see cref="P:System.Windows.Forms.BindingSource.List" /> の内容をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-250">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-251">このメソッドを使用すると、1 つの配列に複数のソースからの項目を結合します。</span><span class="sxs-lookup"><span data-stu-id="022bb-251">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-252">現在の <see cref="P:System.Windows.Forms.BindingSource.Filter" /> 値を考慮して、基になるリストの項目の合計数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-252">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-253">基底のリストに含まれる、フィルター処理された項目の総数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-253">The total number of filtered items in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-254"><xref:System.Windows.Forms.BindingSource.Count%2A>プロパティによって表される、基になるリストの項目の数を取得する、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティの値によって変更された、<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-254">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-255">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.List%2A>、 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および<xref:System.Windows.Forms.BindingSource.Count%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-255">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="022bb-256">この例を実行するコードを貼り付けます、フォームが含まれていますが、<xref:System.Windows.Forms.BindingSource>という名前`BindingSource1`、という名前の 2 つのラベル`label1`と`label2`、という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-256">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="022bb-257">関連付ける、`button1_Click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-257">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-258">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-258">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-259">この <see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられた CurrencyManager を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-259">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-260">この <see cref="T:System.Windows.Forms.CurrencyManager" /> に関連付けられている <see cref="T:System.Windows.Forms.BindingSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-260">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-261">同じデータ メンバーの使用に別のバインドの通貨マネージャーにアクセスする場合、<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-261">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-262">リスト内の現在の項目を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-262">Gets the current item in the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-263">
            <see cref="T:System.Object" /> プロパティで表される基底のリスト内の現在の項目を表す <see cref="P:System.Windows.Forms.BindingSource.List" />。リストに項目がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-263">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-264">使用して、<xref:System.Windows.Forms.BindingSource.Current%2A>プロパティを現在のアイテムのアクセスが使用して、<xref:System.Windows.Forms.BindingSource.List%2A>リスト全体を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-264">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="022bb-265">現在のオブジェクトの種類を確認するには<xref:System.Object.GetType%2A>、または<xref:System.Object.ToString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-265">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="022bb-266">現在の項目を変更するには、設定、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティを新しい整数値、またはを使用して、ナビゲーションのいずれかのように<xref:System.Windows.Forms.BindingSource.MoveNext%2A>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-266">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-267">次のコード例を示しています、<xref:System.Windows.Forms.BindingSource.Current%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-267">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="022bb-268">この例を実行するには、フォームと呼び出しにコードを貼り付けます、`PopulateBindingSourceWithFonts`メソッドから、フォームの<xref:System.Windows.Forms.Form.Load>イベント メソッドを処理します。</span><span class="sxs-lookup"><span data-stu-id="022bb-268">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-269">現在バインドされている項目が変更されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-269">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-270"><xref:System.Windows.Forms.BindingSource.CurrentChanged>イベントが発生するたびに、<xref:System.Windows.Forms.BindingSource.Current%2A>原因は次のいずれかのプロパティの変更。</span><span class="sxs-lookup"><span data-stu-id="022bb-270">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="022bb-271">現在の位置、<xref:System.Windows.Forms.BindingSource.List%2A>変更します。</span><span class="sxs-lookup"><span data-stu-id="022bb-271">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="022bb-272"><xref:System.Windows.Forms.BindingSource.DataSource%2A>または<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティが変更されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-272">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="022bb-273">基になるメンバーシップ<xref:System.Windows.Forms.BindingSource.List%2A>変更されると、これにより<xref:System.Windows.Forms.BindingSource.Position%2A>を別のアイテムを参照してください。</span><span class="sxs-lookup"><span data-stu-id="022bb-273">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="022bb-274">例には、追加や、現在の項目を削除または自体には、現在のアイテムを移動または現在の位置に項目を移動する前に項目を削除するが含まれます。</span><span class="sxs-lookup"><span data-stu-id="022bb-274">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="022bb-275">基になる一覧は、新しい並べ替えまたはフィルター処理操作で更新されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-275">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="022bb-276">このイベントがトリガーされたときに、<xref:System.Windows.Forms.BindingSource.Current%2A>プロパティは、その新しい値に既に格納されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-276">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="022bb-277"><xref:System.Windows.Forms.BindingSource.CurrentChanged> 既定のイベントは、<xref:System.Windows.Forms.BindingSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-277"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="022bb-278">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-278">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-279">
            <see cref="P:System.Windows.Forms.BindingSource.Current" /> プロパティのプロパティ値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-279">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-280"><xref:System.Windows.Forms.BindingSource.CurrentItemChanged>すべてを発生させるような場合への応答でイベントが発生、<xref:System.Windows.Forms.BindingSource.CurrentChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-280">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="022bb-281">さらに、<xref:System.Windows.Forms.BindingSource.CurrentItemChanged>されるたびに発生したものプロパティのいずれかの値<xref:System.Windows.Forms.BindingSource.Current%2A>を変更します。</span><span class="sxs-lookup"><span data-stu-id="022bb-281">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="022bb-282">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-282">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-283">同時実行に関する例外が <see cref="T:System.Windows.Forms.BindingSource" /> によって表示されずに処理された場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-283">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-284">このイベントは、情報提供し、CLS 準拠の例外のみを報告します。</span><span class="sxs-lookup"><span data-stu-id="022bb-284">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="022bb-285">発生した例外の種類を決定するには、このイベントを処理し、確認、<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A>のプロパティ、<xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-285">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="022bb-286">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-286">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-287">コネクタの現在のバインド先であるデータ ソースの特定のリストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-287">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-288">
            <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> のリスト (または行) の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-288">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          </span>
          <span data-ttu-id="022bb-289">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-289">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-290">場合、<xref:System.Windows.Forms.BindingSource.DataSource%2A>複数一覧またはテーブル) が含まれています、データの設定する必要があります、<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティ ソースのいずれかの名前をします。</span><span class="sxs-lookup"><span data-stu-id="022bb-290">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="022bb-291">このプロパティが発生の設定、<xref:System.Windows.Forms.BindingSource.DataMemberChanged>イベント</span><span class="sxs-lookup"><span data-stu-id="022bb-291">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-292">
            <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> プロパティ値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-292">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-293"><xref:System.Windows.Forms.BindingSource.DataMemberChanged>イベントが発生した後、<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティが変更されました。</span><span class="sxs-lookup"><span data-stu-id="022bb-293">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="022bb-294">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-294">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-295">コネクタのバインド先であるデータ ソースを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-295">Gets or sets the data source that the connector binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-296">データ ソースとして機能する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-296">An <see cref="T:System.Object" /> that acts as a data source.</span>
          </span>
          <span data-ttu-id="022bb-297">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-297">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-298"><xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティは、型、オブジェクト、および種類のリストを含む、データ ソースの数に設定することができます。</span><span class="sxs-lookup"><span data-stu-id="022bb-298">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="022bb-299">結果のデータ ソースは、リストとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-299">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="022bb-300">次の表は、一般的なデータ ソースと結果のリストの評価の一部を示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-300">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="022bb-301">データ ソースのプロパティ</span><span class="sxs-lookup"><span data-stu-id="022bb-301">DataSource property</span></span>|<span data-ttu-id="022bb-302">結果のリスト</span><span class="sxs-lookup"><span data-stu-id="022bb-302">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="022bb-303">空<xref:System.ComponentModel.IBindingList>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="022bb-303">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="022bb-304">追加された項目の種類を一覧を設定する、項目の追加します。</span><span class="sxs-lookup"><span data-stu-id="022bb-304">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="022bb-305">`null` <xref:System.Windows.Forms.BindingSource.DataMember%2A>設定</span><span class="sxs-lookup"><span data-stu-id="022bb-305">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="022bb-306">サポートされていません<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-306">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="022bb-307">リスト以外の型のオブジェクトまたはオブジェクト型"T"</span><span class="sxs-lookup"><span data-stu-id="022bb-307">Non-list type or object of type "T"</span></span>|<span data-ttu-id="022bb-308">空<xref:System.ComponentModel.IBindingList>型"T"です。</span><span class="sxs-lookup"><span data-stu-id="022bb-308">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="022bb-309">配列のインスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-309">Array instance</span></span>|<span data-ttu-id="022bb-310"><xref:System.ComponentModel.IBindingList> 配列の要素を含むです。</span><span class="sxs-lookup"><span data-stu-id="022bb-310"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="022bb-311"><xref:System.Collections.IEnumerable> インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-311"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="022bb-312"><xref:System.ComponentModel.IBindingList>を含む、<xref:System.Collections.IEnumerable>項目。</span><span class="sxs-lookup"><span data-stu-id="022bb-312">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="022bb-313">"T"の種類を含むインスタンスを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-313">List instance containing type "T"</span></span>|<span data-ttu-id="022bb-314"><xref:System.ComponentModel.IBindingList> 型"T"を含むインスタンス。</span><span class="sxs-lookup"><span data-stu-id="022bb-314"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="022bb-315">さらに、<xref:System.Windows.Forms.BindingSource.DataSource%2A>などの他の種類を一覧表示設定できる<xref:System.ComponentModel.IListSource>と<xref:System.ComponentModel.ITypedList>と<xref:System.Windows.Forms.BindingSource>適切に処理されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-315">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="022bb-316">この場合、一覧に含まれる型には、既定のコンス トラクターが必要です。</span><span class="sxs-lookup"><span data-stu-id="022bb-316">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="022bb-317">設定する必要があります指定された参照には、1 つ以上のリストまたはテーブルが含まれている場合に、データ ソースを設定するとき、<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティにバインドするリストを指定する文字列をします。</span><span class="sxs-lookup"><span data-stu-id="022bb-317">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="022bb-318">このプロパティが発生の設定、<xref:System.Windows.Forms.BindingSource.DataSourceChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-318">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="022bb-319">変更を加えた場合、<xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティの値がこれを行う、UI が変更を反映していることを確認するユーザー インターフェイス (UI) スレッドでします。</span><span class="sxs-lookup"><span data-stu-id="022bb-319">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="022bb-320"><xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティは既定のプロパティを<xref:System.Windows.Forms.BindingSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-320">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-321">次のコード例は、する顧客のリストを割り当てます、<xref:System.Windows.Forms.BindingSource.DataSource%2A>の<xref:System.Windows.Forms.BindingSource>コンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="022bb-321">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="022bb-322">このコード例に示されている例の一部である[する方法: BindingSource ResetItem メソッドを使用して変更通知を発生させる](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-322">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-323">
            <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> プロパティ値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-323">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-324"><xref:System.Windows.Forms.BindingSource.DataSourceChanged>イベントが発生した後、<xref:System.Windows.Forms.BindingSource.DataSource%2A>プロパティが変更されました。</span><span class="sxs-lookup"><span data-stu-id="022bb-324">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="022bb-325">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-325">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="022bb-326">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-326">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-327">
            <see cref="T:System.Windows.Forms.BindingSource" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-327">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-328">このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-328">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="022bb-329">`Dispose` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-329">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="022bb-330"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-330"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="022bb-331">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Windows.Forms.BindingSource>参照します。</span><span class="sxs-lookup"><span data-stu-id="022bb-331">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="022bb-332">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="022bb-332">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-333">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-333">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="022bb-334">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-334">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="022bb-335">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-335">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="022bb-336">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-336">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-337">基になるデータ ソースに保留中の変更を適用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-337">Applies pending changes to the underlying data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-338">ときに、<xref:System.Windows.Forms.BindingSource.EndEdit%2A>メソッドが呼び出されると、基になるデータ ソースに保留中の変更をすべて適用されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-338">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="022bb-339">このメソッドも何も起こりませんデータ ソースに含まれるオブジェクトを実装しない限り、<xref:System.ComponentModel.IEditableObject>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-339">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="022bb-340">オブジェクトを実装していない場合、<xref:System.ComponentModel.IEditableObject>インターフェイス、データへの変更は、それぞれの変更後すぐに、基になるデータ ソースにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="022bb-340">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="022bb-341">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-341">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-342">表示する行のフィルター処理に使用する式を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-342">Gets or sets the expression used to filter which rows are viewed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-343">行のフィルター処理方法を指定する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-343">A string that specifies how rows are to be filtered.</span>
          </span>
          <span data-ttu-id="022bb-344">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-344">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-345">複合データ バインディングのシナリオで通常使用される、<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティでは、サブセットを表示することができます、<xref:System.Windows.Forms.BindingSource.DataSource%2A>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-345">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="022bb-346">実装するだけの基になる一覧表示、<xref:System.ComponentModel.IBindingListView>インターフェイスのサポートがフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="022bb-346">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="022bb-347">ときに<xref:System.Windows.Forms.BindingSource.Filter%2A>は`null`、<xref:System.Windows.Forms.BindingSource>このプロパティを基になるリストに渡します。</span><span class="sxs-lookup"><span data-stu-id="022bb-347">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="022bb-348">オブジェクトの初期化中にこのプロパティを設定する場合、初期化が完了した後に、呼び出しはまで延期されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-348">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="022bb-349">形成するために、フィルター値の後にフィルターを適用するには、演算子と値列の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="022bb-349">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="022bb-350">使用できるフィルターの構文は、基になるデータ ソースによって異なります。</span><span class="sxs-lookup"><span data-stu-id="022bb-350">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="022bb-351">基になるデータ ソースがある場合、 <xref:System.Data.DataSet>、 <xref:System.Data.DataTable>、または<xref:System.Data.DataView>に記載されている構文を使用してブール式を指定することができます、<xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-351">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="022bb-352">値、<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティの値に影響、<xref:System.Windows.Forms.BindingSource.Count%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-352">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="022bb-353">さらに、<xref:System.Windows.Forms.BindingSource.Filter%2A>データ ソースが変更されたときに、値は保持されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-353">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="022bb-354">フィルター処理を停止する、<xref:System.Windows.Forms.BindingSource.DataSource%2A>を呼び出し、<xref:System.Windows.Forms.BindingSource.RemoveFilter%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-354">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-355">次の例を使用する方法を示しています、<xref:System.Windows.Forms.BindingSource.Filter%2A>を持つプロパティ、<xref:System.Data.DataView>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-355">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="022bb-356">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます`PopulateDataViewAndFilter`フォームのコンス トラクターからまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-356">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="022bb-357">フォームをインポートする必要があります、<xref:System.Xml>と<xref:System.IO>名前空間。</span><span class="sxs-lookup"><span data-stu-id="022bb-357">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-358">データ ソースから指定された項目を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-358">Find the specified item in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="022bb-359">検索対象の <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-359">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="022bb-360">照合する <c>prop</c> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-360">The value of <c>prop</c> to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-361">指定したプロパティ記述子を持つ項目のインデックスを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-361">Searches for the index of the item that has the given property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-362">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> の指定した値を持つ項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-362">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-363">このメソッドで通常使用される複雑なデータ バインディングの場合で、フィールドの値が指定された最初の行を検索、`prop`パラメーターの値に等しい、`key`パラメーター</span><span class="sxs-lookup"><span data-stu-id="022bb-363">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="022bb-364">このメソッドは、要求を基になるリストの単に参照<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-364">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-365">たとえば、基になるデータ ソースがある場合、 <xref:System.Data.DataSet>、 <xref:System.Data.DataTable>、または<xref:System.Data.DataView>、このメソッドは、<xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-365">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-366">動作<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>など返される値は一致する項目が見つからない場合は、基になるリスト内のメソッドの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="022bb-366">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-367">次のコード例は、<xref:System.Windows.Forms.BindingSource.Find%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-367">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="022bb-368">完全な例は、クラスの概要に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="022bb-368">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-369">基底のリストが <see cref="T:System.ComponentModel.IBindingList" /> 型ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-369">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="022bb-370">検索するプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-370">The name of the property to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="022bb-371">検索の対象となる指定した <c>propertyName</c> を持つ項目の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-371">The value of the item with the specified <c>propertyName</c> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-372">指定した名前のプロパティと値を持つリスト内の項目のインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-372">Returns the index of the item in the list with the specified property name and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-373">指定した名前のプロパティと値を持つ項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-373">The zero-based index of the item with the specified property name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-374"><xref:System.Windows.Forms.BindingSource.Find%2A>メソッドは、基になるリストが場合にのみ使用できます、<xref:System.ComponentModel.IBindingList>実装を検索します。</span><span class="sxs-lookup"><span data-stu-id="022bb-374">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="022bb-375">このメソッドは、要求を基になるリストの単に参照<xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-375">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-376">たとえば、基になるデータ ソースがある場合、 <xref:System.Data.DataSet>、 <xref:System.Data.DataTable>、または<xref:System.Data.DataView>、このメソッドは変換`propertyName`を<xref:System.ComponentModel.PropertyDescriptor>を呼び出すと、<xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-376">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="022bb-377">動作<xref:System.Windows.Forms.BindingSource.Find%2A>など返される値は一致する項目が見つからない場合は、基になるリスト内のメソッドの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="022bb-377">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="022bb-378">プロパティ名の比較は区別されません。</span><span class="sxs-lookup"><span data-stu-id="022bb-378">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-379">次の例を使用する方法を示しています、<xref:System.Windows.Forms.BindingSource.Find%2A>メソッドを<xref:System.Data.DataView>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-379">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="022bb-380">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます`PopulateDataViewAndFind`フォームのコンス トラクターからまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-380">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="022bb-381">フォームをインポートする必要があります、<xref:System.Xml>と<xref:System.IO>名前空間。</span><span class="sxs-lookup"><span data-stu-id="022bb-381">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-382">基底のリストが、検索機能を実装した <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-382">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="022bb-383">
            <paramref name="propertyName" /> がリスト内のプロパティと一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-383">
              <paramref name="propertyName" /> does not match a property in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-384">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> の列挙子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-384">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-385">
            <see cref="T:System.Collections.IEnumerator" /> の <see cref="P:System.Windows.Forms.BindingSource.List" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-385">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="022bb-386">リストから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-386">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-387">データ ソースのリスト型について、バインド可能なプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-387">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-388">データのバインドに使用するこのリスト型のプロパティを表す <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-388">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="022bb-389">リストから検索するバインド可能な <see cref="T:System.ComponentModel.PropertyDescriptor" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-390">バインディングのためのデータを提供するリストの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-390">Gets the name of the list supplying data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-391">バインディングのためのデータを提供するリストの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-391">The name of the list supplying the data for binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember">
          <span data-ttu-id="022bb-392">CurrencyManager を取得するデータ ソース内の列またはリストの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-392">The name of column or list, within the data source to retrieve the currency manager for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-393">指定されたデータ メンバーに関連付けられた CurrencyManager を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-393">Gets the related currency manager for the specified data member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-394">指定されたデータ メンバーに関連付けられた <see cref="T:System.Windows.Forms.CurrencyManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-394">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-395">場合`dataMember`は`null`または空の文字列 ("")、<xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A>メイン currencymanager を返しますそれ以外の場合、別の確認<xref:System.Windows.Forms.BindingSource>指定されたデータ メンバーにバインドされ、その通貨マネージャーを返します。</span><span class="sxs-lookup"><span data-stu-id="022bb-395">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="022bb-396">
            <see cref="T:System.Object" /> プロパティで表される基底のリストで検索する <see cref="P:System.Windows.Forms.BindingSource.List" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-396">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="022bb-397">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-397">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-398">指定したオブジェクトを検索し、リスト全体でそのオブジェクトが最初に見つかった位置のインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-398">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="022bb-399">最初に見つかった <paramref name="value" /> パラメーターの 0 から始まるインデックス。<paramref name="value" /> がリストにない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-399">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-400">実装は、基になるリストの依存`IndexOf`メソッド、通常、次の特性を適用します。</span><span class="sxs-lookup"><span data-stu-id="022bb-400">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="022bb-401"><xref:System.Windows.Forms.BindingSource.List%2A>は、最初の要素を起点と最後の要素で終わる検索します。</span><span class="sxs-lookup"><span data-stu-id="022bb-401">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="022bb-402">基になるメソッドは一方向の検索を実行しますしたがって、平均実行時間の値に比例して、<xref:System.Windows.Forms.BindingSource.Count%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-402">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="022bb-403">基になるメソッドを呼び出して等しいかどうかを決定する、<xref:System.Object.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-403">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="022bb-404">
            <c>value</c> を挿入する位置を示す、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-404">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="022bb-405">挿入する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-405">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="022bb-406">値として <see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-406">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-407">リスト内の指定したインデックスに項目を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-407">Inserts an item into the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-408">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-408">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="022bb-409">
            <paramref name="index" /> が 0 未満の値か、<see cref="P:System.Windows.Forms.BindingSource.Count" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-409">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-410">リストが読み取り専用か、または固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-410">The list is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-411">リストのバインディングが中断されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-411">Gets a value indicating whether the list binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-412">バインディングが中断されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-412">
              <see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-413">基になるリストが固定サイズかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-413">Gets a value indicating whether the underlying list has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-414">基になるリストが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-414">
              <see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-415">リストが固定サイズの場合、追加または削除の要素の後にできません、リストが作成されましたが、既存の要素を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="022bb-415">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-416">基になるリストが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-416">Gets a value indicating whether the underlying list is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-417">リストが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-417">
              <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-418">リストが読み取り専用には追加、削除、またはリスト項目の変更後にできません、リストを作成します。</span><span class="sxs-lookup"><span data-stu-id="022bb-418">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-419">基底のリストの項目が並べ替え済みかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-419">Gets a value indicating whether the items in the underlying list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-420">リストが <see cref="T:System.ComponentModel.IBindingList" /> で、並べ替えが済んでいる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-420">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-421"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> 常に返します`false`リストがない場合、<xref:System.ComponentModel.IBindingList>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-421"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-422">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-422">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-423">リストが同期されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-423">
              <see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="022bb-424">取得する要素の、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-424">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-425">指定したインデックスにあるリスト要素を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-425">Gets or sets the list element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-426">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-426">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-427"><xref:System.Windows.Forms.BindingSource.Item%2A>プロパティは、このクラスのインデクサーを表します。</span><span class="sxs-lookup"><span data-stu-id="022bb-427">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="022bb-428">受け取って`null`有効な値としてし、一覧内で重複する項目を許可します。</span><span class="sxs-lookup"><span data-stu-id="022bb-428">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="022bb-429">設定値が生成されます、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-429">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="022bb-430">
            <paramref name="index" /> が 0 未満か <see cref="P:System.Windows.Forms.BindingSource.Count" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-430">
              <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-431">コネクタのバインド先であるリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-431">Gets the list that the connector is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-432">リストを表す <see cref="T:System.Collections.IList" />。この <see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられている基底のリストがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-432">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-433"><xref:System.Windows.Forms.BindingSource>クラスは、さまざまなデータ ソースを一様に処理します。</span><span class="sxs-lookup"><span data-stu-id="022bb-433">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="022bb-434">理想的には、<xref:System.Windows.Forms.BindingSource.List%2A>一般的なプロパティを設定する必要があります<xref:System.Collections.IList>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-434">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="022bb-435">ただし、場合によって必要があります、このプロパティをより具体的な種類にキャストします。</span><span class="sxs-lookup"><span data-stu-id="022bb-435">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="022bb-436">次の表は、基になるリストの種類は、型またはデータ ソースの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="022bb-436">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="022bb-437">データ ソースの種類</span><span class="sxs-lookup"><span data-stu-id="022bb-437">Data source type</span></span>|<span data-ttu-id="022bb-438">基になるリストの説明</span><span class="sxs-lookup"><span data-stu-id="022bb-438">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="022bb-439"><xref:System.Windows.Forms.BindingSource.DataSource%2A> および<xref:System.Windows.Forms.BindingSource.DataMember%2A>は `null`</span><span class="sxs-lookup"><span data-stu-id="022bb-439"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="022bb-440">空の <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="022bb-440">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="022bb-441"><xref:System.Windows.Forms.BindingSource.DataSource%2A> `null`が<xref:System.Windows.Forms.BindingSource.DataMember%2A>はありません `null`</span><span class="sxs-lookup"><span data-stu-id="022bb-441"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="022bb-442">[なし] です。取得しようと、<xref:System.Windows.Forms.BindingSource.List%2A>がスローされます、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-442">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="022bb-443"><xref:System.Array>インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-443">An <xref:System.Array> instance</span></span>|<span data-ttu-id="022bb-444"><xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="022bb-444">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="022bb-445"><xref:System.ComponentModel.IListSource>インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-445">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="022bb-446">呼び出しからの戻り値、<xref:System.ComponentModel.IListSource.GetList%2A>メソッドのこの<xref:System.ComponentModel.IListSource>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="022bb-446">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="022bb-447"><xref:System.ComponentModel.IBindingList>インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-447">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="022bb-448"><xref:System.ComponentModel.IBindingList>。</span><span class="sxs-lookup"><span data-stu-id="022bb-448">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="022bb-449"><xref:System.Collections.IList>インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-449">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="022bb-450"><xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="022bb-450">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="022bb-451">以外<xref:System.Collections.IList>型"T"のインスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-451">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="022bb-452">A <xref:System.ComponentModel.BindingList%601> 1 つの要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="022bb-452">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="022bb-453"><xref:System.ComponentModel.ICustomTypeDescriptor>インスタンス</span><span class="sxs-lookup"><span data-stu-id="022bb-453">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="022bb-454"><xref:System.Collections.ArrayList> 1 つの要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="022bb-454">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="022bb-455"><xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="022bb-455">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="022bb-456"><xref:System.Collections.ArrayList>した要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="022bb-456">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="022bb-457"><xref:System.Array>を持つ型<xref:System.Windows.Forms.BindingSource.DataMember%2A>項目の"T"と入力します。</span><span class="sxs-lookup"><span data-stu-id="022bb-457">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="022bb-458"><xref:System.ComponentModel.BindingList%601>。</span><span class="sxs-lookup"><span data-stu-id="022bb-458">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="022bb-459">A<xref:System.Type>を表す、<xref:System.ComponentModel.IListSource>または <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="022bb-459">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="022bb-460">呼び出しによって作成されたインスタンス、<xref:System.Activator.CreateInstance%28System.Type%29>のメソッド、<xref:System.Activator>クラスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-460">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="022bb-461">A<xref:System.NotSupportedException>スローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-461">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="022bb-462"><xref:System.Collections.IList>を持つ型<xref:System.Windows.Forms.BindingSource.DataMember%2A>項目の"T"と入力します。</span><span class="sxs-lookup"><span data-stu-id="022bb-462">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="022bb-463">- または -</span><span class="sxs-lookup"><span data-stu-id="022bb-463">-or-</span></span><br /><br /> <span data-ttu-id="022bb-464">以外<xref:System.Collections.IList>型</span><span class="sxs-lookup"><span data-stu-id="022bb-464">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="022bb-465"><xref:System.ComponentModel.BindingList%601>。</span><span class="sxs-lookup"><span data-stu-id="022bb-465">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="022bb-466"><xref:System.ComponentModel.ICustomTypeDescriptor>型</span><span class="sxs-lookup"><span data-stu-id="022bb-466">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="022bb-467">[なし] です。取得しようと、<xref:System.Windows.Forms.BindingSource.List%2A>がスローされます、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-467">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="022bb-468">型が取得された場合は、<xref:System.Collections.IList>インターフェイス、基になるコレクションがなどのより複雑な可能性があります、<xref:System.Collections.ArrayList>または<xref:System.Data.DataView>クラスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-468">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-469">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.List%2A>、 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および<xref:System.Windows.Forms.BindingSource.Count%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-469">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="022bb-470">この例を実行するコードを貼り付けます、フォームが含まれていますが、<xref:System.Windows.Forms.BindingSource>という名前`BindingSource1`、という名前の 2 つのラベル`label1`と`label2`、という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-470">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="022bb-471">関連付ける、`button1_Click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-471">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-472">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-472">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-473">基底のリストまたはリスト内の項目が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-473">Occurs when the underlying list changes or an item in the list changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-474"><xref:System.Windows.Forms.BindingSource.ListChanged>イベント メンバーシップまたはによって表される、基になるリストのメタデータへの変更があるときに発生、<xref:System.Windows.Forms.BindingSource.List%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-474">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="022bb-475">たとえば、このイベントは項目の追加、削除、または移動すると、または<xref:System.Windows.Forms.BindingSource.DataSource%2A>または<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティが変更されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-475">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="022bb-476">値、<xref:System.Windows.Forms.BindingSource.Sort%2A>と<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティは、このイベントが発生したときに永続化されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-476">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="022bb-477">設定して、このイベントを完全に抑制することができます、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-477">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="022bb-478">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-478">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-479">次のコード例は、処理を示します、<xref:System.Windows.Forms.BindingSource.ListChanged>のイベント、<xref:System.Windows.Forms.BindingSource>ときに検出するコンポーネント、<xref:System.Windows.Forms.BindingSource>コンポーネントの基になる一覧が変更されました。</span><span class="sxs-lookup"><span data-stu-id="022bb-479">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-480">リストの最初の項目に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-480">Moves to the first item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-481">現在の値を変更、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティを 0 に、基になるデータ ソースの最初の項目。</span><span class="sxs-lookup"><span data-stu-id="022bb-481">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-482">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>、 <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、 <xref:System.Windows.Forms.BindingSource.Current%2A>、および<xref:System.Windows.Forms.BindingSource.Position%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-482">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="022bb-483">この例を実行するには、インポートするフォームにコードを貼り付けます、<xref:System.Drawing.Drawing2D>名前空間が含まれています、<xref:System.Windows.Forms.BindingSource>という`BindingSource1`という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-483">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="022bb-484">関連付ける、`Form1_Load`と`Form1_Paint`メソッド、<xref:System.Windows.Forms.Form.Load>と<xref:System.Windows.Forms.Control.Paint>、フォーム、関連のイベント、`button1_click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-484">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-485">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-485">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-486">リストの最後の項目に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-486">Moves to the last item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-487">現在の値を変更、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティの値には、基になるデータ ソースの最後の項目のインデックスを<xref:System.Windows.Forms.BindingSource.Count%2A>から 1 を引いたプロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-487">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-488">リストの次の項目に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-488">Moves to the next item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-489">現在の値を変更、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティを基になるデータ ソースの次の項目にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-489">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-490">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>、 <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、 <xref:System.Windows.Forms.BindingSource.Current%2A>、および<xref:System.Windows.Forms.BindingSource.Position%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-490">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="022bb-491">この例を実行するには、インポートするフォームにコードを貼り付けます、<xref:System.Drawing.Drawing2D>名前空間が含まれています、<xref:System.Windows.Forms.BindingSource>という`BindingSource1`という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-491">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="022bb-492">関連付ける、`Form1_Load`と`Form1_Paint`メソッド、<xref:System.Windows.Forms.Form.Load>と<xref:System.Windows.Forms.Control.Paint>、フォーム、関連のイベント、`button1_click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-492">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-493">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-493">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-494">リストの前の項目に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-494">Moves to the previous item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-495">このメソッドは、の現在の値を変更、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティを基になるデータ ソースの前の項目にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-495">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-496">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-496">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-497">
            <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-497">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-498">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-498">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-499">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-499">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-500"><xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-500">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-501">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-501">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-502">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-502">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-503">イベント データを格納している <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-503">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-504">
            <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-504">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-505">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-505">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-506">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-506">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-507"><xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-507">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-508">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-508">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-509">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-509">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-510">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-510">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-511">
            <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-511">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-512">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-512">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-513">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-513">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-514">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-514">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-515"><xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-515">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-516">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-516">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-517">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-517">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-518">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-518">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-519">
            <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-519">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-520">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-520">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-521">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-521">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-522"><xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-522">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-523">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-523">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-524">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-524">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-525">イベント データを格納している <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-525">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-526">
            <see cref="E:System.Windows.Forms.BindingSource.DataError" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-526">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-527">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-527">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-528">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-528">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-529"><xref:System.Windows.Forms.BindingSource.OnDataError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-529">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-530">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-530">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-531">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-531">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-532">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-532">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-533">
            <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-533">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-534">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-534">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-535">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-535">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-536"><xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-536">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-537">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-537">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-538">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-538">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
            <span data-ttu-id="022bb-539">
              <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-539">The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.</span>
            </span>
            <span data-ttu-id="022bb-540">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-540">This is the preferred technique for handling the event in a derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-541">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-541">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-542">
            <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-542">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-543">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-543">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-544">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-544">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-545"><xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-545">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-546">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-546">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-547">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-547">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-548">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-548">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-549">
            <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-549">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-550">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-550">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-551">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-551">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-552"><xref:System.Windows.Forms.BindingSource.OnListChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-552">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-553">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-553">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-554">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-554">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="022bb-555">イベント データを格納している <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-555">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-556">
            <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-556">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-557">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-557">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="022bb-558">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-558">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="022bb-559"><xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-559">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="022bb-560">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="022bb-560">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="022bb-561">派生クラスで <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="022bb-561">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-562">基底のリストにおける現在の項目のインデックスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-562">Gets or sets the index of the current item in the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-563">基底のリストにおける現在の項目の位置を指定する 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-563">A zero-based index that specifies the position of the current item in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-564">設定するときに、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティ、範囲外の値は次のように扱われます。</span><span class="sxs-lookup"><span data-stu-id="022bb-564">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="022bb-565">負の値は 0 として扱われます。</span><span class="sxs-lookup"><span data-stu-id="022bb-565">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="022bb-566">値より大きいまたは等しい<xref:System.Windows.Forms.BindingSource.Count%2A>として扱われます<xref:System.Windows.Forms.BindingSource.Count%2A>から 1 を減算します。</span><span class="sxs-lookup"><span data-stu-id="022bb-566">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="022bb-567">変更、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティは調整、<xref:System.Windows.Forms.BindingSource.Current%2A>プロパティ同様にします。</span><span class="sxs-lookup"><span data-stu-id="022bb-567">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-568">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.MoveNext%2A>、 <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>、 <xref:System.Windows.Forms.BindingSource.Current%2A>、および<xref:System.Windows.Forms.BindingSource.Position%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-568">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="022bb-569">この例を実行するには、インポートするフォームにコードを貼り付けます、<xref:System.Drawing.Drawing2D>名前空間が含まれています、<xref:System.Windows.Forms.BindingSource>という`BindingSource1`という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-569">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="022bb-570">関連付ける、`Form1_Load`と`Form1_Paint`メソッド、<xref:System.Windows.Forms.Form.Load>と<xref:System.Windows.Forms.Control.Paint>、フォーム、関連のイベント、`button1_click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-570">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-571">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-571">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-572">
            <see cref="P:System.Windows.Forms.BindingSource.Position" /> プロパティの値が変更された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-572">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-573"><xref:System.Windows.Forms.BindingSource.PositionChanged>イベントが発生した後、<xref:System.Windows.Forms.BindingSource.Position%2A>プロパティが変更されました。</span><span class="sxs-lookup"><span data-stu-id="022bb-573">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="022bb-574">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-574">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-575">
            <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> イベントを発生させるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-575">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-576">
            <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> イベントを発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-576">
              <see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="022bb-577">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-577">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-578">ときに、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>プロパティは`false`、中断の生成<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-578">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="022bb-579">このイベントは、追加、削除、挿入、または項目の変更など、何らかの方法でバインドされたリストが変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-579">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="022bb-580">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストから削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-580">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-581">指定した項目をリストから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-581">Removes the specified item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-582"><xref:System.Windows.Forms.BindingSource.Remove%2A>メソッドは、検索対象のリスト、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="022bb-582">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="022bb-583">見つかると、このメソッドを試みますから項目を削除する、<xref:System.Windows.Forms.BindingSource.List%2A>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-583">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="022bb-584">リストが固定サイズまたは読み取り専用この試行は失敗します。</span><span class="sxs-lookup"><span data-stu-id="022bb-584">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="022bb-585">これら 2 つの条件をテストすることができます、<xref:System.Windows.Forms.BindingSource.IsFixedSize%2A>と<xref:System.Windows.Forms.BindingSource.IsReadOnly%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="022bb-585">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="022bb-586">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-586">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-587">基底のリストが固定サイズか、または読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-587">The underlying list has a fixed size or is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="022bb-588">削除する項目の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-588">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-589">リスト内の指定したインデックスにある項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-589">Removes the item at the specified index in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-590">これら 2 つの条件をテストすることができます、<xref:System.Windows.Forms.BindingSource.IsFixedSize%2A>と<xref:System.Windows.Forms.BindingSource.IsReadOnly%2A>プロパティ、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="022bb-590">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="022bb-591">このメソッドを発生させる、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-591">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-592">次のコード例を示しています、 <xref:System.Windows.Forms.BindingSource.List%2A>、 <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>、および<xref:System.Windows.Forms.BindingSource.Count%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-592">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="022bb-593">この例を実行するコードを貼り付けます、フォームが含まれていますが、<xref:System.Windows.Forms.BindingSource>という名前`BindingSource1`、という名前の 2 つのラベル`label1`と`label2`、という名前のボタンと`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-593">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="022bb-594">関連付ける、`button1_Click`メソッドを<xref:System.Windows.Forms.Control.Click>イベントを`button1`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-594">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="022bb-595">Visual Basic の場合は、System.Data.dll への参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="022bb-595">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="022bb-596">
            <paramref name="index" /> が 0 未満か、または <see cref="P:System.Windows.Forms.BindingSource.Count" /> プロパティの値を上回っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-596">
              <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-597">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストが、読み取り専用、または固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-597">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-598">リストから現在の項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-598">Removes the current item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-599"><xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>メソッドは、<xref:System.Windows.Forms.BindingSource.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-599">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="022bb-600">
            <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> プロパティが <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-600">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="022bb-601">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-601">-or-</span>
          </span>
          <span data-ttu-id="022bb-602">
            <see cref="P:System.Windows.Forms.BindingSource.Position" /> が 0 未満の値か、<see cref="P:System.Windows.Forms.BindingSource.Count" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-602">
              <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-603">
            <see cref="P:System.Windows.Forms.BindingSource.List" /> プロパティで表される基底のリストが、読み取り専用、または固定サイズです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-603">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-604">
            <see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられているフィルターを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-604">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-605"><xref:System.Windows.Forms.BindingSource.RemoveFilter%2A>メソッドは、要求を基になるリストの参照<xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-605">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-606">実装する一覧のみ<xref:System.ComponentModel.IBindingListView>フィルタ リングをサポートします。</span><span class="sxs-lookup"><span data-stu-id="022bb-606">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="022bb-607">既定では、このメソッドの呼び出しは同じことに、<xref:System.Windows.Forms.BindingSource.Filter%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-607">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-608">基底のリストがフィルター処理をサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-608">The underlying list does not support filtering.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-609">
            <see cref="T:System.Windows.Forms.BindingSource" /> に関連付けられている並べ替えを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-609">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-610"><xref:System.Windows.Forms.BindingSource.RemoveSort%2A>メソッドは、要求を基になるリストの参照<xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-610">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="022bb-611">実装する一覧のみ<xref:System.ComponentModel.IBindingList>並べ替えをサポートします。</span><span class="sxs-lookup"><span data-stu-id="022bb-611">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="022bb-612">既定では、このメソッドの呼び出しは同じことに、<xref:System.Windows.Forms.BindingSource.Sort%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-612">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-613">基底のリストが並べ替えをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-613">The underlying list does not support sorting.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-614">
            <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> プロパティを再初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-614">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-615"><xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A>メソッドの再初期化、<xref:System.Windows.Forms.BindingSource.AllowNew%2A>の対応する値を反映するようにプロパティ<xref:System.Windows.Forms.BindingSource.AllowNew%2A>基になるリスト内のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-615">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged">
          <span data-ttu-id="022bb-616">データ スキーマが変更された場合は <see langword="true" />。値のみが変更された場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-616">
              <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-617">
            <see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、リスト内のすべての項目を再度読み込んで表示値を更新するよう通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-617">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-618"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A>メソッドにバインドされているすべてのコントロールの通知、<xref:System.Windows.Forms.BindingSource>をその値を更新します。</span><span class="sxs-lookup"><span data-stu-id="022bb-618">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="022bb-619">メソッドは、発生させることによって、<xref:System.Windows.Forms.BindingSource.ListChanged>イベントには、少なくとも 1 回;`metaDataChanged`パラメーターを基になる変更の性質を示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-619">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="022bb-620">A`metaDataChanged`値`true`ことを示しますのデータ スキーマ<xref:System.Windows.Forms.BindingSource>が変更されました。</span><span class="sxs-lookup"><span data-stu-id="022bb-620">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="022bb-621">A<xref:System.Windows.Forms.BindingSource.ListChanged>イベントが発生<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>'éý'<xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-621">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="022bb-622">A`metaDataChanged`値`false`1 つまたは複数の項目の値のみが変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="022bb-622">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="022bb-623">値に関係なく`metaDataChanged`、<xref:System.Windows.Forms.BindingSource.ListChanged>イベントが発生<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>'éý'<xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-623">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="022bb-624">その結果、呼び出す<xref:System.Windows.Forms.BindingSource.ResetBindings%2A>のパラメーターを持つ`true`2 つが生成されます<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-624">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="022bb-625"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> 別のメンバーは、データ バインディング、設定などに主要な変更が加えますされるたびに自動的に呼び出されます、<xref:System.Windows.Forms.BindingSource.DataSource%2A>または<xref:System.Windows.Forms.BindingSource.DataMember%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-625"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="022bb-626">ただし、プログラマでは、このメソッドが明示的に呼び出してもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-626">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-627">次のコード例では、<xref:System.Windows.Forms.BindingSource>変更通知は提供されませんが、配列のリストをバインドするコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="022bb-627">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="022bb-628">一覧から項目を削除し、呼び出すことによって、バインドされたコントロールは、変更の通知を<xref:System.Windows.Forms.BindingSource.ResetBindings%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-628">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="022bb-629">このコード例に示されている例の一部である[する方法: データ ソースの更新の BindingSource で Windows フォーム コントロールに反映](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-629">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-630">
            <see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、現在選択されている項目を再度読み込んで表示値を更新するよう通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-630">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-631">このメソッドは、通話、<xref:System.Windows.Forms.BindingSource.ListChanged>イベントが発生すると、現在の位置で変更されたアイテムを指定します。</span><span class="sxs-lookup"><span data-stu-id="022bb-631">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="022bb-632">変更された項目の、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-632">The zero-based index of the item that has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-633">
            <see cref="T:System.Windows.Forms.BindingSource" /> にバインドされたコントロールに対し、指定したインデックスにある項目を再度読み込んで表示値を更新するよう通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-633">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-634"><xref:System.Windows.Forms.BindingSource.ResetItem%2A>メソッドは、指定した位置にある項目にバインドされているすべてのコントロールに通知<xref:System.Windows.Forms.BindingSource.Position%2A>をその値を更新します。</span><span class="sxs-lookup"><span data-stu-id="022bb-634">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="022bb-635">メソッドは、発生させることによって、<xref:System.Windows.Forms.BindingSource.ListChanged>イベントと<xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType>'éý'<xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-635">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="022bb-636"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> 自動的に呼び出されます、個々 の項目の値に変更されるたびにします。</span><span class="sxs-lookup"><span data-stu-id="022bb-636"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="022bb-637">ただし、プログラマでは、このメソッドが明示的に呼び出してもできます。</span><span class="sxs-lookup"><span data-stu-id="022bb-637">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-638">次のコード例では、<xref:System.Windows.Forms.BindingSource>リストにバインドするコンポーネント、<xref:System.Windows.Forms.DataGridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="022bb-638">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="022bb-639">一覧は変更通知を発生していないため、<xref:System.Windows.Forms.BindingSource.ResetItem%2A>メソッドを<xref:System.Windows.Forms.BindingSource>を発生させるために使用、<xref:System.Windows.Forms.BindingSource.ListChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="022bb-639">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="022bb-640">このコード例に示されている例の一部である[する方法: BindingSource ResetItem メソッドを使用して変更通知を発生させる](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md)です。</span><span class="sxs-lookup"><span data-stu-id="022bb-640">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-641">データ バインディングを再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-641">Resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-642"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> および<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>単純バインディング シナリオでは一時中断とデータ バインディングの再開を許可する方法は 2 つです。</span><span class="sxs-lookup"><span data-stu-id="022bb-642"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="022bb-643">通常、いくつかの編集を行えないをデータ フィールドに検証が行われる前にユーザーを許可する必要がある場合は、データ バインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="022bb-643">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="022bb-644">たとえば、に従ってを 2 回、1 つのフィールドを変更する必要がありますが、検証された時点最初のフィールドにエラーが発生する 2 番目のフィールドとが発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-644">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="022bb-645">使用して<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>ことを防止するまで、データ ソースにプッシュされる<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>が呼び出されるしますが、実際には、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-645">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="022bb-646">など、複合データ バインディングを使用するコントロール、<xref:System.Windows.Forms.DataGridView>などの変更イベントに基づくの値を更新、制御、<xref:System.Windows.Forms.CurrencyManager.ListChanged>呼び出すので、イベント<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>がないようにデータ ソースへの変更を受信します。</span><span class="sxs-lookup"><span data-stu-id="022bb-646">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="022bb-647">このため、この<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>と<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>単純バインド コントロールで使用するように設計されていますが、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="022bb-647">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="022bb-648">またはこれらのメソッドで使える複合バインディング シナリオを抑制する場合<xref:System.Windows.Forms.BindingSource.ListChanged>イベントを設定して、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-648">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-649">並べ替えに使用する列名と、データ ソースで行を表示するときの並べ替え順序を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-649">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-650">列名の後に "ASC" (昇順) または "DESC" (降順) を付けた、大文字と小文字が区別される文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-650">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span>
          </span>
          <span data-ttu-id="022bb-651">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-651">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-652"><xref:System.Windows.Forms.BindingSource.Sort%2A>プロパティは、並べ替えの方向と、行の並べ替えに使用する列名を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="022bb-652">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="022bb-653">既定では列は昇順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="022bb-653">Columns are sorted ascending by default.</span></span> <span data-ttu-id="022bb-654">複数の列をなど、コンマで区切ることができます`"State, ZipCode DESC"`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-654">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="022bb-655">並べ替えをサポートする基底のリストを実装する必要があります、<xref:System.ComponentModel.IBindingList>または<xref:System.ComponentModel.IBindingListView>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="022bb-655">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="022bb-656">この機能を通じて照会できる、<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="022bb-656">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="022bb-657">複数列の並べ替えは、使用可能な場合に、<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="022bb-657">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="022bb-658">設定、<xref:System.Windows.Forms.BindingSource.Sort%2A>プロパティが内部リストの種類に応じて変わります。</span><span class="sxs-lookup"><span data-stu-id="022bb-658">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="022bb-659">リストの型の場合<xref:System.ComponentModel.IBindingList>、<xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType>と<xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType>内部リストにプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-659">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="022bb-660">リストの型の場合<xref:System.ComponentModel.IBindingListView>、<xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="022bb-660">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="022bb-661">内部リストの並べ替えのプロパティは、並べ替え文字列がない場合にのみ変更`null`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-661">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="022bb-662">`get`このプロパティのアクセサーは内部リストの並べ替えの値を取得できません。 代わりに、が返されます、`set`アクセサー値。</span><span class="sxs-lookup"><span data-stu-id="022bb-662">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="022bb-663">値、<xref:System.Windows.Forms.BindingSource.Sort%2A>データ ソースが変更されたときに、プロパティは保持されます。</span><span class="sxs-lookup"><span data-stu-id="022bb-663">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-664">次の例を使用する方法を示しています、<xref:System.Windows.Forms.BindingSource.Sort%2A>基本的な並べ替えを実行するプロパティ、<xref:System.Data.DataView>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-664">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="022bb-665">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます`PopulateDataViewAndSort`フォームのコンス トラクターからまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-665">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="022bb-666">フォームをインポートする必要があります、<xref:System.Xml>と<xref:System.IO>名前空間。</span><span class="sxs-lookup"><span data-stu-id="022bb-666">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="022bb-667">次の例を使用する方法を示しています、<xref:System.Windows.Forms.BindingSource.Sort%2A>プロパティを実行する高度なと並べ替え、<xref:System.Data.DataView>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-667">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="022bb-668">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます`PopulateDataViewAndAdvancedSort`フォームのコンス トラクターからまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="022bb-668">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="022bb-669">フォームをインポートする必要があります、<xref:System.Xml>と<xref:System.IO>名前空間。</span><span class="sxs-lookup"><span data-stu-id="022bb-669">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-670">データ ソースに適用される並べ替えに関する説明のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-670">Gets the collection of sort descriptions applied to the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-671">データ ソースが <see cref="T:System.ComponentModel.IBindingListView" /> の場合は、リストに適用される並べ替えに関する説明を格納している <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-671">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-672">リストがない場合、 <xref:System.ComponentModel.IBindingListView>、<xref:System.Windows.Forms.BindingSource.SortDescriptions%2A>は常に返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-672">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="022bb-673"><xref:System.ComponentModel.ListSortDescriptionCollection>読み取り専用コレクションです。</span><span class="sxs-lookup"><span data-stu-id="022bb-673">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-674">リスト項目の並べ替え方向を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-674">Gets the direction the items in the list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-675">リストの並べ替え方向を指定する <see cref="T:System.ComponentModel.ListSortDirection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-675">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-676">基になるリストがない場合、 <xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.BindingSource.SortDirection%2A>プロパティは常に返します<xref:System.ComponentModel.ListSortDirection.Ascending>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-676">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-677">リストの並べ替えに使用されている <see cref="T:System.ComponentModel.PropertyDescriptor" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-677">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-678">リストが <see cref="T:System.ComponentModel.IBindingList" /> の場合は、並べ替えに使用されている <see cref="T:System.ComponentModel.PropertyDescriptor" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-678">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-679">リストがない場合、 <xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.BindingSource.SortProperty%2A>は常に返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-679">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-680">データ ソースが複数列の並べ替えをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-680">Gets a value indicating whether the data source supports multi-column sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-681">リストが <see cref="T:System.ComponentModel.IBindingListView" /> で、複数列の並べ替えをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-681">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-682">リストがない場合、 <xref:System.ComponentModel.IBindingListView>、<xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A>は常に返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-682">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-683">データ ソースが変更通知をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-683">Gets a value indicating whether the data source supports change notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-684">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-684">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-685">データ ソースがフィルター処理をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-685">Gets a value indicating whether the data source supports filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-686">リストが <see cref="T:System.ComponentModel.IBindingListView" /> で、フィルター処理をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-686">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-687">リストがない場合、 <xref:System.ComponentModel.IBindingListView>、<xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A>は常に返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-687">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-688">データ ソースが、<see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> メソッドを使用した検索をサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-688">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-689">リストが <see cref="T:System.ComponentModel.IBindingList" /> で、<see cref="Overload:System.Windows.Forms.BindingSource.Find" /> メソッドを使用した検索をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-689">
              <see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-690">データ ソースがない場合、 <xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.BindingSource.SupportsSearching%2A>は常に返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-690">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="022bb-691">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.BindingSource.SupportsSearching%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="022bb-691">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="022bb-692">完全な例は、クラスの概要に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="022bb-692">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-693">データ ソースが並べ替えをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-693">Gets a value indicating whether the data source supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-694">データ ソースが <see cref="T:System.ComponentModel.IBindingList" /> で、並べ替えをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-694">
              <see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-695">データ ソースがない場合、 <xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.BindingSource.SupportsSorting%2A>プロパティは常に返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-695">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-696">データ バインディングに伴う変更によるバインド データ ソースの更新を中断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-696">Suspends data binding to prevent changes from updating the bound data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-697"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> および<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>単純バインディング シナリオでは一時中断とデータ バインディングの再開を許可する方法は 2 つです。</span><span class="sxs-lookup"><span data-stu-id="022bb-697"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="022bb-698">通常、いくつかの編集を行えないをデータ フィールドに検証が行われる前にユーザーを許可する必要がある場合は、データ バインディングを中断します。</span><span class="sxs-lookup"><span data-stu-id="022bb-698">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="022bb-699">たとえば、に従ってを 2 回、1 つのフィールドを変更する必要がありますが、検証された時点最初のフィールドにエラーが発生する 2 番目のフィールドとが発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-699">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="022bb-700">使用して<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>ことを防止するまで、データ ソースにプッシュされると<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>が呼び出されるしますが、実際には、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="022bb-700">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="022bb-701">など、複合データ バインディングを使用するコントロール、<xref:System.Windows.Forms.DataGridView>などの変更イベントに基づくの値を更新、制御、<xref:System.Windows.Forms.CurrencyManager.ListChanged>呼び出すので、イベント<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>がないようにデータ ソースへの変更を受信します。</span><span class="sxs-lookup"><span data-stu-id="022bb-701">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="022bb-702">このため、この<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A>と<xref:System.Windows.Forms.BindingSource.ResumeBinding%2A>単純バインド コントロールで使用するように設計されていますが、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="022bb-702">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="022bb-703">またはこれらのメソッドで使える複合バインディング シナリオを抑制する場合<xref:System.Windows.Forms.BindingSource.ListChanged>イベントを設定して、<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-703">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-704">基になるリストへのアクセスを同期するために使用できるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-704">Gets an object that can be used to synchronize access to the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-705">基になるリストへのアクセスを同期するために使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-705">An object that can be used to synchronize access to the underlying list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="022bb-706">検索に使用されるインデックスに追加する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-706">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-707">検索に使用されるインデックスに <see cref="T:System.ComponentModel.PropertyDescriptor" /> を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-707">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-708">基になるリストがある場合、<xref:System.ComponentModel.IBindingList>タイプ、このメソッドは追加、<xref:System.ComponentModel.PropertyDescriptor>インデックス。 それ以外の場合、呼び出し元がスローされます、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-708">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="022bb-709">基底のリストが <see cref="T:System.ComponentModel.IBindingList" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-709">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="022bb-710">検索に使用されるインデックスから削除する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-710">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-711">検索に使用されるインデックスから <see cref="T:System.ComponentModel.PropertyDescriptor" /> を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-711">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-712">基になるリストがない場合、 <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>、このメソッドは常にスロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="022bb-712">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="022bb-713">コレクションに追加された項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-713">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-714">保留中の新しい項目をコレクションから破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-714">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-715"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A>メソッドは、コレクションで指定されたインデックス位置に追加したアイテムの保留中の追加をロールバック`position`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-715">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="022bb-716">`position`パラメーターは、いくつかの新しい項目が同時に保留されているために必要です。</span><span class="sxs-lookup"><span data-stu-id="022bb-716">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="022bb-717">コレクションに追加された項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-717">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="022bb-718">保留中の新しい項目をコレクションにコミットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-718">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-719"><xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A>メソッドは、コレクションで指定されたインデックス位置に追加した項目の追加の保留中、コミット`position`です。</span><span class="sxs-lookup"><span data-stu-id="022bb-719">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="022bb-720">`position`パラメーターは、いくつかの新しい項目が同時に保留されているために必要です。</span><span class="sxs-lookup"><span data-stu-id="022bb-720">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-721">初期化の開始を通知するシグナルを <see cref="T:System.Windows.Forms.BindingSource" /> に送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-721">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="022bb-722">初期化の完了を通知するシグナルを <see cref="T:System.Windows.Forms.BindingSource" /> に送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="022bb-723">
            <see cref="T:System.Windows.Forms.BindingSource" /> が初期化されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-723">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="022bb-724">
            <see cref="T:System.Windows.Forms.BindingSource" /> が初期化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="022bb-724">
              <see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="022bb-725">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="022bb-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="022bb-726">これは、<xref:System.Windows.Forms.BindingSource> のインスタンスが <xref:System.ComponentModel.ISupportInitializeNotification> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="022bb-726">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>