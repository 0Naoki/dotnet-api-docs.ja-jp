<Type Name="ListControl" FullName="System.Windows.Forms.ListControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a2b71ec17b1124e2bbcac8f049acf3461918d0a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36518586" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ListControl : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ListControl extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ListControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListControl abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListControl = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.LookupBindingProperties("DataSource", "DisplayMember", "ValueMember", "SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bcb86-101">
        <see cref="T:System.Windows.Forms.ListBox" /> クラスおよび <see cref="T:System.Windows.Forms.ComboBox" /> クラスのメンバーの共通の実装を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcb86-101">Provides a common implementation of members for the <see cref="T:System.Windows.Forms.ListBox" /> and <see cref="T:System.Windows.Forms.ComboBox" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-102"><xref:System.Windows.Forms.ListControl>クラスの共通の要素の実装を提供する、<xref:System.Windows.Forms.ListBox>と<xref:System.Windows.Forms.ComboBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="bcb86-102">The <xref:System.Windows.Forms.ListControl> class provides implementations of common elements for the <xref:System.Windows.Forms.ListBox> and <xref:System.Windows.Forms.ComboBox> controls.</span></span>  
  
 <span data-ttu-id="bcb86-103">次のプロパティがデータ バインドのユーザーが主な考慮事項の<xref:System.Windows.Forms.ListBox>または<xref:System.Windows.Forms.ComboBox>: <xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、 <xref:System.Windows.Forms.ListControl.SelectedValue%2A>、および<xref:System.Windows.Forms.ListControl.ValueMember%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-103">The following properties are of primary concern to users of a data-bound <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.ComboBox>: <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.ValueMember%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-104">次のコード例は、完全なアプリケーションを使用する方法を示す<xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、 <xref:System.Windows.Forms.ListControl.ValueMember%2A>、および<xref:System.Windows.Forms.ListControl.SelectedValue%2A>のメンバー、<xref:System.Windows.Forms.ListControl>クラスによって実装される、<xref:System.Windows.Forms.ListBox>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-104">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="bcb86-105">例では、ロード、<xref:System.Collections.ArrayList>とリスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="bcb86-105">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="bcb86-106">リスト ボックスで項目を選択すると、選択した項目に関連付けられているデータを返すため、選択した値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-106">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ListControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-107">
            <see cref="T:System.Windows.Forms.ListControl" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-107">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListControl" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSelection">
      <MemberSignature Language="C#" Value="protected virtual bool AllowSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.AllowSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AllowSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowSelection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowSelection : bool" Usage="System.Windows.Forms.ListControl.AllowSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-108">リストでリスト項目の選択が有効かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-108">Gets a value indicating whether the list enables selection of list items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-109">リストでリスト項目の選択が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-109">
              <see langword="true" /> if the list enables list item selection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bcb86-110">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-110">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManager">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.CurrencyManager DataManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager DataManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DataManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::CurrencyManager ^ DataManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.ListControl.DataManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-111">このコントロールに関連付けられている <see cref="T:System.Windows.Forms.CurrencyManager" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-111">Gets the <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-112">このコントロールに関連付けられた <see cref="T:System.Windows.Forms.CurrencyManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-112">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this control.</span>
          </span>
          <span data-ttu-id="bcb86-113">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-113">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-114"><xref:System.Windows.Forms.ListControl.DataManager%2A>プロパティが有効な場合、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-114">The <xref:System.Windows.Forms.ListControl.DataManager%2A> property is valid if the <xref:System.Windows.Forms.ListControl.DataSource%2A> property is set.</span></span> <span data-ttu-id="bcb86-115">これは、データ バインド コントロールではない場合、既定値は`null`します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-115">If this is not a data-bound control, the default is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.ListControl.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-116">この <see cref="T:System.Windows.Forms.ListControl" /> のデータ ソースを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-116">Gets or sets the data source for this <see cref="T:System.Windows.Forms.ListControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-117">
            <see cref="T:System.Collections.IList" /> インターフェイスまたは <see cref="T:System.ComponentModel.IListSource" /> インターフェイスを実装する、<see cref="T:System.Data.DataSet" /> または <see cref="T:System.Array" /> などのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-117">An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or an <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="bcb86-118">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-118">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-119">2 つの方法を埋める、<xref:System.Windows.Forms.ComboBox>と<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="bcb86-119">There are two ways to fill the <xref:System.Windows.Forms.ComboBox> and <xref:System.Windows.Forms.ListBox> controls.</span></span>  
  
 <span data-ttu-id="bcb86-120">オブジェクトを追加するなど、<xref:System.Windows.Forms.ComboBox>を使用して、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-120">For example, you can add objects to the <xref:System.Windows.Forms.ComboBox> by using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span> <span data-ttu-id="bcb86-121">オブジェクトを追加することも、<xref:System.Windows.Forms.ComboBox>を使用して、 <xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、および<xref:System.Windows.Forms.ListControl.ValueMember%2A>を埋めるプロパティ、<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-121">You can also add objects to a <xref:System.Windows.Forms.ComboBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, and <xref:System.Windows.Forms.ListControl.ValueMember%2A> properties to fill the <xref:System.Windows.Forms.ComboBox>.</span></span>  
  
 <span data-ttu-id="bcb86-122">ときに、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティが設定されて、ユーザーが項目のコレクションを変更できません。</span><span class="sxs-lookup"><span data-stu-id="bcb86-122">When the <xref:System.Windows.Forms.ListControl.DataSource%2A> property is set, a user cannot modify the items collection.</span></span>  
  
 <span data-ttu-id="bcb86-123">設定する場合、<xref:System.Windows.Forms.ListControl.DataSource%2A>プロパティにより、データ ソースを変更するには<xref:System.Windows.Forms.ListControl.DataSourceChanged>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-123">If setting the <xref:System.Windows.Forms.ListControl.DataSource%2A> property causes the data source to change, the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="bcb86-124">このプロパティを設定すると、データ メンバーを変更する場合、<xref:System.Windows.Forms.ListControl.DisplayMemberChanged>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-124">If setting this property causes the data member to change, the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event is raised.</span></span>  
  
 <span data-ttu-id="bcb86-125">設定すると<xref:System.Windows.Forms.ListControl.DataSource%2A>に`null`、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>空の文字列に設定されている ("") です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-125">When you set <xref:System.Windows.Forms.ListControl.DataSource%2A> to `null`, <xref:System.Windows.Forms.ListControl.DisplayMember%2A> is set to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-126">次のコード例は、完全なアプリケーションを使用する方法を示す<xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、 <xref:System.Windows.Forms.ListControl.ValueMember%2A>、および<xref:System.Windows.Forms.ListControl.SelectedValue%2A>のメンバー、<xref:System.Windows.Forms.ListControl>クラスによって実装される、<xref:System.Windows.Forms.ListBox>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-126">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="bcb86-127">例では、ロード、<xref:System.Collections.ArrayList>とリスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="bcb86-127">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="bcb86-128">リスト ボックスで項目を選択すると、選択した項目に関連付けられているデータを返すため、選択した値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-128">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcb86-129">代入された値に <see cref="T:System.Collections.IList" /> インターフェイスまたは <see cref="T:System.ComponentModel.IListSource" /> インターフェイスが実装されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-129">The assigned value does not implement the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-130">
            <see cref="P:System.Windows.Forms.ListControl.DataSource" /> が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-130">Occurs when the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-131">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-131">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-132">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-132">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-133">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.DataSourceChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-133">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event.</span></span> <span data-ttu-id="bcb86-134">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-134">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-135">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-135">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-136">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-136">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-137">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.DataSourceChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-137">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.DataSourceChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#142](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#142)]
 [!code-vb[System.Windows.Forms.EventExamples#142](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#142)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMember : string with get, set" Usage="System.Windows.Forms.ListControl.DisplayMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataMemberFieldConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-138">この <see cref="T:System.Windows.Forms.ListControl" /> に表示するプロパティを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-138">Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-139">
            <see cref="T:System.String" /> プロパティで指定されたコレクションに格納されているオブジェクト プロパティの名前を指定する <see cref="P:System.Windows.Forms.ListControl.DataSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-139">A <see cref="T:System.String" /> specifying the name of an object property that is contained in the collection specified by the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property.</span>
          </span>
          <span data-ttu-id="bcb86-140">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-140">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-141">継承するコントロール<xref:System.Windows.Forms.ListControl>さまざまな種類のオブジェクトを表示できます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-141">The controls that inherit from <xref:System.Windows.Forms.ListControl> can display diverse types of objects.</span></span> <span data-ttu-id="bcb86-142">オブジェクトまたはの値に対する指定したプロパティがないかどうかは<xref:System.Windows.Forms.ListControl.DisplayMember%2A>空の文字列 ("")、オブジェクトの結果`ToString`メソッドが代わりに表示されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-142">If the specified property does not exist on the object or the value of <xref:System.Windows.Forms.ListControl.DisplayMember%2A> is an empty string (""), the results of the object's `ToString` method are displayed instead.</span></span>  
  
 <span data-ttu-id="bcb86-143">新しい表示メンバーを設定することはできません、前の表示メンバーの設定は維持されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-143">If the new display member cannot be set, the previous display member setting is maintained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-144">次のコード例は、完全なアプリケーションを使用する方法を示す<xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、 <xref:System.Windows.Forms.ListControl.ValueMember%2A>、および<xref:System.Windows.Forms.ListControl.SelectedValue%2A>のメンバー、<xref:System.Windows.Forms.ListControl>クラスによって実装される、<xref:System.Windows.Forms.ListBox>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-144">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="bcb86-145">例では、ロード、<xref:System.Collections.ArrayList>とリスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="bcb86-145">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="bcb86-146">リスト ボックスで項目を選択すると、選択した項目に関連付けられているデータを返すため、選択した値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-146">When the user selects an item in the list box, the selected value is used to return the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.DisplayMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayMemberChanged : EventHandler " Usage="member this.DisplayMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-147">
            <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-147">Occurs when the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-148">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-148">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-149">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-149">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-150">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.DisplayMemberChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-150">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event.</span></span> <span data-ttu-id="bcb86-151">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-151">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-152">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-152">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-153">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-153">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-154">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.DisplayMemberChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-154">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.DisplayMemberChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#143](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#143)]
 [!code-vb[System.Windows.Forms.EventExamples#143](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#143)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterItemOnProperty">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-155">
            <see cref="T:System.Windows.Forms.ListControl" /> の項目が <see cref="T:System.Windows.Forms.ListControl" /> クラスのインスタンスのプロパティである場合に、その項目の現在の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-155">Returns the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if the item is a property of an instance of the <see cref="T:System.Windows.Forms.ListControl" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterItemOnProperty">
      <MemberSignature Language="C#" Value="protected object FilterItemOnProperty (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object FilterItemOnProperty(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FilterItemOnProperty (item As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ FilterItemOnProperty(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.FilterItemOnProperty : obj -&gt; obj" Usage="listControl.FilterItemOnProperty item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bcb86-156">
            <see cref="T:System.Windows.Forms.ListControl" /> の項目がバインドされているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-156">The object the <see cref="T:System.Windows.Forms.ListControl" /> item is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-157">
            <see cref="T:System.Windows.Forms.ListControl" /> の項目がオブジェクトのプロパティである場合に、バインド先の項目を指定して、バインド元の項目の現在の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-157">Retrieves the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if it is a property of an object, given the item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcb86-158">フィルター処理されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-158">The filtered object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterItemOnProperty">
      <MemberSignature Language="C#" Value="protected object FilterItemOnProperty (object item, string field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object FilterItemOnProperty(object item, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function FilterItemOnProperty (item As Object, field As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ FilterItemOnProperty(System::Object ^ item, System::String ^ field);" />
      <MemberSignature Language="F#" Value="member this.FilterItemOnProperty : obj * string -&gt; obj" Usage="listControl.FilterItemOnProperty (item, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bcb86-159">
            <see cref="T:System.Windows.Forms.ListControl" /> の項目がバインドされているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-159">The object the <see cref="T:System.Windows.Forms.ListControl" /> item is bound to.</span>
          </span>
        </param>
        <param name="field">
          <span data-ttu-id="bcb86-160">
            <see cref="T:System.Windows.Forms.ListControl" /> がバインドされている項目のプロパティ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-160">The property name of the item the <see cref="T:System.Windows.Forms.ListControl" /> is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-161">
            <see cref="T:System.Windows.Forms.ListControl" /> の項目がオブジェクトのプロパティである場合に、バインド先の項目とプロパティ名を指定して、バインド元の項目の現在の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-161">Returns the current value of the <see cref="T:System.Windows.Forms.ListControl" /> item, if it is a property of an object given the item and the property name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcb86-162">フィルター処理されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-162">The filtered object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListControlConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListControlConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ListControlConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListControlConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ListControlConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ListControlConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListControlConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-163">コントロールがデータ値にバインドされると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-163">Occurs when the control is bound to a data value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-164"><xref:System.Windows.Forms.ListControl.Format>イベントが表示されている各項目の前に発生した、<xref:System.Windows.Forms.ListControl>は書式設定します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-164">The <xref:System.Windows.Forms.ListControl.Format> event is raised before each visible item in the <xref:System.Windows.Forms.ListControl> is formatted.</span></span> <span data-ttu-id="bcb86-165">このイベントの処理にアクセスできる、文字列をこの一覧項目を表示する、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>のプロパティ、<xref:System.Windows.Forms.ListControlConvertEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-165">Handling this event gives you access to the string to be displayed for this list item, through the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> property of the <xref:System.Windows.Forms.ListControlConvertEventArgs>.</span></span>  
  
 <span data-ttu-id="bcb86-166">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-166">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-167">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-167">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-168">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.Format>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-168">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.Format> event.</span></span> <span data-ttu-id="bcb86-169">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-169">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-170">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-170">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-171">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-171">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-172">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.Format>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-172">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.Format> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#144)]
 [!code-vb[System.Windows.Forms.EventExamples#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#144)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.ListControl.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-173">カスタムの書式設定動作を定義する <see cref="T:System.IFormatProvider" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-173">Gets or sets the <see cref="T:System.IFormatProvider" /> that provides custom formatting behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-174">カスタムの書式設定動作を定義する <see cref="T:System.IFormatProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-174">The <see cref="T:System.IFormatProvider" /> implementation that provides custom formatting behavior.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-175">設定、<xref:System.Windows.Forms.ListControl.FormatInfo%2A>プロパティは既定の書式を使用する動作を上書き、<xref:System.Windows.Forms.Application.CurrentCulture%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-175">Setting the <xref:System.Windows.Forms.ListControl.FormatInfo%2A> property will override the default formatting behavior, which uses the <xref:System.Windows.Forms.Application.CurrentCulture%2A> setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatInfoChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatInfoChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatInfoChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormatInfoChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatInfoChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatInfoChanged;" />
      <MemberSignature Language="F#" Value="member this.FormatInfoChanged : EventHandler " Usage="member this.FormatInfoChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-176">
            <see cref="P:System.Windows.Forms.ListControl.FormatInfo" /> プロパティの値が変更された場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-176">Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormatInfo" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-177">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-177">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-178">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-178">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-179">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.FormatInfoChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-179">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormatInfoChanged> event.</span></span> <span data-ttu-id="bcb86-180">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-180">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-181">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-181">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-182">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-182">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-183">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.FormatInfoChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-183">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormatInfoChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#145](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#145)]
 [!code-vb[System.Windows.Forms.EventExamples#145](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.ListControl.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FormatStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-184">値の表示方法を示す書式指定子文字を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-184">Gets or sets the format-specifier characters that indicate how a value is to be displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-185">値の表示方法を示す書式指定子文字の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-185">The string of format-specifier characters that indicates how a value is to be displayed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-186">使用する書式文字列が標準に準拠する必要があります[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]書式指定します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-186">The format string used must follow standard [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] format specifications.</span></span> <span data-ttu-id="bcb86-187">詳細については、次を参照してください。 [、.NET Framework 型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-187">For more information, see [Formatting Types in the .NET Framework](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatStringChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatStringChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatStringChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormatStringChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatStringChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatStringChanged;" />
      <MemberSignature Language="F#" Value="member this.FormatStringChanged : EventHandler " Usage="member this.FormatStringChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-188">
            <see cref="P:System.Windows.Forms.ListControl.FormatString" /> プロパティの値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-188">Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-189">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-189">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-190">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-190">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-191">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.FormatStringChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-191">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormatStringChanged> event.</span></span> <span data-ttu-id="bcb86-192">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-192">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-193">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-193">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-194">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-194">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-195">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.FormatStringChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-195">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormatStringChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#146](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#146)]
 [!code-vb[System.Windows.Forms.EventExamples#146](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.ListControl.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-196">書式設定を <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> の <see cref="T:System.Windows.Forms.ListControl" /> プロパティに適用するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-196">Gets or sets a value indicating whether formatting is applied to the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property of the <see cref="T:System.Windows.Forms.ListControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-197">
            <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> プロパティに対する書式設定を有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-197">
              <see langword="true" /> if formatting of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bcb86-198">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-198">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-199">設定、<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>プロパティを`true`により、<xref:System.Windows.Forms.ListControl.Format>の表示されているメンバーごとに発生するイベント、<xref:System.Windows.Forms.ListControl>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-199">Setting the <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> property to `true` causes the <xref:System.Windows.Forms.ListControl.Format> event to be raised for each visible member of the <xref:System.Windows.Forms.ListControl>.</span></span>  
  
 <span data-ttu-id="bcb86-200"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>、 <xref:System.Windows.Forms.ListControl.SelectedValue%2A>、および<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>次のように関連します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-200"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="bcb86-201">場合<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>は`false`、 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1 に設定されません<xref:System.Windows.Forms.ListControl.SelectedValue%2A>は空白にします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-201">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="bcb86-202">場合<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>は`true`、 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1 に設定されます<xref:System.Windows.Forms.ListControl.SelectedValue%2A>は空白にします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-202">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormattingEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormattingEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormattingEnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormattingEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabledChanged : EventHandler " Usage="member this.FormattingEnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-203">
            <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> プロパティの値が変更された場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-203">Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-204">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-204">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-205">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-205">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-206">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.FormattingEnabledChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-206">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> event.</span></span> <span data-ttu-id="bcb86-207">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-207">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-208">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-208">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-209">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-209">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-210">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.FormattingEnabledChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-210">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.FormattingEnabledChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#147](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#147)]
 [!code-vb[System.Windows.Forms.EventExamples#147](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemText">
      <MemberSignature Language="C#" Value="public string GetItemText (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetItemText(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemText (item As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItemText(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.GetItemText : obj -&gt; string" Usage="listControl.GetItemText item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="bcb86-211">表示する内容の取得元のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-211">The object from which to get the contents to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-212">指定した項目のテキスト形式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-212">Returns the text representation of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcb86-213">
            <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> プロパティを指定しない場合は、<see cref="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" /> の戻り値が項目の <see langword="ToString" /> メソッドの値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-213">If the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property is not specified, the value returned by <see cref="M:System.Windows.Forms.ListControl.GetItemText(System.Object)" /> is the value of the item's <see langword="ToString" /> method.</span>
          </span>
          <span data-ttu-id="bcb86-214">それ以外の場合、このメソッドは <paramref name="item" /> パラメーターで指定されたオブジェクトの <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> プロパティに指定されているメンバーの文字列値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-214">Otherwise, the method returns the string value of the member specified in the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property for the object specified in the <paramref name="item" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listControl.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="bcb86-215">
            <see cref="T:System.Windows.Forms.Keys" /> の値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-215">One of the values of <see cref="T:System.Windows.Forms.Keys" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-216">PageUp、PageDown、Home、End などの特殊な入力キーを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-216">Handles special input keys, such as PAGE UP, PAGE DOWN, HOME, END, and so on.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcb86-217">
            <paramref name="keyData" /> パラメーターに <see cref="F:System.Windows.Forms.Keys.End" />、<see cref="F:System.Windows.Forms.Keys.Home" />、<see cref="F:System.Windows.Forms.Keys.PageUp" />、または <see cref="F:System.Windows.Forms.Keys.PageDown" /> の各キーが指定されている場合は <see langword="true" />。<paramref name="keyData" /> パラメーターに <see cref="F:System.Windows.Forms.Keys.Alt" /> キーが指定されている場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-217">
              <see langword="true" /> if the <paramref name="keyData" /> parameter specifies the <see cref="F:System.Windows.Forms.Keys.End" />, <see cref="F:System.Windows.Forms.Keys.Home" />, <see cref="F:System.Windows.Forms.Keys.PageUp" />, or <see cref="F:System.Windows.Forms.Keys.PageDown" /> key; <see langword="false" /> if the <paramref name="keyData" /> parameter specifies <see cref="F:System.Windows.Forms.Keys.Alt" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="listControl.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-218">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-218">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-219">
            <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-219">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="listControl.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-220">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-220">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-221">
            <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-221">Raises the <see cref="E:System.Windows.Forms.ListControl.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-222">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-222">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-223">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-223">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-224"><xref:System.Windows.Forms.ListControl.OnDataSourceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-224">The <xref:System.Windows.Forms.ListControl.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-225">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-225">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-226">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-226">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDisplayMemberChanged : EventArgs -&gt; unit" Usage="listControl.OnDisplayMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-227">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-228">
            <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-228">Raises the <see cref="E:System.Windows.Forms.ListControl.DisplayMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-229">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-229">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-230">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-230">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-231"><xref:System.Windows.Forms.ListControl.OnDisplayMemberChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-231">The <xref:System.Windows.Forms.ListControl.OnDisplayMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-232">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-232">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-233">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-233">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnDisplayMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ListControlConvertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ListControlConvertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (e As ListControlConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ListControlConvertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ListControlConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ListControlConvertEventArgs -&gt; unit" Usage="listControl.OnFormat e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListControlConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-234">イベント データを格納している <see cref="T:System.Windows.Forms.ListControlConvertEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-234">A <see cref="T:System.Windows.Forms.ListControlConvertEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-235">
            <see cref="E:System.Windows.Forms.ListControl.Format" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-235">Raises the <see cref="E:System.Windows.Forms.ListControl.Format" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-236">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-236">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-237">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-237">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-238"><xref:System.Windows.Forms.ListControl.OnFormat%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-238">The <xref:System.Windows.Forms.ListControl.OnFormat%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-239">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-239">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-240">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-240">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatInfoChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatInfoChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatInfoChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatInfoChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatInfoChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormatInfoChanged : EventArgs -&gt; unit&#xA;override this.OnFormatInfoChanged : EventArgs -&gt; unit" Usage="listControl.OnFormatInfoChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-241">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-241">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-242">
            <see cref="E:System.Windows.Forms.ListControl.FormatInfoChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-242">Raises the <see cref="E:System.Windows.Forms.ListControl.FormatInfoChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-243">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-243">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-244">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-244">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-245"><xref:System.Windows.Forms.ListControl.OnFormatInfoChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-245">The <xref:System.Windows.Forms.ListControl.OnFormatInfoChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-246">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-246">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-247">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-247">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatStringChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatStringChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatStringChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatStringChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatStringChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormatStringChanged : EventArgs -&gt; unit&#xA;override this.OnFormatStringChanged : EventArgs -&gt; unit" Usage="listControl.OnFormatStringChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-248">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-248">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-249">
            <see cref="E:System.Windows.Forms.ListControl.FormatStringChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-249">Raises the <see cref="E:System.Windows.Forms.ListControl.FormatStringChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-250">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-250">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-251">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-251">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-252"><xref:System.Windows.Forms.ListControl.OnFormatStringChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-252">The <xref:System.Windows.Forms.ListControl.OnFormatStringChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-253">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-253">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-254">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-254">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFormattingEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormattingEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormattingEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormattingEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormattingEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormattingEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnFormattingEnabledChanged : EventArgs -&gt; unit" Usage="listControl.OnFormattingEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-255">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-255">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-256">
            <see cref="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-256">Raises the <see cref="E:System.Windows.Forms.ListControl.FormattingEnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-257">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-257">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-258">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-258">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-259"><xref:System.Windows.Forms.ListControl.OnFormattingEnabledChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-259">The <xref:System.Windows.Forms.ListControl.OnFormattingEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-260">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-260">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-261">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-261">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listControl.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-262">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-262">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-263">
            <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-263">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-264">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-264">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-265">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-265">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedValueChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedValueChanged : EventArgs -&gt; unit" Usage="listControl.OnSelectedValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-266">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-266">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-267">
            <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-267">Raises the <see cref="E:System.Windows.Forms.ListControl.SelectedValueChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-268">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-269">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-270">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-270">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnSelectedValueChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValueMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueMemberChanged : EventArgs -&gt; unit&#xA;override this.OnValueMemberChanged : EventArgs -&gt; unit" Usage="listControl.OnValueMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="bcb86-271">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-271">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-272">
            <see cref="E:System.Windows.Forms.ListControl.ValueMemberChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-272">Raises the <see cref="E:System.Windows.Forms.ListControl.ValueMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-273">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bcb86-274">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-274">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="bcb86-275"><xref:System.Windows.Forms.ListControl.OnValueMemberChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-275">The <xref:System.Windows.Forms.ListControl.OnValueMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="bcb86-276">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bcb86-277">
            <para>オーバーライドする場合<see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-277">
              <para>When overriding <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RefreshItem">
      <MemberSignature Language="C#" Value="protected abstract void RefreshItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.RefreshItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub RefreshItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void RefreshItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member RefreshItem : int -&gt; unit" Usage="listControl.RefreshItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bcb86-278">データを更新する項目の、0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-278">The zero-based index of the item whose data to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-279">派生クラスでオーバーライドされると、指定したインデックス位置にあるオブジェクトのデータとデータ ソースの内容との同期をとり直します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-279">When overridden in a derived class, resynchronizes the data of the object at the specified index with the contents of the data source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected virtual void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RefreshItems();" />
      <MemberSignature Language="F#" Value="abstract member RefreshItems : unit -&gt; unit&#xA;override this.RefreshItems : unit -&gt; unit" Usage="listControl.RefreshItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-280">派生クラスでオーバーライドされると、項目のデータとデータ ソースの内容との同期をとり直します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-280">When overridden in a derived class, resynchronizes the item data with the contents of the data source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public abstract int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Windows.Forms.ListControl.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-281">派生クラスでオーバーライドされると、現在選択されている項目の 0 から始まるインデックス番号を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-281">When overridden in a derived class, gets or sets the zero-based index of the currently selected item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-282">現在選択されている項目の 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-282">A zero-based index of the currently selected item.</span>
          </span>
          <span data-ttu-id="bcb86-283">項目が選択されていない場合は、値 -1 が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-283">A value of negative one (-1) is returned if no item is selected.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj with get, set" Usage="System.Windows.Forms.ListControl.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-284">
            <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> プロパティで指定したメンバー プロパティの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-284">Gets or sets the value of the member property specified by the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-285">
            <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> プロパティで指定したデータ ソースのメンバーの値を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-285">An object containing the value of the member of the data source specified by the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-286">プロパティが指定されていない場合<xref:System.Windows.Forms.ListControl.ValueMember%2A>、<xref:System.Windows.Forms.ListControl.SelectedValue%2A>の結果を返します、`ToString`オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-286">If a property is not specified in <xref:System.Windows.Forms.ListControl.ValueMember%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A> returns the results of the `ToString` method of the object.</span></span>  
  
 <span data-ttu-id="bcb86-287"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>、 <xref:System.Windows.Forms.ListControl.SelectedValue%2A>、および<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>次のように関連します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-287"><xref:System.Windows.Forms.ComboBox.SelectedIndex%2A>, <xref:System.Windows.Forms.ListControl.SelectedValue%2A>, and <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> are related as follows:</span></span>  
  
-   <span data-ttu-id="bcb86-288">場合<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>は`false`、 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1 に設定されません<xref:System.Windows.Forms.ListControl.SelectedValue%2A>は空白にします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-288">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `false`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will not be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
-   <span data-ttu-id="bcb86-289">場合<xref:System.Windows.Forms.ListControl.FormattingEnabled%2A>は`true`、 <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> -1 に設定されます<xref:System.Windows.Forms.ListControl.SelectedValue%2A>は空白にします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-289">If <xref:System.Windows.Forms.ListControl.FormattingEnabled%2A> is `true`, <xref:System.Windows.Forms.ComboBox.SelectedIndex%2A> will be set to -1 when <xref:System.Windows.Forms.ListControl.SelectedValue%2A> is blank.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-290">次のコード例は、<xref:System.Windows.Forms.ListControl.SelectedValue%2A>によって指定されたプロパティの値を返す、<xref:System.Windows.Forms.ListControl.ValueMember%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-290">The following code example shows the <xref:System.Windows.Forms.ListControl.SelectedValue%2A> returning the value of the property specified by the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property.</span></span> <span data-ttu-id="bcb86-291">このコードに示した例からの抜粋、<xref:System.Windows.Forms.ListControl>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-291">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ListControl> class overview.</span></span> <span data-ttu-id="bcb86-292">参照してください<xref:System.Windows.Forms.ListControl>コード全体をします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-292">See <xref:System.Windows.Forms.ListControl> for the whole code listing.</span></span>  
  
 [!code-cpp[ListControl#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#3)]
 [!code-csharp[ListControl#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#3)]
 [!code-vb[ListControl#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bcb86-293">代入された値が <see langword="null" /> または空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-293">The assigned value is <see langword="null" /> or the empty string ("").</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ListControl.ValueMember" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.SelectedValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedValueChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedValueChanged : EventHandler " Usage="member this.SelectedValueChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-294">
            <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-294">Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-295">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-295">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-296">次のコード例は、完全なアプリケーションを使用する方法を示す<xref:System.Windows.Forms.ListControl.DataSource%2A>、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A>、 <xref:System.Windows.Forms.ListControl.ValueMember%2A>、および<xref:System.Windows.Forms.ListControl.SelectedValue%2A>のメンバー、<xref:System.Windows.Forms.ListControl>クラスによって実装される、<xref:System.Windows.Forms.ListBox>クラスです。</span><span class="sxs-lookup"><span data-stu-id="bcb86-296">The following code example is a complete application that shows how you can use <xref:System.Windows.Forms.ListControl.DataSource%2A>, <xref:System.Windows.Forms.ListControl.DisplayMember%2A>, <xref:System.Windows.Forms.ListControl.ValueMember%2A>, and <xref:System.Windows.Forms.ListControl.SelectedValue%2A> members of the <xref:System.Windows.Forms.ListControl> class as implemented by the <xref:System.Windows.Forms.ListBox> class.</span></span> <span data-ttu-id="bcb86-297">例では、ロード、<xref:System.Collections.ArrayList>とリスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="bcb86-297">The example loads an <xref:System.Collections.ArrayList> and the list box.</span></span> <span data-ttu-id="bcb86-298">また、例では、<xref:System.Windows.Forms.ListControl.SelectedValueChanged>イベントをユーザーがリスト ボックスで項目を選択したときに、テキスト ボックスに入力します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-298">The example also uses the <xref:System.Windows.Forms.ListControl.SelectedValueChanged> event to fill in a text box when the user selects an item in the list box.</span></span> <span data-ttu-id="bcb86-299">テキスト ボックスには、選択した項目に関連付けられているデータが入力されます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-299">The text box is filled with the data associated with the selected item.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemCore">
      <MemberSignature Language="C#" Value="protected virtual void SetItemCore (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItemCore(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.SetItemCore(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItemCore (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItemCore(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetItemCore : int * obj -&gt; unit&#xA;override this.SetItemCore : int * obj -&gt; unit" Usage="listControl.SetItemCore (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="bcb86-300">オブジェクトの配列インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-300">The array index of the object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bcb86-301">オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-301">The object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-302">派生クラスでオーバーライドされると、指定したインデックスのオブジェクトを派生クラスで設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-302">When overridden in a derived class, sets the object with the specified index in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemsCore">
      <MemberSignature Language="C#" Value="protected abstract void SetItemsCore (System.Collections.IList items);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItemsCore(class System.Collections.IList items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListControl.SetItemsCore(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetItemsCore (items As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetItemsCore(System::Collections::IList ^ items);" />
      <MemberSignature Language="F#" Value="abstract member SetItemsCore : System.Collections.IList -&gt; unit" Usage="listControl.SetItemsCore items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="bcb86-303">項目の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-303">An array of items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcb86-304">派生クラスでオーバーライドされると、コレクション内の指定したオブジェクトの配列を派生クラスで設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-304">When overridden in a derived class, sets the specified array of objects in a collection in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListControl.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueMember : string with get, set" Usage="System.Windows.Forms.ListControl.ValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-305">
            <see cref="T:System.Windows.Forms.ListControl" /> 内の項目の実際の値として使用するプロパティのパスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-305">Gets or sets the path of the property to use as the actual value for the items in the <see cref="T:System.Windows.Forms.ListControl" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcb86-306">
            <see cref="T:System.String" /> プロパティ値の単一のプロパティ名を表す <see cref="P:System.Windows.Forms.ListControl.DataSource" />、または、最終的にデータ バインド オブジェクトのプロパティ名に解決されるピリオド区切りのプロパティ名の階層。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-306">A <see cref="T:System.String" /> representing a single property name of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property value, or a hierarchy of period-delimited property names that resolves to a property name of the final data-bound object.</span>
          </span>
          <span data-ttu-id="bcb86-307">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-307">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-308">内容を指定、<xref:System.Windows.Forms.ListControl.ValueMember%2A>プロパティ データをバインドする場合。</span><span class="sxs-lookup"><span data-stu-id="bcb86-308">Specify the contents of the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property in cases where you bind data.</span></span>  
  
 <span data-ttu-id="bcb86-309">オフにすることができます、<xref:System.Windows.Forms.ListControl.ValueMember%2A>プロパティに空の文字列プロパティを設定して ("") または`null`です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-309">You can clear the <xref:System.Windows.Forms.ListControl.ValueMember%2A> property by setting the property to an empty string ("") or `null`.</span></span>  
  
 <span data-ttu-id="bcb86-310">新しい設定<xref:System.Windows.Forms.ListControl.ValueMember%2A>プロパティが発生し、<xref:System.Windows.Forms.ListControl.ValueMemberChanged>と<xref:System.Windows.Forms.ListControl.SelectedValueChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-310">Setting a new <xref:System.Windows.Forms.ListControl.ValueMember%2A> property raises the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> and <xref:System.Windows.Forms.ListControl.SelectedValueChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-311">コード例を次にデータの読み込み、<xref:System.Collections.ArrayList>と設定、<xref:System.Windows.Forms.ListControl.ValueMember%2A>リスト内のオブジェクトのプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="bcb86-311">The following code example shows loading the data into an <xref:System.Collections.ArrayList> and setting the <xref:System.Windows.Forms.ListControl.ValueMember%2A> to a property of the object in the list.</span></span>  
  
 [!code-cpp[ListControl#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListControl/CPP/form1.cpp#1)]
 [!code-csharp[ListControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListControl/CS/form1.cs#1)]
 [!code-vb[ListControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListControl/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bcb86-312">指定されたプロパティ パスが、<see cref="P:System.Windows.Forms.ListControl.DataSource" /> プロパティで指定されたオブジェクトで解決されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-312">The specified property path cannot be resolved through the object specified by the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListControl.ValueMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.ValueMemberChanged : EventHandler " Usage="member this.ValueMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcb86-313">
            <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcb86-313">Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcb86-314">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-314">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcb86-315">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bcb86-315">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="bcb86-316">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ListControl.ValueMemberChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-316">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> event.</span></span> <span data-ttu-id="bcb86-317">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="bcb86-317">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="bcb86-318">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-318">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="bcb86-319">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ListControl>、ように、<xref:System.Windows.Forms.ComboBox>または<xref:System.Windows.Forms.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="bcb86-319">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ListControl>, such as a <xref:System.Windows.Forms.ComboBox> or <xref:System.Windows.Forms.ListBox>.</span></span> <span data-ttu-id="bcb86-320">インスタンスを名前`ListControl1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ListControl.ValueMemberChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="bcb86-320">Then name the instance `ListControl1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ListControl.ValueMemberChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#148](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#148)]
 [!code-vb[System.Windows.Forms.EventExamples#148](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#148)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>