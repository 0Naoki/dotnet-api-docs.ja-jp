<Type Name="HtmlElementEventArgs" FullName="System.Windows.Forms.HtmlElementEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbc74c296deff641e322888b62c0d05617a6337b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70504683" /></Metadata><TypeSignature Language="C#" Value="public sealed class HtmlElementEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElementEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElementEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlElementEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlElementEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type HtmlElementEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Forms.HtmlDocument" /> と <see cref="T:System.Windows.Forms.HtmlElement" /> で定義されているイベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs>アンマネージ html DOM に対して`window.event`プログラミングする場合、または html ページ用のアクティブスクリプトを記述する場合に、オブジェクトに対して見つかったものと同じ情報をカプセル化します。  
  
 ほとんどの場合、を使用<xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A>して、イベントアクションを受信している html 要素を検索し、現在のイベントが発生させようと<xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A>している html 要素を検索できます。 ただし、すべてのイベントでは、これらのプロパティの値が提供されるわけではありません。イベントのマネージドキュメント、または Internet Explorer SDK ドキュメント内の対応するドキュメントを参照して、イベントによってイベントが提供されるかどうかを調べます。  
  
 HTML DOM の多くのイベントは、キャンセルされない限り、親要素に送信されます。 これは、イベントバブルと呼ばれます。 `SPAN` `SPAN` `DIV` `BODY`の内部がクリックを受信した場合、最初の、、、および最後に HTML ページの要素に対して click イベントが発生します。 `DIV` <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>イベントをこの方法で動作させるかどうかを制御します。  
  
   
  
## Examples  
 この型の使用方法を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/objects/obj_event.asp?frame=true">イベントオブジェクト</related>
  </Docs>
  <Members>
    <Member MemberName="AltKeyPressed">
      <MemberSignature Language="C#" Value="public bool AltKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントの発生時に Alt キーが押されたかどうかを示します。</summary>
        <value>Alt キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/altkey.asp?frame=true">altKey プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="BubbleEvent">
      <MemberSignature Language="C#" Value="public bool BubbleEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BubbleEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BubbleEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BubbleEvent : bool with get, set" Usage="System.Windows.Forms.HtmlElementEventArgs.BubbleEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のイベントが、HTML DOM (Document Object Model) の要素階層の上位に通知するかどうかを示す値を取得または設定します。</summary>
        <value>イベントが通知する場合は <see langword="true" />。通知しない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ドキュメントオブジェクトモデルの一部のイベントはバブルされません。 <xref:System.Windows.Forms.HtmlDocument>マネージラッパーによって公開されるすべてのイベントは、の<xref:System.Windows.Forms.HtmlDocument.Stop>例外と共にバブルされます。 では、 `Error`イベント`Load`とイベントはバブルされません。 <xref:System.Windows.Forms.HtmlElement> これら`BubbleEvent`の`true`イベントの実行中にをに設定しても効果はありません。  
  
   
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/cancelbubble.asp">cancelBubble イベント</related>
      </Docs>
    </Member>
    <Member MemberName="ClientMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ClientMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ClientMousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientMousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントのクライアント領域におけるマウス カーソルの位置を取得または設定します。</summary>
        <value>マウス カーソルの現在の位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ClientMousePosition`カーソルの左上隅を基準とした相対的な位置を示します。 イベント<xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>を発生させた要素を基準とするマウス座標が必要な場合は、を使用します。  
  
   
  
## Examples  
 次の HTML ファイルは、 `TABLE` `BODY`タグ内のの相対位置を示しています。  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 次のコード例では、ユーザー <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> `TABLE`が<xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>の要素<xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>をクリックしたときの、、およびの違いを表示します。 <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>ドキュメントのクライアント領域の左上隅を基準とした座標が表示されます。 <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>の左上隅を基準とした`TABLE`座標が表示されます。 テキストのいずれかの行をクリックすると、 <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>その`TD`要素を基準とする座標がに表示されます。  
  
 この例では、 `Document_MouseDown` <xref:System.Windows.Forms.HtmlDocument.MouseDown>で<xref:System.Windows.Forms.HtmlDocument>イベントのハンドラーとしてを構成している必要があります。  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/clientx.asp?frame=true">clientX プロパティ</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/clienty.asp?frame=true">clientY プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyPressed">
      <MemberSignature Language="C#" Value="public bool CtrlKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントの発生時に Ctrl キーが押されたかどうかを示します。</summary>
        <value>Ctrl キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/ctrlkey.asp?frame=true">ctrlKey プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public string EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.EventType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventType : string" Usage="System.Windows.Forms.HtmlElementEventArgs.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したイベントの名前を取得します。</summary>
        <value>イベントの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="T:System.Windows.Forms.HtmlElement" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/type_4.asp?frame=true">type プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="FromElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement FromElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement FromElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.FromElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FromElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ FromElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FromElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElementEventArgs.FromElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターの移動元の <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</summary>
        <value>マウス ポインターの移動元の <see cref="T:System.Windows.Forms.HtmlElement" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A>には、や<xref:System.Windows.Forms.HtmlElement.MouseEnter> <xref:System.Windows.Forms.HtmlElement.MouseLeave>などのマウスイベント時に有効な値が設定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPressedCode">
      <MemberSignature Language="C#" Value="public int KeyPressedCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyPressedCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyPressedCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyPressedCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyPressedCode : int" Usage="System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.HtmlElement.KeyPress" />、<see cref="E:System.Windows.Forms.HtmlElement.KeyDown" />、または <see cref="E:System.Windows.Forms.HtmlElement.KeyUp" /> の各イベントで入力されたキーボード文字の ASCII 値を取得します。</summary>
        <value>キーボードから入力されたエントリの ASCII 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/keycode.asp?frame=true">keyCode プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="MouseButtonsPressed">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons MouseButtonsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseButtonsPressed As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons MouseButtonsPressed { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtonsPressed : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.HtmlElement.MouseDown" /> イベントまたは <see cref="E:System.Windows.Forms.HtmlElement.MouseUp" /> イベントでクリックされたマウス ボタンを取得します。</summary>
        <value>クリックされたマウス ボタン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親要素の相対的な位置を基準とした、マウス カーソルの相対的な位置を取得または設定します。</summary>
        <value>イベント発生元要素の親要素の位置が相対的に決定されている場合は、その親要素の左上隅を基準としたマウス カーソルの相対的な位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML では、親に関連する要素をページに配置するために、相対位置が使用されます。  
  
 要素が相対的に配置されている場合、このプロパティはと<xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>同じ結果を返します。  
  
   
  
## Examples  
 次の HTML ファイルは、 `TABLE` `BODY`タグ内のの相対位置を示しています。  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text/TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 次のコード例では、ユーザー <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> `TABLE`が<xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>の要素<xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>をクリックしたときの、、およびの違いを表示します。 <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>ドキュメントのクライアント領域の左上隅を基準とした座標が表示されます。 <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>の左上隅を基準とした`TABLE`座標が表示されます。 テキストのいずれかの行をクリックすると、 <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>その`TD`要素を基準とする座標がに表示されます。  
  
 この例では、 `Document_MouseDown` <xref:System.Windows.Forms.HtmlDocument.MouseDown>で<xref:System.Windows.Forms.HtmlDocument>イベントのハンドラーとしてを構成している必要があります。  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/x.asp?frame=true">x プロパティ</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/y.asp?frame=true">y プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="OffsetMousePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point OffsetMousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point OffsetMousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetMousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point OffsetMousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetMousePosition : System.Drawing.Point" Usage="System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベント発生元要素を基準としたマウス カーソルの相対的な位置を取得または設定します。</summary>
        <value>イベント発生元要素を基準としたマウスの相対的な位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の HTML ファイルは、 `TABLE` `BODY`タグ内のの相対位置を示しています。  
  
```  
<HTML>  
  
<BODY>  
  
    <TABLE style="position:relative;top:100px;left:100px;">  
        <TR>  
            <TD>Text</TD>  
            <TD>More text</TD>  
        </TR>  
    </TABLE>  
  
</BODY>  
  
</HTML>  
  
```  
  
 次のコード例では、ユーザー <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> `TABLE`が<xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>の<xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>要素をクリックすると、との違いを表示します。 <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>ドキュメントのクライアント領域の左上隅を基準とした座標が表示されます。 <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>の左上隅を基準とした`TABLE`座標が表示されます。 テキストのいずれかの行をクリックすると、 <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A>その`TD`要素を基準とする座標がに表示されます。  
  
 この例では、 `Document_MouseDown` <xref:System.Windows.Forms.HtmlDocument.MouseDown>で<xref:System.Windows.Forms.HtmlDocument>イベントのハンドラーとしてを構成している必要があります。  
  
 [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition" />
        <altmember cref="P:System.Windows.Forms.HtmlElementEventArgs.MousePosition" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/offsetx.asp?frame=true">offsetX プロパティ</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/offsety.asp?frame=truehttp://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/offsety.asp?frame=true">offsetY プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public bool ReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnValue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : bool with get, set" Usage="System.Windows.Forms.HtmlElementEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>処理されたイベントの戻り値を取得または設定します。</summary>
        <value>イベントが処理済みである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyPressed">
      <MemberSignature Language="C#" Value="public bool ShiftKeyPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyPressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyPressed : bool" Usage="System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このイベントの発生時に Shift キーが押されたかどうかを示します。</summary>
        <value>Shift キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/shiftkey.asp?frame=true">shiftKey プロパティ</related>
      </Docs>
    </Member>
    <Member MemberName="ToElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement ToElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement ToElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElementEventArgs.ToElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ ToElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElementEventArgs.ToElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターの移動先の <see cref="T:System.Windows.Forms.HtmlElement" /> を取得します。</summary>
        <value>マウス ポインターの移動先の要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A>には、や<xref:System.Windows.Forms.HtmlElement.MouseEnter> <xref:System.Windows.Forms.HtmlElement.MouseLeave>などのマウスイベント時に有効な値が設定されます。  
  
   
  
## Examples  
 このメンバーの使用例を次のコード例に示します。 この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントの発生を報告します。 このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。  
  
 コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlDocument> `HtmlDocument1`の型のインスタンスを含むプロジェクトに貼り付けます。 次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=nameWithType>イベントに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]
 [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/?url=/workshop/author/dhtml/reference/properties/toelement.asp?frame=true">toElement プロパティ</related>
      </Docs>
    </Member>
  </Members>
</Type>
