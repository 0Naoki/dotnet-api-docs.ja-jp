<Type Name="DataGridView" FullName="System.Windows.Forms.DataGridView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45a1dfcca8008892f55ee30efb75e438c0d0b9be" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015958" /></Metadata><TypeSignature Language="C#" Value="public class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridView extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridView" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridView&#xA;Inherits Control&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridView : System::Windows::Forms::Control, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type DataGridView = class&#xA;    inherit Control&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CellContentClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データをカスタマイズ可能なグリッドで表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールでは、データを表示するカスタマイズ可能なテーブルが用意されています。 <xref:System.Windows.Forms.DataGridView>クラスは、セル、行、列、およびプロパティを使用して境界線のカスタマイズなど<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、および<xref:System.Windows.Forms.DataGridView.GridColor%2A>します。 詳細については、次を参照してください。[基本的な書式設定と Windows フォーム DataGridView コントロールでスタイル](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)します。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridView>有無にかかわらず、基になるデータ ソースのデータを表示します。 列とデータが含まれ、それらに直接追加する行を作成するデータ ソースを指定せず、<xref:System.Windows.Forms.DataGridView>を使用して、<xref:System.Windows.Forms.DataGridView.Rows%2A>と<xref:System.Windows.Forms.DataGridView.Columns%2A>プロパティ。 使用することも、<xref:System.Windows.Forms.DataGridView.Rows%2A>にアクセスするコレクション<xref:System.Windows.Forms.DataGridViewRow>オブジェクトと<xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType>プロパティ セルの値を直接読み書きします。 <xref:System.Windows.Forms.DataGridView.Item%2A>インデクサーでは、セルへの直接アクセスも提供します。  
  
 コントロールを手動で入力する代わりに、として設定すること、<xref:System.Windows.Forms.DataGridView.DataSource%2A>と<xref:System.Windows.Forms.DataGridView.DataMember%2A>プロパティにバインドする、<xref:System.Windows.Forms.DataGridView>をデータ ソースし、データを自動的に設定します。 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールでのデータ表示](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)します。  
  
 設定することが非常に大量のデータを操作するとき、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティを`true`使用可能なデータのサブセットを表示します。 仮想モードで元のデータ キャッシュの実装、<xref:System.Windows.Forms.DataGridView>コントロールが設定されます。 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールでのデータ表示モード](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)します。  
  
 使用できる機能について、<xref:System.Windows.Forms.DataGridView>コントロールを参照してください[DataGridView コントロール](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)します。 次の表では、一般的なタスクへの直接リンクを提供します。  
  
-   [方法: Windows フォームの DataGridView コントロールにデータをバインドします。](https://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)  
  
-   [方法: Windows フォームの DataGridView コントロールの個々 のセルにツールヒントを追加します。](https://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)  
  
-   [方法: Windows フォームの DataGridView コントロールのフォントと色のスタイルを設定します。](https://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)  
  
-   [方法: デザイナーを使用して Windows フォーム DataGridView 列の型を変更します。](https://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)  
  
-   [方法: データ デザイナーを使用して Windows フォーム DataGridView コントロールをバインドします。](https://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)  
  
-   [方法: デザイナーを使用して Windows フォーム DataGridView コントロールの既定のセル スタイルとデータ形式を設定します。](https://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)  
  
-   [方法: 書式設定データの Windows フォーム DataGridView コントロール](https://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)  
  
-   [チュートリアル: Windows フォームの DataGridView コントロールのデータの検証](https://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)  
  
-   [方法: Windows フォーム DataGridView コントロールでデータの書式設定をカスタマイズします。](https://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)  
  
-   [チュートリアル: 2 つの Windows フォーム DataGridView コントロールを使用してマスター/詳細フォームを作成します。](https://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)  
  
 ですが、<xref:System.Windows.Forms.DataGridView>コントロールが置換および機能を追加、 <xref:System.Windows.Forms.DataGrid> 、以前のバージョン コントロール、<xref:System.Windows.Forms.DataGrid>を選択した場合、下位互換性と将来の使用の両方のコントロールは保持されます。 詳細については、「[Windows フォームの DataGridView コントロールと DataGrid コントロールの違いについて](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)」を参照してください。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>両方継承したコントロール、<xref:System.Windows.Forms.Control.ContextMenu%2A>と<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>プロパティから<xref:System.Windows.Forms.Control>、のみがサポートされますが、<xref:System.Windows.Forms.Control.ContextMenuStrip%2A>プロパティ。 使用して、<xref:System.Windows.Forms.Control.ContextMenu%2A>プロパティを<xref:System.Windows.Forms.DataGridView>コントロールが影響を与えません。  
  
   
  
## Examples  
 次のコード例は、バインドされていないを初期化する方法を示します<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#00)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md">DataGridView コントロールの概要 (Windows フォーム)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md">Windows フォームの DataGridView コントロールの基本的な書式設定およびスタイル設定</related>
    <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのデータの表示</related>
    <related type="Article" href="~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのデータ表示モード</related>
    <related type="Article" href="~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md">Windows フォームの DataGridView コントロールと DataGrid コントロールの違いについて</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode%2A>|<xref:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.EditMode%2A>|<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>|  
|<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>|<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AccessibilityNotifyCurrentCellChanged(valuetype System.Drawing.Point cellAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AccessibilityNotifyCurrentCellChanged (cellAddress As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AccessibilityNotifyCurrentCellChanged(System::Drawing::Point cellAddress);" />
      <MemberSignature Language="F#" Value="abstract member AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit&#xA;override this.AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit" Usage="dataGridView.AccessibilityNotifyCurrentCellChanged cellAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellAddress" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="cellAddress">新たにアクティブになったセルの行と列のインデックスを示す <see cref="T:System.Drawing.Point" />。</param>
        <summary>ユーザー補助クライアント アプリケーションに対し、別のセルがアクティブになったことを通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに指定した行と列のインデックスを変換する`objectID`と`childID`パラメーターと呼び出し、<xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29>メソッド オーバー ロードを使用して 2 回、<xref:System.Windows.Forms.AccessibleEvents.Focus>と<xref:System.Windows.Forms.AccessibleEvents.Selection>の値、<xref:System.Windows.Forms.AccessibleEvents>列挙体。 `objectID`と`childID`その表示順序、可視性、および 1 から開始している場合、行または列ヘッダーをカウントで表示可能な行と列の番号付けによって決定されます。 たとえば、列ヘッダーを表示、`objectID`最初の表示以外の行は 2 です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="cellAddress" /> の <see cref="P:System.Drawing.Point.X" /> プロパティの値が 0 未満か、またはコントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="cellAddress" /> の <see cref="P:System.Drawing.Point.Y" /> プロパティの値が 0 未満か、またはコントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドして、カスタマイズする際に、<see cref="T:System.Windows.Forms.DataGridView" />コントロールと現在のセルを変更する方法とタイミングを変更します。 たとえば、1 つのセルに複数のセルを結合するカスタム行型を作成する、ナビゲーションを適宜変更する場合は、変更がユーザー補助のサポートを提供するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, isFirstDisplayedColumn As Boolean, isLastVisibleColumn As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustColumnHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="F#" Value="abstract member AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridView.AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, isFirstDisplayedColumn, isLastVisibleColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isLastVisibleColumn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">変更する列ヘッダー境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">列ヘッダー境界線スタイルに対する中間的な変更を格納するために使用される <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</param>
        <param name="isFirstDisplayedColumn">現在塗りつぶされている <see cref="T:System.Windows.Forms.DataGridViewCell" /> が <see cref="T:System.Windows.Forms.DataGridView" /> に表示される最初の列にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="isLastVisibleColumn">現在塗りつぶされている <see cref="T:System.Windows.Forms.DataGridViewCell" /> が、<see langword="true" /> に設定された <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> プロパティを持つ <see cref="T:System.Windows.Forms.DataGridView" /> の最後の列にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在塗りつぶされている <see cref="T:System.Windows.Forms.DataGridView" /> の列ヘッダー セルの <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> を調整します。</summary>
        <returns>現在の列ヘッダーの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>制御内部的に呼び出し、<xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A>列ヘッダー セルの境界線の外観を決定するメソッド。 <xref:System.Windows.Forms.DataGridView>コントロールが通常の値を使用して、<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>プロパティを`dataGridViewAdvancedBorderStyleInput`パラメーター。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A>列ヘッダー セルの境界線をカスタマイズするメソッド。 このコード例が示されている例の一部、<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>クラス。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>列ヘッダー セルの境界線の外観をカスタマイズする場合は、このメソッドをオーバーライドします。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustedTopLeftHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AdjustedTopLeftHeaderBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustedTopLeftHeaderBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdjustedTopLeftHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の左上のセルの境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> の左上のセルの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 左上隅のセルは、列ヘッダー行と行ヘッダー列によって共有されているセルです。 <xref:System.Windows.Forms.DataGridView>左上隅のセルの描画中にこのプロパティの値を取得します。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A>左上隅のセルの境界線をカスタマイズするプロパティ。 このコード例が示されている例の一部、<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>クラス。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#12)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>左上隅のヘッダー セルの境界線の外観をカスタマイズする場合は、このプロパティをオーバーライドします。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedCellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedCellBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedCellBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルの境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> に含まれるセルの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A>プロパティ セルの罫線の外観をカスタマイズします。 組み込みのスタイルを使用して境界線のスタイルを変更するには、使用、<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedColumnHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の列ヘッダー セルの境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の <see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /> オブジェクトの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>プロパティを列ヘッダー セルの罫線の外観をカスタマイズします。 組み込みのスタイルを使用して境界線のスタイルを変更するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedRowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedRowHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedRowHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedRowHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の行ヘッダー セルの境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> オブジェクトの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A>派生で行ヘッダー セルの境界線の外観をカスタマイズするプロパティ<xref:System.Windows.Forms.DataGridView>コントロール。 組み込みのスタイルを使用して境界線のスタイルを変更するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToAddRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToAddRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToAddRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToAddRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行を追加するオプションがユーザーに表示されるかどうかを示す値を取得または設定します。</summary>
        <value>行の追加オプションがユーザーに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView>がバインドされている場合は、行を追加するユーザーができるデータにこのプロパティと、データ ソースの<xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType>プロパティに設定されます`true`します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToAddRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToAddRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToAddRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToAddRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRowsChanged : EventHandler " Usage="member this.AllowUserToAddRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#250](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#250)]
 [!code-vb[System.Windows.Forms.EventExamples#250](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#250)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToDeleteRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToDeleteRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToDeleteRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToDeleteRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> からの行の削除を許可されているかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが行を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView>がバインドされている場合は、両方の行を削除するデータに、ユーザーが許可されているこのプロパティと<xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType>プロパティに設定されて`true`します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToDeleteRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRowsChanged : EventHandler " Usage="member this.AllowUserToDeleteRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#251](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#251)]
 [!code-vb[System.Windows.Forms.EventExamples#251](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#251)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToOrderColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToOrderColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToOrderColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToOrderColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>手動による列の移動が可能かどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが列の順序を変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列の移動を有効にすると、ユーザーが新しい位置に列ヘッダーをドラッグできます。 固定と固定されていない列が 2 つのグループを形成することに注意してください。ユーザーは、グループ内の列の位置を指定できますが、他の 1 つのグループから列を移動できません。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールはダブル バッファリングをサポートしていません。 場合<xref:System.Windows.Forms.Control.DoubleBuffered%2A>に設定されている`true`で派生<xref:System.Windows.Forms.DataGridView>コントロール、行、列、またはヘッダーのサイズを変更するとき、または列の並べ替えは、ユーザーに視覚的なフィードバックは受信しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToOrderColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumnsChanged : EventHandler " Usage="member this.AllowUserToOrderColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#252](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#252)]
 [!code-vb[System.Windows.Forms.EventExamples#252](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#252)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが列のサイズを変更できるかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが列のサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーが列の幅を手動で変更できないようにするのにには、このプロパティを使用します。 たとえば、表示専用の列、データは 1 回に読み込まれ、その時点で列のサイズが変更を便利です。  
  
 ユーザーによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールはダブル バッファリングをサポートしていません。 場合<xref:System.Windows.Forms.Control.DoubleBuffered%2A>に設定されている`true`で派生<xref:System.Windows.Forms.DataGridView>コントロール、行、列、またはヘッダーのサイズを変更するとき、または列の並べ替えは、ユーザーに視覚的なフィードバックは受信しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用する方法を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumnsChanged : EventHandler " Usage="member this.AllowUserToResizeColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#253](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#253)]
 [!code-vb[System.Windows.Forms.EventExamples#253](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#253)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが行のサイズを変更できるかどうかを示す値を取得または設定します。</summary>
        <value>すべての行のサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、行の高さを手動で変更されないようにします。 これでは、データが読み込まれるは 1 回、その時点で行がサイズ変更表示専用コントロールなどに便利です。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 ユーザーによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールはダブル バッファリングをサポートしていません。 場合<xref:System.Windows.Forms.Control.DoubleBuffered%2A>に設定されている`true`で派生<xref:System.Windows.Forms.DataGridView>コントロール、行、列、またはヘッダーのサイズを変更するとき、または列の並べ替えは、ユーザーに視覚的なフィードバックは受信しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用する方法を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRowsChanged : EventHandler " Usage="member this.AllowUserToResizeRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#254](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#254)]
 [!code-vb[System.Windows.Forms.EventExamples#254](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#254)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingRowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ AlternatingRowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の奇数行に適用される既定のセル スタイルを取得または設定します。</summary>
        <value>奇数行に適用される <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールには、セルのスタイルを使用してそのセルが表示されます。<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティで、型の他のプロパティからスタイルを継承<xref:System.Windows.Forms.DataGridViewCellStyle>します。 奇数のインデックス番号を含む行のセルを指定したスタイル、<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>プロパティで指定されたスタイルをオーバーライドする、 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>、で指定されたスタイルによってオーバーライドされます<xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>プロパティ。  
  
 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
 このプロパティを取得するときに、<xref:System.Windows.Forms.DataGridViewCellStyle>既定値は、プロパティは既にアクセスされていない場合の値が作成されます。 これが原因で、複数の行のこのプロパティを取得するときに、パフォーマンスに影響します。 可能であれば、1 つを使用して、<xref:System.Windows.Forms.DataGridViewCellStyle>の複数の行には、このプロパティを設定します。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、このプロパティを使用して、台帳効果を作成する方法を示しています、<xref:System.Windows.Forms.DataGridView>コントロール。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlternatingRowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyleChanged : EventHandler " Usage="member this.AlternatingRowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、いずれかが発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>プロパティが新しい値に設定または、<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>を新しいプロパティを設定<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#255](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#255)]
 [!code-vb[System.Windows.Forms.EventExamples#255](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#255)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AreAllCellsSelected">
      <MemberSignature Language="C#" Value="public bool AreAllCellsSelected (bool includeInvisibleCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AreAllCellsSelected(bool includeInvisibleCells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreAllCellsSelected (includeInvisibleCells As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AreAllCellsSelected(bool includeInvisibleCells);" />
      <MemberSignature Language="F#" Value="member this.AreAllCellsSelected : bool -&gt; bool" Usage="dataGridView.AreAllCellsSelected includeInvisibleCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInvisibleCells" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeInvisibleCells"><see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /> プロパティの値が <see langword="false" /> の行および列を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>すべての <see cref="T:System.Windows.Forms.DataGridView" /> セルが現在選択されているかどうかを示す値を返します。</summary>
        <returns>すべてのセル (または表示されているすべてのセル) が選択されている場合、またはセル (または表示されているセル) が存在しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>大規模な選択範囲をコレクションが効率的に実行されません。 確認するかどうかのすべてのセル、<xref:System.Windows.Forms.DataGridView>の内容にアクセスする前に、選択されている、 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 、コレクションの戻り値を確認、<xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A>メソッド。 ただし、このメソッドでは、行が解除を生じることができます。 詳細については<xref:System.Windows.Forms.DataGridView>パフォーマンスを参照してください[Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、このメソッドを使用して計算を回避する方法を示しています、<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>コレクション。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectedCells" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールを拡張するための推奨される手順</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティまたは <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> プロパティが設定されている場合、列が自動的に作成されるかどうかを示す値を取得または設定します。</summary>
        <value>列を自動的に作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティ設定されている場合に、列が自動的に生成されます`true`と<xref:System.Windows.Forms.DataGridView.DataSource%2A>または<xref:System.Windows.Forms.DataGridView.DataMember%2A>プロパティを設定または変更します。 列を指定できますも自動的に生成されたときに、<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>からプロパティを変更`false`に`true`します。 このプロパティは、する場合`true`と<xref:System.Windows.Forms.DataGridView.DataSource%2A>を変更して、以前の列と一致しない列があるように<xref:System.Windows.Forms.DataGridView.DataSource%2A>値、比類のない列のデータは破棄されます。 場合、このプロパティは無視されます、<xref:System.Windows.Forms.DataGridView.DataSource%2A>または<xref:System.Windows.Forms.DataGridView.DataMember%2A>プロパティが設定されていません。  
  
 ときに<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>に設定されている`true`、<xref:System.Windows.Forms.DataGridView>コントロールがデータ ソース内のオブジェクトの各パブリック プロパティの 1 つの列を生成します。 バインド先のオブジェクトを実装する場合、<xref:System.ComponentModel.ICustomTypeDescriptor>インターフェイス コントロールがによって返された各プロパティの 1 つの列を生成、<xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A>メソッド。 それぞれの列ヘッダーは、列が表すプロパティ名の値が格納されます。  
  
 設定した場合、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが設定<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>に`false`列を手動で追加する必要があります。 設定して、データ ソースに追加された各列をバインドすることができます、<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>プロパティにバインドされたオブジェクトによって公開されるプロパティの名前。  
  
> [!NOTE]
>  設定、 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 、Windows フォーム デザイナーで自動的に設定、<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>プロパティを`false`を追加、データ ソース内の各プロパティの列をバインドするコードを生成します。 デザイン時に生成されるコードは、次の例に示すように手動で追加したコードと同じです。 実行時に発生する列の自動生成と同じではないときに、<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>プロパティに設定されて`true`します。  
  
   
  
## Examples  
 次のコード例は、列を手動で追加し、設定すると、データ ソースにバインドする方法を示します<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>に`false`します。 この例で、<xref:System.Windows.Forms.DataGridView>コントロールの一覧にバインドする`Task`ビジネス オブジェクト。 列が追加されにバインドし、`Task`プロパティを通じて、<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>プロパティ。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridViewComboBoxCell ドロップダウン リストのオブジェクトにアクセス](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoGenerateColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoGenerateColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoGenerateColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoGenerateColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumnsChanged : EventHandler " Usage="member this.AutoGenerateColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#256](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#256)]
 [!code-vb[System.Windows.Forms.EventExamples#256](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#256)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>セルの内容に合わせて、指定された列の幅を調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int -&gt; unit" Usage="dataGridView.AutoResizeColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">サイズ変更する列のインデックス。</param>
        <summary>ヘッダー セルを含むすべてのセルの内容に合わせて、指定された列の幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅はメソッドの呼び出しあたり 1 回だけ調整します。後で列の内容変更されても、列は自動的に調整します。 すべての列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用して、新しいセルの値を格納できるだけの列幅に揃えます。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロールの行を操作](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
      </Parameters>
      <Docs>
        <param name="columnIndex">サイズ変更する列のインデックス。</param>
        <param name="autoSizeColumnMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 値のいずれか 1 つ。</param>
        <summary>指定されたサイズ モードを使用して、指定された列の幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅はメソッドの呼び出しあたり 1 回だけ調整します。後で列の内容変更されても、列は自動的に調整します。 すべての列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用して、新しいセルの値を格納できるだけの列幅に揃えます。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロールの行を操作](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />、<see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" />、または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">サイズ変更する列のインデックス。</param>
        <param name="autoSizeColumnMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedHeight">現在の行の高さに基づいて新しい幅を計算する場合は <see langword="true" />。行の高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用して指定された列の幅を調整します。オプションで、行の高さが後で調整されることを見込んで幅を計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅はメソッドの呼び出しあたり 1 回だけ調整します。後で列の内容変更されても、列は自動的に調整します。 すべての列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合`fixedHeight`は`false`、呼び出されるという前提で計算列の幅、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド [次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />、<see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" />、または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumnHeadersHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ヘッダーの内容に合わせて列ヘッダーの高さを調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : unit -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>最大の列ヘッダーの内容に合わせて列ヘッダーの高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 メソッドを呼び出すたびに、1 回だけ列ヘッダーの高さを調整します。場合は、列ヘッダーは、ヘッダーを後で変更する列の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、列ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>プロパティ。  
  
 列ヘッダーのサイズが変更されるときに、複数の行にラップするセルの内容をセルに対して有効なセル スタイルがあります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は列ヘッダーのサイズを変更する方法を示し、ボタンの結果として行をクリックします。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">内容が変更されたヘッダーを格納している列のインデックス。</param>
        <summary>指定された列のヘッダーの内容の変更に基づいて、列ヘッダーの高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはのみにバインドされたデータ ソースに指定された列のヘッダーの内容がユーザーの編集または変更の結果として変更された場合、列ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 列ヘッダーの高さは 1 回だけ調整メソッドの呼び出しごと、コンテンツの変更では、それが必要な場合場合は、列ヘッダーは、ヘッダーを後で変更する列の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、列ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>プロパティ。  
  
 列ヘッダーのサイズが変更されるときに、複数の行にラップするセルの内容をセルに対して有効なセル スタイルがあります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (fixedRowHeadersWidth As Boolean, fixedColumnsWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (fixedRowHeadersWidth, fixedColumnsWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnsWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fixedRowHeadersWidth">行ヘッダーの現在の幅に基づいて新しい高さを計算する場合は <see langword="true" />。行ヘッダーの幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <param name="fixedColumnsWidth">現在の列の幅に基づいて新しい高さを計算する場合は <see langword="true" />。列の幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <summary>内容に合わせて列ヘッダーの高さを調整します。オプションで、列ヘッダーまたは行ヘッダー (またはその両方) の幅が後で調整されることを見込んで高さを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 メソッドを呼び出すたびに、1 回だけ列ヘッダーの高さを調整します。場合は、列ヘッダーは、ヘッダーを後で変更する列の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、列ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>プロパティ。  
  
 列ヘッダーのサイズが変更されるときに、複数の行にラップするセルの内容をセルに対して有効なセル スタイルがあります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedColumnsWidth`または`fixedRowHeadersWidth`パラメーターは`false`、メソッドなど、呼び出すことが、予測での列ヘッダーの高さの計算<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>[次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (columnIndex As Integer, fixedRowHeadersWidth As Boolean, fixedColumnWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (columnIndex, fixedRowHeadersWidth, fixedColumnWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">新しい高さを決定するために内容が使用される列ヘッダーのインデックス。</param>
        <param name="fixedRowHeadersWidth">行ヘッダーの現在の幅に基づいて新しい高さを計算する場合は <see langword="true" />。行ヘッダーの幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <param name="fixedColumnWidth">指定された列の現在の幅に基づいて新しい高さを計算する場合は <see langword="true" />。列の幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <summary>指定された列のヘッダーの内容の変更に基づいて列ヘッダーの高さを調整します。オプションで、列ヘッダーまたは行ヘッダー (またはその両方) の幅が後で調整されることを見込んで高さを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはのみにバインドされたデータ ソースに指定された列のヘッダーの内容がユーザーの編集または変更の結果として変更された場合、列ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 列ヘッダーの高さは 1 回だけ調整メソッドの呼び出しごと、コンテンツの変更では、それが必要な場合場合は、列ヘッダーは、ヘッダーを後で変更する列の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、列ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>プロパティ。  
  
 列ヘッダーのサイズが変更されるときに、複数の行にラップするセルの内容をセルに対して有効なセル スタイルがあります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedColumnWidth`または`fixedRowHeadersWidth`パラメーターは`false`、メソッドなど、呼び出すことが、予測での列ヘッダーの高さの計算<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>[次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumns">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>セルの内容に合わせてすべての列の幅を調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : unit -&gt; unit" Usage="dataGridView.AutoResizeColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ヘッダー セルを含むすべてのセルの内容に合わせて、すべての列の幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅は、メソッドを呼び出すたびに 1 回だけ調整されます。後で列の内容変更されても、列は自動的に調整します。 特定の列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、すべての列、列および列ヘッダーの内容に合わせてサイズ変更します。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode -&gt; unit" Usage="dataGridView.AutoResizeColumns autoSizeColumnsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値のいずれか 1 つ。</param>
        <summary>指定されたサイズ モードを使用して、すべての列の幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅は、メソッドを呼び出すたびに 1 回だけ調整されます。後で列の内容変更されても、列は自動的に調整します。 特定の列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、すべての列、列および列ヘッダーの内容に合わせてサイズ変更します。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumns (autoSizeColumnsMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedHeight">現在の行の高さに基づいて新しい幅を計算する場合は <see langword="true" />。行の高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用してすべての列の幅を調整します。オプションで、行の高さが後で調整されることを見込んで幅を計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、列のサイズを変更するタイミングを制御する場合に便利です。 列の幅は、メソッドを呼び出すたびに 1 回だけ調整されます。後で列の内容変更されても、列は自動的に調整します。 特定の列のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する列を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>プロパティまたは列<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合`fixedHeight`は`false`、呼び出されるという前提で、列の幅が計算されます、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド [次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>セルの内容に合わせて、指定された行の高さを調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int -&gt; unit" Usage="dataGridView.AutoResizeRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">サイズ変更する行のインデックス。</param>
        <summary>ヘッダー セルを含むすべてのセルの内容に合わせて、指定された行の高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 メソッド呼び出すたびに、1 回だけ行の高さを調整します。後で行の内容変更されても、行は自動的に調整します。 すべての行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、3 番目の行のサイズを変更、<xref:System.Windows.Forms.DataGridView>に合わせて、列の内容。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">サイズ変更する行のインデックス。</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 値のいずれか 1 つ。</param>
        <summary>指定されたサイズ モードを使用して、指定された行の高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 メソッド呼び出すたびに、1 回だけ行の高さを調整します。後で行の内容変更されても、行は自動的に調整します。 すべての行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい高さを計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、3 番目の行のサイズを変更、<xref:System.Windows.Forms.DataGridView>に合わせて、列の内容。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">サイズ変更する行のインデックス。</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedWidth">列の現在の幅に基づいて新しい高さを計算する場合は <see langword="true" />。列の幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用して指定された行の高さを調整します。オプションで、列の幅が後で調整されることを見込んで高さを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 メソッド呼び出すたびに、1 回だけ行の高さを調整します。後で行の内容変更されても、行は自動的に調整します。 すべての行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド。 自動的にその内容が変更されるたびにサイズを変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい高さを計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合`fixedWidth`は`false`、呼び出されることを期待で行の高さの計算、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド [次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" /> であり、かつ <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> が <see langword="false" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRowHeadersWidth">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ヘッダーの内容に合わせて行ヘッダーの幅を調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth rowHeadersWidthSizeMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値のいずれか 1 つ。</param>
        <summary>指定されたサイズ モードを使用して、行ヘッダーの幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 メソッドを呼び出すたびに、1 回だけ行ヘッダーの幅を調整します。場合は、行ヘッダーは、ヘッダーを後で変更する行の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、行ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>プロパティ。  
  
 このメソッドでは、限られた表示されている行のみにあるように、ヘッダーの値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> または <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">内容が変更された行ヘッダーのインデックス。</param>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値のいずれか 1 つ。</param>
        <summary>指定された行のヘッダーの内容の変更に基づいて、指定されたサイズ モードを使用して行ヘッダーの幅を調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはのみにバインドされたデータ ソースに指定した行のヘッダーの内容がユーザーの編集または変更の結果として変更された場合、行ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 行ヘッダーの幅が 1 回だけ調整メソッドの呼び出しごと、コンテンツの変更では、それが必要な場合場合は、行ヘッダーは、ヘッダーを後で変更する行の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、行ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>プロパティ。  
  
 このメソッドでは、限られた表示されている行のみにあるように、ヘッダーの値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、最初の行ヘッダーの内容の変更に基づく行ヘッダーの幅のサイズを変更する方法を示しています。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#5)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> の値が <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> または <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowsHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowsHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowsHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedColumnHeadersHeight">列ヘッダーの現在の高さに基づいて新しい幅を計算する場合は <see langword="true" />。列ヘッダーの高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <param name="fixedRowsHeight">現在の行の高さに基づいて新しい幅を計算する場合は <see langword="true" />。行の高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用して行ヘッダーの幅を調整します。オプションで、行ヘッダーまたは列ヘッダー (またはその両方) の幅が後で調整されることを見込んで幅を計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 メソッドを呼び出すたびに、1 回だけ行ヘッダーの幅を調整します。場合は、行ヘッダーは、ヘッダーを後で変更する行の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、行ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>プロパティ。  
  
 このメソッドでは、限られた表示されている行のみにあるように、ヘッダーの値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedColumnHeadersHeight`または`fixedRowsHeight`パラメーターは`false`、呼び出すことことなどという前提で行ヘッダーの幅を計算します。<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>[次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> または <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">内容が変更されたヘッダーを格納している行のインデックス。</param>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedColumnHeadersHeight">列ヘッダーの現在の高さに基づいて新しい幅を計算する場合は <see langword="true" />。列ヘッダーの高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <param name="fixedRowHeight">指定された行の現在の高さに基づいて新しい幅を計算する場合は <see langword="true" />。行の高さも調整されることを見込んで幅を計算する場合は <see langword="false" />。</param>
        <summary>指定された行のヘッダーの内容の変更に基づいて、指定されたサイズ モードを使用して行ヘッダーの幅を調整します。オプションで、行ヘッダーまたは列ヘッダー (またはその両方) の幅が後で調整されることを見込んで幅を計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドはのみにバインドされたデータ ソースに指定した行のヘッダーの内容がユーザーの編集または変更の結果として変更された場合、行ヘッダーのサイズを変更するタイミングを制御する場合に便利です。 行ヘッダーの幅が 1 回だけ調整メソッドの呼び出しごと、コンテンツの変更では、それが必要な場合場合は、行ヘッダーは、ヘッダーを後で変更する行の内容を自動的に調整します。 自動的にサイズ変更の内容が変更されると、行ヘッダーを設定するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>プロパティ。  
  
 このメソッドでは、限られた表示されている行のみにあるように、ヘッダーの値に基づいて新しい幅を計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードを保護し、派生の理想的なセルの高さと幅の比率を実現するために設計されていますが<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedColumnHeadersHeight`または`fixedRowHeight`パラメーターは`false`、呼び出すことことなどという前提で行ヘッダーの幅を計算します。<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>[次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> または <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRows">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>内容に合わせて一部またはすべての行の高さを調整します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : unit -&gt; unit" Usage="dataGridView.AutoResizeRows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ヘッダー セルを含むすべてのセルの内容に合わせて、すべての行の高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 行の高さは、メソッドを呼び出すたびに 1 回だけ調整されます。後で行の内容を変更されても、行は自動的に調整します。 特定の行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>メソッド。 行のサブセットのサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>オーバー ロードします。 内容が変更されるたびにサイズが自動的に変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、すべての行ヘッダー以外のセルの内容に基づいてサイズを変更する方法を示します。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode -&gt; unit" Usage="dataGridView.AutoResizeRows autoSizeRowsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値のいずれか 1 つ。</param>
        <summary>指定されたサイズ モード値を使用して、行の高さを調整します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 行の高さは、メソッドを呼び出すたびに 1 回だけ調整されます。後で行の内容を変更されても、行は自動的に調整します。 特定の行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>メソッド。 行のサブセットのサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>オーバー ロードします。 内容が変更されるたびにサイズが自動的に変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい高さを計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、すべての行ヘッダー以外のセルの内容に基づいてサイズを変更する方法を示します。 このコード例で示されている例の一部は、[方法。フォームの DataGridView コントロール プログラムで、Windows の内容に合わせてサイズ変更セル](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> であり、<see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> は <see langword="false" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /> の値を持ちます。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (autoSizeRowsMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedWidth">現在の列の幅に基づいて新しい高さを計算する場合は <see langword="true" />。列の幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用してすべての行の高さを調整します。オプションで、列の幅が後で調整されることを見込んで高さを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行のサイズを変更するタイミングを制御する場合に便利です。 行の高さは、メソッドを呼び出すたびに 1 回だけ調整されます。後で行の内容を変更されても、行は自動的に調整します。 特定の行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>メソッド。 行のサブセットのサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29>オーバー ロードします。 内容が変更されるたびにサイズが自動的に変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい高さを計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードを保護し、派生の理想的なセルの高さと幅の比率を実現するために設計されていますが<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedWidth`パラメーターが`false`、呼び出されることを期待で行の高さの計算、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド [次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> であり、<see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> は <see langword="false" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /> の値を持ちます。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(int32 rowIndexStart, int32 rowsCount, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (rowIndexStart As Integer, rowsCount As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(int rowIndexStart, int rowsCount, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : int * int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (rowIndexStart, rowsCount, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowsCount" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">サイズ変更する最初の行のインデックス。</param>
        <param name="rowsCount">サイズ変更する行の数。</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 値のいずれか 1 つ。</param>
        <param name="fixedWidth">現在の列の幅に基づいて新しい高さを計算する場合は <see langword="true" />。列の幅も調整されることを見込んで高さを計算する場合は <see langword="false" />。</param>
        <summary>指定されたサイズ モードを使用して指定された行の高さを調整します。オプションで、列の幅が後で調整されることを見込んで高さを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、行がサイズ変更、サイズなど、更新されたバインドされたレコードの範囲内の行の特定のサブセットのみを変更するときを制御する場合に便利です。 指定した行の行の高さは、メソッドを呼び出すたびに 1 回だけ調整されます。後で行の内容を変更されても、行は自動的に調整します。 特定の行のサイズを変更するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>メソッド。 すべての行のサイズを変更するには、異なるオーバー ロードを使用して、<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド。 内容が変更されるたびにサイズが自動的に変更する行を設定するには、使用、<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 このオーバー ロードを使用して、表示されている行のみにあるように、セルの限られたセット内の値に基づいて新しい高さを計算するサイズ変更モードを指定できます。 これにより、コントロールには、多くの行が含まれている場合、パフォーマンスが向上します。  
  
 このオーバー ロードが保護されているし、は、派生で理想的なセルの高さと幅の比率を実現するためにできるように設計されています<xref:System.Windows.Forms.DataGridView>クラス。 場合、`fixedWidth`パラメーターが`false`、呼び出されることを期待で行の高さの計算、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッド [次へ]。  
  
 プログラムによるサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> の値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> であり、<see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> は <see langword="false" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> は有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /> の値を持ちます。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" /> が 0 未満です。  
  
- または - 
 <paramref name="rowsCount" /> が 0 未満です。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスでは、このプロパティは使用されません。</summary>
        <value>有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnModeChanged As DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnModeEventHandler ^ AutoSizeColumnModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " Usage="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> プロパティの値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロールの列を操作](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#180)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#180)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeColumnsMode As DataGridViewAutoSizeColumnsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { System::Windows::Forms::DataGridViewAutoSizeColumnsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeColumnsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsMode : System.Windows.Forms.DataGridViewAutoSizeColumnsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の幅を決定する方法を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値。 既定値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、コントロールに入力するか、セルの内容に合わせて列の幅が自動的に調整するために、コントロールを構成できます。 サイズの調整は、コントロールの幅が変更されるたびに、フィル モードで発生します。 セルの内容を変更する場合、または場合、コンテンツ ベースのサイズ変更モードでサイズの調整が発生する<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>が有効にすると、行の高さを変更します。 一部のコンテンツ ベースのサイズ変更モードを使用して、パフォーマンスが向上するために現在表示されている行のサイズ調整を制限できます。  
  
 個々 の列のサイズ変更モードを変更するには、次のように設定します。 その<xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A>プロパティ。 このプロパティの既定値は<xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet>、列がその動作を継承することを示すし、その<xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A>コントロールからプロパティ値。  
  
 フィル モード列の分割で示される比率に基づいて使用可能なコントロールの幅、<xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A>プロパティの値。 フィル モードの使用可能な幅は、コントロールのクライアント領域の幅から他のすべての列の幅を減算によって決まります。 この幅の合計より小さい場合<xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A>のすべてのフィル モード列の値は、水平スクロール バーが表示されます、すべてのフィル モード列は、最小の幅で表示され、ユーザー列のサイズ変更が無効になっています。 列フィル モードの詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールの列フィル モード](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)します。  
  
 持つ列のみを<xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>プロパティ値の`true`が自動的にサイズ変更される列の表示を変更しても発生するサイズ変更は発生しません。 さらに、列が自動的にサイズを変更する設定されている場合、ユーザーは、マウスで列の幅を調整できません。  
  
 プログラムで列の幅を調整するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A>メソッドまたは列セット<xref:System.Windows.Forms.DataGridViewColumn.Width%2A>プロパティ。  
  
 コンテンツ ベースの自動サイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、2 つが、マスター/詳細のシナリオでこのプロパティを使用する方法を示しています。<xref:System.Windows.Forms.DataGridView>コントロールが親/子リレーションシップの 2 つのテーブルからデータを表示します。 この例では、マスターのコントロールの列のサイズ変更モードは<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>、され、列の幅が読み込まれた値に合わせてプログラムで初期化します。 詳細コントロールは、(たとえば、ユーザーは、親テーブルの現在の行を変更) ときに、値が変更されるたびに列が自動的に調整するために、列の自動サイズ変更モードに設定されます。 この例で使用できる例の一部は、[方法。2 つの Windows フォーム DataGridView コントロールを使用してマスター/詳細フォームを作成する](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/CS/masterdetails.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/VB/masterdetails.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 値ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" /> で、列ヘッダーは非表示に指定されており、表示されている列の少なくとも 1 つの <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> プロパティの値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> です。  
  
- または - 
このプロパティの設定時に指定した値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" /> で、表示されている列のうち <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> プロパティの値が <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> になっているものの少なくとも 1 つが固定されています。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.FillWeight" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnsModeChanged As DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventHandler ^ AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " Usage="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#257](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#257)]
 [!code-vb[System.Windows.Forms.EventExamples#257](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#257)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeRowsMode As DataGridViewAutoSizeRowsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeRowsMode AutoSizeRowsMode { System::Windows::Forms::DataGridViewAutoSizeRowsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeRowsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsMode : System.Windows.Forms.DataGridViewAutoSizeRowsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeRowsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の高さを決定する方法を示す値を取得または設定します。</summary>
        <value>サイズ変更モードを示す <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値。 既定値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、行の高さが内容に合わせて内容が変更されるたびに自動的に調整するために、コントロールを構成できます。 場合<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>が有効にすると、行の高さも調整列幅が変更されるたびにします。 いくつかのサイズ変更モードを使用して、パフォーマンスが向上するために現在表示されている行のサイズ調整を制限できます。  
  
 行だけを<xref:System.Windows.Forms.DataGridViewRow.Visible%2A>プロパティ値の`true`が自動的にサイズ変更される行の可視性を変更しても発生するサイズ変更は発生しません。 さらに、行がサイズが自動的に設定されている場合、ユーザーはマウスを使用して行の高さを調整できません。  
  
 <xref:System.Windows.Forms.DataGridViewRow.Height%2A>を自動的にサイズの行の値が使用されるフォントのサイズに対応するレイアウト時に再計算されます。 正しいさせる<xref:System.Windows.Forms.DataGridViewRow.Height%2A>、フォームの値を取得する必要があります<xref:System.Windows.Forms.Control.Layout>フォームのコンス トラクターでイベントの代わりにします。  
  
 プログラムでの行の高さを調整するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A>または<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>メソッド、または行セット<xref:System.Windows.Forms.DataGridViewRow.Height%2A>プロパティ。  
  
 セルの内容に複数の行に折り返されます行のサイズが変更されたときに、有効なセルのセル スタイルがいる必要があります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 コンテンツ ベースの自動サイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、行に行ヘッダーとそのすべての列の内容に基づいてサイズ変更に自動的に設定する方法を示します。 このコード例で示されている例の一部は、[方法。自動的にサイズ変更のセルのコンテンツは、Windows で変更されたときにフォームの DataGridView コントロール](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 値ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定される値は <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> であり、行ヘッダーは非表示です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1d68934d-a04c-4b12-9e66-c856c6828131">方法: Windows フォームの DataGridView コントロールの内容変更時にセルのサイズを自動的に変更する</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeRowsModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ AutoSizeRowsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例で使用できる例の一部は、[方法。自動的にサイズ変更のセルのコンテンツは、Windows で変更されたときにフォームの DataGridView コントロール](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの背景色を取得または設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、このコントロールに関連するではありません。 部分の背景色を設定する、<xref:System.Windows.Forms.DataGridView>セルによって占有されていないコントロールを使用して、<xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.BackgroundColor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.BackColorChanged>イベントは、<xref:System.Windows.Forms.DataGridView.BackColor%2A>プログラムまたはユーザーの操作によってプロパティが変更されました。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の背景色を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Drawing.SystemColors.AppWorkspace" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>プロパティの領域の色を決定する、<xref:System.Windows.Forms.DataGridView>するセルが入力されていません。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が <see cref="F:System.Drawing.Color.Empty" /> です。  
  
- または - 
このプロパティの設定時に指定した値に、255 未満の <see cref="P:System.Drawing.Color.A" /> プロパティ値が含まれています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundColorChanged : EventHandler " Usage="member this.BackgroundColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.BackgroundColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.BackgroundColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#259](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#259)]
 [!code-vb[System.Windows.Forms.EventExamples#259](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#259)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに表示される背景イメージを取得または設定します。</summary>
        <value>コントロールの背景に表示するイメージを表す <see cref="T:System.Drawing.Image" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールでは、このプロパティは無効です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ImageLayout" /> 列挙型で定義される背景画像のレイアウトを取得または設定します。</summary>
        <value>背景イメージ レイアウトを示す <see cref="T:System.Windows.Forms.ImageLayout" /> 値。 既定値は <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールでは、このプロパティは無効です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 説明したとおり、このイベントが発生しますが、<xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A>プロパティがこのコントロールに関連します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual bool BeginEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (selectAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; bool&#xA;override this.BeginEdit : bool -&gt; bool" Usage="dataGridView.BeginEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">セルの内容をすべて選択する場合は <see langword="true" />。内容を選択しない場合は <see langword="false" />。</param>
        <summary>現在のセルを編集モードにします。</summary>
        <returns>現在のセルが既に編集モードである場合、または編集モードに正常に移行できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが戻る`false`さまざまな理由によって発生することが編集モードに切り替わるかどうか、セルは失敗します。 このメソッドが戻る`false`場合は、現在のセルは読み取り専用です。 返します`false`場合、セル<xref:System.Windows.Forms.DataGridViewCell.EditType%2A>プロパティは`null`(セルを意味することはできません編集コントロールをホスト) セルの種類を実装しない、<xref:System.Windows.Forms.IDataGridViewEditingCell>インターフェイス。  
  
 このメソッドが発生しているセルが編集をサポートする場合、<xref:System.Windows.Forms.DataGridView.CellBeginEdit>イベントを取り消すことができますしを返します`false`イベント ハンドラーの編集をキャンセルする場合。 編集が取り消されないセルが編集コントロールをホストできる場合は、このメソッドはコントロールを初期化しますし、それを表示します。 初期化が失敗したかどうか、このメソッドが戻る`false`します。  
  
 セルは編集モードに移行できた場合、<xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A>プロパティが返す`true`します。  
  
   
  
## Examples  
 次のコード例では、このメソッドの使用を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> が有効なセルに設定されていません。  
  
- または - 
このメソッドが <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> イベントに対してハンドラーで呼び出されました。</exception>
        <exception cref="T:System.InvalidCastException">セルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティによって示される型が <see cref="T:System.Windows.Forms.Control" /> 型 から派生していません。  
  
- または - 
セルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティによって示される型が <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> インターフェイスを実装していません。</exception>
        <exception cref="T:System.Exception">セル値の編集の初期化に失敗し、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーで <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティが <see langword="true" /> に設定されています。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の境界線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.BorderStyle" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは影響の外側の境界線、<xref:System.Windows.Forms.DataGridView>します。 セルの罫線のスタイルを設定するには、使用、<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、単純なデータ バインドを初期化する方法を示します<xref:System.Windows.Forms.DataGridView>します。 設定する方法も示します、<xref:System.Windows.Forms.DataGridView.BorderStyle%2A>プロパティ。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.BorderStyle" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.BorderStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.BorderStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#260](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#260)]
 [!code-vb[System.Windows.Forms.EventExamples#260](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#260)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; bool" Usage="dataGridView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在選択されているセルの編集モードをキャンセルして、変更を破棄します。</summary>
        <returns>キャンセルが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、このメソッドの使用を示しています。 この例で使用できる例の一部は、 [Windows フォーム DataGridView コントロールで列の塗りつぶしモード](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/CS/fillcolumns.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/vb/fillcolumns.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelRowEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler CancelRowEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CancelRowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelRowEdit As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ CancelRowEdit;" />
      <MemberSignature Language="F#" Value="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " Usage="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> プロパティが <see langword="true" /> で、行の編集をキャンセルした場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridView>が仮想モードでは変更は既定では、セル レベルでデータ キャッシュにコミットします。 <xref:System.Windows.Forms.DataGridView.CancelRowEdit>行レベルのトランザクションを実装するときにイベントを使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridView>仮想モードで制御します。 コントロールが編集モードの場合、`rowInEdit`変数が編集される行のインデックスを保持し、`customerInEdit`変数はその行に対応する顧客オブジェクトへの参照を保持します。 ユーザーが編集モードを解除を取り消したときにこのオブジェクトを破棄できます。 ユーザーが編集した行が新しいレコードの行の場合は、ただし、古い Customer オブジェクトが破棄され、もう一度編集を行ってユーザーが開始できるように、新しいに置き換えられます。 この例で使用できる例の一部は、[チュートリアル。仮想モードの実装で、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#170)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.Control.ImeMode" /> プロパティをアクティブな値に設定して、IME サポートを有効にできるかどうかを示す値を取得します。</summary>
        <value>編集可能なセルが選択されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBeginEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBeginEdit As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ CellBeginEdit;" />
      <MemberSignature Language="F#" Value="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたセルに対して編集モードが開始するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、現在に反映するようにこのイベントを処理する方法を示しています。<xref:System.Windows.Forms.DataGridViewCell>編集されています。 この例で、<xref:System.Windows.Forms.Control.Text%2A>プロパティ<xref:System.Windows.Forms.Form>どのセルが編集中に反映するように設定されます。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`、すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#220)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As DataGridViewCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellBorderStyle CellBorderStyle { System::Windows::Forms::DataGridViewCellBorderStyle get(); void set(System::Windows::Forms::DataGridViewCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.DataGridViewCellBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルの境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> に含まれるセルの境界線スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>プロパティが以外の値に設定されて<xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single>、 <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal>、または<xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical>、<xref:System.Windows.Forms.DataGridView.GridColor%2A>プロパティは、システム カラーである必要があります。  
  
 このプロパティを設定することはできません、 <xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom> 、これは読み取り専用の値を示す値を使用すると、セルの境界線スタイルがカスタマイズされていること、<xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が <see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" /> です。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CellBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CellBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CellBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyleChanged : EventHandler " Usage="member this.CellBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの境界線スタイルが変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#261](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#261)]
 [!code-vb[System.Windows.Forms.EventExamples#261](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#261)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellClick;" />
      <MemberSignature Language="F#" Value="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの一部がクリックされた場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、境界線を含むと埋め込みのセルの任意の部分がクリックされたときに発生します。 また、ユーザーが押すし、セルのボタンまたはチェック ボックス セルにフォーカスがあり、SPACE キーを押しながらセルがクリックされた場合は、セルの種類をこれらの 2 回発生時に、SPACE キーを離したときにも発生します。  
  
 セルの内容がクリックされたときを確認するのには、処理、<xref:System.Windows.Forms.DataGridView.CellContentClick>イベント。  
  
 このイベントは、マウスの位置に関する情報を受信しません。 イベント ハンドラーは、マウスの位置に関する情報を必要とする場合は、使用、<xref:System.Windows.Forms.DataGridView.CellMouseClick>イベント。  
  
 数回のクリックでの<xref:System.Windows.Forms.DataGridViewCheckBoxCell>、このイベントは、前に、チェック ボックスをオン変更値であるため、現在の値に基づいて予期される値を計算したくない場合に発生します。、通常は、<xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>イベント代わりにします。 ユーザー指定の値がコミットされた場合にのみそのイベントが発生するため、セルにフォーカスが離れたときに通常発生する必要がありますも処理する、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>イベント。 現在のセルがチェック ボックス セルの場合を呼び出すそのハンドラーで、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>メソッドを渡します、<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>値。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.DataGridView.CellClick>のイメージ列を使用して、三目並べゲーム実装内のイベント ハンドラーを<xref:System.Windows.Forms.DataGridView>コントロール。 イベント ハンドラーが 2 つのいずれかにセルの値を設定、ゲーム オーバーですか、セルが既にクリックしてされた、しない限り、<xref:System.Drawing.Bitmap>変数によって表されるオブジェクト`x`と`o`します。  
  
 このコード例に示すの[方法。Windows フォーム DataGridView コントロールでのイメージ列を操作](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル内の内容がクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、セルの内容がクリックされたときに発生します。 押すと、ユーザーとボタン セルの中に space キーを解放またはチェック ボックス セルにフォーカスがあり、セルの内容を space キーを押しながらクリックするとセルの種類をこれらの 2 回発生時にも発生します。  
  
 ボタンのクリックを検出するためにこのイベントを使用して、<xref:System.Windows.Forms.DataGridViewButtonCell>のリンクをクリックするか、<xref:System.Windows.Forms.DataGridViewLinkCell>します。  
  
 数回のクリックでの<xref:System.Windows.Forms.DataGridViewCheckBoxCell>、このイベントは、前に、チェック ボックスをオン変更値であるため、現在の値に基づいて予期される値を計算したくない場合に発生します。、通常は、<xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>イベント代わりにします。 ユーザー指定の値がコミットされた場合にのみそのイベントが発生するため、セルにフォーカスが離れたときに通常発生する必要がありますも処理する、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>イベント。 現在のセルがチェック ボックス セルの場合を呼び出すそのハンドラーで、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>メソッドを渡します、<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>値。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このセルがクリックされたリンク セルまたはボタン セルと、その結果、対応するアクションを実行するかどうかを決定するイベントのハンドラーを提供します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#60)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#60)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがセルの内容をダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellContentDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellContentDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#285](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#285)]
 [!code-vb[System.Windows.Forms.EventExamples#285](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#285)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#286](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#286)]
 [!code-vb[System.Windows.Forms.EventExamples#286](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#286)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripNeeded As DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventHandler ^ CellContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " Usage="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのショートカット メニューが必要な場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>のみイベントが発生したときに、<xref:System.Windows.Forms.DataGridView>コントロール<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティを設定またはその<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。  
  
 処理するとき、 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 、イベント ハンドラーで指定したショートカット メニューが表示されるたびにユーザーがセルを右クリックします。 これは、現在の状態またはセルの値によって決定されたショートカット メニューを表示する場合に便利です。  
  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>たびにイベントにも発生の値、<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType>プロパティが取得プログラムか、ユーザーがセルを右クリックしたとき。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A>状態または、セルの値を特定し、この情報を使用して、変更または変更するプロパティ、<xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType>プロパティ。 このプロパティは、セルの値で初期化されます<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>プロパティで、イベント値より優先されます。  
  
 処理、<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>大量のデータ セルを設定したパフォーマンスの低下を回避するために使用する場合、イベント<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>複数のセルの値。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
 個々 のセル、行を設定してではなく個別の行のショートカット メニューを指定することも<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>プロパティまたは処理、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>イベント。 セル<xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>プロパティの設定は、行をオーバーライド<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>プロパティの設定と<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>イベント両方の上書き、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>イベントと、行<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>プロパティの設定。 ただし、指定`null`の行のショートカット メニューが無効にされていることを防ぐためにセルのショートカット メニューにします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>ユーザーがセルを右クリックしたときに使用されるカスタムのショートカット メニューを表示するイベント ハンドラー。  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのどこかをユーザーがダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#288](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#288)]
 [!code-vb[System.Windows.Forms.EventExamples#288](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEndEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEndEdit As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEndEdit;" />
      <MemberSignature Language="F#" Value="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されているセルに対して、編集モードが停止されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、行をクリアするには、このイベントを処理する方法を示しています。<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType>プロパティによって以前に設定された場合、<xref:System.Windows.Forms.DataGridView.CellValidating>イベント ハンドラー。 <xref:System.Windows.Forms.DataGridView.CellValidating>とき、ユーザーが ESC キーを押すの古いセルの値に戻りますが、新しいセル値が、検証条件を満たしている場合、イベント ハンドラーでエラー テキストをクリアできます、<xref:System.Windows.Forms.DataGridView.CellValidating>イベントは発生しません。 この例で使用できる例の一部は、[チュートリアル。フォームの DataGridView コントロールを Windows のデータの検証](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)です。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEnter;" />
      <MemberSignature Language="F#" Value="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールで現在のセルが変更されたとき、またはこのコントロールが入力フォーカスを受け取ったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、コントロールに入力フォーカスがないし、クリックされたセルには現在のセルがない以前の場合、1 回のクリックを 2 回発生可能性があります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を変更するには、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>現在のセルのプロパティ。 この例選択項目の背景色を設定、<xref:System.Windows.Forms.DataGridView.CellEnter>にリセットし、イベント<xref:System.Drawing.Color.Empty>上、<xref:System.Windows.Forms.DataGridView.CellLeave>イベント。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`をすべてのイベントがイベント ハンドラーに関連付けられていることを確認してください。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの <see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /> プロパティの値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellErrorTextChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellErrorTextChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#291](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#291)]
 [!code-vb[System.Windows.Forms.EventExamples#291](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#291)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextNeeded As DataGridViewCellErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellErrorTextNeededEventHandler ^ CellErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " Usage="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのエラー テキストが必要なときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>のみイベントが発生したときに、<xref:System.Windows.Forms.DataGridView>コントロール<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティを設定またはその<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。 処理、<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>イベントは、その値または状態に応じてセルのエラーを確認する場合に便利です。  
  
 処理するとき、<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>イベント指定エラー テキスト ハンドラーでエラー グリフがセルに表示しない限り、および、<xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A>プロパティに設定されて`false`またはセルが編集モードにします。 エラー グリフ上、マウス ポインターを移動すると、エラー テキストがツールヒントに表示されます。  
  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>たびにイベントにも発生の値、<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType>プロパティを取得します。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A>状態または、セルの値を特定し、この情報を使用して、変更または変更するプロパティ、<xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType>プロパティ。 このプロパティは、セルの値で初期化されます<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>プロパティで、イベント値より優先されます。  
  
 処理、<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>大量のデータ セルを設定したパフォーマンスの低下を回避するために使用する場合、イベント<xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A>複数のセルの値。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、行を非共有または共有のすべてのセルを複製するセルのエラーの原因でないセルのエラー メッセージを作成する方法を示します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールを拡張するための推奨される手順</related>
      </Docs>
    </Member>
    <Member MemberName="CellFormatting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellFormatting As DataGridViewCellFormattingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellFormattingEventHandler ^ CellFormatting;" />
      <MemberSignature Language="F#" Value="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " Usage="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellFormattingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの内容が、表示用に書式指定されなければならないときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定で、<xref:System.Windows.Forms.DataGridView>コントロールは、セルの値を表示に適した形式に変換しようとしています。 たとえば、数値をテキスト ボックスのセルに表示文字列に変換には。 設定して使用する書式設定規則を指定することができます、<xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>のプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>などのプロパティによって返される、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティ。  
  
 処理することによって書式設定をカスタマイズするには標準の書式設定ための十分な場合、<xref:System.Windows.Forms.DataGridView.CellFormatting>イベント。 このイベントでは、完全な表示値と前景色および背景色、セルの表示に使用するなど、セルのスタイルを指定できます。 つまり、任意の種類のセルのセルの値自体に書式設定が必要かどうかに関係なく、書式設定には、このイベントを処理することができます。  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting>イベントは、各セルが描画される、避ける必要がありますのでこのイベントを処理するときに処理時間のかかるたびに発生します。 このイベントにも発生するときに、セル<xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A>が取得されるか、その<xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A>メソッドが呼び出されます。  
  
 処理するとき、 <xref:System.Windows.Forms.DataGridView.CellFormatting> 、イベント、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>プロパティは、セルの値で初期化されます。 セルの値から、表示値へのカスタム変換を提供する場合は、設定、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>プロパティ セルで指定された型の新しい値があることを確認、変換後の値を<xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A>プロパティ。 さらに値の書式設定が必要ないことを示す、設定、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>プロパティを`true`します。  
  
 ときにイベント ハンドラーが完了すると場合、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>は`null`または正しい型ではない、または<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>プロパティは`false`、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>を使用して書式設定、 <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>、 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>と<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>によって返されるセル スタイルのプロパティ、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType>セルを使用して初期化されるプロパティ、<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティ。  
  
 値に関係なく、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType>プロパティ、によって返されるオブジェクトの表示プロパティ、<xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType>プロパティは、セルを表示するために使用します。  
  
 カスタム書式設定を使用しての詳細については、<xref:System.Windows.Forms.DataGridView.CellFormatting>イベントを参照してください[方法。Windows フォーム DataGridView コントロールでデータの書式設定をカスタマイズ](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)します。  
  
 パフォーマンスの低下を避けるためには、このイベントを処理するときに、セルに直接アクセスするのではなく、イベント ハンドラーのパラメーターを使用してセルにアクセスします。  
  
 実際のセル値に、ユーザー指定の書式設定された値の変換をカスタマイズするには、処理、<xref:System.Windows.Forms.DataGridView.CellParsing>イベント。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を処理する方法を示しています、<xref:System.Windows.Forms.DataGridView.CellFormatting>イベント。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md">方法: Windows フォーム DataGridView コントロールのデータの書式設定をカスタマイズする</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellLeave;" />
      <MemberSignature Language="F#" Value="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルが入力フォーカスを失くし、現在のセルでなくなったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を変更するには、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>現在のセルのプロパティ。 この例選択項目の背景色を設定、<xref:System.Windows.Forms.DataGridView.CellEnter>にリセットし、イベント<xref:System.Drawing.Color.Empty>上、<xref:System.Windows.Forms.DataGridView.CellLeave>イベント。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`をすべてのイベントがイベント ハンドラーに関連付けられていることを確認してください。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがセルの任意の場所をマウスでクリックするたびに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、任意のマウス ボタンを使用して、ユーザーがクリックしたときに発生します。 使用して、<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>プロパティをどのボタンがクリックされたかを判断します。  
  
 セル内のリンクやボタンなど、セルの内容に数回のクリックを検出するために使用して、<xref:System.Windows.Forms.DataGridView.CellContentClick>イベント。  
  
 このイベントのハンドラーでは、列のインデックスと、マウス ポインターの位置の行インデックスを受け取ります。  
  
 数回のクリックでの<xref:System.Windows.Forms.DataGridViewCheckBoxCell>、このイベントは、前に、チェック ボックスをオン変更値であるため、現在の値に基づいて予期される値を計算したくない場合に発生します。、通常は、<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベント代わりにします。 ユーザー指定の値がコミットされた場合にのみそのイベントが発生するため、セルにフォーカスが離れたときに通常発生する必要がありますも処理する、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>イベント。 現在のセルがチェック ボックス セルの場合を呼び出すそのハンドラーで、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>メソッドを渡します、<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>値。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellMouseClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellMouseClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#295](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#295)]
 [!code-vb[System.Windows.Forms.EventExamples#295](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#295)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseEventHandler" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 内のセルがダブルクリックされた場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、任意のマウス ボタンを使用して、ユーザーがダブルクリックしたときに発生します。 使用して、<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>プロパティをどのボタンがクリックされたかを判断します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#296](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#296)]
 [!code-vb[System.Windows.Forms.EventExamples#296](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#296)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDown As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDown;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがセルの境界線内にあるときに、ユーザーがマウス ボタンを押したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、ユーザーが任意のマウス ボタンを押したときに発生します。 使用して、<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>プロパティをどのボタンがクリックされたかを判断します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellMouseDown>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellMouseDown>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#297](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#297)]
 [!code-vb[System.Windows.Forms.EventExamples#297](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#297)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseEnter;" />
      <MemberSignature Language="F#" Value="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがセルに入ったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.DataGridView.CellMouseEnter>のイメージ列を使用して、三目並べゲーム実装内のイベント ハンドラーを<xref:System.Windows.Forms.DataGridView>コントロール。 イベント ハンドラーは、カーソルと表示するのにツールヒントを確認するのにセルの値を使用します。  
  
 このコード例に示すの[方法。Windows フォーム DataGridView コントロールでのイメージ列を操作](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseLeave;" />
      <MemberSignature Language="F#" Value="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがセルから離れるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.DataGridView.CellMouseLeave>のイメージ列を使用して、三目並べゲーム実装内のイベント ハンドラーを<xref:System.Windows.Forms.DataGridView>コントロール。 イベント ハンドラーで設定されているカーソルと、ツールヒントのリセット、<xref:System.Windows.Forms.DataGridView.CellMouseEnter>イベント ハンドラー。  
  
 このコード例に示すの[方法。Windows フォーム DataGridView コントロールでのイメージ列を操作](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseMove As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseMove;" />
      <MemberSignature Language="F#" Value="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが <see cref="T:System.Windows.Forms.DataGridView" /> コントロール上を移動すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellMouseMove>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellMouseMove>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#300)]
 [!code-vb[System.Windows.Forms.EventExamples#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#300)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseUp As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseUp;" />
      <MemberSignature Language="F#" Value="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが、セル上でマウス ボタンを離したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、ユーザーが任意のマウス ボタンを離すと発生します。 使用して、<xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType>プロパティをどのボタンがクリックされたかを判断します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellMouseUp>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellMouseUp>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#301)]
 [!code-vb[System.Windows.Forms.EventExamples#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellPainting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellPainting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPainting As DataGridViewCellPaintingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellPaintingEventHandler ^ CellPainting;" />
      <MemberSignature Language="F#" Value="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " Usage="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellPaintingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルが描画されなければならないときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのセルの外観をカスタマイズするには、このイベントを処理することができます。 自分自身、またはセルの描画特定の部分にセル全体を描画して、使用することができます、<xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType>または<xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType>他の部分を描画するメソッド。 使用することも、<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>クラスを現在のテーマを使用して標準のコントロールを描画します。 詳細については、次を参照してください。 [Visual スタイルを使用しているコントロールのレンダリング](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)します。 使用する場合[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]で使用できる標準のイメージの大規模なライブラリにもアクセス権がある、<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 このイベントを処理するときに、イベント ハンドラーのパラメーターを使用してセルにアクセスしないで、セルに直接アクセスします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントを使用して、特定の列のすべてのセルの外観をカスタマイズする方法を示しています。  
  
 このコード例で使用できるの[方法。Windows フォームの DataGridView コントロール内のセルの外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md">方法: Windows フォームの DataGridView コントロールのセルの外観をカスタマイズする</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellParsing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellParsing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellParsing As DataGridViewCellParsingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellParsingEventHandler ^ CellParsing;" />
      <MemberSignature Language="F#" Value="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " Usage="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellParsingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの値が変更された場合にセルが編集モードを終了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定で、<xref:System.Windows.Forms.DataGridView>コントロールがセルで指定された型の基になる実際のセル値がセルに表示されるユーザー指定の値の変換を試みる<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>プロパティ。 この変換は、セルによって返されるセル スタイルの書式設定プロパティを使用して<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティ。  
  
 標準変換がニーズを満たしていない場合は、処理、<xref:System.Windows.Forms.DataGridView.CellParsing>必要な型への変換のカスタム値を提供するイベントです。  
  
 指定されたメソッドを使用して編集モードを入力できる、<xref:System.Windows.Forms.DataGridView.EditMode%2A>プロパティ、および編集モードでは、別のセルに移動してまたは ENTER キーを押して、セルに、変更をコミットのままにできます。 ESC キーを押しては元に戻す値への変更がコミットする前に、<xref:System.Windows.Forms.DataGridView.CellParsing>イベントは発生しません。 <xref:System.Windows.Forms.DataGridView.CellParsing>最終的な値は、元の値と同じ場合でも、セルの値が実際に変更された場合にのみをイベントが発生します。 発生時に、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>メソッドが呼び出されます。  
  
 処理するとき、<xref:System.Windows.Forms.DataGridView.CellParsing>イベント、自分で値を変換できますか、既定の変換をカスタマイズすることができます。 たとえば、値変換できます、セルを使用して自分で<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>メソッドを独自の型コンバーター。 または、既定のコンバーターは、値を解析しますが、変更の種類をさせることができます、 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>、および<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>によって返されるオブジェクトのプロパティ、<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType>セルを使用して初期化されるプロパティ、 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティ。  
  
 値変換すると、自分で、置換の初期の書式設定された値、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>セルで指定された型に変換された値を持つプロパティ<xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>プロパティ。 解析が必要なことを示す、設定、<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType>プロパティを`true`します。  
  
 ときにイベント ハンドラーが完了すると場合、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType>は`null`または正しい型ではない、または<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType>プロパティは`false`、<xref:System.Windows.Forms.ConvertEventArgs.Value%2A>セルを使用して解析されます<xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A>既定の型コンバーターを持つメソッド。 このメソッドの既定の実装を使用して値を解析し、 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>、<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>と<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>でセルのスタイルのプロパティが渡されます。 値が等しくない場合<xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>を使用して、値を解析、<xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>プロパティと型コンバーターで渡されます。  
  
 セル値の表示の書式設定された値への変換をカスタマイズするには、処理、<xref:System.Windows.Forms.DataGridView.CellFormatting>イベント。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を処理する方法を示しています、<xref:System.Windows.Forms.DataGridView.CellParsing>イベント。 使用する方法も示します、<xref:System.Windows.Forms.DataGridViewCellParsingEventArgs>クラス。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStateChanged As DataGridViewCellStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStateChangedEventHandler ^ CellStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " Usage="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルが、フォーカスを取得したり失ったりなど、状態が変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#135)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStateChangedEventArgs.StateChanged" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> の <see cref="T:System.Windows.Forms.DataGridViewCell" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかが、このイベントが発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>プロパティが新しい値に設定または、<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>を新しいプロパティが<xref:System.Windows.Forms.DataGridViewCellStyle>を少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#305)]
 [!code-vb[System.Windows.Forms.EventExamples#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleContentChanged As DataGridViewCellStyleContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStyleContentChangedEventHandler ^ CellStyleContentChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " Usage="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの値の 1 つが変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>イベント発生時のプロパティの値を<xref:System.Windows.Forms.DataGridViewCellStyle>プロパティの変更を次のいずれかによって返されるオブジェクト。  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 これらのプロパティの 1 つは別に設定<xref:System.Windows.Forms.DataGridViewCellStyle>、ただし、対応する*PropertyName* `Changed`イベントが発生したが、<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>イベントは発生しません。  
  
 行、列、およびセルのプロパティの名前を*PropertyName* `Changed`イベントが始まる"`Row`「,」`Column`"、または"`Cell`"(たとえば、 <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>)。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellStyleContentChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#306](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#306)]
 [!code-vb[System.Windows.Forms.EventExamples#306](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#306)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /> プロパティ値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#307](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#307)]
 [!code-vb[System.Windows.Forms.EventExamples#307](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#307)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextNeeded As DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellToolTipTextNeededEventHandler ^ CellToolTipTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " Usage="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルのツールヒントが必要なときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>のみイベントが発生したときに、<xref:System.Windows.Forms.DataGridView>コントロール<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティを設定またはその<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。  
  
 処理するとき、<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>イベント、ハンドラーで指定したツールヒントのテキストが表示されるたびに、セルとコントロールの上にマウス ポインターが<xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A>プロパティの値が`true`。 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>イベントは、現在の状態またはセルの値によって決定されたツールヒントを表示する場合に便利です。  
  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>たびにイベントにも発生の値、<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType>プロパティが取得プログラムを使用するか、マウス ポインターがセルに入ったとき。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A>状態または、セルの値を特定し、この情報を使用して、変更または変更するプロパティ、<xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType>プロパティ。 このプロパティは、セルの値で初期化されます<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>プロパティで、イベント値より優先されます。  
  
 処理、<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>大量のデータ セルを設定したパフォーマンスの低下を回避するために使用する場合、イベント<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>複数のセルの値。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>データにバインドされた非表示の列からの情報を表示するイベント ハンドラー<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValidated;" />
      <MemberSignature Language="F#" Value="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの検証が終了した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの処理は、セルの値の検証後の処理に便利です。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.CellValidated>をクリアするためのイベント、<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>プロパティ。 この例で、<xref:System.Windows.Forms.DataGridView.CellValidating>イベントのセット、<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>場合は、ユーザーがセルに無効なデータを入力します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidating As DataGridViewCellValidatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValidatingEventHandler ^ CellValidating;" />
      <MemberSignature Language="F#" Value="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " Usage="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValidatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルが入力フォーカスを失い、内容の検証が有効になった場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを取り消すには、現在のセルへの変更が取り消されます。 データ バインド モードでこのイベントが取り消されると、新しい値が基になるデータ ソースにプッシュされません。 仮想モードでこのイベントが取り消されたときに、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベントは発生しません。  
  
 処理、<xref:System.Windows.Forms.DataGridView.CellValidated>検証後の処理を実行するイベントです。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Windows.Forms.DataGridView.CellValidating>イベントを正の整数のみが、ユーザーが入力されていることを確認します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValueChanged;" />
      <MemberSignature Language="F#" Value="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの値が変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType>イベントは、ユーザー指定の値がコミットされときに、発生します。 フォーカスがセルから離れたときに通常発生します。  
  
 ただし、チェック ボックスのセルの場合、変更をすぐに処理するためには通常たいです。 セルがクリックされたときに、変更をコミットするに処理する必要があります、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType>イベント。 ハンドラーで、現在のセルがチェック ボックス セルの場合を呼び出す、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType>メソッドを渡します、<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>値。  
  
 セルの値が変更されたときに、コントロール内の行は自動的に並べ替えられません。 ユーザーがセルに変更する際は、コントロールを並べ替えに呼び出し、<xref:System.Windows.Forms.DataGridView.Sort%2A>メソッド、<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベント ハンドラー。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.CellValueChanged>の分散列の値を更新するイベント、<xref:System.Windows.Forms.DataGridView>します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueNeeded As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValueNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> プロパティが <see langword="true" /> で、セルを書式設定して表示するために <see cref="T:System.Windows.Forms.DataGridView" /> がセルの値を必要とする場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想モードでこのイベントを使用して、共有が解除する行を発生させることがなく、カスタム データ ストアからデータを含むセルを設定します。 行の共有の詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。 仮想モードの詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールでの仮想モード](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)します。  
  
 カスタム データ ストアにユーザーが指定した値を追加するには、処理、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベント。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>正の整数値でセルを設定するイベントです。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールを拡張するための推奨される手順</related>
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでの仮想モード</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValuePushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValuePushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValuePushed As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValuePushed;" />
      <MemberSignature Language="F#" Value="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> プロパティが <see langword="true" /> で、セルの値が変更され、基になるデータ ソースに格納する必要がある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想モードでこのイベントを使用して、ユーザー指定のデータでのカスタム データ ストアを更新します。 処理、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>イベントをコントロールに表示するためのデータ ストアから値を取得します。  
  
 仮想モードの詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールでの仮想モード](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Windows.Forms.DataGridView.CellValuePushed>データ ストア オブジェクトの更新プログラムおよび新しいエントリを格納するイベントです。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでの仮想モード</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearSelection">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在選択されているセルの選択を解除します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : unit -&gt; unit" Usage="dataGridView.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されているすべてのセルの選択を解除して、現在の選択を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが呼び出されるとき、各列と行の<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>プロパティに設定されて`false`します。  
  
   
  
## Examples  
 次のコード例の選択を解除する、<xref:System.Windows.Forms.DataGridView>します。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という名前の`dataGridView1`と<xref:System.Windows.Forms.Button>という名前`clearSelectionButton`、すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearSelection(int32 columnIndexException, int32 rowIndexException, bool selectExceptionElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearSelection (columnIndexException As Integer, rowIndexException As Integer, selectExceptionElement As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearSelection(int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : int * int * bool -&gt; unit" Usage="dataGridView.ClearSelection (columnIndexException, rowIndexException, selectExceptionElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndexException" Type="System.Int32" />
        <Parameter Name="rowIndexException" Type="System.Int32" />
        <Parameter Name="selectExceptionElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndexException">除外される列インデックス。</param>
        <param name="rowIndexException">除外される行インデックス。</param>
        <param name="selectExceptionElement">除外されたセル、行、または列を選択する場合は <see langword="true" />。元の状態を保持する場合は <see langword="false" />。</param>
        <summary>指定されたセルを除いて、選択されているすべてのセルの選択を解除します。オプションで、指定されたセルが選択されるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `rowIndexException` -1 の値が、列ヘッダーを表す、 `columnIndexException` -1 の値が行ヘッダーを表します。  
  
 このメソッドは、セル、行、または例外のインデックスによって示される列の選択をキャンセルせずに現在の選択をクリアすると便利です。  
  
 場合、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値により、個々 のセルの選択、このメソッドは、設定、<xref:System.Windows.Forms.DataGridViewCell.Selected%2A>プロパティには各セルの`false`行と列に指定されたセルを除きます。 場合、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値により、完全な行または列の選択、このメソッドもセット、<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>各の行または列のプロパティ`false`、行または指定したセルを含む列を除外します。  
  
 除外されたセル、行、または列は、可能性がありますか、このメソッドが呼び出されると、選択した状態ではありません。 このメソッドではこれが選択される場合、`selectExceptionElement`パラメーター値が`true`します。 選択モードに応じて、行全体または列選ぶこともできます、結果として。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndexException" /> が最も大きい列のインデックスより大きくなっています。  
  
- または - 
 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> が <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" /> の場合は、<paramref name="columnIndexException" /> が -1 未満です。それ以外の場合は、<paramref name="columnIndexException" /> が 0 未満です。  
  
- または - 
 <paramref name="rowIndexException" /> が最も大きい行のインデックスより大きくなっています。  
  
- または - 
 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> が <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> の場合は、<paramref name="rowIndexException" /> が -1 未満です。それ以外の場合は、<paramref name="rowIndexException" /> が 0 未満です。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Selected" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipboardCopyMode As DataGridViewClipboardCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewClipboardCopyMode ClipboardCopyMode { System::Windows::Forms::DataGridViewClipboardCopyMode get(); void set(System::Windows::Forms::DataGridViewClipboardCopyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClipboardCopyMode : System.Windows.Forms.DataGridViewClipboardCopyMode with get, set" Usage="System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewClipboardCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがセル テキスト値を <see cref="T:System.Windows.Forms.Clipboard" /> にコピーできるかどうか、および行と列のヘッダー テキストが含まれるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールでは、選択した各セルのテキスト表現をクリップボードにコピーします。 この値は、セルの値を文字列またはイメージのセルの値の変換、<xref:System.Windows.Forms.DataGridViewImageCell.Description%2A>プロパティ。  
  
 値でクリップボードにコピーされます<xref:System.Windows.Forms.DataFormats.Text>、 <xref:System.Windows.Forms.DataFormats.UnicodeText>、 <xref:System.Windows.Forms.DataFormats.Html>、および<xref:System.Windows.Forms.DataFormats.CommaSeparatedValue>形式。 これらの形式は Microsoft Excel、メモ帳などのアプリケーションにコンテンツを貼り付ける場合に役立ちますし[!INCLUDE[ofprword](~/includes/ofprword-md.md)]します。  
  
 <xref:System.Windows.Forms.DataGridView>コントロールが選択されているすべてのセルを含む最小の四角形に含まれているセルをコピーします。 行と、選択したセルが含まれていない列は、コピーされたデータでは表されません。 残りの行と列で選択されていないセルは空白のプレース ホルダーで表されます。 コピー モードと選択モードでは、によってコピーされた行と列のヘッダー値可能性がありますにもコピーします。  
  
 ユーザーが、内容をコピーするとき、<xref:System.Windows.Forms.DataGridView>コントロールを追加、<xref:System.Windows.Forms.DataObject>をクリップボードにします。 このデータ オブジェクトを取得、<xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>メソッド。 プログラムでクリップボードにデータ オブジェクトを追加する場合は、このメソッドを呼び出すことができます。  
  
 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>メソッドを呼び出して個々 のセルの値を取得、<xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType>メソッド。 いずれかまたは両方のコピー元のセルのレイアウトをカスタマイズするか、追加のデータ形式をサポートするために、派生クラスでこれらのメソッドをオーバーライドできます。  
  
 クリップボードの操作とデータ形式の詳細については、次を参照してください。、<xref:System.Windows.Forms.Clipboard>クラス。  
  
   
  
## Examples  
 次のコード例でのコピーを有効にする方法を示します、<xref:System.Windows.Forms.DataGridView>コントロール。 この例で使用できる例の一部は、[方法。フォームの DataGridView コントロールを有効にするユーザー、Windows から複数のセルをクリップボードにコピーする](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 値ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.Clipboard" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.Description" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnAdded As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnAdded;" />
      <MemberSignature Language="F#" Value="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに列が追加されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnAdded>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnAdded>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#314](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#314)]
 [!code-vb[System.Windows.Forms.EventExamples#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#314)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnContextMenuStripChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#315](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#315)]
 [!code-vb[System.Windows.Forms.EventExamples#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#315)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> に表示される列の数を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> に表示される列の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>プロパティを 0 にはのすべての列を削除、<xref:System.Windows.Forms.DataGridView>します。  
  
 場合<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>リセットの末尾から、列を削除する値が現在の値未満で、<xref:System.Windows.Forms.DataGridView.Columns%2A>コレクション。 場合<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>設定の末尾に、列を追加する現在の値より大きい値を<xref:System.Windows.Forms.DataGridView.Columns%2A>コレクション。  
  
 このプロパティを使用できます、<xref:System.Windows.Forms.DataGridView.RowCount%2A>プロパティを単純な<xref:System.Windows.Forms.DataGridView>を表示すると、テキストを編集します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティの設定時に指定された値が 0 未満です。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティを設定したときに、<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティが設定されました。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDataPropertyNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#316](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#316)]
 [!code-vb[System.Windows.Forms.EventExamples#316](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#316)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDefaultCellStyleChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、いずれかに発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>プロパティまたは列が新しい値に設定されて、<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>を新しい列のプロパティが設定されて<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値とは異なる、。前のセル スタイル オブジェクト。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#317](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#317)]
 [!code-vb[System.Windows.Forms.EventExamples#317](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#317)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDisplayIndexChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDisplayIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#318](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#318)]
 [!code-vb[System.Windows.Forms.EventExamples#318](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#318)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerDoubleClick As DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventHandler ^ ColumnDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " Usage="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 列間の区分線をダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを使用して、ユーザーは、列区切り線をダブルクリックしたときに発生する自動サイズ変更動作をカスタマイズすることができます。 たとえば、プログラムで現在表示されている行の内容のみに基づいて列サイズを変更するには、このイベントを処理する、多くの行を使用する場合は、既定の動作で、パフォーマンスに影響を回避します。  
  
 列<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>プロパティは、ユーザーがダブルクリックできます領域に拡張されません。 このプロパティを使用して、区分線の幅が増加した、ユーザーは、区分線と隣接する列の間の境界をダブルクリックすると、このイベントが発生します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#319](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#319)]
 [!code-vb[System.Windows.Forms.EventExamples#319](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#319)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDividerWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#320](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#320)]
 [!code-vb[System.Windows.Forms.EventExamples#320](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#320)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderCellChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列のヘッダー セルの内容を変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#323](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#323)]
 [!code-vb[System.Windows.Forms.EventExamples#323](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#323)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 列見出しをクリックしたとき、<xref:System.Windows.Forms.DataGridView>既定の動作は、クリックされた列に基づいてグリッドの行を並べ替えるか、グリッドが既にクリックされた列で並べ替えられている場合、並べ替え順序を逆にします。 次のコード例は、このイベントを使用して、クリックしての既定の動作をエミュレートする、プログラムによる並べ替えを実行する方法を示します、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell>既定の動作が無効にされた場合。 この例で、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>に設定されている<xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect>ので、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell>列の内容を選択します。 意図したとおりに機能するコード例、既定の列ヘッダーをクリックして動作にデータが読み込まれるたびに変更する必要があります、<xref:System.Windows.Forms.DataGridView>します。 追加、<xref:System.Windows.Forms.DataGridView.DataBindingComplete>イベント ハンドラーを既定の動作を変更するコードを提供します。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`をすべてのイベントがイベント ハンドラーに関連付けられていることを確認してください。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーがダブルクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#322](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#322)]
 [!code-vb[System.Windows.Forms.EventExamples#322](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#322)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーに適用された境界線スタイルを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>プロパティが以外の値に設定されて<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>、<xref:System.Windows.Forms.DataGridView.GridColor%2A>プロパティは、システム カラーである必要があります。  
  
 このプロパティを設定することはできません、 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> 、これは読み取り専用の値を示す値を使用すると、罫線のスタイルがカスタマイズされていること、<xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A>プロパティ。  
  
> [!NOTE]
>  経由でアプリケーションの visual スタイルが有効になっている場合、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>メソッドと<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>プロパティは`true`、列ヘッダーは、現在のテーマを使用して描画されます。 この例では、値で、<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>を除くすべての列ヘッダーのプロパティは無視されます、<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>テーマがない適用します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /> です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyleChanged : EventHandler " Usage="member this.ColumnHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#262](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#262)]
 [!code-vb[System.Windows.Forms.EventExamples#262](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#262)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ ColumnHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定の列ヘッダーのスタイルを取得または設定します。</summary>
        <value>既定の列ヘッダー スタイルを表す <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の<xref:System.Windows.Forms.DataGridViewCellStyle>これによって返されるプロパティは、次のプロパティの初期値。  
  
|`DataGridViewCellStyle` プロパティ|既定値|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 これらの値が自動的に値を使用して設定をオーバーライド、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティ。 継承する列ヘッダーを強制する、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>値で、値を設定する必要があります、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>オブジェクトを既定値に示されている、<xref:System.Windows.Forms.DataGridViewCellStyle>クラス。  
  
 セル スタイルの継承の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
 Visual スタイルが有効になっている場合と<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>に設定されている`true`、以外のすべてのヘッダー セル、 <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> 、現在のテーマを使用して描画されます、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>値は無視されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.ColumnHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、いずれかが発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>プロパティが新しい値に設定または、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>を新しいプロパティを設定<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#263](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#263)]
 [!code-vb[System.Windows.Forms.EventExamples#263](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#263)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public int ColumnHeadersHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnHeadersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnHeadersHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeight : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダー行の高さをピクセル単位で取得または設定します。</summary>
        <value>列ヘッダーを含む行の高さ (ピクセル単位)。 既定値は 23 です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティを設定するときに指定された値が、最小の高さ 4 ピクセルより小さいか、最大の高さ 32768 ピクセルよりも大きくなっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightChanged : EventHandler " Usage="member this.ColumnHeadersHeightChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#264](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#264)]
 [!code-vb[System.Windows.Forms.EventExamples#264](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#264)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeightSizeMode As DataGridViewColumnHeadersHeightSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode get(); void set(System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeMode : System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーの高さが調整可能かどうか、およびヘッダーの内容に合わせてユーザーが調整できるか自動的に調整できるかを示す値を取得または設定します。</summary>
        <value>列ヘッダーの行の高さを調整できるモードを示す <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 値。 既定値は <see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに設定しているときに<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize>ユーザーが列ヘッダーの高さを調整することはできません。  
  
 プログラムで列ヘッダーの高さを調整するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>メソッドまたはセット、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A>プロパティ。  
  
 行ヘッダーのサイズ変更モードを設定するには、使用、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>プロパティ。  
  
 列ヘッダーのサイズが変更されるときに、複数の行にラップするセルの内容をセルに対して有効なセル スタイルがあります、<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewTriState.True>します。  
  
 ヘッダーのサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールはダブル バッファリングをサポートしていません。 場合<xref:System.Windows.Forms.Control.DoubleBuffered%2A>に設定されている`true`で派生<xref:System.Windows.Forms.DataGridView>コントロール、行、列、またはヘッダーのサイズを変更するとき、または列の並べ替えは、ユーザーに視覚的なフィードバックは受信しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用する方法を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#265](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#265)]
 [!code-vb[System.Windows.Forms.EventExamples#265](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#265)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダー行が表示されるかどうかを示す値を取得または設定します。</summary>
        <value>列ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>プロパティは`false`、列が<xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>プロパティに設定されて`true`でもサイズを変更できるユーザー インターフェイス (UI) にマウス カーソルのサイズを変更する列の右側の境界線に任意の場所をクリックしています。  
  
   
  
## Examples  
 次のコード例は、バインドされていない設定<xref:System.Windows.Forms.DataGridView>コントロールとセット、<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>プロパティを`true`列ヘッダーが表示されるようにします。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値は <see langword="false" /> で、1 つ以上の列には <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> の <see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /> プロパティ値が存在します。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnMinimumWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnMinimumWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#324](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#324)]
 [!code-vb[System.Windows.Forms.EventExamples#324](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#324)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnNameChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnNameChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#325](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#325)]
 [!code-vb[System.Windows.Forms.EventExamples#325](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#325)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnRemoved As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnRemoved;" />
      <MemberSignature Language="F#" Value="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールから列が削除されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnRemoved>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnRemoved>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#326](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#326)]
 [!code-vb[System.Windows.Forms.EventExamples#326](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#326)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnCollection ^ Columns { System::Windows::Forms::DataGridViewColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.DataGridViewColumnCollection" Usage="System.Windows.Forms.DataGridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのすべての列を含むコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> コントロールのすべての列を格納している <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataGridViewColumnCollection>このプロパティによって返される、列の追加、列を削除してに含まれる列の数を取得、<xref:System.Windows.Forms.DataGridView>コントロール。 詳細については、「 <xref:System.Windows.Forms.DataGridViewColumnCollection> 」を参照してください。  
  
   
  
## Examples  
 次のコード例は、非バインドを作成する方法を示します<xref:System.Windows.Forms.DataGridView>; 設定、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、および<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>プロパティ、使用、<xref:System.Windows.Forms.DataGridView.Rows%2A>と<xref:System.Windows.Forms.DataGridView.Columns%2A>プロパティ。 バージョンを使用する方法も示します、<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>列ヘッダーと行のサイズを適切にメソッド。 この例を実行するを含むフォームに次のコードを貼り付け、<xref:System.Windows.Forms.DataGridView>という名前`dataGridView1`という名前のボタンと`Button1`を呼び出して、`InitializeDataGridView`フォームのコンス トラクターからメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに接続されていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnCollection" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnSortModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnSortModeChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnSortModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#327](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#327)]
 [!code-vb[System.Windows.Forms.EventExamples#327](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#327)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnStateChanged As DataGridViewColumnStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnStateChangedEventHandler ^ ColumnStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " Usage="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列が、フォーカスを取得したり失ったりなど、状態を変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の列のプロパティのいずれかの値が変更されたときにこのイベントが発生した、<xref:System.Windows.Forms.DataGridViewColumn>コントロール。  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Displayed%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Selected%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnStateChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnStateChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#328](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#328)]
 [!code-vb[System.Windows.Forms.EventExamples#328](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#328)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnToolTipTextChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の列の <see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /> プロパティ値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#329](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#329)]
 [!code-vb[System.Windows.Forms.EventExamples#329](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#329)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#18)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.CommitEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">エラーが発生する可能性のあるコンテキストを指定する <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 値のビットごとの組み合わせ。</param>
        <summary>編集モードを終了せずに、現在のセルの変更をデータ キャッシュにコミットします。</summary>
        <returns>変更がコミットされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、書式設定された、ユーザー指定の値を基になるセルのデータ型に変換しようとします。 これを行うには、生成、<xref:System.Windows.Forms.DataGridView.CellParsing>イベントで、型変換をカスタマイズするを処理することができます。 それ以外の場合、既定の型コンバーターが使用されます。 場合、変換エラーが例外を引き起こす可能性があります、<xref:System.Windows.Forms.DataGridView.DataError>ようにイベントが処理されません。 データにコミットされる場合は、値が正常に変換すると、格納、発生させる、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベント非データ バインドをセルの場合に、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティの値が`true`。 値が正常にコミットされた場合、<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベントが発生します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>内のメソッド、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>発生するイベント ハンドラー、<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベント。 このコード例で示されている例の一部は、[方法。無効にするボタンのボタン列に、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">セル値をコミットできませんでした。また、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しています。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="Overload:System.Windows.Forms.DataGridView.EndEdit" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の新しいユーザー補助オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /> の新しい <see cref="T:System.Windows.Forms.DataGridView" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateColumnsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateColumnsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnsInstance () As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewColumnCollection ^ CreateColumnsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection&#xA;override this.CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection" Usage="dataGridView.CreateColumnsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /> を作成して返します。</summary>
        <returns>空の <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="dataGridView.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" /> 型にキャストされる新しい <see cref="T:System.Windows.Forms.Control.ControlCollection" /> を作成して返します。</summary>
        <returns>空の <see cref="T:System.Windows.Forms.Control.ControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出して、<xref:System.Windows.Forms.Control.Controls%2A>プロパティの値を初期化します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateRowsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowsInstance () As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewRowCollection ^ CreateRowsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection&#xA;override this.CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection" Usage="dataGridView.CreateRowsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> を作成して返します。</summary>
        <returns>空の <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ CurrentCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在アクティブなセルを取得または設定します。</summary>
        <value>現在のセルを表す <see cref="T:System.Windows.Forms.DataGridViewCell" />。現在のセルがない場合は <see langword="null" />。 既定では 1 列目の最初のセルになり、コントロールにセルが存在しない場合は <see langword="null" /> になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセルとセルを設定すると、現在表示されていない場合のビューにスクロールされます。 現在のセルは、非表示の行または列のヘッダー セルを無効なセル、またはセルにすることはできません。  
  
 このプロパティを設定することができます`null`を一時的にフォーカス四角形を削除しますが、ときにコントロールがフォーカスを受け取るし、このプロパティの値が`null`の値に自動的に設定されて、<xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A>プロパティ。  
  
 このプロパティの値を変更すると、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベントが発生する前に、<xref:System.Windows.Forms.DataGridView.CurrentCellChanged>イベント。 すべて<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント ハンドラーへのアクセス、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティをこの時点では、前の値を取得します。  
  
 バインドすると、<xref:System.Windows.Forms.DataGridView>外部データ ソースにこのプロパティは既定値にリセットします。  
  
   
  
## Examples  
 次のコード例を設定して並べ替えの後の現在のセルが表示されていることを確認する方法を示しています、<xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A>を使用してプロパティのセルを取得、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティ。 このコードは、バインドされていない<xref:System.Windows.Forms.DataGridView>コントロール。 <xref:System.Windows.Forms.DataGridView>外部データ ソースにバインドされたコントロールの現在のセルは並べ替えるときに自動的に保持されません。  
  
 この例を実行するを含むフォームに次のコードを貼り付け、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`します。 C# でも接続する必要あります、<xref:System.Windows.Forms.DataGridView.Sorted>イベントをイベント ハンドラー。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のセルに対する変更をコミットも取り消しもできないため、このプロパティの値を設定できません。  
  
- または - 
このプロパティを設定するときに指定されたセルが、非表示の行または列のセルです。  
  
再入操作の呼び出しは、<see cref="T:System.Windows.Forms.DataGridView" /> が <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> にバインドされている場合のみ使用できます。 再入操作の呼び出しは、基になるデータが変更されたときに発生します。</exception>
        <exception cref="T:System.ArgumentException">このプロパティを設定するときに指定されたセルが、<see cref="T:System.Windows.Forms.DataGridView" /> にありません。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentRow" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/get-and-set-the-current-cell-wf-datagridview-control.md">方法: Windows フォーム DataGridView コントロールの現在のセルを取得および設定する</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellAddress">
      <MemberSignature Language="C#" Value="public System.Drawing.Point CurrentCellAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point CurrentCellAddress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCellAddress As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point CurrentCellAddress { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCellAddress : System.Drawing.Point" Usage="System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在アクティブなセルの行インデックスおよび列インデックスを取得します。</summary>
        <value>現在アクティブなセルの行インデックスおよび列インデックスを表す <see cref="T:System.Drawing.Point" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、セルに直接アクセスすることがなく、行および現在のセルの列を決定します。 これは共有された共有を解除する行を回避するために役立ちます。 行の共有の詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示しています、<xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A>プロパティ シナリオで行を描画します。 例では、このプロパティは、現在のセルの行のインデックスの格納に使用されます。 ユーザーが現在のセルを別の行に変更すると場合、は、行を強制的に再描画します。  
  
 このコード例で使用できるの[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellChanged : EventHandler " Usage="member this.CurrentCellChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellDirtyStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellDirtyStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellDirtyStateChanged : EventHandler " Usage="member this.CurrentCellDirtyStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの内容の変更に関連して、セルの状態が変更するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セルは、その内容が変更された場合、変更が保存されていない変更済みとしてマークされます。  
  
 通常、このイベントは、セルが編集されましたが、変更が、データ キャッシュにコミットされていない、または編集操作が取り消されたときに発生します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、処理する方法を示します、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>イベント。 イベント ハンドラーを呼び出し、この例では、<xref:System.Windows.Forms.DataGridView.CommitEdit%2A>発生させるメソッドを<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベントの現在の値を特定し、<xref:System.Windows.Forms.DataGridViewCheckBoxCell>します。 このコード例で示されている例の一部は、[方法。無効にするボタンのボタン列に、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow CurrentRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow CurrentRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ CurrentRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセルを格納している行を取得します。</summary>
        <value>現在のセルを格納している行を表す <see cref="T:System.Windows.Forms.DataGridViewRow" />。現在のセルがない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在の行を変更するに設定する必要があります、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティを目的の行内のセルにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataBindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBindingComplete As DataGridViewBindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewBindingCompleteEventHandler ^ DataBindingComplete;" />
      <MemberSignature Language="F#" Value="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " Usage="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewBindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインディング操作が完了した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データの内容が変更をソースするとき、またはこのイベントは発生の値、 <xref:System.Windows.Forms.DataGridView.DataSource%2A>、 <xref:System.Windows.Forms.DataGridView.DataMember%2A>、または<xref:System.Windows.Forms.Control.BindingContext%2A>プロパティの変更。  
  
 このイベントを処理する役に立ちます、たとえば、プログラムで行と列のコンテンツの更新プログラムに基づいたのサイズを変更します。 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#05)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ListChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As DataGridViewDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外部のデータ解析または検証操作が例外をスローした場合、またはデータ ソースへのデータのコミットが失敗した場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DataError>イベントでは、データ処理操作中に、コントロールによって呼び出されるコードでスローされた例外を処理することができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>と<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A>のプロパティ、<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs>通常このイベントに関連付けられているオブジェクトは、データ エラーが発生したセルを指定します。 外部データ ソースで、エラーが発生したときにただし、データ ソースでは、エラーが発生した列が提供しない可能性があります。 ここで、<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A>プロパティは通常、エラー時に現在のセルの列を示します。  
  
   
  
## Examples  
 次のコード例に示します、<xref:System.Windows.Forms.DataGridView.DataError>イベント ハンドラー。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.DataGridView.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> でデータが表示される対象のデータ ソースのリストまたはテーブルの名前を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> でデータが表示される対象の <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> のテーブルまたはリストの名前。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、複数のリストまたはテーブルを含むデータ ソースにバインドする場合に便利です。 1 つのリストまたはテーブルを含むデータ ソースにバインドする場合は、このプロパティを設定する必要はありません。 たとえば、バインド、<xref:System.Windows.Forms.DataGridView>への制御、<xref:System.Data.DataSet>このプロパティを設定しなくても 1 つのテーブルを格納しています。 場合、 <xref:System.Data.DataSet> 、複数のテーブルが含まれています。 ただし、このプロパティは、テーブルの 1 つの名前を設定する必要があります。  
  
   
  
## Examples  
 次のコード例では、このプロパティの一般的な用途を示します。 例を<xref:System.Windows.Forms.DataGridView>という名前のコントロール`customersDataGridView`にバインドされて、<xref:System.Data.DataSet>という`customersDataSet`します。 これは、 <xref:System.Data.DataSet> "Customers"という名前のテーブルが含まれています。 <xref:System.Windows.Forms.DataGridView.DataMember%2A>プロパティが、テーブルの名前に設定します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#020)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#020)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">データ ソースでエラーが発生しました。<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しました。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataMember" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.DataMemberChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.DataMemberChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#266](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#266)]
 [!code-vb[System.Windows.Forms.EventExamples#266](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#266)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGridView.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> でデータが表示される対象のデータ ソースを取得または設定します。</summary>
        <value>表示される <see cref="T:System.Windows.Forms.DataGridView" /> のデータを格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>クラスは、標準の Windows フォーム データ バインディング モデルをサポートしています。 つまり、次のインターフェイスのいずれかを実装する任意の型のデータ ソースに指定できます。  
  
-   <xref:System.Collections.IList> 1 次元配列を含むインターフェイス。  
  
-   <xref:System.ComponentModel.IListSource>インターフェイスなど、<xref:System.Data.DataTable>と<xref:System.Data.DataSet>クラス。  
  
-   <xref:System.ComponentModel.IBindingList>インターフェイスなど、<xref:System.ComponentModel.BindingList%601>クラス。  
  
-   <xref:System.ComponentModel.IBindingListView>インターフェイスなど、<xref:System.Windows.Forms.BindingSource>クラス。  
  
 具体的な例については、使用例」とこのセクションの最後に作業テーブルを参照してください。  
  
 通常、バインド、<xref:System.Windows.Forms.BindingSource>コンポーネントおよび bind、<xref:System.Windows.Forms.BindingSource>コンポーネントを別にデータ ソースまたはビジネス オブジェクトを設定します。 <xref:System.Windows.Forms.BindingSource>コンポーネントが優先されるデータ ソースでさまざまなデータ ソースにバインドでき、自動的に多くのデータ バインドの問題を解決することができます。  
  
 設定する必要がありますを複数のリストまたはテーブルを含むデータ ソースにバインドする際、<xref:System.Windows.Forms.DataGridView.DataMember%2A>プロパティをリストまたはテーブルにバインドするを指定する文字列。 バインドする場合、 <xref:System.Windows.Forms.BindingSource> 、ただし、複数のリストまたはテーブルを含むコンポーネントを設定できます、<xref:System.Windows.Forms.BindingSource.DataMember%2A>のプロパティ、<xref:System.Windows.Forms.BindingSource>コンポーネント代わりにします。  
  
 データベースのデータではなく、オブジェクトのコレクションにバインドする場合は設定通常、<xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>によって返されるオブジェクトのプロパティ、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティを`null`の既定値を使用するのではなく<xref:System.DBNull.Value?displayProperty=nameWithType>、これはデータベースのデータに適しています。  
  
 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールでのデータ表示](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)します。 次の表に、関連する一般的なタスクへの直接リンク、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティ。  
  
 「[チュートリアル:フォームの DataGridView コントロールの 2 つの Windows を使用してマスター/詳細フォームを作成する](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md)と[方法。オブジェクトを Windows フォーム DataGridView コントロールにバインド](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)します。  
  
   
  
## Examples  
 次のコード例は、単純なデータ バインドを初期化する方法を示します<xref:System.Windows.Forms.DataGridView>します。 設定する方法も示します、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティ。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">データ ソースでエラーが発生しました。<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しました。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingListView" />
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのデータの表示</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.DataSourceChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.DataSourceChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#267](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#267)]
 [!code-vb[System.Windows.Forms.EventExamples#267](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#267)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>その他のセル スタイル プロパティが設定されていない場合、<see cref="T:System.Windows.Forms.DataGridView" /> のセルに適用される既定のセル スタイルを取得または設定します。</summary>
        <value>既定スタイルとして適用される <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールには、セルのスタイルを使用してそのセルが表示されます。<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティで、型の他のプロパティからスタイルを継承<xref:System.Windows.Forms.DataGridViewCellStyle>します。 指定されたスタイル、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティが、次のプロパティで指定されたスタイルによってオーバーライドされた場合を除くすべてのセルに影響します。  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
 このプロパティを取得するときに、<xref:System.Windows.Forms.DataGridViewCellStyle>既定値は、プロパティは既にアクセスされていない場合の値が作成されます。 これが原因で、複数の行のこのプロパティを取得するときに、パフォーマンスに影響します。 可能であれば、1 つを使用して、<xref:System.Windows.Forms.DataGridViewCellStyle>の複数の行には、このプロパティを設定します。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyleChanged : EventHandler " Usage="member this.DefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、いずれかが発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティは、新しい値に設定される場合や、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>を新しいプロパティを設定<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる.  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#268](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#268)]
 [!code-vb[System.Windows.Forms.EventExamples#268](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#268)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの既定の初期サイズを取得します。</summary>
        <value>コントロールの初期サイズを表す <see cref="T:System.Drawing.Size" />。幅 240 ピクセル、高さ 150 ピクセルです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValuesNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultValuesNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ DefaultValuesNeeded;" />
      <MemberSignature Language="F#" Value="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が既定値を伴って作成されるように、ユーザーが新しいレコードに対して行を挿入したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントでは、ユーザーが行に入ったときに新しいレコードの行を設定することができます。 行の初期値に由来します<xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A>のプロパティ、<xref:System.Windows.Forms.DataGridViewCell>各列のによって返される<xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A>プロパティ。  
  
 データのバインド モードですべてのセルの外部データ ソースにバインドされた列が格納されているデータ値。 前に、データ ソースに新しい行を作成、ユーザーには、新しいレコードの行が入ると、<xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded>イベントが発生します。 データを読み込む場合、<xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType>プロパティ、イベント ハンドラーで、値は、データ ソースに直接追加されます。  
  
 このイベントの発生後の仮想モードで、<xref:System.Windows.Forms.DataGridView.CellValuePushed>のため、カスタム データ ストアに既定値を格納することを新しい行のセルごとにイベントが発生します。 次に、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>で格納されている値を取得する新しい行のセルごとにイベントが発生した、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベントが表示されます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントを処理する方法を示しています。 例では、特定の列のセルには既定値が設定されます。 `CustomerID`列、値は、一意の顧客 ID を生成する (実装されていません) 別のメソッドから取得されます  
  
 この例を実行するには、実際の列オブジェクトの名前を持つ列名を置き換えます<xref:System.Windows.Forms.DataGridView>制御し、適切な既定値を提供します。 を名前で列を指定する場合は、列ヘッダーのテキストではない列オブジェクトの名前を使用する必要があります。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#120)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedColumnCount">
      <MemberSignature Language="C#" Value="public int DisplayedColumnCount (bool includePartialColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedColumnCount(bool includePartialColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedColumnCount (includePartialColumns As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedColumnCount(bool includePartialColumns);" />
      <MemberSignature Language="F#" Value="member this.DisplayedColumnCount : bool -&gt; int" Usage="dataGridView.DisplayedColumnCount includePartialColumns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialColumns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialColumns">表示される列数に部分的な列を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>ユーザーに表示される列の数を返します。</summary>
        <returns>ユーザーに表示される列の数。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedRowCount">
      <MemberSignature Language="C#" Value="public int DisplayedRowCount (bool includePartialRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedRowCount(bool includePartialRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedRowCount (includePartialRow As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedRowCount(bool includePartialRow);" />
      <MemberSignature Language="F#" Value="member this.DisplayedRowCount : bool -&gt; int" Usage="dataGridView.DisplayedRowCount includePartialRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialRow">表示される行数に部分的な行を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>ユーザーに表示される行の数を返します。</summary>
        <returns>ユーザーに表示される行数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの表示領域を表す四角形を取得します。</summary>
        <value>コントロールの表示領域を表す <see cref="T:System.Drawing.Rectangle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A>プロパティが表示されているすべてのスクロール バーが占める領域は含まれません、コントロールの表示領域のクライアントの四角形を返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドする場合、 <see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /> 、派生クラスでプロパティを使用して、基本クラスの<see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" />基本実装を拡張するプロパティ。 または、すべての実装を提供する必要があります。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGridView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Windows.Forms.Control" /> とその子コントロールが使用しているアンマネージド リソースを解放します。オプションで、マネージド リソースも解放します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control EditingControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control EditingControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ EditingControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.DataGridView.EditingControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集中のコントロールを含むセルが編集モードの場合、現在のセルでホストされているコントロールを取得します。</summary>
        <value>現在のセルでホストされている <see cref="T:System.Windows.Forms.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを返します、セルが編集モードでないか、編集コントロールをセルの種類が対応していない、`null`します。  
  
   
  
## Examples  
 次のコード例は、カスタムのセルの種類のオーバーライドされたメソッドでこのプロパティを使用する方法を示しています。 例では、編集コントロールへの参照を取得、カスタムの編集コントロール型にキャストされ、セルの現在の値が設定されます。  
  
 この例で使用できる例の一部は、[方法。Windows フォーム DataGridView Cells コントロールをホスト](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#210)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControlShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditingControlShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingControlShowing As DataGridViewEditingControlShowingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewEditingControlShowingEventHandler ^ EditingControlShowing;" />
      <MemberSignature Language="F#" Value="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " Usage="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditingControlShowingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの編集用のコントロールが表示されているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セルが編集モードに入ったときに、編集コントロールのカスタムの初期化を実行するには、このイベントを処理することができます。 コントロールの表示特性をカスタマイズするには、によって返されるオブジェクトのプロパティを設定、<xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType>プロパティ。 その他の初期化を実行するには、値をキャスト、<xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType>プロパティを特定のコントロール型とメンバーに直接アクセスします。 たとえば、処理、<xref:System.Windows.Forms.DataGridView.EditingControlShowing>編集コントロールのイベントにイベント ハンドラーをアタッチするイベントです。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールは、一度に 1 つの編集コントロールをホストし、セルの種類の編集の間で変わらないたびに、編集コントロールを再利用されます。 編集コントロールにイベント ハンドラーをアタッチするときに、同じハンドラーを複数回アタッチしないように注意したがって行う必要があります。 この問題を回避するには、イベントにハンドラーをアタッチする前に、イベントからハンドラーを削除します。 これは、ハンドラーがイベントに既にアタッチされている場合、重複を防ぐことが、効果はありませんそれ以外の場合。 詳細については、コード例を参照してください、<xref:System.Windows.Forms.DataGridViewComboBoxEditingControl>クラスの概要。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を変更するには、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>現在のセルのプロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という名前`dataGridView1`いることを確認し、<xref:System.Windows.Forms.DataGridView.EditingControlShowing>イベントがイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#210)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Panel EditingPanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Panel EditingPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanel As Panel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Panel ^ EditingPanel { System::Windows::Forms::Panel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanel : System.Windows.Forms.Panel" Usage="System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Panel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> を格納しているパネルを取得します。</summary>
        <value><see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> を格納している <see cref="T:System.Windows.Forms.Panel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 異なり、<xref:System.Windows.Forms.DataGridView.EditingControl%2A>プロパティ`null`現在のセルが編集モードでないときに、<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>プロパティは、常に使用します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示しています、<xref:System.Windows.Forms.DataGridView.EditingPanel%2A>プロパティ、<xref:System.Windows.Forms.DataGridView>コントロールが編集モードにあるときに、セルを視覚的に区別するためにします。 この例で、<xref:System.Windows.Forms.Panel.BorderStyle%2A>セルの編集] パネルの設定は<xref:System.Windows.Forms.BorderStyle.Fixed3D>します。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#069)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#069)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EditMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewEditMode EditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditMode As DataGridViewEditMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewEditMode EditMode { System::Windows::Forms::DataGridViewEditMode get(); void set(System::Windows::Forms::DataGridViewEditMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditMode : System.Windows.Forms.DataGridViewEditMode with get, set" Usage="System.Windows.Forms.DataGridView.EditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの編集を開始する方法を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべて<xref:System.Windows.Forms.DataGridViewEditMode>の値を除く<xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically>ユーザー編集を開始するためにセルをダブルクリックすることもできます。  
  
   
  
## Examples  
 次のコード例は、単純なデータ バインドを初期化する方法を示します<xref:System.Windows.Forms.DataGridView>します。 設定する方法も示します、<xref:System.Windows.Forms.DataGridView.EditMode%2A>プロパティ。  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 値ではありません。</exception>
        <exception cref="T:System.Exception">このプロパティの設定時に指定した値によってコントロールが編集モードに入りますが、編集セルの値の初期化は失敗し、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EditModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EditModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EditModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditModeChanged : EventHandler " Usage="member this.EditModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.EditMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.EditModeChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.EditModeChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#269](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#269)]
 [!code-vb[System.Windows.Forms.EventExamples#269](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#269)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeadersVisualStyles">
      <MemberSignature Language="C#" Value="public bool EnableHeadersVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeadersVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeadersVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeadersVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeadersVisualStyles : bool with get, set" Usage="System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの visual スタイルが有効になっている場合、行ヘッダーおよび列ヘッダーがユーザーの現在のテーマの visual スタイルを使用するかどうかを示す値を取得または設定します。</summary>
        <value>ヘッダーの visual スタイルが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出して、アプリケーションの visual スタイルを有効にすることができます、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>メソッドを呼び出す前に、<xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType>メソッド。 場合<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>に設定されている`true`、すべてのヘッダー セルを除く、<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>現在のテーマを使用して描画されます。  
  
   
  
## Examples  
 次のコード例では、visual スタイルが有効になっているアプリケーションで行および列ヘッダーの visual スタイルを無効にする方法を示します。 この例では、visual スタイルが有効になって、アプリケーションを呼び出して、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A>メソッド`Main`します。 ただし、visual スタイルを適用できません行および列ヘッダーのため<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>に設定されている`false`します。 このコード例が示されている例の一部、<xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle>クラス。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="Overload:System.Windows.Forms.Application.Run" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndEdit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のセルの編集操作をコミットして終了します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; bool" Usage="dataGridView.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定のエラー コンテキストを使用して、現在のセルの編集操作をコミットして終了します。</summary>
        <returns>編集操作がコミットされ終了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Windows.Forms.DataGridView.EndEdit%2A>オーバー ロードでビットごとの組み合わせを渡して、<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing>と<xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit>値。  
  
 このメソッドは<xref:System.Windows.Forms.DataGridView.CellEndEdit>イベント。  
  
 エラーが処理されない場合、このメソッドが例外を引き起こす可能性があります、<xref:System.Windows.Forms.DataGridView.DataError>イベント。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">セル値をコミットできませんでした。また、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しています。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.EndEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">エラーが発生する可能性のあるコンテキストを指定する <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 値のビットごとの組み合わせ。</param>
        <summary>指定されたエラー コンテキストを使用して、現在のセルの編集操作をコミットして終了します。</summary>
        <returns>編集操作がコミットされ終了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは<xref:System.Windows.Forms.DataGridView.CellEndEdit>イベント。  
  
 エラーが処理されない場合、このメソッドが例外を引き起こす可能性があります、<xref:System.Windows.Forms.DataGridView.DataError>イベント。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">セル値をコミットできませんでした。また、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しています。</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell FirstDisplayedCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ FirstDisplayedCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> に現在表示されている最初のセルを取得または設定します。通常、このセルは左上隅にあります。</summary>
        <value>現在コントロールに表示されている最初の <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、最初の行と、コントロールに現在表示されている列のセルを特定することができます。 通常、これは、左上隅が右から左の言語では、右上隅になります。 指定されたセルにコントロールをスクロールするには、このプロパティを設定することもできます。  
  
   
  
## Examples  
 次のコード例は、並べ替えの後の現在のセルが表示されていることを確認する方法を示しています。 このコードは、バインドされていない<xref:System.Windows.Forms.DataGridView>コントロール。 <xref:System.Windows.Forms.DataGridView>外部データ ソースにバインドされたコントロールの現在のセルは並べ替えるときに自動的に保持されません。  
  
 この例を実行するを含むフォームに次のコードを貼り付け、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`します。 C# でも接続する必要あります、<xref:System.Windows.Forms.DataGridView.Sorted>イベントをイベント ハンドラー。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティを設定するときに指定されたセルが、<see cref="T:System.Windows.Forms.DataGridView" /> にありません。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティを設定するときに指定されたセルの <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> または <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> プロパティ値が -1 です。これは、ヘッダー セルまたは共有セルであることを示しています。  
  
- または - 
このプロパティの設定時に指定したセルの <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> プロパティ値が <see langword="false" /> です。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnHiddenWidth">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnHiddenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstDisplayedScrollingColumnHiddenWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnHiddenWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnHiddenWidth : int" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在スクロールされて見えない列の部分の幅を取得します。</summary>
        <value>スクロールされて見えない部分の列の幅。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> に表示される最初の列のインデックスを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> に表示される最初の列のインデックス。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティの設定時に指定した値が、0 未満か、コントロール内の列数から 1 を引いた数より大きい値になっています。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値は、<see langword="false" /> の <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> プロパティ値を持つ列を示します。  
  
- または - 
このプロパティの設定時に指定した値は、<see langword="true" /> の <see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /> プロパティ値を持つ列を示します。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingRowIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingRowIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> に表示される最初の行のインデックスを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> に表示される最初の行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの生成の設定、<xref:System.Windows.Forms.DataGridView.Scroll>イベント。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティの設定時に指定した値が、0 未満か、コントロール内の行数から 1 を引いた数より大きい値になっています。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値は、<see langword="false" /> の <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> プロパティ値を持つ行を示します。  
  
- または - 
このプロパティの設定時に指定した値は、<see langword="true" /> の <see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /> プロパティ値を持つ列を示します。</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.Scroll" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGridView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> によって表示されるテキストのフォントを取得または設定します。</summary>
        <value>コントロールによって表示されるテキストに適用される <see cref="T:System.Drawing.Font" />。 既定値は <see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Font%2A>プロパティは、アンビエント プロパティです。 アンビエントのプロパティはコントロールのプロパティ セットは、親コントロールから取得されます。 たとえば、<xref:System.Windows.Forms.Button>が、同じ<xref:System.Windows.Forms.Control.BackColor%2A>親として<xref:System.Windows.Forms.Form>既定では。 アンビエント プロパティの詳細については、次を参照してください。、<xref:System.Windows.Forms.AmbientProperties>クラスまたは<xref:System.Windows.Forms.Control>クラスの概要。  
  
 <xref:System.Drawing.Font>は変更できません (つまり、そのプロパティのいずれかを調整できません)、割り当てることができますのみ、 <xref:System.Windows.Forms.Control.Font%2A> 、新しいプロパティ<xref:System.Drawing.Font>オブジェクト。 ただし、既存のフォントで新しいフォントを作成できます。  
  
 <xref:System.Windows.Forms.DataGridView>コントロールの値を使用して、<xref:System.Windows.Forms.DataGridView.Font%2A>プロパティの既定値として、<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>プロパティの<xref:System.Windows.Forms.DataGridViewCellStyle>によって返されるオブジェクト、 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、および<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>プロパティ。 変更、<xref:System.Windows.Forms.DataGridView.Font%2A>値が自動的に更新、 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、および<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>プロパティ、値を継承する任意のセルのフォントを変更します。 ヘッダー セルが既定では、値をオーバーライドし、特定の行、列、およびセルの値を上書きすることができます。 セル スタイルの継承の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、このプロパティの使用を示しています。 この例で使用できる例の一部は、[方法。バインドされていない Windows フォーム DataGridView コントロールの作成](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)です。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
        <altmember cref="T:System.Drawing.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Font" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.FontChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.FontChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#271](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#271)]
 [!code-vb[System.Windows.Forms.EventExamples#271](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#271)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の前景色を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> プロパティの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ForeColor%2A>プロパティは、アンビエント プロパティです。 アンビエントのプロパティはコントロールのプロパティ セットは、親コントロールから取得されます。 たとえば、<xref:System.Windows.Forms.Button>が、同じ<xref:System.Windows.Forms.Control.BackColor%2A>親として<xref:System.Windows.Forms.Form>既定では。 アンビエント プロパティの詳細については、次を参照してください。、<xref:System.Windows.Forms.AmbientProperties>クラスまたは<xref:System.Windows.Forms.Control>クラスの概要。  
  
 <xref:System.Drawing.Font>は変更できません (つまり、そのプロパティのいずれかを調整できません)、割り当てることができますのみ、 <xref:System.Windows.Forms.Control.Font%2A> 、新しいプロパティ<xref:System.Drawing.Font>オブジェクト。 ただし、既存のフォントで新しいフォントを作成できます。  
  
 <xref:System.Windows.Forms.DataGridView>コントロールの値を使用して、<xref:System.Windows.Forms.DataGridView.ForeColor%2A>プロパティの既定値として、<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>プロパティの<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティ。 変更、<xref:System.Windows.Forms.DataGridView.ForeColor%2A>値が自動的に更新、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティの値を継承する任意のセルの前景テキストの色を変更します。 ヘッダー セルが既定では、値をオーバーライドし、特定の行、列、およびセルの値を上書きすることができます。 セル スタイルの継承の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ForeColor" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ForeColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ForeColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#270](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#270)]
 [!code-vb[System.Windows.Forms.EventExamples#270](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#270)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId">取得する <see langword="Int32" /> を識別する <see cref="T:System.Windows.Forms.AccessibleObject" />。</param>
        <summary>指定した <see cref="T:System.Windows.Forms.AccessibleObject" /> を取得します。</summary>
        <returns>指定された <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellCount">
      <MemberSignature Language="C#" Value="public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetCellCount : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridView.GetCellCount includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">数に含めるセルを指定する <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 値のビットごとの組み合わせ。</param>
        <summary>指定されたフィルターを満たすセルの数を取得します。</summary>
        <returns><paramref name="includeFilter" /> パラメーターと一致するセルの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、特定の状態のセルの数を決定するのに便利です。 選択したセルの数を取得するには、このメソッドを使用してなど、<xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>値。 これは、通常使用するよりも効率的、<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、このメソッドを使用してで選択されている任意のセルがあるかどうかを決定する方法を示しています、<xref:System.Windows.Forms.DataGridView>コントロール。 この例で任意のセルが選択されている場合、値はを通じて、<xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>メソッドで表示されていると、<xref:System.Windows.Forms.TextBox>コントロール。  
  
 このコード例のクリップボード機能の使用方法を示すは、<xref:System.Windows.Forms.DataGridView>コントロール。 この例で使用できる例の一部は、[方法。フォームの DataGridView コントロールを有効にするユーザー、Windows から複数のセルをクリップボードにコピーする](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#16)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="includeFilter" /> には値 <see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" /> が含まれています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GetCellDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellDisplayRectangle(int32 columnIndex, int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDisplayRectangle (columnIndex As Integer, rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellDisplayRectangle(int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetCellDisplayRectangle : int * int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetCellDisplayRectangle (columnIndex, rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">目的のセルの列インデックス。</param>
        <param name="rowIndex">目的のセルの行インデックス。</param>
        <param name="cutOverflow">セルの表示部分のみを取得する場合は <see langword="true" />。セル境界全体を取得する場合は <see langword="false" />。</param>
        <summary>セルの表示領域を表す四角形を返します。</summary>
        <returns>セルの表示領域の四角形を表す <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、セル境界全体または表示部分のみを返します。 セルの境界を取得するコンテンツのみ、セルを使用して、<xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> -1 から 1 を引いたコントロール内の列の数より大きいか未満です。  
  
- または - 
 <paramref name="rowIndex" /> が、-1 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataObject GetClipboardContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataObject GetClipboardContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClipboardContent () As DataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataObject ^ GetClipboardContent();" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject&#xA;override this.GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject" Usage="dataGridView.GetClipboardContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Clipboard" /> にコピーするために、選択されたセルの内容を表す書式設定された値を取得します。</summary>
        <returns>選択されたセルの内容を表す <see cref="T:System.Windows.Forms.DataObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、選択したセルによって定義される領域を表すデータを取得します。 この領域は、すべての選択したセルを含む最小の四角形です。 このリージョンで選択した各セルの値を取得、<xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType>メソッド。 このリージョンで選択されていないセルの空のプレース ホルダーの値が使用されます。 このメソッドは、これらの値を組み合わせて、<xref:System.Windows.Forms.DataObject>をクリップボードにコピーするためのいくつかの形式を格納しています。 サポートされているクリップボードの形式には、 <xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>、 <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>、 <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>、および<xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>します。  
  
 詳細については、<xref:System.Windows.Forms.Clipboard> クラスを参照してください。  
  
   
  
## Examples  
 次のコード例は、選択をプログラムで追加する方法を示します<xref:System.Windows.Forms.DataGridView>クリップボードへのコンテンツ。 この例で使用できる例の一部は、[方法。フォームの DataGridView コントロールを有効にするユーザー、Windows から複数のセルをクリップボードにコピーする](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /> が <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" /> に設定されます。</exception>
        <block subset="none" type="overrides"><para>カスタマイズされたクリップボードの値を指定するには、このメソッドをオーバーライドします。 たとえば、カスタムのセルの種類からの値のコピーをサポートするためにこれは、役立ちます。</para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GetColumnDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetColumnDisplayRectangle(int32 columnIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnDisplayRectangle (columnIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetColumnDisplayRectangle(int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetColumnDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetColumnDisplayRectangle (columnIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">目的のセルの列インデックス。</param>
        <param name="cutOverflow"><see cref="T:System.Windows.Forms.DataGridView" /> バインドに表示する列の四角形を返す場合は <see langword="true" />。列の四角形全体を返す場合は <see langword="false" />。</param>
        <summary>列インデックスによって決定された、列の表示領域を表す四角形を返します。</summary>
        <returns>列の表示領域の四角形を表す <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GetRowDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetRowDisplayRectangle(int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowDisplayRectangle (rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetRowDisplayRectangle(int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetRowDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetRowDisplayRectangle (rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">目的のセルの行インデックス。</param>
        <param name="cutOverflow"><see cref="T:System.Windows.Forms.DataGridView" /> バインドに表示する行の四角形を返す場合は <see langword="true" />。行の四角形全体を返す場合は <see langword="false" />。</param>
        <summary>行インデックスによって決定された、行の表示領域を表す四角形を返します。</summary>
        <returns>行の表示領域の四角形を表す <see cref="T:System.Drawing.Rectangle" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.GridColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.GridColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルを区切るグリッド線の色を取得または設定します。</summary>
        <value>グリッド線の色を表す <see cref="T:System.Drawing.Color" /> または <see cref="T:System.Drawing.SystemColors" />。 既定値は <see cref="F:System.Drawing.KnownColor.ControlDarkDark" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定することができます、<xref:System.Windows.Forms.DataGridView.GridColor%2A>色プロパティにいずれかのときに枠線の他の種類と色を指定して、オペレーティング システムによっては 1 つの境界線を使用します。 経由でアプリケーションの visual スタイルが有効になっている場合、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>メソッド、<xref:System.Windows.Forms.DataGridView.GridColor%2A>プロパティは無視され、現在のテーマの色が使用されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が <see cref="F:System.Drawing.Color.Empty" /> です。  
  
- または - 
このプロパティの設定時に指定した値に、255 未満の <see cref="P:System.Drawing.Color.A" /> プロパティ値が含まれています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.GridColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridColorChanged;" />
      <MemberSignature Language="F#" Value="member this.GridColorChanged : EventHandler " Usage="member this.GridColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.GridColor" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.GridColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.GridColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#272](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#272)]
 [!code-vb[System.Windows.Forms.EventExamples#272](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#272)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridView/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As DataGridView.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridView::HitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataGridView.HitTestInfo" Usage="dataGridView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">x 座標。</param>
        <param name="y">y 座標。</param>
        <summary>行インデックス、列インデックスなど、x 座標と y 座標を指定して位置情報を返します。</summary>
        <returns>位置情報を格納している <see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用するにはのどの部分を決定する、<xref:System.Windows.Forms.DataGridView>コントロールが指定した座標にあります。 たとえば、マウスのクリックでのセルがクリックされたヘッダー セルまたはスクロール バーがクリックしてされたかどうかの行と列のインデックスを決定する座標を指定するこのメソッドを呼び出すことができます。  
  
   
  
## Examples  
 次のコード例は、このメソッドの使用を示しています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.Columns%2A>プロパティの参照トピック。  
  
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />
        <altmember cref="T:System.Windows.Forms.DataGridViewHitTestType" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HorizontalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ HorizontalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの水平スクロール バーを取得します。</summary>
        <value>水平スクロール バーを表す <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollingOffset">
      <MemberSignature Language="C#" Value="public int HorizontalScrollingOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalScrollingOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollingOffset : int with get, set" Usage="System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが水平方向にスクロールされる基準となるピクセル数を取得または設定します。</summary>
        <value>コントロールが水平方向にスクロールされる基準となるピクセル数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、このプロパティの使用を示しています。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティの設定時に指定された値が 0 未満です。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvalidateCell">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルを無効化して、強制的に再描画します。</summary>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridView.InvalidateCell dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell">無効化する <see cref="T:System.Windows.Forms.DataGridViewCell" />。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の指定されたセルを無効化して、強制的に再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常は、再描画するセルにセルの再描画を強制すると便利です。 たとえば、外部イベントの結果としてその外観を変更するカスタムのセルの種類と、このメソッドを使用できます。  
  
 描画と無効化の詳細については、次を参照してください。<xref:System.Windows.Forms.Control.Invalidate%2A>します。  
  
   
  
## Examples  
 次のコード例は、カスタマイズされたでこのメソッドを使用する方法を示しています。<xref:System.Windows.Forms.DataGridViewCell>にマウス ポインターを合わせるとカスタム境界線で描画します。 例では、マウスのポインターかのままにすると、セルが無効になります。  
  
 このコード例で使用できるの[方法。セルのカスタマイズし、列で、Windows フォーム DataGridView コントロールのそれぞれの動作と外観を拡張することによって](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataGridViewCell" /> は <see cref="T:System.Windows.Forms.DataGridView" /> に属していません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewCell" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateCell (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : int * int -&gt; unit" Usage="dataGridView.InvalidateCell (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">無効化するセルの列インデックス。</param>
        <param name="rowIndex">無効化するセルの行インデックス。</param>
        <summary>指定された行インデックスと列インデックスを含むセルを無効化して、強制的に再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常は、再描画するセルにセルの再描画を強制すると便利です。 たとえば、外部イベントの結果としてその外観を変更するカスタムのセルの種類と、このメソッドを使用できます。  
  
 描画と無効化の詳細については、次を参照してください。<xref:System.Windows.Forms.Control.Invalidate%2A>します。  
  
   
  
## Examples  
 次のコード例は、ユーザーは、上にマウス ポインターを置いたときに、セルの外観を変更するカスタムのセルの種類でこのメソッドを使用する方法を示しています。 この例で使用できる例の一部は、[方法。セルのカスタマイズし、列で、Windows フォーム DataGridView コントロールのそれぞれの動作と外観を拡張することによって](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> -1 から 1 を引いたコントロール内の列の数より大きいか未満です。  
  
- または - 
 <paramref name="rowIndex" /> が、-1 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateColumn">
      <MemberSignature Language="C#" Value="public void InvalidateColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateColumn : int -&gt; unit" Usage="dataGridView.InvalidateColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">無効化する列のインデックス。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の指定された列を無効化して、強制的に再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 描画と無効化の詳細については、次を参照してください。<xref:System.Windows.Forms.Control.Invalidate%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 以上、列数 - 1 以下の、有効な範囲内にありません。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRow">
      <MemberSignature Language="C#" Value="public void InvalidateRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateRow : int -&gt; unit" Usage="dataGridView.InvalidateRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">無効化する行のインデックス。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の指定された行を無効化して、強制的に再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、強制的に再描画する行。 このメソッドはオーナー描画のシナリオを処理するのに便利です、<xref:System.Windows.Forms.DataGridView.RowPrePaint>または<xref:System.Windows.Forms.DataGridView.RowPostPaint>イベント。  
  
 描画と無効化の詳細については、次を参照してください。<xref:System.Windows.Forms.Control.Invalidate%2A>します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示しています、<xref:System.Windows.Forms.DataGridView.InvalidateRow%2A>メソッド シナリオで行を描画します。 現在のセルが変更されたときに、例では、行が無効に行が強制的に再描画します。  
  
 このコード例で使用できるの[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 以上、行数 - 1 以下の、有効な範囲内にありません。</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のセルがコミットされていない変更を含んでいるかを示す値を取得します。</summary>
        <value>現在のセルがコミットされていない変更を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridView>がバインドされていないデータをセルの編集と見なされます、ユーザーが別のセルに移動したときにコミットします。  
  
 行ヘッダーが表示されている場合は、鉛筆のグリフはコミットされていない変更を含むセルを含む行ヘッダーに存在します。  
  
 場合<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>は`true`と現在のセルが編集コントロールをホスト、を通じて取得することができます、<xref:System.Windows.Forms.DataGridView.EditingControl%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>セル値をコミットし、発生させるかどうかを決定するプロパティ、<xref:System.Windows.Forms.DataGridView.CellValueChanged>イベントのハンドラーから、<xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged>イベント。 このコード例で示されている例の一部は、[方法。無効にするボタンのボタン列に、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellInEditMode">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellInEditMode : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在アクティブなセルが編集中かどうかを示す値を取得します。</summary>
        <value>現在のセルが編集中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.DataGridViewCheckBoxCell>フォーカスのある編集モードでは常にします。 現在のセルが編集コントロールをホストしている場合と<xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A>は`true`を使用して編集コントロールを取得することができます、<xref:System.Windows.Forms.DataGridView.EditingControl%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、このプロパティの使用を示しています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentRowDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentRowDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentRowDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentRowDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentRowDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentRowDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の行が確定されていない変更を含んでいるかを示す値を取得します。</summary>
        <value>現在の行がコミットされていない変更を含む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを返します`true`鉛筆グリフが行に表示される場合。 既定で、<xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A>プロパティがの値と等しくは常に、<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>プロパティ、しない限り、<xref:System.Windows.Forms.DataGridView>仮想モードまたは編集するには、サポートがされている実装している行レベルのコミットのスコープを使用するデータ ソースにバインドされます。 このような場合、<xref:System.Windows.Forms.DataGridView>行レベルでは、このプロパティを評価します。  
  
 ユーザーは、行から移動して、コントロールは、すべての行の変更をコミットします。 ユーザーは、行を離れることがなく、行の変更をコミットするには、CTRL + ENTER を押してもできます。 プログラムで行の変更をコミットするに呼び出して、フォームの<xref:System.Windows.Forms.ContainerControl.Validate%2A>メソッド。 データ ソースの場合、 <xref:System.Windows.Forms.BindingSource>、呼び出すこともできます<xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType>します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.IsInputChar : char -&gt; bool" Usage="dataGridView.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">テスト対象の文字。</param>
        <summary>文字が、<see cref="T:System.Windows.Forms.DataGridView" /> によって認識される入力文字かどうかを判断します。</summary>
        <returns>文字が入力文字として認識される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字は、入力文字かどうか、コントロールが編集モードと現在の編集コントロール文字を受け入れるかどうかに応じてとして認識されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> 値のいずれか 1 つ。</param>
        <summary>指定されているキーが、通常の入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
        <returns>指定されているキーが通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した行と列の交差部分にあるセルを取得または設定するためのインデクサーを提供します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[int, int] { System::Windows::Forms::DataGridViewCell ^ get(int columnIndex, int rowIndex); void set(int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">セルを含む列のインデックス。</param>
        <param name="rowIndex">セルを含む行のインデックス。</param>
        <summary>指定したインデックスを持つ列と行の交差部分にあるセルを取得または設定するためのインデクサーを提供します。</summary>
        <value>指定した位置にある <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインデクサーからセルにアクセスするのには、<xref:System.Windows.Forms.DataGridViewRow.Cells%2A>のコレクション、<xref:System.Windows.Forms.DataGridView.Rows%2A>コレクション。  
  
   
  
## Examples  
 次のコード例では、このインデクサーの使用を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
 <paramref name="rowIndex" /> が、0 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(string, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[System::String ^, int] { System::Windows::Forms::DataGridViewCell ^ get(System::String ^ columnName, int rowIndex); void set(System::String ^ columnName, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnName">セルを含む列の名前。</param>
        <param name="rowIndex">セルを含む行のインデックス。</param>
        <summary>指定したインデックスを持つ行と指定した名前を持つ列の交差部分にあるセルを設定または取得するためのインデクサーを提供します。</summary>
        <value>指定した位置にある <see cref="T:System.Windows.Forms.DataGridViewCell" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインデクサーからセルにアクセスするのには、<xref:System.Windows.Forms.DataGridViewRow.Cells%2A>のコレクション、<xref:System.Windows.Forms.DataGridView.Rows%2A>コレクション。  
  
   
  
## Examples  
 次のコード例では、このインデクサーの使用を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> の複数のセル、行、または列を同時に選択できるかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが複数のセル、行、または列を同時に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティに設定されて`true`で複数の要素 (セル、行、または列) を選択できる、<xref:System.Windows.Forms.DataGridView>コントロール。 複数の要素を選択するには、ユーザーは、CTRL キーを押しながら選択する要素をクリックして保持できます。 最初の要素を選択します] をクリックし、最後の要素を選択する] をクリックして、SHIFT キーを押しながら、連続する要素を選択することができます。 選択範囲がに基づいて、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティ。 たとえば場合、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>に設定されている<xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>ユーザーは、複数の列を選択できます。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティで複数の要素を選択するようにする場合、<xref:System.Windows.Forms.DataGridView>を制御し、選択したすべての要素に対して演算を実行します。 たとえば、ユーザーは、複数のセルを選択し、選択したセルを実行するタスクのセットが表示されるショートカット メニューを表示する選択したセルを右クリックし。  
  
 セル、行、または列の選択を決定する、<xref:System.Windows.Forms.DataGridView>アクセスできるコントロール、 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>、 <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>、または<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>プロパティ。 選択したセルの数を確認するのには、呼び出し、<xref:System.Windows.Forms.DataGridView.GetCellCount%2A>メソッドの引数の値を<xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>します。 使用して、<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A>選択された行の数を取得するメソッドを<xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A>列の数を取得します。 これらのメソッドは、大量のデータを使用する場合、コレクションに直接アクセスするよりも効率的です。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultiSelectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultiSelectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.MultiSelectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultiSelectChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultiSelectChanged;" />
      <MemberSignature Language="F#" Value="member this.MultiSelectChanged : EventHandler " Usage="member this.MultiSelectChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.MultiSelectChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.MultiSelectChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#273](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#273)]
 [!code-vb[System.Windows.Forms.EventExamples#273](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#273)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowIndex">
      <MemberSignature Language="C#" Value="public int NewRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NewRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NewRowIndex : int" Usage="System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいレコードの行のインデックスを取得します。</summary>
        <value>新しいレコードの行のインデックス。<see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> が <see langword="false" /> の場合は -1 になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 しない限り、<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>は`false`、このプロパティの値は 1 を引いたコントロール内の行の数と同じです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.NewRowNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NewRowNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ NewRowNeeded;" />
      <MemberSignature Language="F#" Value="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> の <see cref="T:System.Windows.Forms.DataGridView" /> プロパティが <see langword="true" /> で、ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> の下部にある新しい行に移動したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridView>が仮想モードでこのイベントにより、新しい行のデータ ストア内に作成する新しいエントリと既定値が設定される行のこともできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridView.NewRowNeeded>新しい行を追加するとき、そのロジックを追跡するイベントを<xref:System.Windows.Forms.DataGridView.CellValueNeeded>イベント ハンドラーは、初期値に新しい行のセルを初期化できます。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="NotifyCurrentCellDirty">
      <MemberSignature Language="C#" Value="public virtual void NotifyCurrentCellDirty (bool dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyCurrentCellDirty(bool dirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyCurrentCellDirty (dirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyCurrentCellDirty(bool dirty);" />
      <MemberSignature Language="F#" Value="abstract member NotifyCurrentCellDirty : bool -&gt; unit&#xA;override this.NotifyCurrentCellDirty : bool -&gt; unit" Usage="dataGridView.NotifyCurrentCellDirty dirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dirty">セルにコミットされていない変更があることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在のセルにコミットされていない変更があることを <see cref="T:System.Windows.Forms.DataGridView" /> に通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、カスタム セルへの通知に使用できます、<xref:System.Windows.Forms.DataGridView>がある場合にコミットされていない変更します。  
  
   
  
## Examples  
 次のコード例は、カスタムのセルのシナリオでは、このメソッドの使用を示しています。 例では、<xref:System.Windows.Forms.IDataGridViewEditingControl>実装から派生した、<xref:System.Windows.Forms.DateTimePicker>オーバーライド、<xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A>メソッドを使用して、<xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A>メソッドへの変更を示す、<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 この例は例に示すように[方法。Windows フォーム DataGridView Cells コントロールをホスト](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#310)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#310)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToAddRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToAddRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToAddRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToAddRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToAddRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToAddRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToDeleteRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToDeleteRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToDeleteRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToDeleteRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToOrderColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToOrderColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToOrderColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToOrderColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternatingRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternatingRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternatingRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAlternatingRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGenerateColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoGenerateColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoGenerateColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoGenerateColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAutoGenerateColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAutoGenerateColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnModeChanged (e As DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /> プロパティの値は NULL です。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnsModeChanged (e As DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnsModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> プロパティの値が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> プロパティによって返される配列内のエントリの数が、コントロールの列数と等しくありません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeRowsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeRowsModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeRowsModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeRowsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBackgroundColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCancelRowEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelRowEdit(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelRowEdit (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelRowEdit(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnCancelRowEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.QuestionEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBeginEdit(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBeginEdit (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBeginEdit(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnCellBeginEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnCellBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCellBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">内容がクリックされたセルに関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripNeeded(class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripNeeded (e As DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripNeeded(System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEndEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEndEdit(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEndEdit (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEndEdit(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEndEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellEnter" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が -1 未満か、またはコントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が -1 未満か、またはコントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextNeeded(class System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextNeeded (e As DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextNeeded(System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellFormatting">
      <MemberSignature Language="C#" Value="protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellFormatting(class System.Windows.Forms.DataGridViewCellFormattingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellFormatting (e As DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellFormatting(System::Windows::Forms::DataGridViewCellFormattingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit&#xA;override this.OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit" Usage="dataGridView.OnCellFormatting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellLeave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、セルをダブルクリックすると、セル編集モードにします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellPainting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCellPainting(class System.Windows.Forms.DataGridViewCellPaintingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCellPainting (e As DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCellPainting(System::Windows::Forms::DataGridViewCellPaintingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit&#xA;override this.OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit" Usage="dataGridView.OnCellPainting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellPainting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellPainting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellParsing">
      <MemberSignature Language="C#" Value="protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellParsing(class System.Windows.Forms.DataGridViewCellParsingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellParsing (e As DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellParsing(System::Windows::Forms::DataGridViewCellParsingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit&#xA;override this.OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit" Usage="dataGridView.OnCellParsing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellParsingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellParsing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStateChanged(class System.Windows.Forms.DataGridViewCellStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStateChanged (e As DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStateChanged(System::Windows::Forms::DataGridViewCellStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit&#xA;override this.OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleContentChanged(class System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleContentChanged (e As DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleContentChanged(System::Windows::Forms::DataGridViewCellStyleContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit&#xA;override this.OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">セルに関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextNeeded(class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextNeeded (e As DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextNeeded(System::Windows::Forms::DataGridViewCellToolTipTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValidated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValidated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidating(class System.Windows.Forms.DataGridViewCellValidatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidating (e As DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidating(System::Windows::Forms::DataGridViewCellValidatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit&#xA;override this.OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit" Usage="dataGridView.OnCellValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> プロパティの値が、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> プロパティの値が、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueNeeded(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueNeeded (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueNeeded(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValueNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> プロパティの値が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> プロパティの値が、0 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValuePushed">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValuePushed(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValuePushed (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValuePushed(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValuePushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> プロパティの値が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
<paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> プロパティの値が、0 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnAdded(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnAdded (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnAdded(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnContextMenuStripChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnContextMenuStripChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnContextMenuStripChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDataPropertyNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDataPropertyNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDataPropertyNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDataPropertyNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDefaultCellStyleChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDefaultCellStyleChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDisplayIndexChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDisplayIndexChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDisplayIndexChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDisplayIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerDoubleClick(class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerDoubleClick (e As DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerDoubleClick(System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderCellChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderCellChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderCellChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> プロパティの値が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">セルおよびマウス ポインターの位置に関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnMinimumWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnMinimumWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnMinimumWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnMinimumWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnRemoved(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnRemoved (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnRemoved(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnSortModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnSortModeChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnSortModeChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnSortModeChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnSortModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnStateChanged(class System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnStateChanged (e As DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnStateChanged(System::Windows::Forms::DataGridViewColumnStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit&#xA;override this.OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnColumnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">列が読み取り専用から読み取り/書き込みに変更され、現在のセルは編集モードになることが可能になりますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnToolTipTextChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnToolTipTextChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnToolTipTextChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">列に関する情報を格納する <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> プロパティで示されている列が、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellDirtyStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellDirtyStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellDirtyStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellDirtyStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>カーソルがユーザー コードで変更された場合は、<see cref="E:System.Windows.Forms.Control.CursorChanged" /> イベントを発生させて、<see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /> プロパティを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールの変更、<xref:System.Windows.Forms.Control.Cursor%2A>に応じてマウス ポインターの場所のプロパティの値。 <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A>プロパティの標準の値を格納する、<xref:System.Windows.Forms.Control.Cursor%2A>プロパティとコントロールの変更は無視されます。 このメソッドが呼び出されます、<xref:System.Windows.Forms.Control.CursorChanged>イベントが発生して、更新、<xref:System.Windows.Forms.DataGridView.UserSetCursor%2A>プロパティ、イベント ハンドラーを呼び出すだけでなく、必要な場合。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.UserSetCursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindingComplete(class System.Windows.Forms.DataGridViewBindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindingComplete (e As DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindingComplete(System::Windows::Forms::DataGridViewBindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit&#xA;override this.OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit" Usage="dataGridView.OnDataBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データが変更されたときに、バインディング操作が発生するときに、<xref:System.Windows.Forms.CurrencyManager>使用されています。 たとえば場合、<xref:System.Windows.Forms.CurrencyManager.ListChanged>イベントが発生、<xref:System.Windows.Forms.DataGridView>はそのビューを更新し、発生させる、<xref:System.Windows.Forms.DataGridView.DataBindingComplete>イベントが完了します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(bool displayErrorDialogIfNoHandler, class System.Windows.Forms.DataGridViewDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (displayErrorDialogIfNoHandler As Boolean, e As DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(bool displayErrorDialogIfNoHandler, System::Windows::Forms::DataGridViewDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit" Usage="dataGridView.OnDataError (displayErrorDialogIfNoHandler, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayErrorDialogIfNoHandler" Type="System.Boolean" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="displayErrorDialogIfNoHandler"><see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないときにエラー ダイアログ ボックスを表示する場合は <see langword="true" />。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultValuesNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultValuesNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultValuesNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultValuesNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnDefaultValuesNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="dataGridView.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.DoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditingControlShowing">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingControlShowing(class System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingControlShowing (e As DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingControlShowing(System::Windows::Forms::DataGridViewEditingControlShowingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit&#xA;override this.OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit" Usage="dataGridView.OnEditingControlShowing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">編集中のコントロールに関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditModeChanged : EventArgs -&gt; unit&#xA;override this.OnEditModeChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEditModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.EditModeChanged>イベントが発生するたびに、<xref:System.Windows.Forms.DataGridView.EditMode%2A>プロパティの変更。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">編集モードに切り替わると、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティには <see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスは示されません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="dataGridView.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">コントロールは、フォーカスを受け取ると編集モードに切り替わるように設定されていますが、フォーカスに入る時には、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティに <see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスは示されません。</exception>
        <exception cref="T:System.Exception">コントロールは、フォーカスを受け取ると編集モードに切り替わるように設定されていますが、編集セルの値の初期化が失敗して、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になっています。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dataGridView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.FontChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 発生させるだけでなく、<xref:System.Windows.Forms.DataGridView.FontChanged>イベントでは、このメソッドはの新しい値を使用して、<xref:System.Windows.Forms.DataGridView.Font%2A>プロパティを更新する、<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>プロパティの<xref:System.Windows.Forms.DataGridViewCellStyle>によって返されるオブジェクト、 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>、<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>と<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>プロパティ。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnFontChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 発生させるだけでなく、<xref:System.Windows.Forms.DataGridView.FontChanged>イベントでは、このメソッドはの新しい値を使用して、<xref:System.Windows.Forms.DataGridView.ForeColor%2A>プロパティを更新する、<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>プロパティの<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティ。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="dataGridView.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGridColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridColorChanged : EventArgs -&gt; unit&#xA;override this.OnGridColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnGridColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dataGridView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dataGridView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">本来はこのアクションによってコントロールが編集モードになるところですが、編集セルの値の初期化は失敗し、また <see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態のいずれかになります。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="dataGridView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyPress%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyUp" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnKeyUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="dataGridView.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnLayout%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="dataGridView.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Leave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="dataGridView.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.LostFocus" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例では、このメソッドの使用を示します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">コントロールは、フォーカスを受け取ると編集モードに切り替わるように設定されていますが、編集セルの値の初期化が失敗して、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になっています。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDown" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseDown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">コントロールは、フォーカスを受け取ると編集モードに切り替わるように設定されていますが、編集セルの値の初期化が失敗して、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になっています。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="dataGridView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="dataGridView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseLeave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、このメソッドの使用を示しています。 この例で使用できる例の一部は、[方法。セルのカスタマイズし、列で、Windows フォーム DataGridView コントロールのそれぞれの動作と外観を拡張することによって](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseMove" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseMove%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseUp" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMouseUp%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseWheel" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMultiSelectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultiSelectChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultiSelectChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultiSelectChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultiSelectChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultiSelectChanged : EventArgs -&gt; unit&#xA;override this.OnMultiSelectChanged : EventArgs -&gt; unit" Usage="dataGridView.OnMultiSelectChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnNewRowNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewRowNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewRowNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewRowNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnNewRowNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGridView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnPaint%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">このメソッド中に発生する例外は、次のいずれかである場合を除いて無視されます。 
-   <see cref="T:System.NullReferenceException" />  
  
-   <see cref="T:System.StackOverflowException" />  
  
-   <see cref="T:System.OutOfMemoryException" />  
  
-   <see cref="T:System.Threading.ThreadAbortException" />  
  
-   <see cref="T:System.ExecutionEngineException" />  
  
-   <see cref="T:System.IndexOutOfRangeException" />  
  
-   <see cref="T:System.AccessViolationException" /></exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGridView.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">コントロールが読み取り専用から読み取り/書き込みに変更され、現在のセルは編集モードになることができますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="dataGridView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnResize%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripNeeded(class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripNeeded (e As DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripNeeded(System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDefaultCellStyleChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDefaultCellStyleChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDirtyStateNeeded(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDirtyStateNeeded (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDirtyStateNeeded(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnRowDirtyStateNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.QuestionEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerDoubleClick(class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerDoubleClick (e As DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerDoubleClick(System::Windows::Forms::DataGridViewRowDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowEnter" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextNeeded(class System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextNeeded (e As DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextNeeded(System::Windows::Forms::DataGridViewRowErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderCellChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderCellChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderCellChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">マウスおよびクリックされたヘッダー セルに関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">マウスおよびダブルクリックされたヘッダー セルに関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoNeeded(class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoNeeded (e As DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoNeeded(System::Windows::Forms::DataGridViewRowHeightInfoNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoPushed">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoPushed(class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoPushed (e As DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoPushed(System::Windows::Forms::DataGridViewRowHeightInfoPushedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoPushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowLeave" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowLeave%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowMinimumHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowMinimumHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowMinimumHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowMinimumHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPostPaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPostPaint(class System.Windows.Forms.DataGridViewRowPostPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPostPaint (e As DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPostPaint(System::Windows::Forms::DataGridViewRowPostPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit&#xA;override this.OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPrePaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPrePaint(class System.Windows.Forms.DataGridViewRowPrePaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPrePaint (e As DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPrePaint(System::Windows::Forms::DataGridViewRowPrePaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit&#xA;override this.OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsAdded(class System.Windows.Forms.DataGridViewRowsAddedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsAdded (e As DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsAdded(System::Windows::Forms::DataGridViewRowsAddedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit&#xA;override this.OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit" Usage="dataGridView.OnRowsAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">追加された行に関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsRemoved(class System.Windows.Forms.DataGridViewRowsRemovedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsRemoved (e As DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsRemoved(System::Windows::Forms::DataGridViewRowsRemovedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit&#xA;override this.OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit" Usage="dataGridView.OnRowsRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">削除された行に関する情報を格納している <see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowStateChanged(int32 rowIndex, class System.Windows.Forms.DataGridViewRowStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowStateChanged (rowIndex As Integer, e As DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowStateChanged(int rowIndex, System::Windows::Forms::DataGridViewRowStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit&#xA;override this.OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnRowStateChanged (rowIndex, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowIndex">変更状態の行のインデックス。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">行が読み取り専用から読み取り/書き込みに変更され、現在のセルは編集モードになることができますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、 <see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUnshared">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUnshared(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUnshared (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUnshared(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowUnshared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowValidated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowValidated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidating(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidating (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidating(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnRowValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowValidating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnRowValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (e As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGridView.OnScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.ScrollEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.Scroll" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnScroll%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="dataGridView.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントに関する情報を格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSortCompare">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCompare(class System.Windows.Forms.DataGridViewSortCompareEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCompare (e As DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCompare(System::Windows::Forms::DataGridViewSortCompareEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit&#xA;override this.OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit" Usage="dataGridView.OnSortCompare e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewSortCompareEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.SortCompare" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnSortCompare%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="dataGridView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.Sorted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnSorted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserAddedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserAddedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserAddedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserAddedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserAddedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" /> の <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> プロパティにより示される行は、この <see cref="T:System.Windows.Forms.DataGridView" /> コントロールに属していません。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletingRow(class System.Windows.Forms.DataGridViewRowCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletingRow (e As DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletingRow(System::Windows::Forms::DataGridViewRowCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit&#xA;override this.OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletingRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="dataGridView.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 発生させるだけでなく、<xref:System.Windows.Forms.Control.Validating>イベントでは、このメソッドは、現在のセルの編集を終了し、セルと行の値を検証します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridView.OnValidating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">検証が失敗しました。<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しました。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.DataGridView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールでは、このプロパティは無効です。</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールでは、このプロパティは無効です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Padding" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.Padding%2A>プロパティはその値を変更し、このイベントを処理することによって、このような変更に対応できますが、このコントロールに関連します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Padding" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="PaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBackground(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle gridBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBackground(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle gridBounds);" />
      <MemberSignature Language="F#" Value="abstract member PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit&#xA;override this.PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="dataGridView.PaintBackground (graphics, clipBounds, gridBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="gridBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">背景の描画に使用される <see cref="T:System.Drawing.Graphics" />。</param>
        <param name="clipBounds">描画が必要な <see cref="T:System.Windows.Forms.DataGridView" /> の領域を表す <see cref="T:System.Drawing.Rectangle" />。</param>
        <param name="gridBounds">セルの描画領域を表す <see cref="T:System.Drawing.Rectangle" />。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の背景を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clipBounds`パラメーターの領域を表す、<xref:System.Windows.Forms.DataGridView>再描画する必要があります。 たとえば、ユーザーが全体をカバー<xref:System.Windows.Forms.DataGridView>別のウィンドウで、し、発見と`clipBounds`全体を表す<xref:System.Windows.Forms.DataGridView>。 ユーザーの小さな領域をカバーする場合、 <xref:System.Windows.Forms.DataGridView> 、し、発見と`clipBounds`カバーされた小さな領域を表します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessAKey">
      <MemberSignature Language="C#" Value="protected bool ProcessAKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessAKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessAKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessAKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessAKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessAKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>A キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが戻る`true`、ユーザーが CTRL キーを押しながら A キーを押すと、<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティは`true`します。 既定では、コントロールの使用これのすべてのセルを選択します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDataGridViewKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDataGridViewKey(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDataGridViewKey (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDataGridViewKey(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridView.ProcessDataGridViewKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">押されたキーに関する情報を格納します。</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> での移動に使用されるキーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが押されたキーに適切なキー処理メソッドを呼び出します (たとえば、<xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A>メソッド f2 キーが押されたときに) し、そのメソッドの戻り値を返します。  
  
   
  
## Examples  
 次のコード例では、ENTER キーの動作を変更する方法を示します、<xref:System.Windows.Forms.DataGridView>サブクラスをオーバーライドすることで、<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>と<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>メソッド。 例では、ENTER キーは、1 行のデータの複数のセルを編集するユーザーに容易に、右矢印キーと同じ動作を持ちます。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">キーを押すとコントロールが編集モードに切り替わる可能性がありますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。  
  
- または - 
DELETE キーにより 1 つ以上の行が削除されますが、データ ソースのエラーによって削除ができなくなり、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすると、コントロールを返します<see langword="true" />をキーが処理されたことを示します。 キーのコントロールによって処理されない場合は、このメソッドの基本バージョンの結果を返します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDeleteKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDeleteKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDeleteKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDeleteKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDeleteKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDeleteKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>Del キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが戻る`true`ユーザーがコントロール内の行を削除します。 ユーザーは行を削除できる場合、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティに設定されて<xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect>または<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>と<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティに設定されて`true`。 場合、 <xref:System.Windows.Forms.DataGridView> 、データにバインドされた、<xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType>データ ソースのプロパティを設定する必要がありますも`true`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">DELETE キーにより 1 つ以上の行が削除されますが、データ ソースのエラーによって削除ができなくなり、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>Tab キー、Esc キー、Enter キー、方向キーなど、ダイアログ ボックスの制御に使用されるキーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ホストされる編集コントロールによって処理されていないキーボード入力を処理するために編集モードで呼び出されます。  
  
 入力のキーをいないことをキーを押すと判断された場合は、処理の基本クラスに送信されます。  
  
   
  
## Examples  
 次のコード例では、ENTER キーの動作を変更する方法を示します、<xref:System.Windows.Forms.DataGridView>サブクラスをオーバーライドすることで、<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>と<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>メソッド。 例では、ENTER キーは、1 行のデータの複数のセルを編集するユーザーに容易に、右矢印キーと同じ動作を持ちます。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">キーを押すとコントロールが編集モードに切り替わる可能性がありますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">すべての windows と TAB キーが押されたときに、ユーザー イベントを使用します。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。 アクセス許可の値。<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすると、コントロールを返します<see langword="true" />をキーが処理されたことを示します。 キーのコントロールによって処理されない場合は、このメソッドの基本バージョンの結果を返します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDownKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDownKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDownKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDownKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDownKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDownKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>↓キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">本来は下矢印キーによってコントロールが編集モードに切り替わるところですが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEndKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEndKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEndKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEndKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEndKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEndKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>End キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">End キーを押すと本来はコントロールが編集モードに切り替わるところですが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEnterKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEnterKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEnterKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEnterKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEnterKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEnterKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>Enter キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">ENTER キーによってコントロールが編集モードに切り替わる可能性がありますが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEscapeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEscapeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEscapeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEscapeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEscapeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEscapeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>Esc キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF2Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF2Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF2Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF2Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF2Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF2Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>F2 キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">本来は F2 キーを押すとコントロールが編集モードに切り替わるところですが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <exception cref="T:System.Exception">F2 キーを押すと本来は編集モードに切り替わるところですが、データ ソースのエラーによってそのようにはならず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF3Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF3Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF3Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF3Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF3Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF3Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF3Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す値のビットごとの組み合わせ。</param>
        <summary>現在の列を並べ替えて、F3 キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessHomeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessHomeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessHomeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessHomeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessHomeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessHomeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">押されたキー。</param>
        <summary>Home キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Home キーを押すと、本来はコントロールが編集モードに切り替わるところですが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessInsertKey">
      <MemberSignature Language="C#" Value="protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessInsertKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessInsertKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessInsertKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessInsertKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessInsertKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <summary>Ins キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs :  -&gt; bool" Usage="dataGridView.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>キー メッセージを処理し、適切なコントロール イベントを生成します。</summary>
        <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、次を参照してください。、<xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType>基底クラスのメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">キーを押すとコントロールが編集モードに切り替わる可能性がありますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすると、コントロールを返します<see langword="true" />をメッセージを処理したことを示します。 コントロールによって処理されなかったメッセージの場合は、このメソッドの基本バージョンの結果を返します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="dataGridView.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>キーボード メッセージをプレビューします。</summary>
        <returns>メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、次を参照してください。、<xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType>基底クラスのメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">キーを押すとコントロールが編集モードに切り替わる可能性がありますが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすると、コントロールを返します<see langword="true" />をメッセージを処理したことを示します。 コントロールによって処理されなかったメッセージの場合は、このメソッドの基本バージョンの結果を返します。</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessLeftKey">
      <MemberSignature Language="C#" Value="protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessLeftKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessLeftKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessLeftKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessLeftKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessLeftKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>←キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">本来なら左矢印キーによってコントロールが編集モードに切り替わるはずですが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessNextKey">
      <MemberSignature Language="C#" Value="protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessNextKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessNextKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessNextKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessNextKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessNextKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>PageDown キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">PageDown キーによってコントロールが編集モードに切り替わる可能性がありますが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessPriorKey">
      <MemberSignature Language="C#" Value="protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessPriorKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessPriorKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessPriorKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessPriorKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessPriorKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>PageUp キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">PageUp キーによってコントロールが編集モードに切り替わる可能性がありますが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRightKey">
      <MemberSignature Language="C#" Value="protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessRightKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessRightKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessRightKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessRightKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessRightKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>→キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、ENTER キーの動作を変更する方法を示します、<xref:System.Windows.Forms.DataGridView>サブクラスをオーバーライドすることで、<xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A>と<xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A>メソッド。 例では、ENTER キーは、1 行のデータの複数のセルを編集するユーザーに容易に、右矢印キーと同じ動作を持ちます。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">本来は右矢印キーによってコントロールが編集モードに切り替わるところですが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessSpaceKey">
      <MemberSignature Language="C#" Value="protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessSpaceKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessSpaceKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessSpaceKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessSpaceKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessSpaceKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
        <summary>Space キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessTabKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessTabKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessTabKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessTabKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>Tab キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">タブ キーによってコントロールが編集モードに切り替わる可能性がありますが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">すべての windows とユーザー イベントを使用します。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessUpKey">
      <MemberSignature Language="C#" Value="protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessUpKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessUpKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessUpKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessUpKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessUpKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>↑キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">上矢印キーによってコントロールが編集モードに切り替わる可能性がありますが、新しい現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示しません。</exception>
        <exception cref="T:System.Exception">この操作を行うと、本来はセル値がコミットされるか、または編集モードに切り替わるところですが、データ ソースのエラーのためにその操作は実行できず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがない状態か、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定している状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessZeroKey">
      <MemberSignature Language="C#" Value="protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessZeroKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessZeroKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessZeroKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessZeroKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessZeroKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値のビットごとの組み合わせ。</param>
        <summary>0 キーを処理します。</summary>
        <returns>キーが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">本来は 0 キーを押すとコントロールが編集モードに切り替わるところですが、現在のセルの <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは、<see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <exception cref="T:System.Exception">このアクションによって本来は編集モードに切り替わるところですが、データ ソースのエラーによってそのようにはならず、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、またはハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> コントロールのセルを編集できるかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> コントロールのセルを編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セルは読み取り専用場合の値、<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>プロパティは`true`セル、セルの行、セルの列、または<xref:System.Windows.Forms.DataGridView>します。  
  
   
  
## Examples  
 次のコード例では、このプロパティの使用を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティを設定したときに指定した値は <see langword="true" /> です。現在のセルは編集モードですが、現在のセルにコミットできない変更が含まれています。</exception>
        <exception cref="T:System.Exception">このプロパティの設定時に指定した値によってコントロールが編集モードに入りますが、編集セルの値の初期化は失敗し、<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントのハンドラーがないか、ハンドラーが <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> プロパティを <see langword="true" /> に設定しているかのいずれかの状態になります。 通常、例外オブジェクトは型 <see cref="T:System.FormatException" /> にキャストできます。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.ReadOnlyChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.ReadOnlyChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#274](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#274)]
 [!code-vb[System.Windows.Forms.EventExamples#274](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#274)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshEdit">
      <MemberSignature Language="C#" Value="public bool RefreshEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RefreshEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.RefreshEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshEdit();" />
      <MemberSignature Language="F#" Value="member this.RefreshEdit : unit -&gt; bool" Usage="dataGridView.RefreshEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セルが編集モードのとき、現在のセルの値を基になるセルの値で更新して、以前の値をすべて破棄します。</summary>
        <returns>成功した場合は <see langword="true" />。<see cref="E:System.Windows.Forms.DataGridView.DataError" /> イベントが発生した場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 編集モードで表示された値を更新するためにセルを強制するには、このメソッドを呼び出します。 これは、機能は、外部プロセスがセルの値を変更し、ユーザーが指定した変更が結果として、失われた場合でも、変更をユーザーに通知するときに便利です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="dataGridView.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Text" /> プロパティを既定値 (<see cref="F:System.String.Empty" />) にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドのように、動作は、<xref:System.Windows.Forms.DataGridView.Text%2A>プロパティがこのコントロールに関連します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Text" />
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#338](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#338)]
 [!code-vb[System.Windows.Forms.EventExamples#338](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#338)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripNeeded As DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventHandler ^ RowContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " Usage="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行のショートカット メニューが必要な場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>のみイベントが発生したときに、<xref:System.Windows.Forms.DataGridView>コントロール<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティを設定またはその<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。 処理、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>イベントは、行の現在の状態または含まれる値によって決定されたショートカット メニューを表示する場合に便利です。  
  
 処理するとき、 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 、イベント ハンドラーで指定したショートカット メニューが表示されるたびに、ユーザー行を右クリックしない限り、<xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded>がクリックされた特定のセルのショートカット メニューをオーバーライドします。  
  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>たびにイベントにも発生の値、<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType>プロパティが取得プログラムか、ユーザーが行を右クリックします。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType>行またはそれに含まれる値の状態を確認して、この情報を使用して、変更または変更するプロパティ、<xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType>プロパティ。 このプロパティは、行の値で初期化されます<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>プロパティで、イベント値より優先されます。  
  
 処理、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>大量のデータ行の設定のパフォーマンスの低下を回避するために使用する場合、イベント<xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A>複数行の値。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded>イベントを使用して、<xref:System.Windows.Forms.ContextMenuStrip>従業員の役職に基づいて。 この例ではマネージャーとその他のすべての従業員用の 2 つのショートカット メニューです。  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.DataGridView.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> に表示される行の数を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> に表示する行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Windows.Forms.DataGridView.RowCount%2A>設定の末尾から、行を削除する値が現在の値未満で、<xref:System.Windows.Forms.DataGridView.Rows%2A>コレクション。 場合<xref:System.Windows.Forms.DataGridView.RowCount%2A>設定の末尾に、行を追加する現在の値より大きい値を<xref:System.Windows.Forms.DataGridView.Rows%2A>コレクション。 指定された行に基づいて、追加の行、<xref:System.Windows.Forms.DataGridView.RowTemplate%2A>プロパティ。  
  
 設定した場合、<xref:System.Windows.Forms.DataGridView.RowCount%2A>プロパティを 0 に、すべての行はから削除されます、<xref:System.Windows.Forms.DataGridView>します。 これは、呼び出しに相当、<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType>メソッド。  
  
> [!NOTE]
>  場合<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>は`true`を設定することはできません<xref:System.Windows.Forms.DataGridView.RowCount%2A>を 0 にします。 この場合、呼び出し、<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType>新しいレコードの行を除くすべての行を削除する方法。 呼び出す<xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A>設定と同じ結果が<xref:System.Windows.Forms.DataGridView.RowCount%2A>をここでは 1 に、高速です。  
  
 <xref:System.Windows.Forms.DataGridView.RowCount%2A>プロパティで使用できます、<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>プロパティを単純な<xref:System.Windows.Forms.DataGridView>を表示すると、テキストを編集します。 設定した場合、<xref:System.Windows.Forms.DataGridView.RowCount%2A>プロパティの場合は 0 より大きい値を<xref:System.Windows.Forms.DataGridView>、列のないコントロールを<xref:System.Windows.Forms.DataGridViewTextBoxColumn>自動的に追加されます。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Windows.Forms.DataGridView.RowCount%2A>プロパティ。 この例でこのプロパティは、エントリの数を追跡するために使用されます、<xref:System.Windows.Forms.DataGridView>します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が 0 未満です。  
  
- または - 
指定された値が 1 未満で、<see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> が <see langword="true" /> に設定されています。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティを設定すると、<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティが設定されます。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDefaultCellStyleChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> プロパティの値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、いずれかが発生しますのプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>プロパティは、行が新しい値に設定されて、または、<xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A>を新しい行のプロパティが設定されて<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセルとは異なるスタイル オブジェクト。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#340](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#340)]
 [!code-vb[System.Windows.Forms.EventExamples#340](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#340)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDirtyStateNeeded As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ RowDirtyStateNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " Usage="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> プロパティが <see langword="true" /> で、<see cref="T:System.Windows.Forms.DataGridView" /> が現在の行にコミットされていない変更の有無を確認する必要がある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、このイベントの設定、<xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType>プロパティを`true`のどのセルの現在の行が変更された場合。 これにより、<xref:System.Windows.Forms.DataGridView.CancelRowEdit>イベントが発生する場合、ユーザーは、行の編集を元に戻します。 ユーザーは、セルが編集モードまたは編集モードの外部で 1 回と 2 回、esc キーを押して、行の編集を戻すことができます。 このイベントを設定して仮想モードでのコミットのスコープをカスタマイズするため使用できます、<xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType>プロパティを選択したコミットの範囲に応じて正しい値にします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、セル レベルのコミットの範囲、つまり、ユーザーが現在のセルのみに変更を戻すことができますを提供するには、このイベントを処理する方法を示します。 コミットされていない場合にのみが変更されると、セル レベルのコミットのスコープ内の行が扱われます、現在のセルにコミットされていない変更は、行の任意のセルがある場合ではなくコミットされていない変更します。 この例で使用できる例の一部は、[チュートリアル。仮想モードの実装で、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)します。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#160)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerDoubleClick As DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowDividerDoubleClickEventHandler ^ RowDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " Usage="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが、2 つの行の間の境界線をダブルクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを使用して、ユーザーが行の区分線をダブルクリックしたときに発生する自動サイズ変更動作をカスタマイズすることができます。  
  
 行<xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>プロパティは、ユーザーがダブルクリックできます領域に拡張されません。 区分線の高さがこのプロパティを使用して向上し、ユーザーは、区分線と隣接する列の間の境界をダブルクリックすると、このイベントが発生します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDividerHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 区分線の高さは設定によって変更された、<xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>プロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#343](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#343)]
 [!code-vb[System.Windows.Forms.EventExamples#343](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#343)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowEnter;" />
      <MemberSignature Language="F#" Value="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が入力フォーカスを受け取り、現在の行になる前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントが発生したときに、<xref:System.Windows.Forms.DataGridView>が最初に読み込まれると、ユーザーが現在の行以外の行を選択するとします。  
  
 このイベントが発生する前に、<xref:System.Windows.Forms.DataGridView.CurrentRow%2A>プロパティが更新されます。 新しく入力した行のインデックスを取得する、<xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType>イベント ハンドラー内のプロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を変更するには、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>現在の行のセルのプロパティ。 背景色を設定、この例では、<xref:System.Windows.Forms.DataGridView.RowEnter>にリセットし、イベント<xref:System.Drawing.Color.Empty>上、<xref:System.Windows.Forms.DataGridView.RowLeave>イベント。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`、すべてのイベントがイベント ハンドラーに関連付けられていることを確認してください。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の <see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowErrorTextChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowErrorTextChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#345](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#345)]
 [!code-vb[System.Windows.Forms.EventExamples#345](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#345)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextNeeded As DataGridViewRowErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowErrorTextNeededEventHandler ^ RowErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " Usage="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行のエラー テキストが必要な場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>のみイベントが発生したときに、<xref:System.Windows.Forms.DataGridView.DataSource%2A>のプロパティ、<xref:System.Windows.Forms.DataGridView>コントロールを設定またはその<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。 処理、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベントは、その状態とが含まれている値に応じて、行のエラーを確認する場合に便利です。  
  
 処理するとき、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント指定エラー テキスト ハンドラーで、行ヘッダーでエラー グリフが表示されます。 しない限り、<xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A>プロパティに設定されて`false`します。 エラー グリフ上、マウス ポインターを移動すると、エラー テキストがツールヒントに表示されます。  
  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>たびにイベントにも発生の値、<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType>プロパティを取得します。  
  
 使用することができます、<xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType>行またはそれに含まれる値の状態を確認して、この情報を使用して、変更または変更するプロパティ、<xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType>プロパティ。 このプロパティは、行の値で初期化されます<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>プロパティで、イベント値より優先されます。  
  
 処理、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>大量のデータ行の設定のパフォーマンスの低下を回避するために使用する場合、イベント<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>複数行の値。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#346](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#346)]
 [!code-vb[System.Windows.Forms.EventExamples#346](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#346)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderCellChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが、行ヘッダー セルの内容を変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#349](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#349)]
 [!code-vb[System.Windows.Forms.EventExamples#349](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#349)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーの境界線内で、ユーザーがクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーがダブルクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#348](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#348)]
 [!code-vb[System.Windows.Forms.EventExamples#348](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#348)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle RowHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダー セルの境界線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>プロパティが以外の値に設定されて<xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>、<xref:System.Windows.Forms.DataGridView.GridColor%2A>プロパティは、システム カラーである必要があります。  
  
 このプロパティを設定することはできません、 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> 、これは読み取り専用の値を示す値を使用すると、罫線のスタイルがカスタマイズされていること、<xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A>プロパティ。  
  
> [!NOTE]
>  経由でアプリケーションの visual スタイルが有効になっている場合、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>メソッドと<xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A>プロパティは`true`、行ヘッダーは、現在のテーマを使用して描画されます。 この例では、値で、<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A>行ヘッダーを除くのすべてのプロパティは無視されます、<xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>テーマがない適用します。  
  
   
  
## Examples  
 次のコード例は、このプロパティの使用を示しています。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#030)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#030)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentException">このプロパティの設定時に指定された値が <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" /> です。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyleChanged : EventHandler " Usage="member this.RowHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#275](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#275)]
 [!code-vb[System.Windows.Forms.EventExamples#275](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダー セルに適用される既定のスタイルを取得または設定します。</summary>
        <value>行ヘッダー セルに適用される既定のスタイルを表す <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の<xref:System.Windows.Forms.DataGridViewCellStyle>これによって返されるプロパティは、次のプロパティの初期値。  
  
|DataGridViewCellStyle プロパティ|既定値|  
|------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> プロパティの値。|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 これらの値が自動的に値を使用して設定をオーバーライド、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>プロパティ。 継承するように行ヘッダーを強制的に、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>値で、値を設定する必要があります、<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>オブジェクトを既定値に示されている、<xref:System.Windows.Forms.DataGridViewCellStyle>クラス。  
  
 セル スタイルの継承の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用する方法を示しています、<xref:System.Windows.Forms.DataGridView>にカスタムの色。 注方法、<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType>プロパティに設定されて<xref:System.Drawing.Color.Empty?displayProperty=nameWithType>から値を継承できるように、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>オブジェクト。  
  
 この例で示されている例の一部は、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.RowHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの発生時のプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>プロパティが新しい値に設定または、<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>を新しいプロパティを設定<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#276](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#276)]
 [!code-vb[System.Windows.Forms.EventExamples#276](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#276)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーを格納している列が表示されるかどうかを示す値を取得または設定します。</summary>
        <value>行ヘッダーを格納している列が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>プロパティは`false`、行が<xref:System.Windows.Forms.DataGridViewBand.Resizable%2A>プロパティに設定されて`true`でもサイズを変更できるユーザー インターフェイス (UI) にマウス カーソルのサイズを変更する行の下境界線の任意の箇所をクリックしています。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値は <see langword="false" /> であり、<see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /> プロパティは <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> または <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> に設定されています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidth">
      <MemberSignature Language="C#" Value="public int RowHeadersWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeadersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeadersWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidth : int with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーを含む列の幅をピクセル単位で取得または設定します。</summary>
        <value>行ヘッダーを含む列の幅 (ピクセル単位)。 既定値は 43 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>幅を指定する行ヘッダー列のサイズを変更するプロパティを使用できます。 行ヘッダー セルの内容に合わせてこの列の幅を調整するのには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>メソッド。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示しています、<xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>プロパティ シナリオで行を描画します。 例では、このプロパティの値はカスタムの背景を描画する境界を計算するために使用します。  
  
 このコード例で使用できるの[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティを設定するときに指定された値が、最小幅 4 ピクセルより小さいか、最大幅 32768 ピクセルよりも大きくなっています。</exception>
        <altmember cref="Overload:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthChanged : EventHandler " Usage="member this.RowHeadersWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#277](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#277)]
 [!code-vb[System.Windows.Forms.EventExamples#277](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#277)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode get(); void set(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeMode : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーの幅が調整可能かどうか、およびヘッダーの内容に合わせて、ユーザーによってまたは自動的に調整できるかどうかを示す値を取得または設定します。</summary>
        <value>行ヘッダーの幅を調整できるモードを示す <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値。 既定値は <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが、自動サイズ変更モードに設定されている場合は、ユーザーが行ヘッダーの幅を調整できません。  
  
 行ヘッダーの高さをプログラムで調整するには、使用、<xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A>メソッドまたはセット、<xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A>プロパティ。  
  
 列ヘッダーのサイズ変更モードを設定するには、使用、<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>プロパティ。  
  
 ヘッダーのサイズ変更の詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのサイズ変更オプション](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)します。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView>コントロールはダブル バッファリングをサポートしていません。 場合<xref:System.Windows.Forms.Control.DoubleBuffered%2A>に設定されている`true`で派生<xref:System.Windows.Forms.DataGridView>コントロール、行、列、またはヘッダーのサイズを変更するとき、または列の並べ替えは、ユーザーに視覚的なフィードバックは受信しません。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用する方法を示しています、<xref:System.Windows.Forms.DataGridView>主に表示を目的とします。 この例では、いくつかの方法でカスタマイズされたコントロールの視覚的な外観と対話機能を制限、制御が構成されています。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 値ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#278](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#278)]
 [!code-vb[System.Windows.Forms.EventExamples#278](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の <see cref="P:System.Windows.Forms.DataGridViewRow.Height" /> プロパティの値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントの使用方法を示しています。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoNeeded As DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoNeededEventHandler ^ RowHeightInfoNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " Usage="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の高さについての情報が要求された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、並べ替え操作の後のカスタムの行の高さを保持するために便利です。 これは、機能は、並べ替え操作は通常はいないの追跡データの行と、コントロールの行の対応するデータ ソースによって処理されるため、必要です。 このイベントにのみ発生するときに、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが設定されている場合や、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`。 後者の場合は、独自のデータ ストアと並べ替え操作を提供します。 処理、<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>行の高さを変更したときに、更新された高さ情報を格納するイベントです。 使用<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>コントロールが必要になったときに保存された高さ情報を取得します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#351](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#351)]
 [!code-vb[System.Windows.Forms.EventExamples#351](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#351)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoPushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoPushed As DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoPushedEventHandler ^ RowHeightInfoPushed;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " Usage="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが行の高さを変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントが発生したときに、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティに設定されて`true`または<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが以外の値に設定されて`null`します。 このイベントは、追跡および並べ替え操作の後、復元できるように、行の高さ情報を格納に使用されます。 高さ情報を復元するには、処理、<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>イベント。 このイベントは、ユーザーが行の高さに変更されたときにのみ発生に注意してください。 行の高さをプログラムで変更する場合は、同時に新しい高さ情報を格納する必要があります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#352](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#352)]
 [!code-vb[System.Windows.Forms.EventExamples#352](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#352)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowLeave;" />
      <MemberSignature Language="F#" Value="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が入力フォーカスを失くし、現在の行でなくなったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例を変更するには、このイベントを処理する方法を示しています、<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>現在の行のセルのプロパティ。 背景色を設定、この例では、<xref:System.Windows.Forms.DataGridView.RowEnter>にリセットし、イベント<xref:System.Drawing.Color.Empty>上、<xref:System.Windows.Forms.DataGridView.RowLeave>イベント。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`をすべてのイベントがイベント ハンドラーに関連付けられていることを確認してください。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowMinimumHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowMinimumHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の <see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /> プロパティの値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#354](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#354)]
 [!code-vb[System.Windows.Forms.EventExamples#354](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#354)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPostPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPostPaint As DataGridViewRowPostPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPostPaintEventHandler ^ RowPostPaint;" />
      <MemberSignature Language="F#" Value="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " Usage="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPostPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow" /> が塗りつぶされた後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを処理するには、単独または組み合わせて、<xref:System.Windows.Forms.DataGridView.RowPrePaint>コントロール内の行の外観をカスタマイズするイベントです。 自分自身、または行の特定の部分を描画、行全体を描画しての次のメソッドを使用することができます、<xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs>他の部分を描画するクラス。  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader%2A>  
  
 使用することも、<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>クラスを現在のテーマを使用して標準のコントロールを描画します。 詳細については、次を参照してください。 [Visual スタイルを使用しているコントロールのレンダリング](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)します。 使用する場合[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]で使用できる標準のイメージの大規模なライブラリにもアクセス権がある、<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、のハンドラーを使用する方法を示します、<xref:System.Windows.Forms.DataGridView.RowPostPaint>通常セル値の下の行全体にまたがるテキスト コンテンツを描画するイベントです。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPrePaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPrePaint As DataGridViewRowPrePaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPrePaintEventHandler ^ RowPrePaint;" />
      <MemberSignature Language="F#" Value="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " Usage="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPrePaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow" /> が塗りつぶされる前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを処理するには、単独または組み合わせて、<xref:System.Windows.Forms.DataGridView.RowPostPaint>コントロール内の行の外観をカスタマイズするイベントです。 自分自身、または行の特定の部分を描画、行全体を描画しての次のメソッドを使用することができます、<xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs>他の部分を描画するクラス。  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintHeader%2A>  
  
 使用することも、<xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>クラスを現在のテーマを使用して標準のコントロールを描画します。 詳細については、次を参照してください。 [Visual スタイルを使用しているコントロールのレンダリング](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)します。 使用する場合[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]で使用できる標準のイメージの大規模なライブラリにもアクセス権がある、<xref:System.Windows.Forms.DataGridView>コントロール。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、のハンドラーを使用する方法を示します、<xref:System.Windows.Forms.DataGridView.RowPrePaint>行が選択されている場合は、グラデーションの行の背景を描画するイベントです。 この例で使用できる例の一部は、[方法。Windows フォームの DataGridView コントロール内の行の外観をカスタマイズ](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowCollection ^ Rows { System::Windows::Forms::DataGridViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Windows.Forms.DataGridViewRowCollection" Usage="System.Windows.Forms.DataGridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールのすべての行を格納しているコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> 内のすべての行を格納している <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Windows.Forms.DataGridView.Rows%2A>を手動で読み込むコレクション、<xref:System.Windows.Forms.DataGridView>データ ソースにバインドするのではなくコントロール。 次の例では、手動で追加し、行を挿入する方法を示します。 この例では、4 つが追加されて<xref:System.Windows.Forms.DataGridViewTextBoxColumn>をコントロールのインスタンス<xref:System.Windows.Forms.DataGridView.Columns%2A>コレクション。  
  
```vb  
Me.dataGridView1.Rows.Add("five", "six", "seven", "eight")  
Me.dataGridView1.Rows.Insert(0, "one", "two", "three", "four")  
```  
  
```csharp  
this.dataGridView1.Rows.Add("five", "six", "seven", "eight");this.dataGridView1.Rows.Insert(0, "one", "two", "three", "four");  
```  
  
 プログラムで、バインドされていないメンバーを追加する詳細な例について<xref:System.Windows.Forms.DataGridView>コントロールを例を参照してください。  
  
 行には、セルの値だけでなく、スタイル情報が含まれます。 このため、追加、または既にスタイルを設定する既存の行に基づく行を挿入する可能性があります。 これを行うを使用して、 <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A>、 <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A>、 <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A>、および<xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A>メソッド。  
  
 使用することも、<xref:System.Windows.Forms.DataGridView.Rows%2A>コントロールの値を変更または行を削除するコレクション。 値を変更したり、外部データ ソースにコントロールをバインドするかどうかに関係なく、行を削除できます。 データ ソースがある場合は、データ ソースへの直接変更されます。 引き続き、ただし、リモートのデータベースにデータ ソースの更新をプッシュする必要があります。 詳細については、「[方法 :バインド データを Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)します。  
  
 次の例では、セルの値をプログラムで変更する方法を示します。  
  
```vb  
' Modify the value in the first cell of the second row.  
Me.dataGridView1.Rows[1].Cells[0].Value = "new value"  
  
' The previous line is equivalent to the following line.  
Me.dataGridView1[0, 1].Value = "new value"  
```  
  
```csharp  
// Modify the value in the first cell of the second row.  
this.dataGridView1.Rows[1].Cells[0].Value = "new value";  
  
// The previous line is equivalent to the following line.  
this.dataGridView1[0, 1].Value = "new value";  
```  
  
 使用することができます、標準的なコレクションの機能に加えて、<xref:System.Windows.Forms.DataGridView.Rows%2A>行に関する情報を取得するコレクション。 使用して、<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A>メソッドの特定の行の状態を判断します。 使用して、<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A>と<xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A>行の数または特定の状態の行の高さの合計を判断するメソッド。 特定の状態を持つ行のインデックスを取得する、 <xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A>、 <xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A>、 <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A>、および<xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A>メソッド。  
  
 次の例では、最初の選択した行のインデックスを取得し、それを使用して、プログラムによって、行を削除する方法を示します。  
  
```vb  
Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _  
    DataGridViewElementStates.Selected)  
If rowToDelete > -1 Then  
    Me.dataGridView1.Rows.RemoveAt(rowToDelete)  
End If  
```  
  
```csharp  
Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(  
    DataGridViewElementStates.Selected);  
if (rowToDelete > -1)  
{  
    this.dataGridView1.Rows.RemoveAt(rowToDelete);  
}  
```  
  
 パフォーマンスを向上させる、<xref:System.Windows.Forms.DataGridViewRowCollection>によって返される、<xref:System.Windows.Forms.DataGridView.Rows%2A>プロパティは、共有と共有されていない行を含めることができます。 共有行では、大量のレコード セットのコストを削減するためのメモリを共有します。 レコード セットが非常に大きい場合にアクセスするとき、行の共有を可能な限り保持する注意が必要、<xref:System.Windows.Forms.DataGridView.Rows%2A>プロパティ。  
  
 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、非バインドを作成する方法を示します<xref:System.Windows.Forms.DataGridView>; 設定、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、および<xref:System.Windows.Forms.DataGridView.ColumnCount%2A>プロパティ、使用、<xref:System.Windows.Forms.DataGridView.Rows%2A>と<xref:System.Windows.Forms.DataGridView.Columns%2A>プロパティ。 バージョンを使用する方法も示します、<xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A>と<xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A>列ヘッダーと行のサイズを適切にメソッド。 この例を実行するを含むフォームに次のコードを貼り付け、<xref:System.Windows.Forms.DataGridView>という名前`dataGridView1`という名前のボタンと`Button1`を呼び出して、`InitializeDataGridView`フォームのコンス トラクターからメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに接続されていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsAdded As DataGridViewRowsAddedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsAddedEventHandler ^ RowsAdded;" />
      <MemberSignature Language="F#" Value="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " Usage="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsAddedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しい行が <see cref="T:System.Windows.Forms.DataGridView" /> に追加された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しい行が追加されたときに、コントロール内の行は自動的に並べ替えられません。 正しい位置に新しい行を並べ替えを呼び出して、<xref:System.Windows.Forms.DataGridView.Sort%2A>メソッドで、<xref:System.Windows.Forms.DataGridView.RowsAdded>イベント ハンドラー。  
  
 ユーザーは、新しいレコードの行を使用して新しい行を追加するとき、<xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType>値ハンドラーでこのイベントは、新しいレコードの行の新しい位置のインデックスと等しく、1 つだけ追加行より大きいです。 行を追加するプログラムで、ただし、ときに、<xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A>値が追加された最初の行のインデックス。  
  
 仮想モードでこのイベントが発生する前に、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベントで設定することができますし、データ ストアに新しいレコードを作成するために使用して、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベント ハンドラー。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例のハンドル、<xref:System.Windows.Forms.DataGridView.RowsAdded>仮想内の行の数をインクリメントするイベント<xref:System.Windows.Forms.DataGridView>します。 行の数がで使用される、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>ハンドラーの新しい行を初期化されたセルと空白のセルを表示するタイミングを認識できるようにします。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>リファレンス トピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の行セルに適用される既定のスタイルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の行セルに適用される <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールには、セルのスタイルを使用してそのセルが表示されます。<xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A>プロパティで、型の他のプロパティからスタイルを継承<xref:System.Windows.Forms.DataGridViewCellStyle>します。 すべての行のセルにヘッダーを除くセルで指定されたスタイル、<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>プロパティで指定されたスタイルをオーバーライドする、<xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ、および、で指定されたスタイルによってオーバーライドされます<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>プロパティ。  
  
 詳細については、次を参照してください。 [Windows フォームの DataGridView コントロールのセル スタイル](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)します。  
  
 このプロパティを取得するときに、<xref:System.Windows.Forms.DataGridViewCellStyle>既定値は、プロパティは既にアクセスされていない場合の値が作成されます。 これが原因で、複数の行のこのプロパティを取得するときに、パフォーマンスに影響します。 可能であれば、1 つを使用して、<xref:System.Windows.Forms.DataGridViewCellStyle>の複数の行には、このプロパティを設定します。 詳細については、次を参照してください。 [Windows フォーム DataGridView コントロールを拡張するためのベスト プラクティス](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)します。  
  
   
  
## Examples  
 次のコード例は、このプロパティを使用して、台帳効果を作成する方法を示しています、<xref:System.Windows.Forms.DataGridView>コントロール。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewCellStyle>クラスの概要。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyleChanged : EventHandler " Usage="member this.RowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの発生時のプロパティ、<xref:System.Windows.Forms.DataGridViewCellStyle>によって返される、<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>プロパティが新しい値に設定または、<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>を新しいプロパティを設定<xref:System.Windows.Forms.DataGridViewCellStyle>に少なくとも 1 つのプロパティの値が前のセル スタイル オブジェクトと異なる。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#279](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#279)]
 [!code-vb[System.Windows.Forms.EventExamples#279](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#279)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows フォーム DataGridView コントロールでのセルのスタイル</related>
      </Docs>
    </Member>
    <Member MemberName="RowsRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsRemoved As DataGridViewRowsRemovedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsRemovedEventHandler ^ RowsRemoved;" />
      <MemberSignature Language="F#" Value="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " Usage="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsRemovedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が <see cref="T:System.Windows.Forms.DataGridView" /> から削除されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行が削除されたとき、<xref:System.Windows.Forms.DataGridView>コントロール、後続の行のインデックス番号を補正するために削減します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、このイベントを使用して、分散列の値を更新する方法を示します、<xref:System.Windows.Forms.DataGridView>します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowStateChanged As DataGridViewRowStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowStateChangedEventHandler ^ RowStateChanged;" />
      <MemberSignature Language="F#" Value="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " Usage="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が、フォーカスを取得したり失ったりなど、状態を変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowStateChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowStateChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#359](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#359)]
 [!code-vb[System.Windows.Forms.EventExamples#359](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#359)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow RowTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property RowTemplate As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ RowTemplate { System::Windows::Forms::DataGridViewRow ^ get(); void set(System::Windows::Forms::DataGridViewRow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowTemplate : System.Windows.Forms.DataGridViewRow with get, set" Usage="System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール内のすべての行のテンプレートを表す行を取得または設定します。</summary>
        <value>行テンプレートを表す <see cref="T:System.Windows.Forms.DataGridViewRow" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外観をより細かく制御したい場合があります<xref:System.Windows.Forms.DataGridView>さまざまなによって提供されているものよりも行<xref:System.Windows.Forms.DataGridView>セルのスタイル プロパティ。 <xref:System.Windows.Forms.DataGridView.RowTemplate%2A>プロパティでは、作成し、初期化することができます、<xref:System.Windows.Forms.DataGridViewRow>によってすべての行をテンプレートとして使用しての場合に新しいレコードの行を含む<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>は`true`します。  
  
 これは、行の高さなどのプロパティの既定値を設定するときに便利です。 たとえば、複数の列にまたがるコンテンツを表示するための通常のセルの内容の下に追加の領域を提供するために既定行の高さを大きくしたい場合があります。  
  
 行テンプレートを設定する必要がありますから派生したカスタムの型を使用して、外部データが表示されるときに、<xref:System.Windows.Forms.DataGridViewRow>クラス。 バインドされていない<xref:System.Windows.Forms.DataGridView>コントロールをプログラムで設定できる、<xref:System.Windows.Forms.DataGridView.Rows%2A>カスタム行型のインスタンスのコレクション。 外部データを表示するには、ただし、行が自動的に生成します、は、行のテンプレートでは、カスタム行型のインスタンスに設定することができますに基づいています。  
  
 最初に、その値を取得するにはこのプロパティに設定されていない場合、新しい<xref:System.Windows.Forms.DataGridViewRow>が作成され、返されます。  
  
   
  
## Examples  
 次のコード例は、行のテンプレートを使用して、最初の行の高さと最小の行の高さを指定する方法を示しています。  
  
 [!code-cpp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CPP/datagridviewrowtemplate.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CS/datagridviewrowtemplate.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/VB/datagridviewrowtemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定された行には、<see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> プロパティが設定されています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowUnshared">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowUnshared" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowUnshared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUnshared As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowUnshared;" />
      <MemberSignature Language="F#" Value="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の状態が、共有から非共有に変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 開発およびテスト中にこのイベントを使用するには、共有から非共有の状態に変更する行を原因となるコードを識別できるようにします。 これは、機能は、大量のデータを表示するコントロールをスケーリングするときに便利です。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.RowUnshared>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.RowUnshared>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#360](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#360)]
 [!code-vb[System.Windows.Forms.EventExamples#360](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#360)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowValidated;" />
      <MemberSignature Language="F#" Value="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の検証が終了した後で発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、<xref:System.Windows.Forms.Control.Validated>イベント。 このイベントを使用すると、値の行の後の処理を実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード サンプルでは、このイベントを使用して、エラー注釈が残っている行の検証後にクリアします。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidating As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ RowValidating;" />
      <MemberSignature Language="F#" Value="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の検証中に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、<xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>イベント。 このイベントを使用して、行のすべての値に対して検証を実行します。 行が検証に合格しなかった場合は、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType>プロパティを`true`します。 このイベントをキャンセルできないように、 <xref:System.Windows.Forms.DataGridView.RowValidated>、 <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>、および<xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType>イベントが発生しているからとも、ユーザーが無効な行から移動できないようにし、行がデータ バインド モードで外部データ ソースに保存されていることを防ぎます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では<xref:System.Windows.Forms.DataGridView.RowValidating>追跡が有効とリリース日が入力したかどうかにチェックします。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ScrollEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ScrollEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As ScrollEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ScrollEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.ScrollEventHandler " Usage="member this.Scroll : System.Windows.Forms.ScrollEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロールの内容をスクロールすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.Scroll>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.Scroll>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#363](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#363)]
 [!code-vb[System.Windows.Forms.EventExamples#363](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#363)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールに表示するスクロール バーの種類を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.ScrollBars" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Forms.ScrollBars.Both" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値に関係なく、必要な場合にのみスクロール バーが表示されます。 スクロール バーが表示されないようにするのにには、このプロパティを使用します。 これはスクロールの代替のユーザー インターフェイス (UI) を提供したい場合などに便利です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.ScrollBars" /> 値ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">コミットまたは取り消しできないセルの変更によって <see cref="T:System.Windows.Forms.DataGridView" /> がスクロールできないため、このプロパティの値を設定できません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="dataGridView.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 内のすべてのセルを選択します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridView>は列の選択モードでこのメソッドが呼び出されると、各列の<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>プロパティに設定されて`true`、およびすべての行の<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>プロパティに設定されて`false`します。  
  
 逆に、<xref:System.Windows.Forms.DataGridView>は行選択モードでこのメソッドが呼び出されると、各行の<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>プロパティに設定されて`true`、および各列の<xref:System.Windows.Forms.DataGridViewBand.Selected%2A>プロパティに設定されて`false`します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Windows.Forms.DataGridView.SelectAll%2A>メソッド。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という名前の`dataGridView1`と<xref:System.Windows.Forms.Button>という名前`selectAllButton`、すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#180)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedCells As DataGridViewSelectedCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedCellCollection ^ SelectedCells { System::Windows::Forms::DataGridViewSelectedCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCells : System.Windows.Forms.DataGridViewSelectedCellCollection" Usage="System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択したセルのコレクションを取得します。</summary>
        <value>ユーザーが選択したセルを表す <see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>プロパティに関係なく常に設定されて、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値。  
  
 このプロパティには、参照されている時に選択範囲の読み取り専用スナップショットが含まれています。 このコレクションのコピーを保持する場合とは異なって実際、後続<xref:System.Windows.Forms.DataGridView>状態で、ユーザーが選択を変更しました。 そのため、コレクションのコピーでは動作しません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SelectedCells%2A>選択範囲の値の合計を検索するコレクション。 例では、このコレクションを反復処理され、有効な値がラベルに表示されると、合計に追加されます。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedColumns As DataGridViewSelectedColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedColumnCollection ^ SelectedColumns { System::Windows::Forms::DataGridViewSelectedColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedColumns : System.Windows.Forms.DataGridViewSelectedColumnCollection" Usage="System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した列のコレクションを取得します。</summary>
        <value>ユーザーが選択した列を表す <see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>にプロパティを設定する必要があります<xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>または<xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType>の<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>が設定されるプロパティには、列が選択されています。  
  
 このプロパティには、参照されている時に選択範囲の読み取り専用スナップショットが含まれています。 このコレクションのコピーを保持する場合とは異なって実際、後続<xref:System.Windows.Forms.DataGridView>状態で、ユーザーが選択を変更しました。 そのため、コレクションのコピーでは動作しません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SelectedColumns%2A>プログラムによる並べ替えで、選択した列を取得するプロパティ。 この例ではこのプロパティで使用されます、<xref:System.Windows.Forms.DataGridView.Sort%2A>並べ替えの方向を判断するメソッド。  
  
 [!code-csharp[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedRows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRows As DataGridViewSelectedRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedRowCollection ^ SelectedRows { System::Windows::Forms::DataGridViewSelectedRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRows : System.Windows.Forms.DataGridViewSelectedRowCollection" Usage="System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した行のコレクションを取得します。</summary>
        <value>ユーザーが選択した行を格納している <see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>にプロパティを設定する必要があります<xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect>または<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>の<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>が設定されるプロパティには、行が選択されています。  
  
 このプロパティには、参照されている時に選択範囲の読み取り専用スナップショットが含まれています。 このコレクションのコピーを保持する場合とは異なって実際、後続<xref:System.Windows.Forms.DataGridView>状態で、ユーザーが選択を変更しました。 ためは使用しないでください、コレクションのコピー。  
  
 行をプログラムで選択するには、次のように設定します。 その<xref:System.Windows.Forms.DataGridViewRow.Selected%2A>プロパティを`true`します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>プロパティ、<xref:System.Windows.Forms.DataGridView.UserDeletingRow>イベント。 最初の行が含まれている場合、この例では、<xref:System.Windows.Forms.DataGridView.SelectedRows%2A>コレクションし、削除が取り消されました。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の選択が変更したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、セルが選択されているまたはプログラムから、またはユーザーの操作であるかどうか、選択が取り消されたときに発生します。 たとえば、現在選択されているセルの合計を表示する場合は、このイベントは便利です。  
  
 値を変更すると、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティ、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベントが発生する前に、<xref:System.Windows.Forms.DataGridView.CurrentCellChanged>イベント。 すべて<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント ハンドラーへのアクセス、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティをこの時点では、前の値を取得します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このイベントの使用方法を示します。 例では、フォームは、選択したセルの値の合計を表示し、選択が変更されたときに、合計を更新します。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#00)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As DataGridViewSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectionMode SelectionMode { System::Windows::Forms::DataGridViewSelectionMode get(); void set(System::Windows::Forms::DataGridViewSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.DataGridViewSelectionMode with get, set" Usage="System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> のセルを選択できるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 値のいずれか 1 つ。 既定値は <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値を変更する、<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティは、現在の選択を解除します。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>、 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>、 <xref:System.Windows.Forms.DataGridView.GridColor%2A>、 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>、 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>、 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>、 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>、および<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>プロパティ。 さらに、コード例に示しますを設定する方法、<xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType>と<xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>プロパティ。 この例を実行するには、フォームが含まれていますにコードを貼り付けます、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`を呼び出して、`SetUpDataGridView`フォームのコンス トラクターのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント ハンドラー。 すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">このプロパティの設定時に指定した値が、有効な <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 値ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">このプロパティ設定時に指定された値は <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> または <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" /> であり、1 つ以上の列の <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> プロパティは <see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" /> に設定されています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="dataGridView.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Left" /> プロパティ値。</param>
        <param name="y">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Top" /> プロパティ値。</param>
        <param name="width">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Width" /> プロパティ値。</param>
        <param name="height">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Height" /> プロパティ値。</param>
        <param name="specified"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 値のビットごとの組み合わせ。</param>
        <summary>このメンバーは <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> をオーバーライドします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">幅と高さのうちの一方または両方の値が、最大値 8,388,607 を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentCellAddressCore">
      <MemberSignature Language="C#" Value="protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetCurrentCellAddressCore(int32 columnIndex, int32 rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetCurrentCellAddressCore (columnIndex As Integer, rowIndex As Integer, setAnchorCellAddress As Boolean, validateCurrentCell As Boolean, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetCurrentCellAddressCore(int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool&#xA;override this.SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool" Usage="dataGridView.SetCurrentCellAddressCore (columnIndex, rowIndex, setAnchorCellAddress, validateCurrentCell, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="setAnchorCellAddress" Type="System.Boolean" />
        <Parameter Name="validateCurrentCell" Type="System.Boolean" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">セルを含む列のインデックス。</param>
        <param name="rowIndex">セルを含む行のインデックス。</param>
        <param name="setAnchorCellAddress">新たにアクティブになったセルを、Shift キーを使用して後続の複数セルを選択するためのアンカー セルにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="validateCurrentCell">古いセルの値を検証して、検証が失敗したら変更をキャンセルする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="throughMouseClick">現在のセルがマウス クリックの結果として設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在アクティブなセルを設定します。</summary>
        <returns>現在のセルが正常に設定された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールが現在のセルを変更するたびに、このメソッドを使用します。 このメソッドは、選択を変更して必要に応じて前のセルを検証または選択範囲のアンカー セルに変更することがなく、現在のセルを変更します。 アンカー セルには、SHIFT キーを押したまま、ブロックの最後のセルをクリックすると、ユーザーが選択できる複数のセルのブロックの最初のセルです。  
  
 場合`rowIndex`と`columnIndex`両方-1 の場合は、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティが返す`null`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 未満か、コントロール内の列数から 1 を引いた値を超えており、<paramref name="rowIndex" /> が -1 ではありません。  
  
- または - 
 <paramref name="rowIndex" /> が、0 未満か、コントロール内の行数から 1 を引いた値を超えており、<paramref name="columnIndex" /> が -1 ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">指定されたセルに <see langword="false" /> の <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> プロパティ値があります。  
  
- または - 
このメソッドは基になるデータ ソースのリセット以外の理由で呼び出され、現在は別のスレッドがこのメソッドを実行しています。</exception>
        <exception cref="T:System.InvalidCastException">新しい現在のセルは編集モードに入ろうとしましたが、その <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> プロパティは <see cref="T:System.Windows.Forms.Control" /> から派生して <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> を実装するクラスを示していません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedCellCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedCellCore(int32 columnIndex, int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedCellCore (columnIndex As Integer, rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedCellCore(int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedCellCore : int * int * bool -&gt; unit&#xA;override this.SetSelectedCellCore : int * int * bool -&gt; unit" Usage="dataGridView.SetSelectedCellCore (columnIndex, rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">セルを含む列のインデックス。</param>
        <param name="rowIndex">セルを含む行のインデックス。</param>
        <param name="selected">セルを選択する場合は <see langword="true" />。セルの選択を解除する場合は <see langword="false" />。</param>
        <summary>指定された行インデックスおよび列インデックスを持つセルの選択状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールがセルの選択状態を変更するたびに、このメソッドを使用します。 現在に関係なく、選択状態が変化<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値を変更せず、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティの値。 これは、独自の選択モードを実装する場合に便利です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
 <paramref name="rowIndex" /> が、0 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedColumnCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedColumnCore(int32 columnIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedColumnCore (columnIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedColumnCore(int columnIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedColumnCore : int * bool -&gt; unit&#xA;override this.SetSelectedColumnCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedColumnCore (columnIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">列のインデックス番号。</param>
        <param name="selected">列を選択する場合は <see langword="true" />。列の選択を解除する場合は <see langword="false" />。</param>
        <summary>指定されたインデックスを持つ列の選択状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>列の選択状態を変更するたびに、コントロールがこのメソッドを使用します。 現在に関係なく、選択状態が変化<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値を変更せず、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティの値。 これは、独自の選択モードを実装する場合に便利です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、0 未満か、コントロール内の列数から 1 を引いた値を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRowCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedRowCore (int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedRowCore(int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedRowCore (rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedRowCore(int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRowCore : int * bool -&gt; unit&#xA;override this.SetSelectedRowCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedRowCore (rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">行のインデックス。</param>
        <param name="selected">行を選択する場合は <see langword="true" />。行の選択を解除する場合は <see langword="false" />。</param>
        <summary>指定されたインデックスを持つ行の選択状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView>コントロールが行の選択状態を変更するたびに、このメソッドを使用します。 現在に関係なく、選択状態が変化<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>プロパティの値を変更せず、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティの値。 これは、独自の選択モードを実装する場合に便利です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellErrors">
      <MemberSignature Language="C#" Value="public bool ShowCellErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル エラーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>検証に失敗したセルに赤いグリフが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellToolTips">
      <MemberSignature Language="C#" Value="public bool ShowCellToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellToolTips : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターをセルの上に置いたときにツールヒントを表示するかどうかを示す値を取得または設定します。</summary>
        <value>セルのツールヒントが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値が`true`とセルの上にマウス ポインターが、セルは、次の条件のいずれかが満たされたときにツールヒントを表示します。  
  
-   値、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティは`null`の値は、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティは`true`、ハンドラーと、<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>イベントのセット、<xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType>プロパティ以外の値を<xref:System.String.Empty?displayProperty=nameWithType>します。  
  
-   <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>セルのプロパティ以外の値を持つ<xref:System.String.Empty?displayProperty=nameWithType>します。 このプロパティの設定も何も起こりませんがある場合に、<xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded>イベント ハンドラー プロパティの値を自動的に取得するため、イベントを発生させるし、イベント ハンドラーに指定されたツールヒント テキストを返します。  
  
-   セルの値は、セルの表示で切り捨てられます。 ときに、セルの値<xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A>プロパティの値が<xref:System.String.Empty?displayProperty=nameWithType>、切り捨てられたセル値の完全な値がツールヒントに表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowEditingIcon">
      <MemberSignature Language="C#" Value="public bool ShowEditingIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEditingIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEditingIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEditingIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEditingIcon : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集中のグリフが、編集されているセルの行ヘッダーに表示されるかどうかを示す値を取得または設定します。</summary>
        <value>編集中のグリフを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行ヘッダーは、現在のセルが編集モードと、ユーザーがセルに変更を行ったときに、鉛筆のような編集中のグリフに表示されます。 編集中のグリフの色を使用して、<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>行ヘッダー セルのプロパティ。 完全に表示するには、十分な領域がない場合は、グリフはレンダリングされません。 たとえば、次の行ヘッダー セルがあるその<xref:System.Windows.Forms.DataGridViewCell.Value%2A>テキストとグリフの両方に対して十分な空きがない場合、プロパティを設定する、グリフは削除されます。  
  
 編集中のグリフの表示がの値によって制御される、<xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A>仮想モードでのプロパティ。 それ以外の場合、によって制御されますが、<xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>プロパティ。  
  
 標準グリフが一般公開されていません。 グリフをカスタマイズするには、カスタムを作成することができます<xref:System.Windows.Forms.DataGridViewRowHeaderCell>クラス。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowRowErrors">
      <MemberSignature Language="C#" Value="public bool ShowRowErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRowErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRowErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRowErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRowErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ エントリ エラーを含む行ごとに行ヘッダーでエラー グリフを表示するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRow" /> がエラーがあることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>プロパティは行内のセルのいずれかでエラーがあるかどうかを示します。 場合<xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A>以外の値に設定されて<xref:System.String.Empty>、エラー グリフし (![ErrorProvider アイコン](~/add/media/vberrorprovidericon.gif "ErrorProvider アイコン")) 行ヘッダーに表示されます。  
  
 行ヘッダーの既定の幅には、グリフが表示されているかどうか、エラー グリフを表示する十分な空き領域が含まれています。 行ヘッダーのサイズが完全にグリフを表示するには、十分な領域がないように調整すると、グリフはレンダリングされません。  
  
 行ヘッダーはテキストとグリフの両方を表示できるため、ヘッダーの内容はとおりに優先度、表示します。  
  
1.  行ヘッダー セルに表示されるテキスト。  
  
2.  編集中のグリフ。  
  
3.  エラー グリフ。  
  
 たとえば、行の幅が低下している場合エラー グリフ消えて最初に、標準グリフをテキスト。  
  
 高度なユーザーがカスタムに開発することでエラー グリフをカスタマイズできる<xref:System.Windows.Forms.DataGridViewRowHeaderCell>または<xref:System.Windows.Forms.DataGridViewCell>クラス。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの内容を並べ替えます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="dataGridView.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">カスタム並べ替え操作を実行する <see cref="T:System.Collections.IComparer" /> の実装。</param>
        <summary><see cref="T:System.Collections.IComparer" /> インターフェイスの実装を使用して、<see cref="T:System.Windows.Forms.DataGridView" /> コントロールの内容を並べ替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでの並べ替え機能の高度なカスタマイズ、<xref:System.Windows.Forms.DataGridView>クラス。 イベント ハンドラーを記述する度にカスタマイズされた並べ替え操作を実装するために、<xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick>イベントを実装するクラスのインスタンスでは、このメソッドを呼び出すと、<xref:System.Collections.IComparer?displayProperty=nameWithType>インターフェイスをパラメーターとして。 設定通常ここで、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType>プロパティを<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>自動並べ替えを無効にして、並べ替えグリフ用に余地を残します。 プログラムによる並べ替えモードに設定された列を並べ替えるときにする必要があります、並べ替えグリフ自分で設定して表示する、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>プロパティ。  
  
 この方法は場合にのみ、機能、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティは設定されません。 バインドすると、<xref:System.Windows.Forms.DataGridView>コントロール、外部データ ソースには、そのデータ ソースによって提供される並べ替え操作を使用する必要があります。 仮想モードを実装して、独自のデータ ソースを提供するときに行う必要がありますも並べ替え操作自分でします。  
  
 自動的にセットでこのメソッドを呼び出す、<xref:System.Windows.Forms.DataGridView.CurrentCell%2A>プロパティを`null`します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.Sort%2A>複数列並べ替えシナリオでは、メソッドのオーバー ロードします。 この例で、<xref:System.Collections.IComparer>でインターフェイスを実装、`RowComparer`クラス。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> が <see langword="true" /> に設定されます。  
  
- または - 
 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> が <see langword="null" /> ではありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Windows::Forms::DataGridViewColumn ^ dataGridViewColumn, System::ComponentModel::ListSortDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit" Usage="dataGridView.Sort (dataGridViewColumn, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn"><see cref="T:System.Windows.Forms.DataGridView" /> の内容を並べ替えるキーとなる列。</param>
        <param name="direction"><see cref="T:System.ComponentModel.ListSortDirection" /> 値のいずれか 1 つ。</param>
        <summary>指定された列の内容に基づいて、<see cref="T:System.Windows.Forms.DataGridView" /> コントロールの内容を昇順または降順で並べ替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの内容を並べ替えます、<xref:System.Windows.Forms.DataGridView>によって指定された列の値を比較します。 既定では、並べ替え操作が使用されます、<xref:System.Collections.Comparer.Compare%2A>メソッドを使用して、列内のセルのペアを比較する、<xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType>プロパティ。  
  
 列に対して、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティに設定<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>、<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>と<xref:System.Windows.Forms.DataGridView.SortOrder%2A>プロパティが自動的に設定し、適切な並べ替えグリフが表示されます。 列に対して、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティに設定<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>、を通じて、自分で、並べ替えグリフに表示する必要があります、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>プロパティ。  
  
 処理することによって、このメソッドで使用される並べ替え操作をカスタマイズすることができます、<xref:System.Windows.Forms.DataGridView.SortCompare>イベント。 のみでこのイベントが発生したときに、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが設定されていません。  
  
 ときに、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが設定されている、このメソッドは、データ バインドされた列のみに機能します。 データ バインドされた列は必要がありました。 その<xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType>プロパティ セット。 これにより、<xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType>プロパティを返す`true`します。  
  
 場合、<xref:System.Windows.Forms.DataGridView>コントロールにバインドされていないとバインドの両方の列が含まれている、コントロールがバインドされた列で並べ替えられる場合は、バインドされていない列の値を維持するために仮想モードを実装する必要があります。 設定してこれを行う、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティを`true`と処理、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>イベント。 処理する必要がある、列が編集可能な場合、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベント。 仮想モードの詳細については、次を参照してください。[方法。仮想モードを実装で、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)します。 コントロールがデータ バインドされたときにバインドされていない列で並べ替えることはサポートされていません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.Sort%2A>でプログラムによる並べ替え。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された列は、この <see cref="T:System.Windows.Forms.DataGridView" /> の一部ではありません。  
  
- または - 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティが設定されていて、指定された列の <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> プロパティが <see langword="false" /> を返します。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewColumn" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> プロパティが <see langword="true" /> に設定されていて、指定された列の <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> プロパティが <see langword="false" /> を返します。  
  
- または - 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティによって指定されたオブジェクトが <see cref="T:System.ComponentModel.IBindingList" /> インターフェイスを実装していません。  
  
- または - 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> プロパティによって指定されたオブジェクトには、<see langword="false" /> の <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> プロパティ値が設定されていますす。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SortCompare">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SortCompare" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCompare As DataGridViewSortCompareEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewSortCompareEventHandler ^ SortCompare;" />
      <MemberSignature Language="F#" Value="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " Usage="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSortCompareEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> が並べ替え操作を実行するために 2 つのセルの値を比較する場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 のみでこのイベントが発生したときに、<xref:System.Windows.Forms.DataGridView.DataSource%2A>プロパティが設定されていない、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティの値が`false`。  
  
 このイベントは、並べ替えられている列のセルのペアを比較します。 のみ、ユーザーが持つ列のヘッダーをクリックすると発生を<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティの値<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>、または呼び出すと、<xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29>オーバー ロードします。 列でのこのイベントの発生時、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>、を通じて、自分で、並べ替えグリフに表示する必要があります、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>プロパティ。  
  
 このイベントは、1 つの列または複数の列のセルの値を使用して行の並べ替えに使用できます。 使用して、<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A>と<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A>プロパティで指定された列のセルの値を比較する、<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A>プロパティ。 使用して、<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A>と<xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A>を介して他の列の値にアクセスするプロパティ、<xref:System.Windows.Forms.DataGridView.Rows%2A>コレクション。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SortCompare>複数の列の並べ替えにします。 この例で示されている例の一部は、[方法。Windows フォームの DataGridView コントロールの並べ替え機能をカスタマイズ](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)します。  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/92fb5c14-afab-4cf5-a97e-924fd9cb99f5">方法: Windows フォーム DataGridView コントロールの並べ替え機能をカスタマイズする</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールが並べ替え操作を完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは発生しないときに、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティに設定されて`true`コントロールは非バインド列で並べ替えられます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、並べ替えの後の現在のセルが表示されていることを確認する方法を示しています。 このコードは、バインドされていない<xref:System.Windows.Forms.DataGridView>コントロール。 <xref:System.Windows.Forms.DataGridView>外部データ ソースにバインドされたコントロールの現在のセルは並べ替えるときに自動的に保持されません。  
  
 この例を実行するを含むフォームに次のコードを貼り付け、<xref:System.Windows.Forms.DataGridView>という`dataGridView1`します。 C# でも接続する必要あります、<xref:System.Windows.Forms.DataGridView.Sorted>イベントをイベント ハンドラー。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SortedColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn SortedColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ SortedColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> の内容の現在の並べ替えでキーとなっている列を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> の内容の現在の並べ替えでキーとなっている <see cref="T:System.Windows.Forms.DataGridViewColumn" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.DataGridView>が並べ替えられていない、このプロパティは返します`null`します。  
  
 このプロパティによって指定された列が、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>の値に基づいて並べ替えグリフが表示されます、<xref:System.Windows.Forms.DataGridView.SortOrder%2A>プロパティ。  
  
 列の場合は、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>、を通じて、自分で、並べ替えグリフに表示する必要があります、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType>プロパティ。  
  
> [!NOTE]
>  このプロパティの値は、カスタムの並べ替えを使用してコントロールを並べ替える場合意味がありません。 カスタムの並べ替えの詳細については、次を参照してください。、<xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29>メソッドと<xref:System.Windows.Forms.DataGridView.SortCompare>イベント。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>プログラムによる並べ替えのプロパティ。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder SortOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder SortOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortOrder As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder SortOrder { System::Windows::Forms::SortOrder get(); };" />
      <MemberSignature Language="F#" Value="member this.SortOrder : System.Windows.Forms.SortOrder" Usage="System.Windows.Forms.DataGridView.SortOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロール内の項目が昇順または降順で並べ替えられているか、または並べ替えられていないかを示す値を取得します。</summary>
        <value><see cref="T:System.Windows.Forms.SortOrder" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの使用を決定して、列が指定した場合、どの並べ替えグリフが表示されます、<xref:System.Windows.Forms.DataGridView.SortedColumn%2A>プロパティは、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>します。 列の場合は、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティ値の<xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>、表示し、使用、並べ替えグリフを自分で非する必要があります、<xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A>プロパティ。 列の場合は、<xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A>プロパティの値<xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>、並べ替えのグリフを表示することができますが、列が自動的にサイズ変更された場合、用に領域が予約されません。  
  
> [!NOTE]
>  このプロパティの値は、カスタムの並べ替えを使用してコントロールを並べ替える場合意味がありません。 カスタムの並べ替えの詳細については、次を参照してください。、<xref:System.Windows.Forms.DataGridView.Sort%2A>メソッドと<xref:System.Windows.Forms.DataGridView.SortCompare>イベント。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.SortOrder%2A>プログラムによる並べ替えのプロパティ。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="StandardTab">
      <MemberSignature Language="C#" Value="public bool StandardTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.StandardTab" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StandardTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StandardTab : bool with get, set" Usage="System.Windows.Forms.DataGridView.StandardTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tab キーが、コントロール内の次のセルにフォーカスを移動するのではなく、タブ オーダーの次のコントロールにフォーカスを移動するかどうかを示す値を取得または設定します。</summary>
        <value>Tab キーがタブ オーダーの次のコントロールにフォーカスを移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定`false`TAB キーをグリッド セルのフォーカスを移動できます。 次の表では、指定したタブ キーの組み合わせが押されたときに、セルのフォーカスがどのように変化するかについて説明します。  
  
|キーの組み合わせ|結果|  
|---------------------|------------|  
|Tab|場合、<xref:System.Windows.Forms.DataGridView.StandardTab%2A>プロパティは`false`行の次のセルにフォーカスが移動します。 行の最後のセルにフォーカスがある場合は、次の行の最初のセルにフォーカスが移動します。 最後のセルにフォーカスがある場合、 <xref:System.Windows.Forms.DataGridView>、タブ オーダーの次のコントロールにフォーカスが移動します。|  
|Shift + Tab|場合<xref:System.Windows.Forms.DataGridView.StandardTab%2A>は`false`行の前のセルにフォーカスが移動します。 行の最初のセルにフォーカスがある場合、フォーカス移動最後に、前の行のセルにします。 最初のセルにフォーカスがある場合、 <xref:System.Windows.Forms.DataGridView>、タブ オーダー内で前のコントロールにフォーカスが移動します。|  
|Ctrl + Tab|タブ オーダー内で次のコントロールにフォーカスが移動します。|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール スタイルが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、このコントロールに関連します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 使用できる場合にのみ、<xref:System.Windows.Forms.DataGridView>インスタンスにキャスト、<xref:System.ComponentModel.ISupportInitialize>インスタンス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このメソッドは、この制御のために既に呼び出されています。</exception>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 使用できる場合にのみ、<xref:System.Windows.Forms.DataGridView>インスタンスにキャスト、<xref:System.ComponentModel.ISupportInitialize>インスタンス。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGridView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに関連付けられているテキストを取得または設定します。</summary>
        <value>コントロールに関連付けられたテキストです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコントロールでは、このプロパティは無効です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Text" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ただし、<xref:System.Windows.Forms.DataGridView.Text%2A>プロパティがこのコントロールは、このイベントが発生する原因となり、値を変更できます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="TopLeftHeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftHeaderCell As DataGridViewHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderCell ^ TopLeftHeaderCell { System::Windows::Forms::DataGridViewHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopLeftHeaderCell : System.Windows.Forms.DataGridViewHeaderCell with get, set" Usage="System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールの左上隅にあるヘッダー セルを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> の左上隅にある <see cref="T:System.Windows.Forms.DataGridView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定するセルの値を設定、ショートカット メニューを関連付ける、またはで実行できるその他の操作を実行することができます、<xref:System.Windows.Forms.DataGridViewHeaderCell>します。  
  
 右から左の言語で使用するために設計されたアプリケーションでは、このプロパティで表されるセルは通常、右上隅にあります。  
  
   
  
## Examples  
 次のコード例では、このプロパティを使用しての左上隅にある値を表示、<xref:System.Windows.Forms.DataGridView>コントロール。 この値は、マスター/詳細のシナリオで、子テーブルをラベルします。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridViewComboBoxColumn>クラスの概要に関するトピック。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#80)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#80)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#80)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellErrorText">
      <MemberSignature Language="C#" Value="public void UpdateCellErrorText (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellErrorText(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellErrorText (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellErrorText(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateCellErrorText (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">更新するセルの列インデックス。行ヘッダーのセルを指定する場合は -1。</param>
        <param name="rowIndex">更新するセルの行インデックス。列ヘッダーのセルを指定する場合は -1。</param>
        <summary>指定された位置にあるセルのエラー テキストを強制的に更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 保持するとエラー テキストをセル自分で処理することによって、このメソッドを使用して、<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>イベント。 指定したセルの格納されたエラー テキストを変更すると、このメソッドを呼び出します。 これは、セルが無効になりますの強制、<xref:System.Windows.Forms.DataGridView>経由で、更新されたエラー テキストを取得するコントロール、<xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded>イベント ハンドラー。  
  
 このメソッドを使用して、ヘッダー セルのエラーを更新すること、列ヘッダー セルはエラー グリフを表示しません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> -1 から 1 を引いたコントロール内の列の数より大きいか未満です。  
  
- または - 
 <paramref name="rowIndex" /> が、-1 未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellValue">
      <MemberSignature Language="C#" Value="public void UpdateCellValue (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellValue(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellValue (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellValue(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellValue : int * int -&gt; unit" Usage="dataGridView.UpdateCellValue (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">新しい値を格納しているセルの、0 から始まる列インデックス。</param>
        <param name="rowIndex">新しい値を格納しているセルの、0 から始まる行インデックス。</param>
        <summary>新しい値に基づいて、コントロール内の指定された位置のセルの表示を強制的に更新します。現在有効になっている自動サイズ変更モードが適用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想モードのセルの値を維持して、外部のカスタム データ キャッシュ内の値を更新するときに、このメソッドを使用して、<xref:System.Windows.Forms.DataGridView.CellValuePushed>イベント ハンドラー。  
  
 このメソッドを使用して新しい値を取得するコントロールの強制、セルを無効に、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>イベント ハンドラーに適用される任意の自動サイズ変更モードを適用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> が、ゼロ未満か、コントロール内の列数から 1 を引いた値を超えています。  
  
- または - 
 <paramref name="rowIndex" /> が、ゼロ未満か、コントロール内の行数から 1 を引いた値を超えています。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateRowErrorText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つ以上の行のエラー テキストを強制的に更新します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int -&gt; unit" Usage="dataGridView.UpdateRowErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">更新する行の 0 から始まるインデックス番号。</param>
        <summary>特定の行インデックスにある行のエラー テキストを強制的に更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを保持すると行のエラー テキスト自分で処理することによって、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント。 指定した行の格納されたエラー テキストを変更すると、このメソッドを呼び出します。 これにより、<xref:System.Windows.Forms.DataGridView>から更新されたテキストを取得するコントロール、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント ハンドラー。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が、0 と、コントロール内の行数から 1 を減算した数との間の有効な範囲内にありません。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndexStart, int32 rowIndexEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndexStart As Integer, rowIndexEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateRowErrorText (rowIndexStart, rowIndexEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowIndexEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">更新する行セットの最初の行の 0 から始まるインデックス番号。</param>
        <param name="rowIndexEnd">更新する行セットの最後の行の 0 から始まるインデックス番号。</param>
        <summary>指定範囲の行についてエラー テキストを強制的に更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを保持すると行のエラー テキスト自分で処理することによって、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント。 指定された列に格納されたエラー テキストを変更すると、このメソッドを呼び出します。 これにより、<xref:System.Windows.Forms.DataGridView>から更新されたテキストを取得するコントロール、<xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded>イベント ハンドラー。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" /> が、0 と、コントロール内の行数から 1 を減算した数との間の有効な範囲内にありません。  
  
- または - 
 <paramref name="rowIndexEnd" /> が、0 と、コントロール内の行数から 1 を減算した数との間の有効な範囲内にありません。  
  
- または - 
 <paramref name="rowIndexEnd" /> は <paramref name="rowIndexStart" /> より小さい値です。</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowHeightInfo">
      <MemberSignature Language="C#" Value="public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowHeightInfo(int32 rowIndex, bool updateToEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowHeightInfo (rowIndex As Integer, updateToEnd As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowHeightInfo(int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowHeightInfo : int * bool -&gt; unit" Usage="dataGridView.UpdateRowHeightInfo (rowIndex, updateToEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="updateToEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">更新する最初の行の 0 から始まるインデックス番号。</param>
        <param name="updateToEnd">指定された行および後続のすべての行を更新する場合は <see langword="true" />。</param>
        <summary>指定された行の高さ情報を強制的に更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは行の高さのハンドラーを使用して自分で管理するときに、<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>と<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>イベント。 外部ストアド行の高さを変更するたびに、このメソッドを呼び出して、<xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed>イベント ハンドラー。 これにより、<xref:System.Windows.Forms.DataGridView>を通じて更新された高さ情報を取得するコントロール、<xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded>イベント ハンドラー。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> が 0 より小さく、かつ <paramref name="updateToEnd" /> が <see langword="true" /> です。  
  
- または - 
 <paramref name="rowIndex" /> が -1 より小さく、かつ <paramref name="updateToEnd" /> が <see langword="false" /> です。  
  
- または - 
 <paramref name="rowIndex" /> が、<see cref="P:System.Windows.Forms.DataGridView.Rows" /> コレクションの行インデックスの最高値より大きい値です。</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UserAddedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserAddedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserAddedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserAddedRow;" />
      <MemberSignature Language="F#" Value="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> コントロールへの行の追加を完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.UserAddedRow>内のエントリの合計数を表示するラベルを更新するイベント、<xref:System.Windows.Forms.DataGridView>します。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserDeletedRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> コントロールからの行の削除を完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridView.UserDeletedRow>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridView>という`DataGridView1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridView.UserDeletedRow>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#368](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#368)]
 [!code-vb[System.Windows.Forms.EventExamples#368](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#368)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletingRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletingRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletingRow As DataGridViewRowCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowCancelEventHandler ^ UserDeletingRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " Usage="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Forms.DataGridView" /> コントロールから行を削除するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、完了している行の削除を防ぐためにキャンセルできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.DataGridView.UserDeletingRow>イベントからの行の削除の取り消しを<xref:System.Windows.Forms.DataGridView>選択範囲の開始残高行が含まれている場合。 この例は例で使用できる、<xref:System.Windows.Forms.DataGridView.SelectionChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="UserSetCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor UserSetCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor UserSetCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSetCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ UserSetCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSetCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.Control.Cursor" /> プロパティの既定またはユーザー指定の値を取得します。</summary>
        <value><see cref="P:System.Windows.Forms.Control.Cursor" /> プロパティの標準の値を表す <see cref="T:System.Windows.Forms.Cursor" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値を設定できますが、<xref:System.Windows.Forms.Control.Cursor%2A>プロパティ、その値は、マウス ポインターの場所によって変化することができます。 このプロパティの値の取得を使用して、<xref:System.Windows.Forms.Control.Cursor%2A>プロパティの既定値またはコードで指定された値のいずれかが、正常な状態にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VerticalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ VerticalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの垂直スクロール バーを取得します。</summary>
        <value>垂直スクロール バーを表す <see cref="T:System.Windows.Forms.ScrollBar" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollingOffset">
      <MemberSignature Language="C#" Value="public int VerticalScrollingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VerticalScrollingOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollingOffset : int" Usage="System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが垂直方向にスクロールされる基準となるピクセル数を取得します。</summary>
        <value>コントロールが垂直方向にスクロールされる基準となるピクセル数。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> コントロールに対して独自のデータ管理操作を指定したかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> が指定されたデータ管理操作を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想モードは、非常に大きなデータ ストアを使用するために設計されています。 ときに、<xref:System.Windows.Forms.DataGridView.VirtualMode%2A>プロパティが`true`を作成する、<xref:System.Windows.Forms.DataGridView>設定された数の行と列ハンドルを次に、<xref:System.Windows.Forms.DataGridView.CellValueNeeded>セルを設定するイベントです。 仮想モードで作成、編集、および削除を処理するために、基になるデータ キャッシュの実装<xref:System.Windows.Forms.DataGridView>ユーザーの操作に基づいて、セル。 仮想モードの実装の詳細については、次を参照してください。[方法。仮想モードを実装で、Windows フォーム DataGridView コントロール](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)します。  
  
 バインドされていない列の値を維持するために仮想モードを使用する必要があるときに、<xref:System.Windows.Forms.DataGridView>コントロールがバインドされているモードです。 バインド モードでバインドされていない列による並べ替えはサポートされていません。  
  
   
  
## Examples  
 次のコードのコード例では、仮想モードを使用して、正の整数のテーブルを作成します。  
  
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#0)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="dataGridView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
        <summary>ウィンドウ メッセージを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、次を参照してください。、<xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType>基底クラスのメソッド。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 アクセス許可の値。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView コントロール (Windows フォーム)</related>
      </Docs>
    </Member>
  </Members>
</Type>