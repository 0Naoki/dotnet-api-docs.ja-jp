<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5abc2b039389d79c9a7337771dae53202d6337a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187739" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51f6c-101">形式に依存しないデータ転送機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-102">このインターフェイスは、 <xref:System.Windows.Forms.Clipboard>クラスおよびドラッグアンドドロップ操作で使用されます。 `IDataObject`</span><span class="sxs-lookup"><span data-stu-id="51f6c-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="51f6c-103">クラスで実装された場合<xref:System.Windows.Forms.IDataObject> 、メソッドを使用すると、ユーザーはクラスのインスタンス内の複数の形式でデータを格納できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="51f6c-104">データを複数の形式で格納することにより、対象アプリケーションでは、保存されているデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="51f6c-105">の<xref:System.Windows.Forms.IDataObject>インスタンスにデータを格納するには、 <xref:System.Windows.Forms.IDataObject.SetData%2A>メソッドを呼び出し、 `format`パラメーターにデータ形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="51f6c-106">格納さ`autoConvert`れた`false`データが取得時に別の形式に変換されないようにする場合は、パラメーターをに設定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="51f6c-107">の<xref:System.Windows.Forms.IDataObject.SetData%2A> 1 つのインスタンスで複数<xref:System.Windows.Forms.IDataObject>回呼び出し、複数の形式でデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="51f6c-108">から<xref:System.Windows.Forms.IDataObject>格納されたデータを取得する<xref:System.Windows.Forms.IDataObject.GetData%2A>には、メソッドを呼び出し、 `format`パラメーターにデータ形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="51f6c-109">パラメーターをに`false`設定すると、指定した形式で格納されたデータのみが取得されます。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="51f6c-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="51f6c-110">格納されているデータを指定した形式`autoConvert`に`true`変換するには、 `autoConvert`をに設定するか、を使用しないようにします。</span><span class="sxs-lookup"><span data-stu-id="51f6c-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="51f6c-111">に<xref:System.Windows.Forms.IDataObject>格納されているデータの形式を確認するには<xref:System.Windows.Forms.IDataObject> 、次のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="51f6c-112"><xref:System.Windows.Forms.IDataObject.GetFormats%2A>メソッドを呼び出して、データが使用可能なすべての形式の配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="51f6c-113">データが`autoConvert`格納さ`false`れている形式だけを取得するには、パラメーターをに設定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="51f6c-114">データが使用可能なすべての形式を取得するには`autoConvert` 、 `true`をに設定するか、このパラメーターを使用しないようにします。</span><span class="sxs-lookup"><span data-stu-id="51f6c-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="51f6c-115">メソッドを<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>呼び出して、格納されているデータが特定の形式で使用可能かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="51f6c-116">格納されているデータを指定した形式に変換しない場合は`autoConvert` 、パラメーター `false`をに設定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="51f6c-117">このインターフェイス<xref:System.Windows.Forms.DataObject>の実装については、クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="51f6c-118">定義済み<xref:System.Windows.Forms.Clipboard>のデータ形式については、クラスを参照してください。<xref:System.Windows.Forms.DataFormats></span><span class="sxs-lookup"><span data-stu-id="51f6c-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f6c-119">指定したデータ形式に関連付けられているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-120">取得するデータの形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-120">The format of the data to retrieve.</span></span> <span data-ttu-id="51f6c-121">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="51f6c-122">指定したデータ形式に関連付けられているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-123">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-124">このメソッドは、指定された形式でデータを見つけることができない場合、データの形式への変換を試みます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="51f6c-125">データを指定した形式に変換できない場合、このメソッド`null`はを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="51f6c-126">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.IDataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-127">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスに格納されているデータの有効な形式の一覧を表示するには、を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-128">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-129">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-130">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-131">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject,`するクラスを使用して、 `GetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="51f6c-132">メソッドは、 `Text`形式に関連付けられて`myDataObject`いるに格納されているデータを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="51f6c-133">この例では、と<xref:System.Windows.Forms.Form>いう名前`Form1`のと<xref:System.Windows.Forms.TextBox>という`textBox1`名前のを既に作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-134">取得するデータの形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="51f6c-135">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="51f6c-136">指定したクラス型形式に関連付けられているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-137">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-138">このメソッドは、指定された形式でデータを見つけることができない場合、データの形式への変換を試みます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="51f6c-139">データを指定した形式に変換できない場合、このメソッド`null`はを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="51f6c-140">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.IDataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-141">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスに格納されているデータの有効な形式の一覧を表示するには、を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-142">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-143">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-144">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-145">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="51f6c-146">メソッドは、特定の`myObject` `myType`型に関連付けられているに格納されているデータを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="51f6c-147">取得したデータの型がメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="51f6c-148">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを既に作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-149">取得するデータの形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-149">The format of the data to retrieve.</span></span> <span data-ttu-id="51f6c-150">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="51f6c-151">指定した形式にデータを変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="51f6c-152">指定したデータ形式に関連付けられているデータを取得します。データを指定形式に変換できるかどうかを確認するためにブール値を使用します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-153">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-154">パラメーターがであり`true` 、このメソッドが指定された形式でデータを見つけることができない場合は、データを形式に変換しようとします。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="51f6c-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="51f6c-155">データを指定した形式に変換できない場合、またはパラメーターをに`autoConvert` `false`設定してデータが格納されて`null`いる場合、このメソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="51f6c-156">パラメーターが`false`の場合、このメソッドは指定された形式でデータ`null`を返します。この形式のデータが見つからない場合はを返します。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="51f6c-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="51f6c-157">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.IDataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-158">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスに格納されているデータの有効な形式の一覧を表示するには、を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-159">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-160">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-161">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-162">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="51f6c-163">この例では、 `DataObject` `autoConvert`パラメーターを使用して、データ形式を変換するかどうかを指定する、に格納されているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="51f6c-164">最初に`myDataObject` 、テキストデータを使用してが作成されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="51f6c-165">次に、この例では、データを取得するために2回試行します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="51f6c-166">最初の評価では、書式を文字列として指定し、 `autoConvert`パラメーターを`false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="51f6c-167">この評価は失敗し、結果は "Message #1" という名前のメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="51f6c-168">2番目の試用版では、 `autoConvert`パラメーターをに`true`設定して同じデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="51f6c-169">この評価は成功し、結果は "Message #2" という名前のメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="51f6c-170">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f6c-171">インスタンスに格納されているデータが、指定した形式に関連付けられているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-172">確認対象の形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-172">The format for which to check.</span></span> <span data-ttu-id="51f6c-173">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="51f6c-174">インスタンスに格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-175">インスタンスに格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-176">を呼び出す<xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>前に、このに書式が存在するかどうかを判断するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-177">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスで使用できる形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-178">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-179">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-180">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-181">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetDataPresent`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="51f6c-182">最初に、文字列と`Text`形式を使用してデータオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="51f6c-183">次に、データが`Text`形式であることを確認し、結果をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="51f6c-184">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-185">確認対象となる形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="51f6c-186">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="51f6c-187">インスタンスに格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-188">インスタンスに格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-189">を呼び出す<xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>前に、このに書式が存在するかどうかを判断するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-190">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスで使用できる形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-191">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-192">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-193">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-194">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetDataPresent`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="51f6c-195">まず、コンポーネント (`myComponent`) を作成し、データオブジェクト (`myDataObject`) に格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="51f6c-196">次に、指定したデータがに`myDataObject`格納されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="51f6c-197">テストが評価`true`されると、結果がメッセージボックスに表示され、データ型がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="51f6c-198">この<xref:System.Windows.Forms.Form>例では、 `Form1`という名前のと<xref:System.Windows.Forms.TextBox>という`textBox1`名前のを既に作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-199">確認対象の形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-199">The format for which to check.</span></span> <span data-ttu-id="51f6c-200">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="51f6c-201">インスタンスに格納されているデータを指定した形式に変換できるかどうかを確認する場合は <see langword="true" />。データが指定した形式かどうかを確認する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="51f6c-202">インスタンスに格納されているデータが、指定した形式に関連付けられているかどうかを確認します。データを指定形式に変換できるかどうかを確認するためにブール値を使用します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="51f6c-203">データが指定した形式である場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-204">を呼び出す<xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>前に、このに書式が存在するかどうかを判断するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="51f6c-205">この<xref:System.Windows.Forms.IDataObject.GetFormats%2A>インスタンスで使用できる形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="51f6c-206">このメソッドは`true` 、次の場合にを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="51f6c-207">`autoConvert`パラメーターが`true`で、データが適切な形式に変換できる形式です。</span><span class="sxs-lookup"><span data-stu-id="51f6c-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="51f6c-208">`autoConvert`パラメーターが`false`で、データが適切な形式である。</span><span class="sxs-lookup"><span data-stu-id="51f6c-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="51f6c-209">このメソッドは`false` 、次の場合にを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="51f6c-210">パラメーターが`true`で、このメソッドは指定された形式でデータを見つけることができません。また、データを指定された`autoConvert`形式に`false`変換できません。また、がに設定された状態でデータが格納されています。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="51f6c-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="51f6c-211">`autoConvert`パラメーターが`false`で、このインスタンスに指定された形式でデータが存在しません。</span><span class="sxs-lookup"><span data-stu-id="51f6c-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-212">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-213">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-214">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-215">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetDataPresent`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="51f6c-216">最初に、文字列`myDataObject` `Text`と形式を使用してデータオブジェクト () を作成します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="51f6c-217">次に、 `Text` `autoConvert`パラメーターをに`false`設定して、形式に関連付けられたデータをオブジェクトに対してクエリします。</span><span class="sxs-lookup"><span data-stu-id="51f6c-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="51f6c-218">この評価は失敗し、結果は "Message #1" という名前のメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="51f6c-219">2番目の試用版では`autoConvert` 、パラメーター `true`がに設定されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="51f6c-220">この評価は成功し、結果は "Message #2" という名前のメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="51f6c-221">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f6c-222">このインスタンスに格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51f6c-223">このインスタンスに格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="51f6c-224">オブジェクトに格納されているデータがサポートする形式すべてのリストを表す名前の配列。</span><span class="sxs-lookup"><span data-stu-id="51f6c-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-225"><xref:System.Windows.Forms.IDataObject.GetData%2A>メソッドを呼び出す前に、このメソッドを呼び出して、サポートされているデータ形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="51f6c-226">定義済みの形式については、クラスを参照してください。<xref:System.Windows.Forms.DataFormats></span><span class="sxs-lookup"><span data-stu-id="51f6c-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-227">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-228">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-229">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-230">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetFormats`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="51f6c-231">最初に、文字列`myDataObject` `Text`と形式を使用してデータオブジェクト () を作成します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="51f6c-232">次に、データオブジェクト内のすべてのデータ形式とデータ変換形式を取得し、結果の一覧をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="51f6c-233">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="51f6c-234">インスタンスに格納されたデータが関連付けられている形式、またはそのデータを変換できる形式をすべて取得する場合は <see langword="true" />。ネイティブ データ形式だけを取得する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="51f6c-235">インスタンスに格納されているデータが関連付けられている形式、またはそのデータを変換できる形式のリストを取得します。データを変換できる形式をすべて取得するのか、ネイティブ データ形式だけを取得するのかを確認するためにブール値を使用します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="51f6c-236">オブジェクトに格納されているデータがサポートする形式すべてのリストを表す名前の配列。</span><span class="sxs-lookup"><span data-stu-id="51f6c-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-237"><xref:System.Windows.Forms.IDataObject.GetData%2A>メソッドを呼び出す前に、このメソッドを呼び出して、サポートされているデータ形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="51f6c-238">定義済みの形式については、クラスを参照してください。<xref:System.Windows.Forms.DataFormats></span><span class="sxs-lookup"><span data-stu-id="51f6c-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f6c-239">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="51f6c-240">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="51f6c-241">このメソッドの実装については<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-242">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `GetFormats`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="51f6c-243">最初に、文字列`myDataObject` `UnicodeText`と形式を使用してデータオブジェクト () を作成します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="51f6c-244">次に、データに関連付けられている形式を取得するために2つのクエリを作成します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="51f6c-245">最初のクエリでは、パラメーターが`autoConvert`に`false`設定されます。この場合、データのネイティブ形式のみが返されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="51f6c-246">2番目のクエリでは、 `autoConvert`パラメーターを`true`に設定します。これにより、データの変換先となる形式を含む形式の一覧が取得されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="51f6c-247">各ケースでは、結果の一覧がメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="51f6c-248">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f6c-249">指定したデータおよびそのデータに関連付けられている形式をインスタンスに格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="51f6c-250">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="51f6c-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="51f6c-251">指定したデータを、そのデータのクラスに基づく形式で、このインスタンスに格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-252">形式は、データクラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="51f6c-253">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="51f6c-254">このメソッドの実装については<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-255">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `SetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="51f6c-256">まず、コンポーネント (`myComponent`) を作成し、データオブジェクト (`myDataObject`) に格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="51f6c-257">次に、指定したデータがデータオブジェクトに格納されているかどうかを確認し、その結果をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="51f6c-258">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-259">データに関連付けられている形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-259">The format associated with the data.</span></span> <span data-ttu-id="51f6c-260">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="51f6c-261">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="51f6c-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="51f6c-262">指定したデータおよびそのデータに関連付けられている形式をインスタンスに格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-263">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="51f6c-264">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="51f6c-265">このメソッドの実装については<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-266">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `SetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="51f6c-267">まず、データオブジェクト (`myDataObject`) を作成し、という`UnicodeText`形式を指定して、オブジェクトに文字列を格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="51f6c-268">次に、データが`Text` `Text`形式に変換されるように、オブジェクトに格納されているデータを形式で指定して取得します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="51f6c-269">結果はメッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-269">The result is displayed in a message box.</span></span> <span data-ttu-id="51f6c-270">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-271">データに関連付けられている形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="51f6c-272">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="51f6c-273">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="51f6c-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="51f6c-274">指定されているデータおよびそのデータに関連付けられているクラス型をインスタンスに格納します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-275">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="51f6c-276">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="51f6c-277">このメソッドの実装については<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-278">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `SetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="51f6c-279">まず、コンポーネント (`myComponent`) を作成し、データオブジェクト (`myDataObject`) に格納します。この`myType`とき、を使用してデータ形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="51f6c-280">次に、指定した型のデータがオブジェクトに格納されているかどうかをチェックし、結果をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="51f6c-281">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="51f6c-282">データに関連付けられている形式。</span><span class="sxs-lookup"><span data-stu-id="51f6c-282">The format associated with the data.</span></span> <span data-ttu-id="51f6c-283">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="51f6c-284">データを別の形式に変換できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="51f6c-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="51f6c-285">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="51f6c-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="51f6c-286">指定されているデータおよびそのデータに関連付けられている形式をインスタンスに格納します。データを別の形式に変換できるかどうかを確認するためにブール値を使用します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f6c-287">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="51f6c-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="51f6c-288">このメソッドの実装については<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="51f6c-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51f6c-289">この例では<xref:System.Windows.Forms.DataObject> 、を実装`IDataObject`するクラスを使用して、 `SetData`メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="51f6c-290">まず、データ`myDataObject`オブジェクト () を作成し、その`autoConvert`中`UnicodeText`に文字列を格納します。このとき`false`、パラメーターをに設定します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="51f6c-291">次に、オブジェクトに格納されているデータに関連付けられた形式を取得し、その結果をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="51f6c-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="51f6c-292">データに関連付けられている形式`UnicodeText`は、形式のみです。</span><span class="sxs-lookup"><span data-stu-id="51f6c-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="51f6c-293">この例では、という名前<xref:System.Windows.Forms.Form> `Form1`のを作成していることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="51f6c-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
