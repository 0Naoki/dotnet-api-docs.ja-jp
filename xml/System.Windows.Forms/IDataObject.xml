<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c9d000578e8ade0326c86daf432d3d053ae8ce3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39882922" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8ff3-101">形式に依存しないデータ転送機構を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8ff3-101">Provides a format-independent mechanism for transferring data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-102">`IDataObject`インターフェイスを使って、<xref:System.Windows.Forms.Clipboard>クラスとドラッグ アンド ドロップ操作でします。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="e8ff3-103">クラスで実装された場合、<xref:System.Windows.Forms.IDataObject>メソッドは、クラスのインスタンスで複数の形式でデータを格納するユーザーを許可します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="e8ff3-104">1 つ以上の形式でデータを格納するには、形式の要件がわからない場合がありますが、ターゲット アプリケーションが格納されているデータを取得できる可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="e8ff3-105">インスタンスにデータを格納する<xref:System.Windows.Forms.IDataObject>を呼び出し、<xref:System.Windows.Forms.IDataObject.SetData%2A>メソッドでデータ形式を指定し、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="e8ff3-106">設定、`autoConvert`パラメーターを`false`格納されたデータが取得されたときに別の形式に変換しないかどうか。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="e8ff3-107">呼び出す<xref:System.Windows.Forms.IDataObject.SetData%2A>の 1 つのインスタンスで複数回<xref:System.Windows.Forms.IDataObject>1 つ以上の形式でデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="e8ff3-108">格納されたデータを取得する、<xref:System.Windows.Forms.IDataObject>呼び出すことによって、<xref:System.Windows.Forms.IDataObject.GetData%2A>で書式設定メソッドと、データを指定する、`format`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="e8ff3-109">設定、`autoConvert`パラメーターを`false`を指定した形式で格納されたデータのみを取得します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="e8ff3-110">指定した形式に格納されているデータを変換するには設定`autoConvert`に`true`、または使用しないでください`autoConvert`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="e8ff3-111">格納されたデータの形式を決定する、 <xref:System.Windows.Forms.IDataObject>、次を使用して、<xref:System.Windows.Forms.IDataObject>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="e8ff3-112">呼び出す、<xref:System.Windows.Forms.IDataObject.GetFormats%2A>データが使用するすべての形式の配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="e8ff3-113">設定、`autoConvert`パラメーターを`false`データが格納されている形式のみを取得します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="e8ff3-114">データの使用可能なすべての形式を取得するには、次のように設定します。`autoConvert`に`true`、またはこのパラメーターを使用しません。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="e8ff3-115">呼び出す、<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>格納されたデータが特定の形式で使用できるかどうかを判断するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="e8ff3-116">格納されたデータを指定した形式に変換したくない場合は、設定、`autoConvert`パラメーター`false`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="e8ff3-117">参照してください、<xref:System.Windows.Forms.DataObject>このインターフェイスの実装のクラス。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="e8ff3-118">参照してください、 <xref:System.Windows.Forms.DataFormats> 、定義済みのクラス<xref:System.Windows.Forms.Clipboard>データ形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8ff3-119">指定したデータ形式に関連付けられているデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-119">Retrieves the data associated with the specified data format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-120">取得するデータの形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-120">The format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="e8ff3-121">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-122">指定したデータ形式に関連付けられているデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-122">Retrieves the data associated with the specified data format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-123">指定した形式に関連付けられているデータ、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-123">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-124">このメソッドは、指定した形式でデータを検索することはできません、データ形式に変換しようとします。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e8ff3-125">このメソッドが戻るかどうかは、指定した形式にデータを変換できません、`null`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e8ff3-126">データが、関連付けまたは形式に変換できるかどうかを確認するのには、呼び出す<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-127">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-128">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-129">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-130">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-131">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject,`の使用を示すために、`GetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e8ff3-132">格納されているデータを取得するメソッドが使用される`myDataObject`に関連付けられた、`Text`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="e8ff3-133">この例では既に作成したこと、<xref:System.Windows.Forms.Form>という名前`Form1`と<xref:System.Windows.Forms.TextBox>という名前`textBox1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-134">取得するデータの形式を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="e8ff3-135">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-136">指定したクラス型形式に関連付けられているデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-136">Retrieves the data associated with the specified class type format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-137">指定した形式に関連付けられているデータ、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-137">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-138">このメソッドは、指定した形式でデータを検索することはできません、データ形式に変換しようとします。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e8ff3-139">このメソッドが戻るかどうかは、指定した形式にデータを変換できません、`null`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e8ff3-140">データが、関連付けまたは形式に変換できるかどうかを確認するのには、呼び出す<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-141">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-142">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-143">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-144">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-145">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e8ff3-146">格納されているデータを取得するメソッドが使用される`myObject`、特定の種類に関連付けられている`myType`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="e8ff3-147">取得したデータの種類は、メッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="e8ff3-148">この例では既に作成したこと、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-149">取得するデータの形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-149">The format of the data to retrieve.</span>
          </span>
          <span data-ttu-id="e8ff3-150">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="e8ff3-151">指定した形式にデータを変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-151">
              <see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-152">指定したデータ形式に関連付けられているデータを取得します。データを指定形式に変換できるかどうかを確認するためにブール値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-153">指定した形式に関連付けられているデータ、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-153">The data associated with the specified format, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-154">場合、`autoConvert`パラメーターが`true`形式にデータを変換しようと、このメソッドは、指定した形式でデータを検索することはできません。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e8ff3-155">データは、指定した形式に変換できない場合、またはでデータが格納されている場合、`autoConvert`パラメーターに設定`false`、このメソッドが戻る`null`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e8ff3-156">場合、`autoConvert`パラメーターが`false`、このメソッドは、指定した形式でデータを返しますまたは`null`形式でデータが見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="e8ff3-157">データが、関連付けまたは形式に変換できるかどうかを確認するのには、呼び出す<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-158">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスに格納されたデータの有効な形式の一覧。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-159">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-160">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-161">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-162">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e8ff3-163">例に格納されたデータの取得、`DataObject`を使用して、`autoConvert`データ形式に変換するかどうかを指定するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="e8ff3-164">まず、`myDataObject`テキスト データで作成されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="e8ff3-165">次の例は、データを取得するには、2 回試みます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="e8ff3-166">最初の試行でという文字列とセットの形式を指定、`autoConvert`パラメーター`false`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="e8ff3-167">この試用版が失敗し、結果は「メッセージは 1」というラベルの付いたメッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="e8ff3-168">例を使用して同じデータの取得、2 つ目の試用版、`autoConvert`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="e8ff3-169">この試用版が成功し、結果は「メッセージ 2」というラベルの付いたメッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="e8ff3-170">この例では作成した、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8ff3-171">インスタンスに格納されているデータが、指定した形式に関連付けられているかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-171">Determines whether data stored in this instance is associated with the specified format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-172">確認対象の形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-172">The format for which to check.</span>
          </span>
          <span data-ttu-id="e8ff3-173">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-174">インスタンスに格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-175">インスタンスに格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-175">
              <see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-176">これで、形式が存在するかどうかを確認するには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-177">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-178">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-179">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-180">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-181">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetDataPresent`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e8ff3-182">最初に、文字列を使用してデータ オブジェクトを作成し、`Text`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="e8ff3-183">データに存在することを確認し、`Text`書式を設定し、メッセージ ボックスに、結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="e8ff3-184">この例では作成した、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-185">確認対象となる形式を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-185">A <see cref="T:System.Type" /> representing the format for which to check.</span>
          </span>
          <span data-ttu-id="e8ff3-186">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-187">インスタンスに格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-188">インスタンスに格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-188">
              <see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-189">これで、形式が存在するかどうかを確認するには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-190">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-191">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-192">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-193">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-194">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetDataPresent`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e8ff3-195">まず、コンポーネントを作成します (`myComponent`) し、データ オブジェクトに格納 (`myDataObject`)。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="e8ff3-196">指定されたデータが格納されているかどうかを確認し、`myDataObject`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="e8ff3-197">評価されると、 `true`、メッセージ ボックスに、結果を表示し、テキスト ボックスに、データ型を表示します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="e8ff3-198">この例では、既に作成したこと、<xref:System.Windows.Forms.Form>という名前`Form1`と<xref:System.Windows.Forms.TextBox>という`textBox1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-199">確認対象の形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-199">The format for which to check.</span>
          </span>
          <span data-ttu-id="e8ff3-200">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="e8ff3-201">インスタンスに格納されているデータを指定した形式に変換できるかどうかを確認する場合は <see langword="true" />。データが指定した形式かどうかを確認する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-201">
              <see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-202">インスタンスに格納されているデータが、指定した形式に関連付けられているかどうかを確認します。データを指定形式に変換できるかどうかを確認するためにブール値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-203">データが指定した形式である場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-203">
              <see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-204">これで、形式が存在するかどうかを確認するには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject>呼び出す前に<xref:System.Windows.Forms.IDataObject.GetData%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e8ff3-205">呼び出す<xref:System.Windows.Forms.IDataObject.GetFormats%2A>のこのインスタンスで使用可能な形式です。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="e8ff3-206">このメソッドが戻る`true`とき。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="e8ff3-207">`autoConvert`パラメーターが`true`データが適切な形式に変換できる形式とします。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="e8ff3-208">`autoConvert`パラメーターが`false`データが、適切な形式です。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="e8ff3-209">このメソッドが戻る`false`とき。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="e8ff3-210">`autoConvert`パラメーターが`true`とこのメソッドは、指定した形式でデータを検索することはできませんし、指定した形式に変換できないデータまたはでデータが格納されている`autoConvert`設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="e8ff3-211">`autoConvert`パラメーターが`false`、し、指定された形式では、このインスタンスにデータが存在しません。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-212">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-213">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-214">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-215">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetDataPresent`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e8ff3-216">まず、データ オブジェクトを作成します (`myDataObject`) 文字列を使用して、`Text`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="e8ff3-217">関連付けられたデータ オブジェクトを照会し、`Text`形式で、`autoConvert`パラメーターに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="e8ff3-218">この試用版が失敗し、結果は「メッセージは 1」というラベルの付いたメッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="e8ff3-219">設定が、2 つ目の試用版、`autoConvert`パラメーター`true`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="e8ff3-220">この試用版が成功し、結果は「メッセージ 2」というラベルの付いたメッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="e8ff3-221">この例では作成した、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8ff3-222">このインスタンスに格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8ff3-223">このインスタンスに格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-224">オブジェクトに格納されているデータがサポートする形式すべてのリストを表す名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-225">呼び出しの前に、サポートされているデータ形式を取得するには、このメソッドを呼び出し、<xref:System.Windows.Forms.IDataObject.GetData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="e8ff3-226">参照してください、<xref:System.Windows.Forms.DataFormats>クラスの定義済みの形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-227">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-228">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-229">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-230">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetFormats`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="e8ff3-231">まず、データ オブジェクトを作成します (`myDataObject`) 文字列を使用して、`Text`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="e8ff3-232">すべてのデータ形式と、データ オブジェクト内のデータ変換形式を取得し、メッセージ ボックスに、結果のリストを表示します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="e8ff3-233">この例では、作成した、<xref:System.Windows.Forms.Form>という`Form1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <span data-ttu-id="e8ff3-234">インスタンスに格納されたデータが関連付けられている形式、またはそのデータを変換できる形式をすべて取得する場合は <see langword="true" />。ネイティブ データ形式だけを取得する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-234">
              <see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-235">インスタンスに格納されているデータが関連付けられている形式、またはそのデータを変換できる形式のリストを取得します。データを変換できる形式をすべて取得するのか、ネイティブ データ形式だけを取得するのかを確認するためにブール値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8ff3-236">オブジェクトに格納されているデータがサポートする形式すべてのリストを表す名前の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-237">呼び出しの前に、サポートされているデータ形式を取得するには、このメソッドを呼び出し、<xref:System.Windows.Forms.IDataObject.GetData%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="e8ff3-238">参照してください、<xref:System.Windows.Forms.DataFormats>クラスの定義済みの形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8ff3-239">データは、格納されている変換が許可されている場合、要求の形式が格納されている形式と互換性のある場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e8ff3-240">テキストに変換できる Unicode として格納されているデータなどです。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e8ff3-241">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-242">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`GetFormats`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="e8ff3-243">まず、データ オブジェクトを作成します (`myDataObject`) 文字列を使用して、`UnicodeText`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="e8ff3-244">そのデータに関連付けられている形式を取得する 2 つのクエリを作成します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="e8ff3-245">最初のクエリでは、設定、`autoConvert`パラメーターを`false`: この場合、データのネイティブ形式のみが返されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="e8ff3-246">2 番目のクエリでは、設定、`autoConvert`パラメーターを`true`形式に変換できるデータを含む形式の一覧を取得するようにします。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="e8ff3-247">各ケースでは、メッセージ ボックスに、結果のリストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="e8ff3-248">この例では、作成した、<xref:System.Windows.Forms.Form>という`Form1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e8ff3-249">指定したデータおよびそのデータに関連付けられている形式をインスタンスに格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-249">Stores the specified data and its associated format in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="e8ff3-250">格納するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-250">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-251">指定したデータを、そのデータのクラスに基づく形式で、このインスタンスに格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-251">Stores the specified data in this instance, using the class of the data for the format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-252">形式は、データ クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="e8ff3-253">このメソッドを使用して格納されているデータは、取得されるときに互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e8ff3-254">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-255">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`SetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e8ff3-256">まず、コンポーネントを作成します (`myComponent`) し、データ オブジェクトに格納 (`myDataObject`)。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="e8ff3-257">指定されたデータが、データ オブジェクトに格納され、メッセージ ボックスに結果を表示するかどうかがチェックされます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="e8ff3-258">この例では作成した、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-259">データに関連付けられている形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-259">The format associated with the data.</span>
          </span>
          <span data-ttu-id="e8ff3-260">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="e8ff3-261">格納するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-261">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-262">指定したデータおよびそのデータに関連付けられている形式をインスタンスに格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-262">Stores the specified data and its associated format in this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-263">対象アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e8ff3-264">このメソッドを使用して格納されているデータは、取得されるときに互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e8ff3-265">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-266">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`SetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e8ff3-267">まず、データ オブジェクトを作成します (`myDataObject`) オブジェクトを指定する文字列を格納し、`UnicodeText`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="e8ff3-268">オブジェクトに指定することで格納されているデータを取得し、 `Text` 、データに変換されるように、書式設定、`Text`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="e8ff3-269">結果は、メッセージ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-269">The result is displayed in a message box.</span></span> <span data-ttu-id="e8ff3-270">この例では、作成した、<xref:System.Windows.Forms.Form>という`Form1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-271">データに関連付けられている形式を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span>
          </span>
          <span data-ttu-id="e8ff3-272">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="e8ff3-273">格納するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-273">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-274">指定されているデータおよびそのデータに関連付けられているクラス型をインスタンスに格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-274">Stores the specified data and its associated class type in this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-275">対象アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e8ff3-276">このメソッドを使用して格納されているデータは、取得されるときに互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e8ff3-277">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-278">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`SetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e8ff3-279">まず、コンポーネントを作成します (`myComponent`) し、データ オブジェクトに格納 (`myDataObject`) を使用して、`myType`データ形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="e8ff3-280">指定した型のデータが、オブジェクトに格納され、メッセージ ボックスに結果を表示するかどうかがチェックされます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="e8ff3-281">この例では作成した、<xref:System.Windows.Forms.Form>という`Form1`。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="e8ff3-282">データに関連付けられている形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-282">The format associated with the data.</span>
          </span>
          <span data-ttu-id="e8ff3-283">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span>
          </span>
        </param>
        <param name="autoConvert">
          <span data-ttu-id="e8ff3-284">データを別の形式に変換できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-284">
              <see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="e8ff3-285">格納するデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-285">The data to store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8ff3-286">指定されているデータおよびそのデータに関連付けられている形式をインスタンスに格納します。データを別の形式に変換できるかどうかを確認するためにブール値を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8ff3-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8ff3-287">対象アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e8ff3-288">このメソッドの実装は、次を参照してください。<xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8ff3-289">この例では、<xref:System.Windows.Forms.DataObject>クラスを実装`IDataObject`の使用を示すために、`SetData`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e8ff3-290">まず、データ オブジェクトを作成します (`myDataObject`) を格納し、 `UnicodeText` 、文字列、`autoConvert`パラメーターに設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="e8ff3-291">次に、オブジェクトに格納されたデータに関連付けられている形式を取得し、メッセージ ボックスに結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="e8ff3-292">データに関連付けられている唯一の形式は、`UnicodeText`形式。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="e8ff3-293">この例では、作成した、<xref:System.Windows.Forms.Form>という`Form1`します。</span><span class="sxs-lookup"><span data-stu-id="e8ff3-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>