<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fe74587659bc13153605e2eae655d587f15f4d7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36518453" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the collection of groups within a <see cref="T:System.Windows.Forms.ListView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>を取得するプロパティ、<xref:System.Windows.Forms.ListViewGroupCollection>に関連付けられている、<xref:System.Windows.Forms.ListView>コントロール。 このコレクションが含まれています、<xref:System.Windows.Forms.ListViewGroup>コントロール内に表示されるグループを表すオブジェクトと、<xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType>プロパティが以外の値に設定<xref:System.Windows.Forms.View.List?displayProperty=nameWithType>です。 ヘッダー ラベルを持つ既定のグループにグループに割り当てられていないすべての項目が表示されます"DefaultGroup{0}"です。 既定のグループが含まれていない、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションを変更することはできません。 すべての項目がグループに正しく追加されていることを確認する、デバッグで、主に便利です。 内のグループがない場合、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションをグループ化機能が無効になっています。  
  
 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>コレクションに 1 つのグループを追加します。 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>コレクション内の特定のインデックスにあるグループに追加するメソッド。 グループを削除するを使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>メソッドです。 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>グループには、特定のインデックスを削除する方法です。  
  
 追加することはできません、<xref:System.Windows.Forms.ListViewGroup>を複数回のコレクション。 コレクション内のグループの位置を変更するにする必要があります最初、コレクションから削除され、任意の位置に挿入されます。 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>特定のグループが既にコレクション内にあるかどうかを調べます。 コレクション内のグループのインデックスを取得するを使用して、<xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A>メソッドです。 取得または、特定のインデックスにあるグループを設定することができます、<xref:System.Windows.Forms.ListViewGroupCollection.Item%2A>インデクサーです。  
  
 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>をコレクションに複数のグループを追加するメソッド。 グループの配列として複数のグループを追加することができます、<xref:System.Windows.Forms.ListViewGroupCollection>を通じて取得した、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>別のプロパティ<xref:System.Windows.Forms.ListView>コントロール。 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>コレクションからすべてのグループを削除する方法です。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>、 <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>、および<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>メソッドは、グループ、コレクションから削除からのアイテムを削除しないでください、<xref:System.Windows.Forms.ListView>コントロール。 内のグループがない場合、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションが、グループ化機能が無効になっているし、コントロール内のすべての項目が通常どおり表示されます。  
  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>と<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>内の項目をグループ化する複数の方法を提供するメソッドに便利ですが、<xref:System.Windows.Forms.ListView>コントロール。 これを行うには、複数のグループの配列を作成します。 グループを変更するには、最初に使用して、 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 、コレクションからすべてのグループを削除してから使用する方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>を表示するグループの [次へ] の配列を追加するメソッド。  
  
 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A>に互換性のある配列を指定したインデックスから始まるコレクション内のグループをコピーする方法です。 これにより、たとえばを使用してコレクション内のグループの並べ替えを行うときに、<xref:System.Array.Sort%2A?displayProperty=nameWithType>メソッドです。 これを行うには、グループを互換性のある配列にコピーしてから、配列を並べ替えます。 次に、使用、 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 、コレクションからすべてのグループを削除してから使用する方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>並べ替えられた配列をコレクションに追加するメソッド。  
  
 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Count%2A>プロパティ コレクション内のグループの数を調べることです。 コレクションを反復処理に使用して、<xref:System.Collections.IEnumerator>から返される、<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>メソッドです。  
  
> [!NOTE]
>  アプリケーションが呼び出すときに、グループ化機能が Windows XP および Windows Server 2003 ファミリでのみ使用できますが、<xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>メソッドです。 以前のオペレーティング システムでグループに関連するすべてのコードは無視され、グループが表示されません。 結果として、グループ化機能に依存する任意のコードが正常に動作していない可能性があります。 グループ化機能が使用できるかどうかを決定するテストを含めるようにが利用できない場合は、代替機能を提供してください。 たとえば、グループ別に並べ替えをサポートしないオペレーティング システムで実行されているときに、別の並べ替えを提供することができます。  
>   
>  挿入マーク機能は、オペレーティング システムのテーマの機能を提供する同じライブラリによって提供されます。 このライブラリの可用性を確認するには、呼び出し、<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>メソッドのオーバー ロードを渡します、<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>値。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Windows.Forms.ListView>アイテムを整理する詳細ビューのサブアイテム値によってグループ化機能します。 この形式のグループ化は、Windows エクスプ ローラーで使用されているグループに似ています。 例では、グループは動的に作成されます。 サブアイテムの列ごとに一意のサブ項目の値ごとに 1 つのグループが作成されます。 親項目の列の一意の初期名ごとに 1 つのグループが作成されます。 列のヘッダーをクリックすると、その列に対して作成されたグループに項目が並べ替えられます。 同じ列ヘッダーを再度クリックすると、グループの順序を反転させます。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds a <see cref="T:System.Windows.Forms.ListViewGroup" /> to the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to add to the collection.</param>
        <summary>Adds the specified <see cref="T:System.Windows.Forms.ListViewGroup" /> to the collection.</summary>
        <returns>The index of the group within the collection, or -1 if the group is already present in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、既存の追加<xref:System.Windows.Forms.ListViewGroup>をコレクションにします。 追加することはできません、<xref:System.Windows.Forms.ListViewGroup>を複数回のコレクション。 呼び出すと、<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>メソッドを使用して、<xref:System.Windows.Forms.ListViewGroup>がコレクション内に既に、追加は失敗し、-1 が返されます。  
  
 コレクションに複数のグループを追加するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> contains at least one <see cref="T:System.Windows.Forms.ListViewItem" /> that belongs to a <see cref="T:System.Windows.Forms.ListView" /> control other than the one that owns this <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The initial value of the <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> property for the new group.</param>
        <param name="headerText">The initial value of the <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> property for the new group.</param>
        <summary>Adds a new <see cref="T:System.Windows.Forms.ListViewGroup" /> to the collection using the specified values to initialize the <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> and <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> properties</summary>
        <returns>The new <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds multiple groups to the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">An array of type <see cref="T:System.Windows.Forms.ListViewGroup" /> that specifies the groups to add to the collection.</param>
        <summary>Adds an array of groups to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このバージョンの使用、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>グループ コレクションにグループの配列を追加するメソッド。 このメソッドは複数作成するときに<xref:System.Windows.Forms.ListViewGroup>オブジェクトし、1 つのメソッドの呼び出しを使用して、コレクションに追加します。 個々 のグループをコレクションに追加するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>メソッドです。  
  
 このメソッドは内の項目をグループ化する複数の方法を提供する場合にも役立ちますを<xref:System.Windows.Forms.ListView>コントロール。 これを行うには、複数のグループの配列を作成します。 グループを変更するには、最初に使用して、 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 、コレクションからすべてのグループを削除してから使用する方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>グループの別の配列を追加するメソッド。  
  
 異なり、 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 、メソッド、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドが追加されているグループが既にコレクション内にするかどうかを決定するために使用する値を返すにはいません。 この情報を必要がある場合、<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>メソッドを使用する前に、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドです。  
  
   
  
## Examples  
 次の例で方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドを編成するアプリケーションで使用できる<xref:System.Windows.Forms.ListView>サブ項目に値の詳細ビューで項目。 この形式のグループ化は、Windows エクスプ ローラーで使用されているグループに似ています。 例では、グループは動的に作成されます。 サブアイテムの列ごとに一意のサブ項目の値ごとに 1 つのグループが作成されます。 親項目の列の一意の初期名ごとに 1 つのグループが作成されます。 各列に対して作成されたグループは、サブ項目のテキストまたは先頭の文字とハッシュ テーブルに格納されます。 列ヘッダーがクリックされたときに、<xref:System.Windows.Forms.ListViewGroupCollection>がオフになっています。 クリックした列に対応するハッシュ テーブルを取得し、され、適切なグループの各項目が割り当てられます。 ハッシュ テーブル内のグループの並べ替えられた配列を最後に、追加、<xref:System.Windows.Forms.ListViewGroupCollection>です。  
  
 完了の例では、次を参照してください。、<xref:System.Windows.Forms.ListViewGroupCollection>概要リファレンス トピックです。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contains at least one group with at least one <see cref="T:System.Windows.Forms.ListViewItem" /> that belongs to a <see cref="T:System.Windows.Forms.ListView" /> control other than the one that owns this <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> containing the groups to add to the collection.</param>
        <summary>Adds the groups in an existing <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このバージョンの使用、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>の要素を追加するメソッドを<xref:System.Windows.Forms.ListViewGroupCollection>を通じて取得した、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>プロパティを別の<xref:System.Windows.Forms.ListView>コントロール。  
  
 異なり、 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 、メソッド、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドが追加されているグループが既にコレクション内にするかどうかを決定するために使用する値を返すにはいません。 この情報を必要がある場合、<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>メソッドを使用する前に、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> contains at least one group with at least one <see cref="T:System.Windows.Forms.ListViewItem" /> that belongs to a <see cref="T:System.Windows.Forms.ListView" /> control other than the one that owns this <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all groups from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションからすべてのグループを削除するのにには、このメソッドを使用します。 グループを削除するに注意してください、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションが項目を削除していない、<xref:System.Windows.Forms.ListView>コントロール。  
  
 このメソッドは、グループ化機能を無効にすると便利です。 内のグループがない場合に、<xref:System.Windows.Forms.ListView>を制御する、項目が正常に表示します。 コレクションから個々 のグループを削除するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>または<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>メソッドです。  
  
 このメソッドは、項目をグループ化する複数の方法を提供する場合にも役立ちます。 グループを変更するには、最初に使用して、 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 、コレクションからすべてのグループを削除してから使用する方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>グループの別の配列を追加するメソッド。  
  
   
  
## Examples  
 次の例で方法、<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>メソッドを編成するアプリケーションで使用できる<xref:System.Windows.Forms.ListView>サブ項目に値の詳細ビューで項目。 この形式のグループ化は、Windows エクスプ ローラーで使用されているグループに似ています。 例では、グループは動的に作成されます。 サブアイテムの列ごとに一意のサブ項目の値ごとに 1 つのグループが作成されます。 親項目の列の一意の初期名ごとに 1 つのグループが作成されます。 各列に対して作成されたグループは、サブ項目のテキストまたは先頭の文字とハッシュ テーブルに格納されます。 列ヘッダーがクリックされたときに、<xref:System.Windows.Forms.ListViewGroupCollection>がオフになっています。 クリックした列に対応するハッシュ テーブルを取得し、され、適切なグループの各項目が割り当てられます。 ハッシュ テーブル内のグループの並べ替えられた配列を最後に、追加、<xref:System.Windows.Forms.ListViewGroupCollection>です。  
  
 完了の例では、次を参照してください。、<xref:System.Windows.Forms.ListViewGroupCollection>概要リファレンス トピックです。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to locate in the collection.</param>
        <summary>Determines whether the specified group is located in the collection.</summary>
        <returns>
          <see langword="true" /> if the group is in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加することはできません、<xref:System.Windows.Forms.ListViewGroup>を複数回のコレクション。 ただし、別のコピーを追加しようとしても、例外はスローされません。 代わりに、追加は失敗します。 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A>メソッドは値 – 1 をここでに返します。 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>と<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>メソッド、ただし、戻り値の値がないです。 これらのメソッドのいずれかを使用してグループを追加するときに使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>メソッドを特定するかどうかを判断<xref:System.Windows.Forms.ListViewGroup>がコレクション内に既にです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The <see cref="T:System.Array" /> to which the groups are copied.</param>
        <param name="index">The first index within the array to which the groups are copied.</param>
        <summary>Copies the groups in the collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> (含まれている項目の参照を含む) のコレクション内のグループを指定したインデックスから始まる、互換性のある配列にコピーする方法です。 これにより、たとえばを使用してコレクション内のグループの並べ替えを行うときに、<xref:System.Array.Sort%2A?displayProperty=nameWithType>メソッドです。 これを行うには、グループを互換性のある配列にコピーしてから、配列を並べ替えます。 次に、使用、 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 、コレクションからすべてのグループを削除してから使用する方法、<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A>並べ替えられた配列をコレクションに追加するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of groups in the collection.</summary>
        <value>コレクション内のグループの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、コレクション内のグループの数を決定します。 これは、コレクションをループし、各グループで同じ操作を実行する必要がある場合に便利です。 使用することも、<xref:System.Collections.IEnumerator>によって返される、<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>コレクションを反復処理するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator used to iterate through the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> that represents the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、各グループで同じ操作を実行するコレクションを反復処理する必要がある場合に便利です。 また、グループごとに 1 回のコレクションをループできますを使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Count%2A>ループの数を決定するプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to locate in the collection.</param>
        <summary>Returns the index of the specified <see cref="T:System.Windows.Forms.ListViewGroup" /> within the collection.</summary>
        <returns>The zero-based index of the group within the collection, or -1 if the group is not in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクション内のグループのインデックスを確認するのにには、このメソッドを使用します。 これにより、たとえばを使用してコレクションを反復処理するときに、各グループのインデックスを確認する、<xref:System.Collections.IEnumerator>によって返される、<xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">The index within the collection at which to insert the group.</param>
        <param name="group">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to insert into the collection.</param>
        <summary>Inserts the specified <see cref="T:System.Windows.Forms.ListViewGroup" /> into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、既存の挿入を<xref:System.Windows.Forms.ListViewGroup>コレクション内で特定のインデックス位置。  
  
 追加することはできません、<xref:System.Windows.Forms.ListViewGroup>を複数回のコレクション。 呼び出すと、<xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A>メソッドが既にコレクション内に、挿入が失敗しただけで、グループを使用します。 使用して、<xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A>特定のグループが既にコレクション内にあるかどうかを決定するを挿入する前にメソッドです。 コレクション内のグループの位置を変更する必要があります最初にそれを削除して、目的のインデックスに挿入します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Windows.Forms.ListViewGroup" /> in the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index within the collection of the <see cref="T:System.Windows.Forms.ListViewGroup" /> to get or set.</param>
        <summary>Gets or sets the <see cref="T:System.Windows.Forms.ListViewGroup" /> at the specified index within the collection.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" />コレクション内の指定したインデックス位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、グループ、コレクション内で指定したインデックス位置を取得します。 グループのオブジェクトへの参照があるし、インデックスが必要です、使用して、<xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than 0 or greater than or equal to <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the group to get or set.</param>
        <summary>Gets or sets the <see cref="T:System.Windows.Forms.ListViewGroup" /> with the specified <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> property value.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewGroup" />指定された名前、または<see langword="null" />しない場合<see cref="T:System.Windows.Forms.ListViewGroup" />が存在します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to remove from the collection.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.ListViewGroup" /> from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グループへの参照がある場合、コレクションからグループを削除するのにには、このメソッドを使用します。 グループを削除することに注意してください、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションが項目を削除していない、<xref:System.Windows.Forms.ListView>コントロール。  
  
 特定のインデックスのグループを削除するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>メソッド代わりにします。 コレクションからすべてのグループを削除するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index within the collection of the <see cref="T:System.Windows.Forms.ListViewGroup" /> to remove.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.ListViewGroup" /> at the specified index within the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクション内のグループのインデックスがあるときに、コレクションから、グループを削除するのにには、このメソッドを使用します。 グループを削除するに注意してください、<xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType>コレクションが項目を削除していない、<xref:System.Windows.Forms.ListView>コントロール。  
  
 オブジェクトへの参照を使用してグループを削除するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>メソッド代わりにします。 コレクションからすべてのグループを削除するには、使用、<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A>メソッドです。 コレクションから項目を削除するときにコレクション内の後続の項目のインデックスを変更します。 削除された項目に関するすべての情報が削除されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewGroupCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
        <value>常に <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewGroupCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>コレクションを同期するために使用するオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to add to the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Adds a new <see cref="T:System.Windows.Forms.ListViewGroup" /> to the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>The index at which the <see cref="T:System.Windows.Forms.ListViewGroup" /> has been added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.ListViewGroup" />.  -or-  <paramref name="value" /> contains at least one <see cref="T:System.Windows.Forms.ListViewItem" /> that belongs to a <see cref="T:System.Windows.Forms.ListView" /> control other than the one that owns this <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object that represents the <see cref="T:System.Windows.Forms.ListViewGroup" /> to locate in the collection.</param>
        <summary>Determines whether the specified value is located in the collection.</summary>
        <returns>
          <see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Windows.Forms.ListViewGroup" /> contained in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to find in the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Returns the index within the collection of the specified value.</summary>
        <returns>The zero-based index of <paramref name="value" /> if it is in the collection; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The position at which the <see cref="T:System.Windows.Forms.ListViewGroup" /> is added to the collection.</param>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to add to the collection.</param>
        <summary>Inserts a <see cref="T:System.Windows.Forms.ListViewGroup" /> into the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`value`されませんが、<xref:System.Windows.Forms.ListViewGroup>コレクションに追加されていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewGroupCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection has a fixed size.</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewGroupCollection.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is read-only.</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.ListViewGroupCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to get or set.</param>
        <summary>Gets or sets the <see cref="T:System.Windows.Forms.ListViewGroup" /> at the specified index within the collection.</summary>
        <value>コレクション内の指定したインデックスにある項目を表す <see cref="T:System.Windows.Forms.ListViewGroup" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.ListViewGroup" /> to remove from the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.ListViewGroup" /> from the <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>