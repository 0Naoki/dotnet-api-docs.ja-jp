<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67bae8ba0c5cfbc1160f1f49ffdb9ff90dd48548" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37516339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e384d-101">障碍を持つユーザーに合わせてアプリケーションのユーザー インターフェイス (UI) を調整するため、ユーザー補助対応アプリケーションで使用される情報を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e384d-101">Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-102">ユーザー補助アプリケーションには、障碍を持つユーザーの使いやすさを向上させるために、アプリケーションの機能を調整できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-102">Accessibility applications can adjust features of the application to improve usability for users with disabilities.</span></span>  
  
 <span data-ttu-id="e384d-103">視覚障害のあるユーザーのニーズに準拠するソフトウェアとオペレーティング システムの機能を調整できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-103">For users who are visually impaired, you can adjust software and operating system features to comply with their needs.</span></span> <span data-ttu-id="e384d-104">たとえば、テキストやイメージを拡大し、コントラストでレンダリングできます。</span><span class="sxs-lookup"><span data-stu-id="e384d-104">For example, you can enlarge text and images and render them with a contrast.</span></span> <span data-ttu-id="e384d-105">さらに、適切な色の使用量、色盲に対応できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-105">In addition, you can accommodate color-blindness with the appropriate use of colors.</span></span> <span data-ttu-id="e384d-106">ユーザーが深刻な視覚的に障碍のある、コンピューターが画面のレビュー補助画面に表示される変換を使用してアクセスできるテキストを音声または動的に更新可能な点字表示にします。</span><span class="sxs-lookup"><span data-stu-id="e384d-106">For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.</span></span>  
  
 <span data-ttu-id="e384d-107">聴覚であるユーザー、点滅ツールバーなどの視覚的な手掛かりを使用するプログラムを設計することができます。または、テキストとして音声メッセージを表示することができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-107">For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text.</span></span> <span data-ttu-id="e384d-108">たとえば、オンにすると、`SoundSentry`機能、コントロール パネルで、ユーザー補助のオプションが、システムでは、サウンドのアラームが、ときに、visual 警告を提供します。</span><span class="sxs-lookup"><span data-stu-id="e384d-108">For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.</span></span>  
  
 <span data-ttu-id="e384d-109">モーション障碍を持つユーザーの場合にコンピューターのユーザー補助が向上を絞り込むか、キーボードとマウスの使用を排除するコントロール デザインできます。</span><span class="sxs-lookup"><span data-stu-id="e384d-109">For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility.</span></span> <span data-ttu-id="e384d-110">コントロール パネルでは、アシスタンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="e384d-110">Control Panel offers assistance.</span></span> <span data-ttu-id="e384d-111">たとえば、1 つの代替手段は、ナビゲーションのマウスの代わりにテンキーを使用するは。</span><span class="sxs-lookup"><span data-stu-id="e384d-111">For example, one alternative is to use the numeric keypad instead of the mouse for navigation.</span></span> <span data-ttu-id="e384d-112">呼ばれる別のオプション`StickyKeys`、ユーザーは、一度に 1 つのキーを入力して、同じ結果を取得する (CTRL + P) など、一度に 2 つ以上のキーを保持できません。</span><span class="sxs-lookup"><span data-stu-id="e384d-112">Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.</span></span>  
  
 <span data-ttu-id="e384d-113">Cognitive を持つユーザー、言語障碍よりニーズに対応するソフトウェア プログラムを設計したりできます。</span><span class="sxs-lookup"><span data-stu-id="e384d-113">For users with cognitive and language disabilities, you can design software programs to better accommodate their needs.</span></span> <span data-ttu-id="e384d-114">たとえば、工夫のシーケンス処理、表示、少ない単語は、小学校標準を対象としたの読解レベルを使用してこれらのユーザーが利用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-114">For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.</span></span>  
  
 <span data-ttu-id="e384d-115">強制疾患を持つユーザーは、強制のようなパターンを排除するソフトウェア プログラムをデザインできます。</span><span class="sxs-lookup"><span data-stu-id="e384d-115">For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.</span></span>  
  
 <span data-ttu-id="e384d-116">ユーザー補助アプリケーションでは、に関する情報を含むアクセシビリティの詳細については、MSDN ライブラリまたは Microsoft Web サイトでのアクセシビリティを Microsoft のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e384d-116">For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e384d-117">使用する、<xref:System.Windows.Forms.AccessibleObject>への参照を追加する必要があります、`Accessibility`と一緒にインストールされたアセンブリ、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="e384d-117">To use the <xref:System.Windows.Forms.AccessibleObject>, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="e384d-118">Windows フォームは、Active Accessibility 2.0 のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="e384d-118">Windows Forms only supports Active Accessibility 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e384d-119">ユーザー補助対応のグラフの作成を次のコード例に示しますを使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-119">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-120">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-120">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-121">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-121">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-122">グラフの凡例の実績がないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-122">Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-123">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-123">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-124">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-124">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="e384d-125">
        <para>このクラスから継承する場合は、すべてのメンバーをオーバーライドできます。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="e384d-125">
          <para>When you inherit from this class, you can override all the members.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e384d-126">
            <see cref="T:System.Windows.Forms.AccessibleObject" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-126">Initializes a new instance of the <see cref="T:System.Windows.Forms.AccessibleObject" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-127">通常、このメソッドを使用してユーザー補助オブジェクトを作成するときに、プロパティの独自の実装と、アプリケーションに固有の機能を提供するクラスのメソッドを提供しています。</span><span class="sxs-lookup"><span data-stu-id="e384d-127">Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility.IAccessible.accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-128">このオブジェクトに属する子インターフェイスの数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-128">Gets the number of child interfaces that belong to this object.</span>
          </span>
          <span data-ttu-id="e384d-129">このメンバーの説明については、<see cref="P:Accessibility.IAccessible.accChildCount" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-129">For a description of this member, see <see cref="P:Accessibility.IAccessible.accChildCount" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-130">このオブジェクトに属する子ユーザー補助オブジェクトの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-130">The number of child accessible objects that belong to this object.</span>
          </span>
          <span data-ttu-id="e384d-131">オブジェクトに子オブジェクトがない場合、この値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-131">If the object has no child objects, this value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-132">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-132">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-133">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-133">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">
          <span data-ttu-id="e384d-134">ユーザー補助オブジェクトを表す <see cref="T:Accessibility.IAccessible" /> インターフェイス/子 ID のペアにおける子 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-134">The child ID in the <see cref="T:Accessibility.IAccessible" /> interface/child ID pair that represents the accessible object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-135">指定したオブジェクトの既定のアクションを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-135">Performs the specified object's default action.</span>
          </span>
          <span data-ttu-id="e384d-136">既定のアクションがないオブジェクトもあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-136">Not all objects have a default action.</span>
          </span>
          <span data-ttu-id="e384d-137">このメンバーの説明については、<see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-137">For a description of this member, see <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-138">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-138">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-139">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-139">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-140">キーボード フォーカスを持つオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-140">Gets the object that has the keyboard focus.</span>
          </span>
          <span data-ttu-id="e384d-141">このメンバーの説明については、<see cref="P:Accessibility.IAccessible.accFocus" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-141">For a description of this member, see <see cref="P:Accessibility.IAccessible.accFocus" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-142">キーボード フォーカスを持つオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-142">The object that has keyboard focus.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-143">戻り値の型、<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>プロパティがキーボード フォーカスを持つオブジェクトに依存します。</span><span class="sxs-lookup"><span data-stu-id="e384d-143">The return value type of the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property depends on the object that has keyboard focus.</span></span> <span data-ttu-id="e384d-144">次の表に、オブジェクトの種類を<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="e384d-144">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> property returns.</span></span>  
  
|<span data-ttu-id="e384d-145">型</span><span class="sxs-lookup"><span data-stu-id="e384d-145">Type</span></span>|<span data-ttu-id="e384d-146">説明</span><span class="sxs-lookup"><span data-stu-id="e384d-146">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="e384d-147">このオブジェクトは、自体キーボード フォーカスがないし、キーボード フォーカスを持つ子が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="e384d-147">This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.</span></span>|  
|<span data-ttu-id="e384d-148">整数</span><span class="sxs-lookup"><span data-stu-id="e384d-148">integer</span></span>|<span data-ttu-id="e384d-149">現在のオブジェクトがあるキーボード フォーカスがある場合は 0それ以外の場合、キーボード フォーカスを持つ子ユーザー補助オブジェクトの子 ID。</span><span class="sxs-lookup"><span data-stu-id="e384d-149">0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="e384d-150">キーボード フォーカスを持つ子ユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-150">The child accessible object that has the keyboard focus.</span></span>|  
  
 <span data-ttu-id="e384d-151">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-152">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-152">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">
          <span data-ttu-id="e384d-153">水平方向の座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-153">The horizontal coordinate.</span>
          </span>
        </param>
        <param name="yTop">
          <span data-ttu-id="e384d-154">垂直方向の座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-154">The vertical coordinate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-155">指定した画面座標にある子オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-155">Gets the child object at the specified screen coordinates.</span>
          </span>
          <span data-ttu-id="e384d-156">このメンバーの説明については、<see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-156">For a description of this member, see <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-157">
            <paramref name="xLeft" /> および <paramref name="yTop" /> で指定された位置にあるユーザー補助オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-157">The accessible object at the point specified by <paramref name="xLeft" /> and <paramref name="yTop" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-158">次の表に、オブジェクトの種類を<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A>メソッドが返すことができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-158">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> method can return.</span></span>  
  
|<span data-ttu-id="e384d-159">型</span><span class="sxs-lookup"><span data-stu-id="e384d-159">Type</span></span>|<span data-ttu-id="e384d-160">説明</span><span class="sxs-lookup"><span data-stu-id="e384d-160">Description</span></span>|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="e384d-161">指定した方向でのユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-161">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="e384d-162">整数</span><span class="sxs-lookup"><span data-stu-id="e384d-162">integer</span></span>|<span data-ttu-id="e384d-163">0 で指定された地点は、現在のオブジェクトまたはオブジェクトの境界の外それ以外の場合、指定した方向でのユーザー補助オブジェクトを識別する子 ID。</span><span class="sxs-lookup"><span data-stu-id="e384d-163">0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.</span></span>|  
  
 <span data-ttu-id="e384d-164">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-165">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-165">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">
          <span data-ttu-id="e384d-166">このメソッドから制御が戻るときに、オブジェクトの左端の x 座標を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-166">When this method returns, contains the x-coordinate of the object’s left edge.</span>
          </span>
          <span data-ttu-id="e384d-167">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-167">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="pyTop">
          <span data-ttu-id="e384d-168">このメソッドから制御が戻るときに、オブジェクトの上端の y 座標を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-168">When this method returns, contains the y-coordinate of the object’s top edge.</span>
          </span>
          <span data-ttu-id="e384d-169">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-169">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="pcxWidth">
          <span data-ttu-id="e384d-170">このメソッドから制御が戻るときに、オブジェクトの幅を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-170">When this method returns, contains the width of the object.</span>
          </span>
          <span data-ttu-id="e384d-171">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-171">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="pcyHeight">
          <span data-ttu-id="e384d-172">このメソッドから制御が戻るときに、オブジェクトの高さを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-172">When this method returns, contains the height of the object.</span>
          </span>
          <span data-ttu-id="e384d-173">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-173">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="childID">
          <span data-ttu-id="e384d-174">ユーザー補助オブジェクトの ID 番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-174">The ID number of the accessible object.</span>
          </span>
          <span data-ttu-id="e384d-175">このパラメーターは、オブジェクトの位置を取得する場合は 0、オブジェクトの子オブジェクトのうち 1 つの位置を取得する場合は子 ID に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-175">This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-176">オブジェクトの現在の画面位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-176">Gets the object's current screen location.</span>
          </span>
          <span data-ttu-id="e384d-177">このメンバーの説明については、<see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-177">For a description of this member, see <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-178">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-178">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-179">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-179">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">
          <span data-ttu-id="e384d-180">移動する方向を指定する <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-180">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> enumerations that specifies the direction to navigate.</span>
          </span>
        </param>
        <param name="childID">
          <span data-ttu-id="e384d-181">ユーザー補助オブジェクトの ID 番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-181">The ID number of the accessible object.</span>
          </span>
          <span data-ttu-id="e384d-182">このパラメーターは、オブジェクトを開始点とする場合は 0、オブジェクトの子オブジェクトのうち 1 つを開始点とする場合は子 ID に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-182">This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-183">現在のオブジェクトを基準としてユーザー補助オブジェクトに移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-183">Navigates to an accessible object relative to the current object.</span>
          </span>
          <span data-ttu-id="e384d-184">このメンバーの説明については、<see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-184">For a description of this member, see <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-185">
            <paramref name="navDir" /> で指定されている値に配置されているユーザー補助オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-185">The accessible object positioned at the value specified by <paramref name="navDir" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-186">次の表に、オブジェクトの種類を<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A>メソッドが返すことができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-186">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> method can return.</span></span>  
  
|<span data-ttu-id="e384d-187">型</span><span class="sxs-lookup"><span data-stu-id="e384d-187">Type</span></span>|<span data-ttu-id="e384d-188">説明</span><span class="sxs-lookup"><span data-stu-id="e384d-188">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="e384d-189">システム指定のオブジェクトに類似したカスタム UI オブジェクトが含まれている場合、サーバー アプリケーションはこの関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-189">There is not an accessible object at the specified direction.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="e384d-190">指定した方向でのユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-190">The accessible object at the specified direction.</span></span>|  
|<span data-ttu-id="e384d-191">整数</span><span class="sxs-lookup"><span data-stu-id="e384d-191">integer</span></span>|<span data-ttu-id="e384d-192">サーバー アプリケーションの呼び出しをオーバーライドし、メソッドとプロパティ、カスタム オブジェクトに一致するために必要とします。</span><span class="sxs-lookup"><span data-stu-id="e384d-192">The child ID that identifies the accessible object at the specified direction.</span></span> <span data-ttu-id="e384d-193">親を使用して、<xref:Accessibility.IAccessible>とユーザー補助オブジェクトにアクセスする子の ID。</span><span class="sxs-lookup"><span data-stu-id="e384d-193">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
  
 <span data-ttu-id="e384d-194">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-195">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-195">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-196">このオブジェクトの親ユーザー補助オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-196">Gets the parent accessible object of this object.</span>
          </span>
          <span data-ttu-id="e384d-197">このメンバーの説明については、<see cref="P:Accessibility.IAccessible.accParent" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-197">For a description of this member, see <see cref="P:Accessibility.IAccessible.accParent" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-198">ユーザー補助オブジェクトの親を表す <see cref="T:Accessibility.IAccessible" />。親オブジェクトがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-198">An <see cref="T:Accessibility.IAccessible" /> that represents the parent of the accessible object, or <see langword="null" /> if there is no parent object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-199">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-200">使用できる場合にのみ、<xref:System.Windows.Forms.AccessibleObject>インスタンスにキャスト、<xref:Accessibility.IAccessible>インターフェイス.</span><span class="sxs-lookup"><span data-stu-id="e384d-200">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">
          <span data-ttu-id="e384d-201">
            <see cref="T:System.Windows.Forms.AccessibleSelection" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-201">A bitwise combination of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span>
          </span>
        </param>
        <param name="childID">
          <span data-ttu-id="e384d-202">選択対象のユーザー補助オブジェクトの ID 番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-202">The ID number of the accessible object on which to perform the selection.</span>
          </span>
          <span data-ttu-id="e384d-203">このパラメーターは、オブジェクトを選択する場合は 0、オブジェクトの子オブジェクトのうち 1 つを選択する場合は子 ID に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-203">This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-204">ユーザー補助オブジェクトの選択項目の修正またはキーボード フォーカスの移動を行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-204">Modifies the selection or moves the keyboard focus of the accessible object.</span>
          </span>
          <span data-ttu-id="e384d-205">このメンバーの説明については、<see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-205">For a description of this member, see <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-206">これを以下に示します<xref:System.Windows.Forms.AccessibleSelection>呼び出すときに指定する値`Select`複雑な選択操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="e384d-206">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="e384d-207">操作</span><span class="sxs-lookup"><span data-stu-id="e384d-207">Operation</span></span>|<span data-ttu-id="e384d-208">フラグの組み合わせ</span><span class="sxs-lookup"><span data-stu-id="e384d-208">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="e384d-209">クリックをシミュレートするには</span><span class="sxs-lookup"><span data-stu-id="e384d-209">To simulate a click</span></span>|<span data-ttu-id="e384d-210"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection></span><span class="sxs-lookup"><span data-stu-id="e384d-210"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection></span></span>|  
|<span data-ttu-id="e384d-211">Ctrl キーを押しながらクリックをシミュレートすることで、ターゲット項目を選択するには</span><span class="sxs-lookup"><span data-stu-id="e384d-211">To select a target item by simulating CTRL+click</span></span>|<span data-ttu-id="e384d-212"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection></span><span class="sxs-lookup"><span data-stu-id="e384d-212"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection></span></span>|  
|<span data-ttu-id="e384d-213">Ctrl キーを押しながらクリックをシミュレートすることで、ターゲット項目の選択を解除するには</span><span class="sxs-lookup"><span data-stu-id="e384d-213">To cancel selection of a target item by simulating CTRL+click</span></span>|<span data-ttu-id="e384d-214"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection></span><span class="sxs-lookup"><span data-stu-id="e384d-214"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection></span></span>|  
|<span data-ttu-id="e384d-215">シミュレート SHIFT + をクリックするには</span><span class="sxs-lookup"><span data-stu-id="e384d-215">To simulate SHIFT+click</span></span>|<span data-ttu-id="e384d-216"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection></span><span class="sxs-lookup"><span data-stu-id="e384d-216"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection></span></span>|  
|<span data-ttu-id="e384d-217">オブジェクトの範囲を選択し、最後のオブジェクトにフォーカスを移す</span><span class="sxs-lookup"><span data-stu-id="e384d-217">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="e384d-218">指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>選択アンカーを設定する開始オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-218">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="e384d-219">選択をもう一度呼び出すし、指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>または<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>最後のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="e384d-219">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> on the last object.</span></span>|  
|<span data-ttu-id="e384d-220">すべてのオブジェクトの選択を解除するには</span><span class="sxs-lookup"><span data-stu-id="e384d-220">To deselect all objects</span></span>|<span data-ttu-id="e384d-221">指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection>で任意のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-221">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> on any object.</span></span> <span data-ttu-id="e384d-222">このフラグは、選択した 1 つを除くすべての選択したオブジェクトを選択解除します。</span><span class="sxs-lookup"><span data-stu-id="e384d-222">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="e384d-223">選択をもう一度呼び出すし、指定<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>同一のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-223">Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> on the same object.</span></span>|  
  
 <span data-ttu-id="e384d-224">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-225">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-225">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility.IAccessible.accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-226">ユーザー補助オブジェクトの選択された子オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-226">Gets the selected child objects of an accessible object.</span>
          </span>
          <span data-ttu-id="e384d-227">このメンバーの説明については、<see cref="P:Accessibility.IAccessible.accSelection" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-227">For a description of this member, see <see cref="P:Accessibility.IAccessible.accSelection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-228">ユーザー補助オブジェクトの選択された子オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-228">The selected child objects of an accessible object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-229">次の表に、オブジェクトの種類を<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A>プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="e384d-229">The following table describes the object types that the <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> property returns</span></span>  
  
|<span data-ttu-id="e384d-230">型</span><span class="sxs-lookup"><span data-stu-id="e384d-230">Type</span></span>|<span data-ttu-id="e384d-231">説明</span><span class="sxs-lookup"><span data-stu-id="e384d-231">Description</span></span>|  
|----------|-----------------|  
|`null`|<span data-ttu-id="e384d-232">子オブジェクトが選択されていません。</span><span class="sxs-lookup"><span data-stu-id="e384d-232">No child objects are selected.</span></span>|  
|<xref:Accessibility.IAccessible>|<span data-ttu-id="e384d-233">選択されている子ユーザー補助オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-233">The child accessible object that is selected.</span></span>|  
|<span data-ttu-id="e384d-234">整数</span><span class="sxs-lookup"><span data-stu-id="e384d-234">integer</span></span>|<span data-ttu-id="e384d-235">選択されているユーザー補助オブジェクトを識別する子 ID。</span><span class="sxs-lookup"><span data-stu-id="e384d-235">The child ID that identifies the accessible object that is selected.</span></span> <span data-ttu-id="e384d-236">親を使用して、<xref:Accessibility.IAccessible>とユーザー補助オブジェクトにアクセスする子の ID。</span><span class="sxs-lookup"><span data-stu-id="e384d-236">Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.</span></span>|  
|`IEnumVARIANT`|<span data-ttu-id="e384d-237">選択されている子オブジェクトの一覧。</span><span class="sxs-lookup"><span data-stu-id="e384d-237">A list of child objects that are selected.</span></span>|  
  
 <span data-ttu-id="e384d-238">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-239">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:Accessibility.IAccessible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-239">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">To be added.</param>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-240">ユーザー補助オブジェクトの位置とサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-240">Gets the location and size of the accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-241">ユーザー補助オブジェクトの境界を表す <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-241">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the accessible object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-242"><xref:System.Windows.Forms.AccessibleObject.Bounds%2A>プロパティを画面座標で、オブジェクトの外接する四角形を取得します。</span><span class="sxs-lookup"><span data-stu-id="e384d-242">The <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property retrieves the object's bounding rectangle in screen coordinates.</span></span> <span data-ttu-id="e384d-243">オブジェクトの四角形以外の場合、このプロパティは、オブジェクト全体の領域を完全に囲む最小の四角形を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-243">If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region.</span></span> <span data-ttu-id="e384d-244">そのため、リスト ビュー項目などの四角形以外のオブジェクトで、オブジェクトの外接する四角形の座標場合が失敗する、呼び出すことによって、テスト、<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>メソッド、ため<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>-ピクセルごとに、オブジェクトの境界を決定します。</span><span class="sxs-lookup"><span data-stu-id="e384d-244">Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e384d-245">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-245">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-246">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-246">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-247">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-247">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-248">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-248">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-249">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-249">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-250">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-250">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-251">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-251">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> property.</span></span> <span data-ttu-id="e384d-252">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-252">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-253">コントロールの境界を取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-253">The bounds of control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-254">
            <para>既定の実装は、ユーザー補助オブジェクトは、オブジェクトは、システム コントロールをラップする場合、四角形の境界を返します返しますそれ以外の場合、<see cref="F:System.Drawing.Rectangle.Empty" />します。表示されているすべてのユーザー補助オブジェクトには、このメソッドをサポートする必要があります。サウンド オブジェクトは、このメソッドをサポートしていません。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-254">
              <para>The default implementation returns the accessible object's bounding rectangle if the object wraps a system control; otherwise, it returns <see cref="F:System.Drawing.Rectangle.Empty" />. All visible accessible objects must support this method. Sound objects do not support this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-255">オブジェクトの既定のアクションを説明する文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-255">Gets a string that describes the default action of the object.</span>
          </span>
          <span data-ttu-id="e384d-256">既定のアクションがないオブジェクトもあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-256">Not all objects have a default action.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-257">オブジェクトの既定のアクションの説明、またはこのオブジェクトの既定のアクションがない場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-257">A description of the default action for an object, or <see langword="null" /> if this object has no default action.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-258">文字列にはないオブジェクトの機能とその結果、オブジェクトに対して実行されるアクションについて説明します。</span><span class="sxs-lookup"><span data-stu-id="e384d-258">The string describes the action that is performed on an object, not what the object does as a result.</span></span> <span data-ttu-id="e384d-259">これは、ドキュメントを出力するツール バー ボタンに「現在のドキュメントを印刷します」のではなく、"Press"の既定のアクション</span><span class="sxs-lookup"><span data-stu-id="e384d-259">That is, a toolbar button that prints a document has a default action of "Press" rather than "Prints the current document."</span></span> <span data-ttu-id="e384d-260">オブジェクトの既定のアクションの値とを混同しないでください。</span><span class="sxs-lookup"><span data-stu-id="e384d-260">Do not confuse an object's default action with its value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-261">コントロールの既定のアクションを取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-261">The default action for the control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-262">
            <para>オブジェクトは、既定のアクションを持っているシステム コントロールをラップする場合、既定の実装がユーザー補助オブジェクトの既定のアクションを返します返しますそれ以外の場合、<see langword="null" />します。アクションを実行するコントロールだけでは、このメソッドをサポートする必要があります。すべてのオブジェクトが、既定の操作があるし、一部のオブジェクトは既定のアクションに関連付けられている必要があります、<see cref="P:System.Windows.Forms.AccessibleObject.Value" />プロパティは、次の例のようになど: チェック ボックスがオン、オフ「に」の既定のアクションと値の「オン」にします。チェック ボックスをオフに「確認」の既定のアクションと値の"オフ"にした場合。"Print"というラベルのボタンでは、「キーを押して、」の既定のアクションを持つ値はありません。静的テキスト コントロールまたは"Printer"を示す編集コントロールは、既定のアクションはありませんが、「プリンター」の値はオブジェクトの<see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />動詞または動詞の短い語句をプロパティとして使用することがあります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-262">
              <para>The default implementation returns the accessible object's default action if the object wraps a system control that has a default action; otherwise, it returns <see langword="null" />. Only controls that perform actions should support this method. Not all objects have default actions, and some objects might have a default action that is related to its <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> property, such as in the following examples: A selected check box has a default action of "Uncheck" and a value of "Checked." A cleared check box has a default action of "Check" and a value of "Unchecked." A button labeled "Print" has a default action of "Press," with no value. A static text control or an edit control that shows "Printer" has no default action, but would have a value of "Printer." An object's <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> property should be a verb or a short verb phrase.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-263">指定したオブジェクトの外観を説明する文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-263">Gets a string that describes the visual appearance of the specified object.</span>
          </span>
          <span data-ttu-id="e384d-264">説明が用意されていないオブジェクトもあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-264">Not all objects have a description.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-265">ユーザーから見たオブジェクトの外観の説明。説明がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-265">A description of the object's visual appearance to the user, or <see langword="null" /> if the object does not have a description.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-266">このプロパティは、ユーザーに、オブジェクトの視覚的な外観を示します。</span><span class="sxs-lookup"><span data-stu-id="e384d-266">This property describes the object's visual appearance to the user.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-267">コントロールの説明を取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-267">The description for the control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-268">
            <para>既定の実装を返します、アクセス可能なオブジェクトは、システム コントロールをラップする場合、オブジェクトの説明返しますそれ以外の場合、<see langword="null" />します。説明は、通常、視覚または視覚障碍のあるユーザーのコンテキストを大きい値を提供する使用します。これは、コンテキスト検索やその他のアプリケーションも使用できます。サーバーがサポートする必要があります、<see cref="P:System.Windows.Forms.AccessibleObject.Description" />プロパティ説明が、明らかな場合、または冗長である場合に基づくオブジェクトの<see cref="P:System.Windows.Forms.AccessibleObject.Name" />、 <see cref="P:System.Windows.Forms.AccessibleObject.Role" />、 <see cref="P:System.Windows.Forms.AccessibleObject.State" />、および<see cref="P:System.Windows.Forms.AccessibleObject.Value" />プロパティ。たとえば、詳細については、必要に"OK"ボタンはありませんが、サボテンの画像を表示するボタンは。<see cref="P:System.Windows.Forms.AccessibleObject.Name" />、 <see cref="P:System.Windows.Forms.AccessibleObject.Role" />、そして<see cref="P:System.Windows.Forms.AccessibleObject.Help" />サボテン ボタンのプロパティがその目的について説明しますが、<see cref="P:System.Windows.Forms.AccessibleObject.Description" />プロパティは、「サボテンの画像を表示するボタン」のような小さい具体的な情報を伝達します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-268">
              <para>The default implementation returns the accessible object's description if the object wraps a system control; otherwise, it returns <see langword="null" />. The description is typically used to provide greater context for low-vision or blind users. It can also be used for context searching or other applications. Servers need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property if the description is not obvious, or if it is redundant based on the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, and <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> properties. For example, a button with "OK" does not need additional information, but a button that shows a picture of a cactus would. The <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, and perhaps <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> properties for the cactus button describe its purpose, but the <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> property conveys information that is less tangible, like "A button that shows a picture of a cactus".</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e384d-269">ユーザー補助オブジェクトに関連付けられた既定のアクションを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-269">Performs the default action associated with this accessible object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-270">クライアントは、オブジェクトの検査することによって、オブジェクトの既定のアクションを取得できる<xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-270">Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property.</span></span> <span data-ttu-id="e384d-271">クライアントが使用できるオートメーション (サポートされている) 場合の代わりに<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>オブジェクトの既定のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="e384d-271">A client can use automation (if supported) instead of <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> to perform an object's default action.</span></span> <span data-ttu-id="e384d-272">ただし、<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>オブジェクトを実行する簡単な方法は、アクションに最もよく使用を提供します。</span><span class="sxs-lookup"><span data-stu-id="e384d-272">However, <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> provides an easy way to perform an object's most commonly used action.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-273">コントロールの既定のアクションを実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-273">The default action for the control cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-274">
            <para>システム指定のユーザー インターフェイス要素によって実行される既定のアクションは、キーボードの状態に依存します。場合など、SHIFT 修飾子キー、alt キー、または ctrl キーを押しは停止されます (または、ユーザー操作によってプログラムで) と<see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />を呼び出すと、既定のアクションできない可能性があります、これらのキーと下矢は限らないと同じです。すべてのオブジェクトでは、既定のアクションがあります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-274">
              <para>The default action performed by system-provided user interface elements depends on the keyboard state. That is, if a modifier key such as SHIFT, ALT, or CTRL is down (either by a user action or programmatically) when <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> is called, the default action might not be the same as when those keys are not down. Not all objects have a default action.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e384d-275">アクセス可能な子の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-275">The zero-based index of the accessible child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-276">指定されたインデックスに対応するアクセス可能な子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-276">Retrieves the accessible child corresponding to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-277">指定したインデックスに対応する子ユーザー補助オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-277">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e384d-278">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-278">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-279">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-279">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-280">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-280">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-281">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-281">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-282">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-282">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-283">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-283">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-284">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-284">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method.</span></span> <span data-ttu-id="e384d-285">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-285">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-286">
            <para>すべてのユーザー補助オブジェクトには、このプロパティをサポートする必要があります。返すかどうか、メソッドがオーバーライドされていない、<see langword="null" />します。ユーザー補助オブジェクトが子ユーザー補助を提供する必要がある場合は、このメソッドをオーバーライドします。インデックスが有効でないかどうかは、このメソッドが返す必要があります<see langword="null" />します。オーバーライドする必要があるこのメソッドをオーバーライドするときに<see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-286">
              <para>All accessible objects must support this property. If the method is not overridden, it returns <see langword="null" />. Override this method when an accessible object needs to provide custom accessible children. If the index is invalid, then this method should return <see langword="null" />. When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e384d-287">ユーザー補助オブジェクトに属する子の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-287">Retrieves the number of children belonging to an accessible object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-288">ユーザー補助オブジェクトに属する子の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-288">The number of children belonging to an accessible object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e384d-289">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-289">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-290">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-290">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-291">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-291">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-292">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-292">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-293">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-293">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-294">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-294">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-295">この例でのオーバーライドを示しています、<xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-295">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> method.</span></span> <span data-ttu-id="e384d-296">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-296">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-297">
            <para>すべてのオブジェクトには、このプロパティをサポートする必要があります。既定の実装では、-1 が返されます。ユーザー補助オブジェクトが子ユーザー補助を提供する必要がある場合は、このメソッドをオーバーライドします。オーバーライドする必要があるこのメソッドをオーバーライドするときに<see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-297">
              <para>All objects must support this property. The default implementation returns -1. Override this method when an accessible object needs to provide custom accessible children. When you override this method, you must also override <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e384d-298">キーボード フォーカスを持つオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-298">Retrieves the object that has the keyboard focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-299">現在フォーカスを取得している子を示す <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-299">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child.</span>
          </span>
          <span data-ttu-id="e384d-300">オブジェクト自体がフォーカスを取得している場合は、呼び出し元のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-300">This method returns the calling object if the object itself is focused.</span>
          </span>
          <span data-ttu-id="e384d-301">どのオブジェクトにもフォーカスがない場合は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-301">Returns <see langword="null" /> if no object has focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-302">キーボード フォーカスの概念に関連するアクティブなウィンドウのです。</span><span class="sxs-lookup"><span data-stu-id="e384d-302">The concept of keyboard focus is related to that of an active window.</span></span> <span data-ttu-id="e384d-303">アクティブなウィンドウは、ユーザーが作業をフォア グラウンド ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="e384d-303">An active window is the foreground window in which the user is working.</span></span> <span data-ttu-id="e384d-304">キーボード フォーカスを持つオブジェクトは、アクティブなウィンドウまたはアクティブなウィンドウの子オブジェクトのいずれかです。</span><span class="sxs-lookup"><span data-stu-id="e384d-304">The object with the keyboard focus is either the active window or a child object of the active window.</span></span>  
  
 <span data-ttu-id="e384d-305">オブジェクトまたはコンテナー内の項目を 1 つだけの場合は、任意の時点で、フォーカスを設定できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-305">Only one object or item within a container can have the focus at any one time.</span></span> <span data-ttu-id="e384d-306">キーボード フォーカスを持つオブジェクトは、必ずしも選択したオブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="e384d-306">The object with the keyboard focus is not necessarily the selected object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-307">コントロールを取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-307">The control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-308">
            <para>キーボード フォーカスを受け取ることができるすべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-308">
              <para>All objects that can receive the keyboard focus must support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="e384d-309">このプロパティには、ユーザー補助オブジェクトに関連付けられたヘルプ ファイルへのパスが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-309">On return, this property contains the path to the Help file associated with this accessible object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-310">ヘルプ トピックの識別子と、このユーザー補助オブジェクトに関連付けられたヘルプ ファイルへのパスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-310">Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-311">ヘルプ トピックの識別子。ヘルプ トピックがない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-311">An identifier for a Help topic, or -1 if there is no Help topic.</span>
          </span>
          <span data-ttu-id="e384d-312">
            <paramref name="fileName" /> パラメーターには、このユーザー補助オブジェクトに関連付けられたヘルプ ファイルへのパスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-312">On return, the <paramref name="fileName" /> parameter contains the path to the Help file associated with this accessible object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-313">ヘルプを表示する、 <xref:System.Windows.Forms.AccessibleObject> 、Windows のヘルプ システムを使用して渡すことができます、ファイル名とトピック ID を適切な<xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType>メソッドの<xref:System.Windows.Forms.Help>します。</span><span class="sxs-lookup"><span data-stu-id="e384d-313">To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> method of <xref:System.Windows.Forms.Help>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-314">コントロールのヘルプ トピックを取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-314">The Help topic for the control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-315">
            <para>すべてのオブジェクトは、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-315">
              <para>Not all objects need to support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e384d-316">現在選択されている子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-316">Retrieves the currently selected child.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-317">現在選択されている子を表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-317">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child.</span>
          </span>
          <span data-ttu-id="e384d-318">オブジェクト自体が選択されている場合は、呼び出し元のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-318">This method returns the calling object if the object itself is selected.</span>
          </span>
          <span data-ttu-id="e384d-319">現在選択されている子がなく、オブジェクト自体がフォーカスを受け取っていない場合は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-319">Returns <see langword="null" /> if is no child is currently selected and the object itself does not have focus.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-320">選択されている子を取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-320">The selected child cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-321">
            <para>選択できるすべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-321">
              <para>All objects that can be selected should support this property.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-322">オブジェクトの機能または使用方法の説明を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-322">Gets a description of what the object does or how the object is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-323">オブジェクトの機能または使用方法の説明を示す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-323">A <see cref="T:System.String" /> that contains the description of what the object does or how the object is used.</span>
          </span>
          <span data-ttu-id="e384d-324">ヘルプが定義されていない場合は <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-324">Returns <see langword="null" /> if no help is defined.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-325">コントロールのヘルプ文字列を取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-325">The help string for the control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-326">
            <para>すべてのオブジェクトは、このプロパティをサポートする必要があります。通常、このプロパティがツールヒント スタイル情報が含まれるかは、そのオブジェクトまたはその使用方法を説明するために使用します。たとえば、<see cref="P:System.Windows.Forms.AccessibleObject.Help" />プリンターを表示するツール バー ボタンのプロパティ"現在のドキュメントを印刷します"。テキスト、<see cref="P:System.Windows.Forms.AccessibleObject.Help" />プロパティは、ユーザー インターフェイス内で一意にする必要はありません。サーバーがサポートする必要はありません、<see cref="P:System.Windows.Forms.AccessibleObject.Help" />プロパティが他のプロパティ、オブジェクトに関する十分な情報を提供する場合 's 目的し、どのようなアクション、オブジェクトが実行可能性があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-326">
              <para>Not all objects need to support this property. Typically, this property contains ToolTip style information that is used either to describe what the object does or how to use it. For example, the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property for a toolbar button that shows a printer might be "Prints the current document." The text for the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property does not have to be unique within the user interface. Servers do not need to support the <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> property if other properties provide sufficient information about the object's purpose and what actions the object might perform.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e384d-327">水平画面座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-327">The horizontal screen coordinate.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e384d-328">垂直画面座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-328">The vertical screen coordinate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-329">指定した画面座標にある子オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-329">Retrieves the child object at the specified screen coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-330">指定した画面座標にある子オブジェクトを表す <see cref="T:System.Windows.Forms.AccessibleObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-330">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates.</span>
          </span>
          <span data-ttu-id="e384d-331">オブジェクト自体が指定した位置にある場合は、呼び出し元のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-331">This method returns the calling object if the object itself is at the location specified.</span>
          </span>
          <span data-ttu-id="e384d-332">テスト位置にオブジェクトがない場合は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-332">Returns <see langword="null" /> if no object is at the tested location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-333">リスト ビュー項目などの四角形以外のオブジェクトで、オブジェクトの座標の外接する四角形によって取得された<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>でテストする場合に失敗することが<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>ため、 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> -ピクセルごとに、オブジェクトの境界を決定します。</span><span class="sxs-lookup"><span data-stu-id="e384d-333">For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-334">コントロールをヒット テストできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-334">The control cannot be hit tested.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-335">
            <para>すべてのビジュアル オブジェクトは、このメソッドをサポートする必要があります。サウンド オブジェクトでは、これはサポートされません。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-335">
              <para>All visual objects must support this method; sound objects do not support it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-336">ユーザー補助オブジェクトのショートカット キーまたはアクセス キーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-336">Gets the shortcut key or access key for the accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-337">ユーザー補助オブジェクトのショートカット キーまたはアクセス キー。ショートカット キーが関連付けられていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-337">The shortcut key or access key for the accessible object, or <see langword="null" /> if there is no shortcut key associated with the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-338">アクセス キーをアクセラレータ キーとも呼ばれますが、メニューのメニューのボタン、またはその他のコントロールのラベルのテキストに下線付きの文字。</span><span class="sxs-lookup"><span data-stu-id="e384d-338">An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control.</span></span> <span data-ttu-id="e384d-339">開くには、ALT + F など、指定された下線の付いたキーを押しながら ALT キーを押すことによって、ユーザーがメニューを表示するなど、`File`メニュー。</span><span class="sxs-lookup"><span data-stu-id="e384d-339">For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu.</span></span> <span data-ttu-id="e384d-340">メニュー項目のアクセス キーを使用するには、項目を含むメニューをアクティブにある必要があります。</span><span class="sxs-lookup"><span data-stu-id="e384d-340">To use the access key of a menu item, the menu containing the item must be active.</span></span> <span data-ttu-id="e384d-341">ツール バー ボタンやメニュー項目などのコントロールには、多くの場合、関連付けられているショートカット キーがあります。</span><span class="sxs-lookup"><span data-stu-id="e384d-341">Controls such as toolbar buttons and menu items often have an associated shortcut key.</span></span> <span data-ttu-id="e384d-342">メニュー項目には、アクセス キーと関連付けられているショートカット キーの両方を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-342">A menu item can have both an access key and a shortcut key associated with it.</span></span> <span data-ttu-id="e384d-343">場合の値、<xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A>プロパティが 1 つの文字で、アクセス キーが前提としています。</span><span class="sxs-lookup"><span data-stu-id="e384d-343">If the value of the <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> property is a single character, you can assume it is an access key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-344">コントロールのショートカットを取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-344">The shortcut for the control cannot be retrieved.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-345">
            <para>ショートカット キーまたはアクセス キーを持つすべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-345">
              <para>All objects that have a shortcut key or access key should support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-346">オブジェクト名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-346">Gets or sets the object name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-347">オブジェクト名。設定されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-347">The object name, or <see langword="null" /> if the property has not been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-348"><xref:System.Windows.Forms.AccessibleObject.Name%2A>プロパティは、識別、検索、またはユーザーのオブジェクトを発表するクライアントによって使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="e384d-348">The <xref:System.Windows.Forms.AccessibleObject.Name%2A> property is a string used by clients to identify, find, or announce an object for the user.</span></span> <span data-ttu-id="e384d-349">子オブジェクトの名前にアクセスするには、まず<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を取得する名前を持つ子のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e384d-349">To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e384d-350">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-350">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-351">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-351">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-352">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-352">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-353">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-353">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-354">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-354">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-355">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-355">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-356">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.Name%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-356">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Name%2A> property.</span></span> <span data-ttu-id="e384d-357">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-357">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-358">コントロール名を取得または設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-358">The name of the control cannot be retrieved or set.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-359">
            <para>すべてのオブジェクトには、このプロパティをサポートする必要があります。オブジェクトの名前は、ユーザーがオブジェクトの意味や目的を理解できるように、直感的なことがあります。また、いることを確認、<see langword="Name" />プロパティは、親、兄弟オブジェクトを基準とした一意です。テーブル内のナビゲーションは、一部のユーザーに特に困難な問題を表示します。そのため、サーバー開発者くださいテーブル セル名できるだけわかりやすかった。たとえば、行、"A1"など、その列の名前を組み合わせることでセルの名前を作成する可能性があります。ただし、通常はお勧め"Karin、年 2 月"などのわかりやすい名前を使用するにはアイコン、メニューのチェック ボックス、コンボ ボックス、およびその他のコントロールなど、多くのオブジェクトでは、ユーザーに表示されるラベルが付いています。オブジェクトのユーザーに表示されるラベルに使用する必要があります<see cref="P:System.Windows.Forms.AccessibleObject.Name" />プロパティ。詳細については、次を参照してください。、<see cref="P:System.Windows.Forms.AccessibleObject.Name" />プロパティ。メニューまたはボタンのテキストを使用している場合、<see cref="P:System.Windows.Forms.AccessibleObject.Name" />プロパティ、アンパサンドを取り除く (&amp;) キーボード アクセス キーをマークします。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-359">
              <para>All objects should support this property. An object's name should be intuitive so that users understand the object's meaning or purpose. Also, ensure that the <see langword="Name" /> property is unique relative to any sibling objects in the parent. Navigation within tables presents especially difficult problems for some users. Therefore, server developers should make table cell names as descriptive as possible. For example, you might create a cell name by combining the names of the row and column it occupies, such as "A1." However, it is generally better to use more descriptive names, such as "Karin, February." Many objects, such as icons, menus, check boxes, combo boxes, and other controls, have labels that are displayed to users. Any label displayed to users should be used for the object's <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property. For more information, see the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> Property.  If you are using menu or button text for the <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> property, strip out the ampersands (&amp;) that mark the keyboard access keys.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">
          <span data-ttu-id="e384d-360">
            <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-360">One of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-361">他のユーザー補助オブジェクトに移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-361">Navigates to another accessible object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-362">
            <see cref="T:System.Windows.Forms.AccessibleObject" /> 値の 1 つを表す <see cref="T:System.Windows.Forms.AccessibleNavigation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-362">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents one of the <see cref="T:System.Windows.Forms.AccessibleNavigation" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-363">ナビゲーション、空間と、論理は、常に、コンテナー内のユーザー インターフェイス要素に制限します。</span><span class="sxs-lookup"><span data-stu-id="e384d-363">Navigation, both spatial and logical, is always restricted to the user interface elements within a container.</span></span> <span data-ttu-id="e384d-364">空間のナビゲーションでは、クライアントが開始オブジェクトの兄弟にのみ移動できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-364">With spatial navigation, clients can navigate only to a sibling of the starting object.</span></span> <span data-ttu-id="e384d-365">論理ナビゲーションに使用される、ナビゲーション フラグによって、クライアントはまたは開始オブジェクトの兄弟のいずれかの子を移動できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-365">Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object.</span></span> <span data-ttu-id="e384d-366">このメソッドは、選択またはフォーカスは変更されません。</span><span class="sxs-lookup"><span data-stu-id="e384d-366">This method does not change the selection or focus.</span></span> <span data-ttu-id="e384d-367">フォーカスを変更するか、オブジェクトを選択するを使用して、<xref:System.Windows.Forms.AccessibleObject.Select%2A>します。</span><span class="sxs-lookup"><span data-stu-id="e384d-367">To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>.</span></span> <span data-ttu-id="e384d-368"><xref:System.Windows.Forms.AccessibleObject.Navigate%2A>メソッドが定義されている画面の場所が、ユーザー インターフェイス要素のみを取得します。</span><span class="sxs-lookup"><span data-stu-id="e384d-368">The <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method retrieves only user interface elements that have a defined screen location.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e384d-369">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-369">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-370">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-370">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-371">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-371">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-372">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-372">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-373">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-373">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-374">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-374">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-375">この例でのオーバーライドを示しています、<xref:System.Windows.Forms.AccessibleObject.Navigate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-375">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> method.</span></span> <span data-ttu-id="e384d-376">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-376">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-377">移動に失敗しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-377">The navigation attempt fails.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-378">
            <para>すべてのビジュアル オブジェクトは、このメソッドをサポートする必要があります。オブジェクトの状態を持つ場合<see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />、この非表示のオブジェクトへの移動が失敗する可能性があります。メニュー、メニュー アイテムをポップアップ メニューなどの一部のシステム定義のインターフェイス要素では、表示されていないオブジェクトへの移動を許可します。ただし、その他のシステム定義のユーザー インターフェイス要素では、このサポートしていません。可能であれば、サーバーでは表示されず、オブジェクトへのナビゲーションをサポートする必要がありますが、このサポートは必要ありませんし、クライアントは期待できません。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-378">
              <para>All visual objects must support this method. If an object has the state <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, navigation to this hidden object might fail. Some system-defined interface elements such as menus, menu items, and pop-up menus allow navigation to objects that are not visible. However, other system-defined user interface elements do not support this. If possible, servers should support navigation to objects that are not visible, but this support is not required and clients should not expect it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-379">ユーザー補助オブジェクトの親を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-379">Gets the parent of an accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-380">ユーザー補助オブジェクトの親を表す <see cref="T:System.Windows.Forms.AccessibleObject" />。親オブジェクトがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-380">An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or <see langword="null" /> if there is no parent object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e384d-381">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-381">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-382">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-382">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-383">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-383">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-384">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-384">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-385">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-385">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-386">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-386">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-387">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.Parent%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-387">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Parent%2A> property.</span></span> <span data-ttu-id="e384d-388">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-388">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-389">
            <para>すべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-389">
              <para>All objects should support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-390">ユーザー補助オブジェクトのロールを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-390">Gets the role of this accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-391">
            <see cref="T:System.Windows.Forms.AccessibleRole" /> 値の 1 つ。役割が指定されていない場合は <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-391">One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-392">オブジェクトの役割は、オブジェクトの関数について説明することができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-392">The role of the object helps describe the function of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e384d-393">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-393">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-394">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-394">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-395">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-395">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-396">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-396">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-397">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-397">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-398">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-398">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-399">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.Role%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-399">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.Role%2A> property.</span></span> <span data-ttu-id="e384d-400">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-400">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-401">
            <para>すべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-401">
              <para>All objects should support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">
          <span data-ttu-id="e384d-402">
            <see cref="T:System.Windows.Forms.AccessibleSelection" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-402">One of the <see cref="T:System.Windows.Forms.AccessibleSelection" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-403">ユーザー補助オブジェクトの選択項目の修正またはキーボード フォーカスの移動を行います。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-403">Modifies the selection or moves the keyboard focus of the accessible object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-404">アプリケーションでは、複雑な選択操作を実行するのにこのメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-404">Applications can use this method to perform complex selection operations.</span></span>  
  
 <span data-ttu-id="e384d-405">これを以下に示します<xref:System.Windows.Forms.AccessibleSelection>呼び出すときに指定する値<xref:System.Windows.Forms.AccessibleObject.Select%2A>複雑な選択操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="e384d-405">The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling <xref:System.Windows.Forms.AccessibleObject.Select%2A> to perform complex selection operations.</span></span>  
  
|<span data-ttu-id="e384d-406">操作</span><span class="sxs-lookup"><span data-stu-id="e384d-406">Operation</span></span>|<span data-ttu-id="e384d-407">フラグの組み合わせ</span><span class="sxs-lookup"><span data-stu-id="e384d-407">Flag Combination</span></span>|  
|---------------|----------------------|  
|<span data-ttu-id="e384d-408">クリックをシミュレートするには</span><span class="sxs-lookup"><span data-stu-id="e384d-408">To simulate a click</span></span>|<span data-ttu-id="e384d-409"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **注:** ユーザーは独自のアプリケーション内から呼び出された場合は、この組み合わせには、必要な制御は選択しません。</span><span class="sxs-lookup"><span data-stu-id="e384d-409"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Note:**  This combination will not select the desired control if called from within your own application.</span></span> <span data-ttu-id="e384d-410">外部アプリケーションから呼び出された場合に、目的の効果をただし、そのがあります。</span><span class="sxs-lookup"><span data-stu-id="e384d-410">It will have the desired effect, however, if called from an external application.</span></span>|  
|<span data-ttu-id="e384d-411">Ctrl キーを押しながらクリックをシミュレートすることで、ターゲット項目を選択するには</span><span class="sxs-lookup"><span data-stu-id="e384d-411">To select a target item by simulating CTRL + click</span></span>|<span data-ttu-id="e384d-412"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e384d-412"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="e384d-413">Ctrl キーを押しながらクリックをシミュレートすることで、ターゲット項目の選択を解除するには</span><span class="sxs-lookup"><span data-stu-id="e384d-413">To cancel selection of a target item by simulating CTRL + click</span></span>|<span data-ttu-id="e384d-414"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e384d-414"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="e384d-415">シミュレート SHIFT + をクリックするには</span><span class="sxs-lookup"><span data-stu-id="e384d-415">To simulate SHIFT + click</span></span>|<span data-ttu-id="e384d-416"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e384d-416"><xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="e384d-417">オブジェクトの範囲を選択し、最後のオブジェクトにフォーカスを移す</span><span class="sxs-lookup"><span data-stu-id="e384d-417">To select a range of objects and put focus on the last object</span></span>|<span data-ttu-id="e384d-418">指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>選択アンカーを設定する開始オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-418">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> on the starting object to set the selection anchor.</span></span> <span data-ttu-id="e384d-419">呼び出して<xref:System.Windows.Forms.AccessibleObject.Select%2A>もう一度指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>で最後のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-419">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>`OR`<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> on the last object.</span></span>|  
|<span data-ttu-id="e384d-420">すべてのオブジェクトの選択を解除するには</span><span class="sxs-lookup"><span data-stu-id="e384d-420">To deselect all objects</span></span>|<span data-ttu-id="e384d-421">指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType>で任意のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-421">Specify <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> on any object.</span></span> <span data-ttu-id="e384d-422">このフラグは、選択した 1 つを除くすべての選択したオブジェクトを選択解除します。</span><span class="sxs-lookup"><span data-stu-id="e384d-422">This flag deselects all selected objects except the one just selected.</span></span> <span data-ttu-id="e384d-423">呼び出して<xref:System.Windows.Forms.AccessibleObject.Select%2A>もう一度指定と<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>同一のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e384d-423">Then call <xref:System.Windows.Forms.AccessibleObject.Select%2A> again and specify <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> on the same object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e384d-424">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-424">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-425">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-425">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-426">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-426">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-427">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-427">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-428">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-428">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-429">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-429">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-430">この例でのオーバーライドを示しています、<xref:System.Windows.Forms.AccessibleObject.Select%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-430">This code demonstrates shows overriding the <xref:System.Windows.Forms.AccessibleObject.Select%2A> method.</span></span> <span data-ttu-id="e384d-431">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-431">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-432">選択を実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-432">The selection cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-433">
            <para>すべてのオブジェクトを選択するか、キーボード フォーカスを受け取るには、このメソッドをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-433">
              <para>All objects that can be selected or receive the keyboard focus must support this method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-434">ユーザー補助オブジェクトの状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-434">Gets the state of this accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-435">
            <see cref="T:System.Windows.Forms.AccessibleStates" /> 値の 1 つ。状態が設定されていない場合は <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-435">One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e384d-436">次の例では、ユーザー補助対応のグラフの作成を使用して、制御、<xref:System.Windows.Forms.AccessibleObject>と<xref:System.Windows.Forms.Control.ControlAccessibleObject>アクセス可能な情報を公開するクラス。</span><span class="sxs-lookup"><span data-stu-id="e384d-436">The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="e384d-437">コントロールは、凡例と共に 2 つの曲線をプロットします。</span><span class="sxs-lookup"><span data-stu-id="e384d-437">The control plots two curves along with a legend.</span></span> <span data-ttu-id="e384d-438">`ChartControlAccessibleObject`から派生したクラス`ControlAccessibleObject`で使用されて、<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>グラフ コントロールのカスタムのアクセス可能な情報を提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-438">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="e384d-439">グラフの凡例は、実際はないため<xref:System.Windows.Forms.Control>-ベースの制御が描画される代わりに、組み込みのアクセス可能な情報がない、グラフ コントロールでします。</span><span class="sxs-lookup"><span data-stu-id="e384d-439">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information.</span></span> <span data-ttu-id="e384d-440">このため、`ChartControlAccessibleObject`オーバーライド、<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>を返すメソッドを`CurveLegendAccessibleObject`凡例の各部分にアクセスできる情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-440">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="e384d-441">ユーザー補助対応アプリケーションでは、このコントロールを使用すると、コントロールは、アクセスに必要な情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-441">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="e384d-442">このコードの抜粋を示しますのオーバーライド、<xref:System.Windows.Forms.AccessibleObject.State%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-442">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.AccessibleObject.State%2A> property.</span></span> <span data-ttu-id="e384d-443">参照してください、<xref:System.Windows.Forms.AccessibleObject>完全なコード例では、クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="e384d-443">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e384d-444">
            <para>すべてのオブジェクトには、このプロパティをサポートする必要があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-444">
              <para>All objects should support this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-445">検索するフィールドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-445">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-446">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-446">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-447">指定したフィールドとバインディング フラグに対応する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-447">Gets the <see cref="T:System.Reflection.FieldInfo" /> object corresponding to the specified field and binding flag.</span>
          </span>
          <span data-ttu-id="e384d-448">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-448">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-449">
            <paramref name="bindingAttr" /> で指定した検索制約と一致する名前付きオブジェクトのフィールド情報を格納する <see cref="T:System.Reflection.FieldInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-449">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-450">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-450">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-451">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-451">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="e384d-452">オブジェクトに複数のフィールドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-452">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-453">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-453">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-454">現在のクラスのすべてのフィールドに対応する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-454">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects corresponding to all fields of the current class.</span>
          </span>
          <span data-ttu-id="e384d-455">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-455">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-456">
            <paramref name="bindingAttr" /> で指定した検索制約と一致するこのリフレクション オブジェクトのすべてのフィールド情報を格納する <see cref="T:System.Reflection.FieldInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-456">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-457">各フィールドには、一意の名前をいる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e384d-457">Each field must have a unique name.</span></span> <span data-ttu-id="e384d-458"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>フラグは、非パブリック フィールドが検索に含まれることを指定します。</span><span class="sxs-lookup"><span data-stu-id="e384d-458">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that nonpublic fields are included in the search.</span></span> <span data-ttu-id="e384d-459"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>フラグは、パブリック フィールドが検索に含まれることを指定します。</span><span class="sxs-lookup"><span data-stu-id="e384d-459">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public fields are included in the search.</span></span>  
  
 <span data-ttu-id="e384d-460">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-461">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-461">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-462">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-462">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-463">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-463">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-464">すべてのパブリック メンバーまたは指定した名前と一致するすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-464">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span>
          </span>
          <span data-ttu-id="e384d-465">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-465">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-466">name パラメーターに一致する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-466">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the name parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-467">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-467">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-468">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-468">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-469">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-469">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-470">すべてのパブリック メンバーまたは現在のクラスのすべてのメンバーに対応する <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-470">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding either to all public members or to all members of the current class.</span>
          </span>
          <span data-ttu-id="e384d-471">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-471">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-472">このリフレクション オブジェクトのすべてのメンバー情報が格納されている <see cref="T:System.Reflection.MemberInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-472">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-473">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-473">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-474">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-474">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-475">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-475">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-476">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-476">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-477">指定した検索制約の下で、指定したメソッドに対応する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-477">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method under specified search constraints.</span>
          </span>
          <span data-ttu-id="e384d-478">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-478">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-479">メソッド名、および <paramref name="bindingAttr" /> で指定した検索制約と一致するメソッド情報を格納する <see cref="T:System.Reflection.MethodInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-479">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-480">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-480">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-481">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-481">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="e384d-482">オブジェクトに複数のメソッドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-482">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-483">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-483">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-484">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-484">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="e384d-485">このメソッドに関連するプロパティが含まれ、<see cref="T:System.Reflection.Binder" /> を実装するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-485">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e384d-486">オーバーロードされたメソッドからの選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-486">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="e384d-487">型が変更されているパラメーター シグネチャでバインドを機能させるために使われるパラメーター修飾子の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-487">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-488">オーバーロードされたメソッドの中から選択する Type 配列を使用して、指定したメソッドに対応する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-488">Gets a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a Type array to choose from among overloaded methods.</span>
          </span>
          <span data-ttu-id="e384d-489">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-489">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-490">指定したすべてのパラメーターが一致する要求されたメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-490">The requested method that matches all the specified parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-491">戻り値は、メソッド名に基づいて一致、<xref:System.Reflection.BindingFlags?displayProperty=nameWithType>列挙型で指定された型の変換の種類、`binder`パラメーターでオーバー ロードでは、および<xref:System.Reflection.ParameterInfo?displayProperty=nameWithType>メソッドのシグネチャを記述します。</span><span class="sxs-lookup"><span data-stu-id="e384d-491">The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> that describes the signature of the method.</span></span>  
  
 <span data-ttu-id="e384d-492">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-492">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-493">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-493">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="e384d-494">オブジェクトに複数のメソッドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-494">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-495">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-495">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-496">すべてのパブリック メソッドまたは現在のクラスのすべてのメソッドの <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-496">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span>
          </span>
          <span data-ttu-id="e384d-497">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-497">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-498">
            <see langword="bindingAttr" /> で指定した検索制約と一致するこのリフレクション オブジェクトに対して定義されているすべてのメソッドを格納する <see cref="T:System.Reflection.MethodInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-498">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <see langword="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-499">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-500">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-500">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-501">検索の制御に使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-501">The binding attribute used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-502">すべてのパブリック プロパティまたは現在のクラスのすべてのプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-502">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span>
          </span>
          <span data-ttu-id="e384d-503">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-503">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-504">リフレクション オブジェクトで定義されているすべてのプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-504">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-505">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-505">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-506">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-506">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-507">検索するプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-507">The name of the property to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-508">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-508">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-509">指定した検索制約の下で、指定したプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-509">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span>
          </span>
          <span data-ttu-id="e384d-510">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-510">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-511">
            <paramref name="bindingAttr" /> で指定された検索制約に一致する見つかったプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクト。プロパティが見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-511">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-512">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-513">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-513">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="e384d-514">オブジェクトに複数のメソッドが同じ名前で実装されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-514">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-515">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-515">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="e384d-516">検索を制御するために使用されるバインディング属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-516">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="e384d-517">このメソッドに関連するプロパティが含まれ、バインダーを実装するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-517">An object that implements Binder, containing properties related to this method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="e384d-518">オーバーロードされたメソッドからの選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-518">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e384d-519">型が変更されているパラメーター シグネチャでバインドを機能させるために使われるパラメーター修飾子の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-519">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="e384d-520">パラメーター修飾子の選択に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-520">An array used to choose the parameter modifiers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-521">指定した検索制約で、指定したプロパティに対応する <see cref="T:System.Reflection.PropertyInfo" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-521">Gets a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property with specified search constraints.</span>
          </span>
          <span data-ttu-id="e384d-522">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-522">For a description of this member, see <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-523">指定した名前のプロパティがこのリフレクション オブジェクトで見つかった場合は、見つかったプロパティの <see cref="T:System.Reflection.PropertyInfo" /> オブジェクト。プロパティが見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-523">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-524">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-524">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-525">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-525">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e384d-526">検索対象のメンバーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-526">The name of the member to find.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="e384d-527">
            <see cref="T:System.Reflection.BindingFlags" /> 呼び出し属性の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-527">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="e384d-528">
            <see cref="T:System.Reflection.BindingFlags" /> ビット フラグの 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-528">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span>
          </span>
          <span data-ttu-id="e384d-529">このメソッドに関連するプロパティを格納するバインダーを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-529">Implements Binder, containing properties related to this method.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="e384d-530">指定したメンバーを呼び出す対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-530">The object on which to invoke the specified member.</span>
          </span>
          <span data-ttu-id="e384d-531">静的メンバーの場合、このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-531">This parameter is ignored for static members.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e384d-532">呼び出すメンバーのパラメーターの数、順序、および型を格納するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-532">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="e384d-533">パラメーターがない場合は、空の配列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-533">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="e384d-534">
            <see cref="T:System.Reflection.ParameterModifier" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-534">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e384d-535">型の強制変換を制御するために使用する <see cref="T:System.Globalization.CultureInfo" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-535">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="e384d-536">パラメーターの文字列配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-536">A String array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-537">指定されたメンバーを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-537">Invokes a specified member.</span>
          </span>
          <span data-ttu-id="e384d-538">このメンバーの説明については、<see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-538">For a description of this member, see <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e384d-539">指定されたメンバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-539">The specified member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-540">`invokeAttr`パラメーターには、コンストラクター、メソッド、プロパティ、フィールドなどを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-540">The `invokeAttr` parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="e384d-541">適切な呼び出し属性を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e384d-541">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="e384d-542">メンバーの名前として空の文字列 ("") を渡すことによって、クラスの既定のメンバーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e384d-542">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span>  
  
 <span data-ttu-id="e384d-543">`modifiers`パラメーターと同じ長さには、`args`メタデータで呼び出されたメンバーの引数属性を表すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="e384d-543">The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="e384d-544">パラメーターは、次の属性を持つことができます: pdIn、pdOut、pdRetval、属性、および pdHasDefault します。</span><span class="sxs-lookup"><span data-stu-id="e384d-544">A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault.</span></span> <span data-ttu-id="e384d-545">これらはそれぞれ、[In]、[Out]、[retval]、[optional]、および既定のパラメーターを表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-545">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span>  
  
 <span data-ttu-id="e384d-546">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-546">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-547">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-547">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e384d-548">フィールドの set 操作に複数の引数が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-548">More than one argument is specified for a field set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="e384d-549">フィールドまたはプロパティが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-549">The field or property cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="e384d-550">メソッドが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-550">The method cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e384d-551">必要な <see cref="T:System.Security.Permissions.ReflectionPermission" /> がない状態でプライベート メンバーが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-551">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System.Reflection.IReflect.UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-552">
            <see cref="T:System.Reflection.IReflect" /> オブジェクトを表す基になる型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-552">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
          <span data-ttu-id="e384d-553">このメンバーの説明については、<see cref="P:System.Reflection.IReflect.UnderlyingSystemType" /> のトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-553">For a description of this member, see <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-554">
            <see cref="T:System.Reflection.IReflect" /> オブジェクトを表す基になる型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-554">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-555">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e384d-555">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e384d-556">これは、<xref:System.Windows.Forms.AccessibleObject> のインスタンスが <xref:System.Reflection.IReflect> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-556">It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-557">オブジェクトを <see cref="T:System.Windows.Forms.AccessibleObject" /> のインスタンスに関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-557">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="e384d-558">オブジェクトのハンドルを格納している <see cref="T:System.IntPtr" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-558">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-559">オブジェクトのハンドルに基づき、オブジェクトを <see cref="T:System.Windows.Forms.AccessibleObject" /> のインスタンスに関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-559">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle of the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-560">システム指定のオブジェクトに類似したカスタム UI オブジェクトが含まれている場合、サーバー アプリケーションはこの関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-560">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="e384d-561">サーバー アプリケーションの呼び出し`CreateStdAccessibleObject`をオーバーライドし、<xref:Accessibility.IAccessible>メソッドとプロパティ、カスタム オブジェクトに一致するために必要とします。</span><span class="sxs-lookup"><span data-stu-id="e384d-561">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="e384d-562">このアプローチにより、サーバー開発者完全に実装するすべての作業、<xref:Accessibility.IAccessible>プロパティとメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-562">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span> <span data-ttu-id="e384d-563">この機能に似ています`CreateStdAccessibleProxy`ことを除いて、`CreateStdAccessibleProxy`は、パラメーターとして、クラス名を指定することができます`CreateStdAccessibleObject`に関連付けられているクラス名を使用して、`hwnd`します。</span><span class="sxs-lookup"><span data-stu-id="e384d-563">This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`.</span></span>  
  
 <span data-ttu-id="e384d-564">このバージョンの呼び出し、 `UseStdAccessible` objid のクライアントで、2 つのパラメーターのバージョンの呼び出しと同じです。</span><span class="sxs-lookup"><span data-stu-id="e384d-564">Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="e384d-565">オブジェクトのハンドルを格納している <see cref="T:System.IntPtr" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-565">An <see cref="T:System.IntPtr" /> that contains the handle of the object.</span>
          </span>
        </param>
        <param name="objid">
          <span data-ttu-id="e384d-566">
            <c>handle</c> パラメーターが参照するオブジェクトの型を定義する整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-566">An Int that defines the type of object that the <c>handle</c> parameter refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e384d-567">オブジェクトのハンドルと ID に基づき、オブジェクトを <see cref="T:System.Windows.Forms.AccessibleObject" /> のインスタンスに関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-567">Associates an object with an instance of an <see cref="T:System.Windows.Forms.AccessibleObject" /> based on the handle and the object id of the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-568">システム指定のユーザー インターフェイス要素の指定した型のプロパティとメソッドでは、ユーザー補助オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e384d-568">Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.</span></span>  
  
 <span data-ttu-id="e384d-569">システム指定のオブジェクトに類似したカスタム UI オブジェクトが含まれている場合、サーバー アプリケーションはこの関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e384d-569">Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</span></span> <span data-ttu-id="e384d-570">サーバー アプリケーションの呼び出し`CreateStdAccessibleObject`をオーバーライドし、<xref:Accessibility.IAccessible>メソッドとプロパティ、カスタム オブジェクトに一致するために必要とします。</span><span class="sxs-lookup"><span data-stu-id="e384d-570">Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object.</span></span> <span data-ttu-id="e384d-571">このアプローチにより、サーバー開発者完全に実装するすべての作業、<xref:Accessibility.IAccessible>プロパティとメソッド。</span><span class="sxs-lookup"><span data-stu-id="e384d-571">This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.</span></span>  
  
 <span data-ttu-id="e384d-572">有効な`objid`値。</span><span class="sxs-lookup"><span data-stu-id="e384d-572">Valid `objid` values.</span></span>  
  
|<span data-ttu-id="e384d-573">Object</span><span class="sxs-lookup"><span data-stu-id="e384d-573">Object</span></span>|<span data-ttu-id="e384d-574">値</span><span class="sxs-lookup"><span data-stu-id="e384d-574">Value</span></span>|<span data-ttu-id="e384d-575">説明</span><span class="sxs-lookup"><span data-stu-id="e384d-575">Description</span></span>|  
|------------|-----------|-----------------|  
|<span data-ttu-id="e384d-576">アラートを生成します。</span><span class="sxs-lookup"><span data-stu-id="e384d-576">ALERT</span></span>|<span data-ttu-id="e384d-577">0xFFFFFFF6</span><span class="sxs-lookup"><span data-stu-id="e384d-577">0xFFFFFFF6</span></span>|<span data-ttu-id="e384d-578">ウィンドウまたはアプリケーションに関連付けられたメッセージを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-578">Refers to a message associated with a window or application.</span></span>|  
|<span data-ttu-id="e384d-579">キャレット</span><span class="sxs-lookup"><span data-stu-id="e384d-579">CARET</span></span>|<span data-ttu-id="e384d-580">0xFFFFFFF8</span><span class="sxs-lookup"><span data-stu-id="e384d-580">0xFFFFFFF8</span></span>|<span data-ttu-id="e384d-581">テキストの挿入を指すバーのウィンドウで (キャレット)。</span><span class="sxs-lookup"><span data-stu-id="e384d-581">Refers to the text insertion bar (caret) in the window.</span></span>|  
|<span data-ttu-id="e384d-582">クライアント</span><span class="sxs-lookup"><span data-stu-id="e384d-582">CLIENT</span></span>|<span data-ttu-id="e384d-583">0xFFFFFFFC</span><span class="sxs-lookup"><span data-stu-id="e384d-583">0xFFFFFFFC</span></span>|<span data-ttu-id="e384d-584">ウィンドウのクライアント領域を指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-584">Refers to the window's client area.</span></span> <span data-ttu-id="e384d-585">ほとんどの場合、オペレーティング システムは、フレーム要素を制御し、クライアント オブジェクトには、アプリケーションを制御するすべての要素が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e384d-585">In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.</span></span>|  
|<span data-ttu-id="e384d-586">カーソル</span><span class="sxs-lookup"><span data-stu-id="e384d-586">CURSOR</span></span>|<span data-ttu-id="e384d-587">0xFFFFFFF7</span><span class="sxs-lookup"><span data-stu-id="e384d-587">0xFFFFFFF7</span></span>|<span data-ttu-id="e384d-588">マウス ポインターを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-588">Refers to the mouse pointer.</span></span> <span data-ttu-id="e384d-589">システムの 1 つだけのマウス ポインターがあるし、ウィンドウの子ではありません。</span><span class="sxs-lookup"><span data-stu-id="e384d-589">There is only one mouse pointer in the system and it is not a child of a window.</span></span>|  
|<span data-ttu-id="e384d-590">HSCROLL</span><span class="sxs-lookup"><span data-stu-id="e384d-590">HSCROLL</span></span>|<span data-ttu-id="e384d-591">0xFFFFFFFA</span><span class="sxs-lookup"><span data-stu-id="e384d-591">0xFFFFFFFA</span></span>|<span data-ttu-id="e384d-592">ウィンドウの水平スクロール バーを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-592">Refers to the window's horizontal scroll bar.</span></span>|  
|<span data-ttu-id="e384d-593">MENU</span><span class="sxs-lookup"><span data-stu-id="e384d-593">MENU</span></span>|<span data-ttu-id="e384d-594">0xFFFFFFFD</span><span class="sxs-lookup"><span data-stu-id="e384d-594">0xFFFFFFFD</span></span>|<span data-ttu-id="e384d-595">ウィンドウのメニュー バーを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-595">Refers to the window's menu bar.</span></span>|  
|<span data-ttu-id="e384d-596">SIZEGRIP</span><span class="sxs-lookup"><span data-stu-id="e384d-596">SIZEGRIP</span></span>|<span data-ttu-id="e384d-597">0xFFFFFFF9</span><span class="sxs-lookup"><span data-stu-id="e384d-597">0xFFFFFFF9</span></span>|<span data-ttu-id="e384d-598">ウィンドウのサイズ変更グリップ、ウィンドウ フレームの右下隅にある、省略可能なフレーム コンポーネントを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-598">Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.</span></span>|  
|<span data-ttu-id="e384d-599">サウンド</span><span class="sxs-lookup"><span data-stu-id="e384d-599">SOUND</span></span>|<span data-ttu-id="e384d-600">0xFFFFFFF5</span><span class="sxs-lookup"><span data-stu-id="e384d-600">0xFFFFFFF5</span></span>|<span data-ttu-id="e384d-601">サウンド オブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-601">Refers to a sound object.</span></span> <span data-ttu-id="e384d-602">サウンド オブジェクトは、画面の場所や、子はありませんが、名前と状態の属性を持つ操作を行います。</span><span class="sxs-lookup"><span data-stu-id="e384d-602">Sound objects do not have screen locations or children, but do have name and state attributes.</span></span> <span data-ttu-id="e384d-603">サウンドの再生アプリケーションの子であります。</span><span class="sxs-lookup"><span data-stu-id="e384d-603">They are children of the application playing the sound.</span></span>|  
|<span data-ttu-id="e384d-604">SYSMENU</span><span class="sxs-lookup"><span data-stu-id="e384d-604">SYSMENU</span></span>|<span data-ttu-id="e384d-605">0 xffffffff</span><span class="sxs-lookup"><span data-stu-id="e384d-605">0xFFFFFFFF</span></span>|<span data-ttu-id="e384d-606">ウィンドウのシステム メニューを参照します。</span><span class="sxs-lookup"><span data-stu-id="e384d-606">Refers to the window's system menu.</span></span>|  
|<span data-ttu-id="e384d-607">タイトル バー</span><span class="sxs-lookup"><span data-stu-id="e384d-607">TITLEBAR</span></span>|<span data-ttu-id="e384d-608">0xFFFFFFFE</span><span class="sxs-lookup"><span data-stu-id="e384d-608">0xFFFFFFFE</span></span>|<span data-ttu-id="e384d-609">ウィンドウのタイトル バーを参照します。</span><span class="sxs-lookup"><span data-stu-id="e384d-609">Refers to the window's title bar.</span></span>|  
|<span data-ttu-id="e384d-610">VSCROLL</span><span class="sxs-lookup"><span data-stu-id="e384d-610">VSCROLL</span></span>|<span data-ttu-id="e384d-611">0xFFFFFFFB</span><span class="sxs-lookup"><span data-stu-id="e384d-611">0xFFFFFFFB</span></span>|<span data-ttu-id="e384d-612">ウィンドウの垂直スクロール バーを指します。</span><span class="sxs-lookup"><span data-stu-id="e384d-612">Refers to the window's vertical scroll bar.</span></span>|  
|<span data-ttu-id="e384d-613">ウィンドウ</span><span class="sxs-lookup"><span data-stu-id="e384d-613">WINDOW</span></span>|<span data-ttu-id="e384d-614">0x00000000</span><span class="sxs-lookup"><span data-stu-id="e384d-614">0x00000000</span></span>|<span data-ttu-id="e384d-615">子オブジェクトではなく、ウィンドウ自体を参照します。</span><span class="sxs-lookup"><span data-stu-id="e384d-615">Refers to the window itself rather than to a child object.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e384d-616">ユーザー補助オブジェクトの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-616">Gets or sets the value of an accessible object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e384d-617">ユーザー補助オブジェクトの値。値が設定されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-617">The value of an accessible object, or <see langword="null" /> if the object has no value set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e384d-618">通常、<xref:System.Windows.Forms.AccessibleObject.Value%2A>プロパティは、オブジェクトに含まれているビジュアルの情報を表します。</span><span class="sxs-lookup"><span data-stu-id="e384d-618">Typically, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property represents visual information contained by the object.</span></span> <span data-ttu-id="e384d-619">すべてのオブジェクトのサポート、<xref:System.Windows.Forms.AccessibleObject.Value%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e384d-619">Not all objects support the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property.</span></span>  
  
 <span data-ttu-id="e384d-620">ほとんどの場合、<xref:System.Windows.Forms.AccessibleObject.Value%2A>オブジェクトがどのような視覚情報を含む詳細については、クライアントに指示するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e384d-620">In most cases, the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property is used to tell the client about what visual information an object contains.</span></span> <span data-ttu-id="e384d-621">たとえば、エディット コントロールの値は、それに含まれるテキストが、メニュー項目には、値はありません。</span><span class="sxs-lookup"><span data-stu-id="e384d-621">For example, the value for an edit control is the text it contains, but a menu item has no value.</span></span>  
  
 <span data-ttu-id="e384d-622"><xref:System.Windows.Forms.AccessibleObject.Value%2A>プロパティは、ツリー ビュー コントロールなどの場合、階層の情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="e384d-622">The <xref:System.Windows.Forms.AccessibleObject.Value%2A> property can provide hierarchical information in cases such as a tree view control.</span></span> <span data-ttu-id="e384d-623">ツリー ビュー コントロール内の親オブジェクトの情報は提供しませんが、<xref:System.Windows.Forms.AccessibleObject.Value%2A>プロパティ、コントロール内の各項目は、階層内のレベルを表す 0 から始まる値。</span><span class="sxs-lookup"><span data-stu-id="e384d-623">Although the parent object in the tree view control does not provide information in the <xref:System.Windows.Forms.AccessibleObject.Value%2A> property, each item within the control has a zero-based value that represents its level within the hierarchy.</span></span> <span data-ttu-id="e384d-624">最上位の項目は、0 の値を持つ、第 2 レベルの項目が、1 つの値を持つ具合です。</span><span class="sxs-lookup"><span data-stu-id="e384d-624">Top-level items have a value of zero, second-level items have a value of one, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e384d-625">返される値スクロール バーのトラック バーからアクセス可能なオブジェクトは 0 ~ 100 の範囲の整数のパーセンテージを示します。</span><span class="sxs-lookup"><span data-stu-id="e384d-625">The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="e384d-626">値を設定または取得できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e384d-626">The value cannot be set or retrieved.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>