<Type Name="HtmlWindow" FullName="System.Windows.Forms.HtmlWindow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60183d51fdc61b936b9035f54da3e34bed828bad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69188072" /></Metadata><TypeSignature Language="C#" Value="public sealed class HtmlWindow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlWindow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlWindow" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlWindow" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlWindow sealed" />
  <TypeSignature Language="F#" Value="type HtmlWindow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1568b-101"><see cref="T:System.Windows.Forms.HtmlDocument" /> のインスタンスを 1 つ以上格納する論理的なウィンドウを表します。</span><span class="sxs-lookup"><span data-stu-id="1568b-101">Represents the logical window that contains one or more instances of <see cref="T:System.Windows.Forms.HtmlDocument" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-102"><xref:System.Windows.Forms.HtmlWindow>Windows フォームまたは Windows API のウィンドウの概念と混同しないようにしてください。のインスタンスに`HWND`直接対応する、または類似の<xref:System.Windows.Forms.HtmlWindow>Windows リソースはありません。</span><span class="sxs-lookup"><span data-stu-id="1568b-102"><xref:System.Windows.Forms.HtmlWindow> should not be confused with the concept of a window in Windows Forms or the Windows API; there is no `HWND` or similar Windows resource that corresponds directly to an instance of <xref:System.Windows.Forms.HtmlWindow>.</span></span> <span data-ttu-id="1568b-103">では<xref:System.Windows.Forms.HtmlWindow> 、ユーザーの画面上でのドキュメントの場所についての概要を示し、プロンプトやダイアログボックスを使用してユーザーと対話するためのメソッドも提供します。</span><span class="sxs-lookup"><span data-stu-id="1568b-103">Rather, <xref:System.Windows.Forms.HtmlWindow> provides high-level descriptions of a document's location on a user's screen, as well as methods for interacting with users by way of prompts and dialog boxes.</span></span> <span data-ttu-id="1568b-104"><xref:System.Windows.Forms.HtmlWindow>ドキュメントの場所や Web ブラウザーの機能など、Web ページのドキュメントとそのメタデータの論理コンテナーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="1568b-104"><xref:System.Windows.Forms.HtmlWindow> acts as a logical container for a Web page's documents and its metadata, such as the document's location and the capabilities of the Web browser.</span></span>  
  
 <span data-ttu-id="1568b-105">Web ページは、1つのドキュメント、また`FRAMESET`は1つ以上の`FRAME`要素を含み、それぞれが独自のドキュメントをホストするもので構成されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-105">A Web page consists of a single document, or a `FRAMESET` containing one or more `FRAME` elements, each of which hosts its own document.</span></span> <span data-ttu-id="1568b-106">Web 開発者は、フレームセットを使用して論理的に関連するページを並べて表示します (たとえば、ナビゲーションページの横にあるコンテンツページ)。</span><span class="sxs-lookup"><span data-stu-id="1568b-106">Web developers use framesets to show logically related pages side by side (for example, a content page next to a navigation page).</span></span> <span data-ttu-id="1568b-107">ページが1つのドキュメントで構成されている場合は、 <xref:System.Windows.Forms.HtmlWindow.Document%2A>の<xref:System.Windows.Forms.HtmlWindow>プロパティを使用してアクセスできます。ページがフレームを使用し<xref:System.Windows.Forms.HtmlWindow.Frames%2A>ている場合は、コレクションを介し<xref:System.Windows.Forms.HtmlWindow>てドキュメントにアクセスできます。このコレクションは、1つ以上のオブジェクトで構成されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-107">When a page consists of a single document, you can access it through the <xref:System.Windows.Forms.HtmlWindow.Document%2A> property of <xref:System.Windows.Forms.HtmlWindow>; if the page uses frames, you can access their documents through the <xref:System.Windows.Forms.HtmlWindow.Frames%2A> collection, which consists of one or more <xref:System.Windows.Forms.HtmlWindow> objects.</span></span>  
  
 <span data-ttu-id="1568b-108">Windows フォームアプリケーションで<xref:System.Windows.Forms.WebBrowser>コントロールをホストする場合は、 <xref:System.Windows.Forms.Form>や<xref:System.Windows.Forms.MessageBox>などの標準の Windows フォームクラスを使用してユーザーと対話するか、この目的で定義され<xref:System.Windows.Forms.HtmlWindow>たでメソッドを使用するかを選択できます。</span><span class="sxs-lookup"><span data-stu-id="1568b-108">When your host the <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms application, you can choose to interact with the user using standard Windows Forms classes, such as <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.MessageBox>, or you can use methods on <xref:System.Windows.Forms.HtmlWindow> defined for this purpose.</span></span> <span data-ttu-id="1568b-109">メソッド<xref:System.Windows.Forms.HtmlWindow.Alert%2A>は、カスタムテキストと **[OK** ] ボタンを含む簡単なダイアログボックスを表示します。ユーザーにカスタムテキストとテキスト入力フィールドを表示し、カスタムテキストと **[OK]** ボタンと **[キャンセル]** ボタンの行を含むダイアログボックスを表示し<xref:System.Windows.Forms.HtmlWindow.Confirm%2A>ます。 <xref:System.Windows.Forms.HtmlWindow.Prompt%2A></span><span class="sxs-lookup"><span data-stu-id="1568b-109">The <xref:System.Windows.Forms.HtmlWindow.Alert%2A> method presents a simple dialog box with custom text and an **OK** button; <xref:System.Windows.Forms.HtmlWindow.Prompt%2A> presents a line of custom text and a text input field to the user; and <xref:System.Windows.Forms.HtmlWindow.Confirm%2A> presents a dialog box with a line of custom text and **OK** and **Cancel** buttons.</span></span>  
  
 <span data-ttu-id="1568b-110">を使用<xref:System.Windows.Forms.HtmlWindow>すると、新しいドキュメントを含む新しいウィンドウを開くことができます。</span><span class="sxs-lookup"><span data-stu-id="1568b-110">You can use <xref:System.Windows.Forms.HtmlWindow> to open new windows containing new documents.</span></span> <span data-ttu-id="1568b-111"><xref:System.Windows.Forms.HtmlWindow.Open%2A>指定された url を名前付きウィンドウに読み込み、まだ存在していない場合<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>は作成し、は常に新しく作成されたウィンドウで url を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-111"><xref:System.Windows.Forms.HtmlWindow.Open%2A> loads the specified URL into the named window, creating it if it does not already exist, while <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> always opens its URL in a newly created window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-112">次のコード例には、2つのメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="1568b-112">The following code example contains two methods.</span></span> <span data-ttu-id="1568b-113">最初のは、という名前`displayWindow`のウィンドウで URL を開きます。このウィンドウは、ステータスバーが表示された状態で作成されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-113">The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed.</span></span> <span data-ttu-id="1568b-114">2番目の方法では、同じウィンドウで別の URL を開きますが、場所バーのみを表示するように指定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-114">The second opens another URL in the same window, but specifies that only the location bar should be displayed.</span></span> <span data-ttu-id="1568b-115">ウィンドウのサイズと表示されるコントロールは、最初に開いた URL によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1568b-115">Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first.</span></span> <span data-ttu-id="1568b-116">このコード例では、フォームにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-116">The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms535873.aspx"><span data-ttu-id="1568b-117">window オブジェクト</span><span class="sxs-lookup"><span data-stu-id="1568b-117">window Object</span></span></related>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741505.aspx"><span data-ttu-id="1568b-118">IHTMLWindow2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="1568b-118">IHTMLWindow2 Interface</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Alert">
      <MemberSignature Language="C#" Value="public void Alert (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Alert(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Alert(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Alert (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Alert(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Alert : string -&gt; unit" Usage="htmlWindow.Alert message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1568b-119">メッセージ ボックスに表示する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-119">The <see cref="T:System.String" /> to display in the message box.</span></span></param>
        <summary><span data-ttu-id="1568b-120">メッセージ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-120">Displays a message box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-121">クラス<xref:System.Windows.Forms.MessageBox?displayProperty=nameWithType>には、より強力なバージョン<xref:System.Windows.Forms.HtmlWindow.Alert%2A>のメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="1568b-121">The <xref:System.Windows.Forms.MessageBox?displayProperty=nameWithType> class offers a more powerful version of the <xref:System.Windows.Forms.HtmlWindow.Alert%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms535933.aspx"><span data-ttu-id="1568b-122">alert メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-122">alert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.AttachEventHandler : string * EventHandler -&gt; unit" Usage="htmlWindow.AttachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="1568b-123">処理するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="1568b-123">The name of the event you want to handle.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="1568b-124">イベントを処理するマネージド コードへの参照。</span><span class="sxs-lookup"><span data-stu-id="1568b-124">A reference to the managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="1568b-125">指定した HTML DOM イベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="1568b-125">Adds an event handler for the named HTML DOM event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-126">ドキュメントの読み込みが完了するまで、HTML ドキュメントまたはそのオブジェクトの1つにイベントをアタッチしないでください。</span><span class="sxs-lookup"><span data-stu-id="1568b-126">You should not attach an event to an HTML document or one of its objects until the document has completed loading.</span></span> <span data-ttu-id="1568b-127">このメソッドを呼び出す必要がある最も早い<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>方法は、 <xref:System.Windows.Forms.WebBrowser>コントロールのイベントです。</span><span class="sxs-lookup"><span data-stu-id="1568b-127">The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener"><span data-ttu-id="1568b-128">EventTarget. addEventListener ()</span><span class="sxs-lookup"><span data-stu-id="1568b-128">EventTarget.addEventListener()</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="htmlWindow.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1568b-129">ウィンドウを閉じます。</span><span class="sxs-lookup"><span data-stu-id="1568b-129">Closes the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-130">ウィンドウが<xref:System.Windows.Forms.HtmlWindow.IsClosed%2A>既に閉じられているかどうかを確認するには、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1568b-130">Use the <xref:System.Windows.Forms.HtmlWindow.IsClosed%2A> property to determine if the window is already closed.</span></span> <span data-ttu-id="1568b-131">ウィンドウが既に閉じている場合、このメソッドは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="1568b-131">If the window is already closed, this method will have no effect.</span></span>  
  
 <span data-ttu-id="1568b-132">または<xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>を使用して新しいウィンドウ<xref:System.Windows.Forms.HtmlWindow.Close%2A>を作成すると、HTML ドキュメントオブジェクトモデルによって Internet Explorer の新しいインスタンスが開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-132">When you create new windows using <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, <xref:System.Windows.Forms.HtmlWindow.Close%2A> causes the HTML Document Object Model to open a new instance of Internet Explorer.</span></span> <span data-ttu-id="1568b-133">作成したすべての<xref:System.Windows.Forms.HtmlWindow.Close%2A>ウィンドウでを呼び出さないと、アプリケーションの終了後も、Internet Explorer のこのインスタンスは実行されたままになります。</span><span class="sxs-lookup"><span data-stu-id="1568b-133">If you do not call <xref:System.Windows.Forms.HtmlWindow.Close%2A> on all of the windows you have created, this instance of Internet Explorer will remain running even after your application closes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-134">次のコード例では、ウィンドウを開き、ユーザーが過去5分間にこのウィンドウを使用していない場合は閉じます。</span><span class="sxs-lookup"><span data-stu-id="1568b-134">The following code example opens a window, and closes it if the user has not used it in the past five minutes.</span></span> <span data-ttu-id="1568b-135">このコード例は、フォームにという<xref:System.Windows.Forms.WebBrowser>名前の`WebBrowser1`コントロール、という名前の<xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Timer> 、 `Button1`およびという`Timer1`名前のクラスがあることを前提として記述されています。</span><span class="sxs-lookup"><span data-stu-id="1568b-135">The code example was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`.</span></span> <span data-ttu-id="1568b-136">この例を正常に実行するには、に<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>指定された最初の引数を有効な URL に変更します。</span><span class="sxs-lookup"><span data-stu-id="1568b-136">To run this example successfully, change the first argument supplied to <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to a valid URL.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlWindow#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536367.aspx"><span data-ttu-id="1568b-137">close メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-137">close Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Confirm">
      <MemberSignature Language="C#" Value="public bool Confirm (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Confirm(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Confirm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confirm (message As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Confirm(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Confirm : string -&gt; bool" Usage="htmlWindow.Confirm message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1568b-138">ユーザーに表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="1568b-138">The text to display to the user.</span></span></param>
        <summary><span data-ttu-id="1568b-139">yes/no の応答を求めるメッセージとボタンを含むダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-139">Displays a dialog box with a message and buttons to solicit a yes/no response.</span></span></summary>
        <returns><span data-ttu-id="1568b-140">ユーザーが **[はい]** をクリックした場合は <see langword="true" />。ユーザーが **[いいえ]** をクリックしたか、ダイアログ ボックスを閉じた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-140"><see langword="true" /> if the user clicked **Yes**; <see langword="false" /> if the user clicked **No** or closed the dialog box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-141"><xref:System.Windows.Forms.HtmlWindow.Confirm%2A>モーダルダイアログボックスを表示します。ユーザーは、最初にこのダイアログボックスを閉じることなく、基になる HTML ページにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="1568b-141"><xref:System.Windows.Forms.HtmlWindow.Confirm%2A> displays a modal dialog box; the user will not be able to access the underlying HTML page without first closing this dialog box.</span></span>  
  
## Examples  

<span data-ttu-id="1568b-142">次の HTML をコピーし、orderForm という名前のフォームに保存します。</span><span class="sxs-lookup"><span data-stu-id="1568b-142">Copy the following HTML and save it into a form called orderForm.htm:</span></span>  

```html
<HTML>
<BODY>
<FORM name="NewOrderForm">
Select Part Type:
<SELECT name="PartType">
  <OPTION>AZ-3700
  <OPTION>AZ-3701
  <OPTION>AZ-3702  
</SELECT><br/>
Quantity: <INPUT type="text" name="PartQty" size="2" maxsize="2" /><br/>
Building/Desk:
<INPUT type="text" name="PartBuilding" size="2" maxsize="2"/> /  
<INPUT type="text" name="PartDesk" size="2" maxsize="2"/><p/>
<INPUT type="submit" value="Transmit Order"/>
</FORM>
</BODY>
</HTML>
```

<span data-ttu-id="1568b-143">次の例では<xref:System.Windows.Forms.HtmlWindow.Confirm%2A> 、ユーザーがを送信`NewOrderForm`したときにダイアログボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-143">The following example displays a <xref:System.Windows.Forms.HtmlWindow.Confirm%2A> dialog box when the user submits `NewOrderForm`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlWindow#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536376.aspx"><span data-ttu-id="1568b-144">confirm メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-144">confirm Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.DetachEventHandler : string * EventHandler -&gt; unit" Usage="htmlWindow.DetachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName"><span data-ttu-id="1568b-145">処理するイベントの名前。</span><span class="sxs-lookup"><span data-stu-id="1568b-145">The name of the event you want to handle.</span></span></param>
        <param name="eventHandler"><span data-ttu-id="1568b-146">イベントを処理するマネージド コードへの参照。</span><span class="sxs-lookup"><span data-stu-id="1568b-146">A reference to the managed code that handles the event.</span></span></param>
        <summary><span data-ttu-id="1568b-147">指定したイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="1568b-147">Removes the named event handler.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536411.aspx"><span data-ttu-id="1568b-148">detachEvent メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-148">detachEvent Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.HtmlWindow.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-149">ウィンドウに格納されている HTML ドキュメントを取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-149">Gets the HTML document contained within the window.</span></span></summary>
        <value><span data-ttu-id="1568b-150">ドキュメントが読み込まれている場合は、<see cref="T:System.Windows.Forms.HtmlDocument" /> の有効なインスタンス。</span><span class="sxs-lookup"><span data-stu-id="1568b-150">A valid instance of <see cref="T:System.Windows.Forms.HtmlDocument" />, if a document is loaded.</span></span> <span data-ttu-id="1568b-151">このウィンドウに<c>フレームセット</c>が含まれているか、現在読み込まれている<see langword="null" />ドキュメントがない場合は、が返されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-151">If this window contains a <c>FRAMESET</c>, or no document is currently loaded, it will return <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-152">通常、に<xref:System.Windows.Forms.HtmlWindow.Document%2A>アクセスするには、 <xref:System.Windows.Forms.WebBrowser.Document%2A> <xref:System.Windows.Forms.WebBrowser>コントロールのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1568b-152">Typically, you will access the <xref:System.Windows.Forms.HtmlWindow.Document%2A> through the <xref:System.Windows.Forms.WebBrowser.Document%2A> property of the <xref:System.Windows.Forms.WebBrowser> control.</span></span> <span data-ttu-id="1568b-153">コレクション<xref:System.Windows.Forms.HtmlWindow.Frames%2A>を使用して内のドキュメントにアクセスする必要`FRAME`がある場合は、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1568b-153">Use this property when you need to access a document within a `FRAME` using the <xref:System.Windows.Forms.HtmlWindow.Frames%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-154">次のコード例では、フレームを含むページ内の各ドキュメントを検査し、今後の検査のために各ページから送信されるすべてのハイパーリンクのテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="1568b-154">The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DomWindow">
      <MemberSignature Language="C#" Value="public object DomWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.DomWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomWindow As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomWindow { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomWindow : obj" Usage="System.Windows.Forms.HtmlWindow.DomWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-155">このクラスによってラップされたアンマネージ インターフェイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-155">Gets the unmanaged interface wrapped by this class.</span></span></summary>
        <value><span data-ttu-id="1568b-156"><see langword="IHTMLWindow2" /> 、<see langword="IHTMLWindow3" />、または<see langword="IHTMLWindow4" />ポインターにキャストできるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-156">An object that can be cast to an <see langword="IHTMLWindow2" />, <see langword="IHTMLWindow3" />, or <see langword="IHTMLWindow4" /> pointer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-157">ドキュメントオブジェクトモデル (DOM) への基になるアンマネージインターフェイスポインターを使用して、 <xref:System.Windows.Forms.HtmlWindow>によって公開されていないメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="1568b-157">Use the underlying unmanaged interface pointers to the Document Object Model (DOM) to execute methods not exposed by <xref:System.Windows.Forms.HtmlWindow>.</span></span>  
  
 <span data-ttu-id="1568b-158">を使用<xref:System.Windows.Forms.HtmlWindow.DomWindow%2A>するには、参照先のをアンマネージ mshtml.dll に追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-158">You must add a referenced to the unmanaged MSHTML.dll in order to use <xref:System.Windows.Forms.HtmlWindow.DomWindow%2A>.</span></span> <span data-ttu-id="1568b-159">詳細については、「[アセンブリとしてタイプライブラリをインポートする](~/docs/framework/interop/importing-a-type-library-as-an-assembly.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-159">For more information, see [Importing a Type Library as an Assembly](~/docs/framework/interop/importing-a-type-library-as-an-assembly.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-160">次のコード例では`IHTMLWindow2` 、ドキュメントのウィンドウからポインターを取得し、モーダルウィンドウに新しいドキュメントを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-160">The following code example obtains an `IHTMLWindow2` pointer from a document's window and displays a new document in a modal window.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741505.aspx"><span data-ttu-id="1568b-161">IHTMLWindow2 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="1568b-161">IHTMLWindow2 Interface</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741356.aspx"><span data-ttu-id="1568b-162">IHTMLWindow3 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="1568b-162">IHTMLWindow3 Interface</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741344.aspx"><span data-ttu-id="1568b-163">IHTMLWindow4 インターフェイス</span><span class="sxs-lookup"><span data-stu-id="1568b-163">IHTMLWindow4 Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="htmlWindow.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1568b-164">テストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-164">The object to test.</span></span></param>
        <summary><span data-ttu-id="1568b-165">指定したオブジェクトと現在のオブジェクトとを比較し、等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="1568b-165">Tests the object for equality against the current object.</span></span></summary>
        <returns><span data-ttu-id="1568b-166">オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-166"><see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As HtmlElementErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.Windows.Forms.HtmlElementErrorEventHandler " Usage="member this.Error : System.Windows.Forms.HtmlElementErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-167">ウィンドウ内で実行されているスクリプトがランタイム エラーを検出すると発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-167">Occurs when script running inside of the window encounters a run-time error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-168">HTML ページには、ページが読み込まれたときに実行される JScript または VBScript で記述されたスクリプトコードを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="1568b-168">HTML pages can contain script code, usually written in JScript or VBScript, that executes when a page is loaded.</span></span> <span data-ttu-id="1568b-169"><xref:System.Windows.Forms.HtmlWindow.Error>スクリプトで実行時エラーが発生したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-169"><xref:System.Windows.Forms.HtmlWindow.Error> occurs whenever a script encounters a run-time error.</span></span> <span data-ttu-id="1568b-170">スクリプトコードは遅延バインディングされるため、オブジェクトに対する呼び出しは実行時まで解決されないので、エラーには、null オブジェクトの参照から、未定義のプロパティまたはメソッドの呼び出しまでのすべてが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-170">Because script code is late-bound, which means that calls against the object are not resolved until run-time, errors can include everything from referencing a null object to calling an undefined property or method.</span></span>  
  
 <span data-ttu-id="1568b-171">Internet Explorer の [ <xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A>ネイティブエラー <xref:System.Windows.Forms.HtmlElementErrorEventArgs> ] ダイアログボックスが表示されないようにするために、のプロパティを true に設定できます。</span><span class="sxs-lookup"><span data-stu-id="1568b-171">You can set the <xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A> property of <xref:System.Windows.Forms.HtmlElementErrorEventArgs> to true in order to prevent the native error dialog box in Internet Explorer from displaying.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="1568b-172">次のコード例では、HTML ページのスクリプトがドキュメントで定義されていないオブジェクトにアクセスしようとしたときに発生するエラーをトラップします。</span><span class="sxs-lookup"><span data-stu-id="1568b-172">The following code example traps the error that results when a script on an HTML page attempts to access an object that is not defined in the document.</span></span> <span data-ttu-id="1568b-173"><xref:System.Windows.Forms.HtmlWindow.Error>イベントハンドラーがアタッチされる前にページが完全に読み込まれている必要があります。そうしないと、この例は機能しません。</span><span class="sxs-lookup"><span data-stu-id="1568b-173">The page must be fully loaded before the <xref:System.Windows.Forms.HtmlWindow.Error> event handler is attached, otherwise the example will not work.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#16)]
 [!code-vb[System.Windows.Forms.HtmlWindow#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/cc197053.aspx"><span data-ttu-id="1568b-174">onerror イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-174">onerror Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; unit" Usage="htmlWindow.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1568b-175">現在のウィンドウにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-175">Puts the focus on the current window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-176">が呼び出される前に<xref:System.Windows.Forms.HtmlWindow.Focus%2A>別のウィンドウがフォーカスを保持していた場合、そのウィンドウはフォーカスを失います。</span><span class="sxs-lookup"><span data-stu-id="1568b-176">If another window held the focus before <xref:System.Windows.Forms.HtmlWindow.Focus%2A> was called, that window will lose the focus.</span></span>  
  
 <span data-ttu-id="1568b-177">ウィンドウの<xref:System.Windows.Forms.HtmlWindow.Load>イベントが発生するまで、ウィンドウ内の要素にフォーカスを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="1568b-177">Do not call focus on an element inside of a window until the window's <xref:System.Windows.Forms.HtmlWindow.Load> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536425.aspx"><span data-ttu-id="1568b-178">フォーカス方法</span><span class="sxs-lookup"><span data-stu-id="1568b-178">focus Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindowCollection Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindowCollection Frames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As HtmlWindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindowCollection ^ Frames { System::Windows::Forms::HtmlWindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : System.Windows.Forms.HtmlWindowCollection" Usage="System.Windows.Forms.HtmlWindow.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-179">Web ページ内で定義されている各 <c>FRAME</c> 要素への参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-179">Gets a reference to each of the <c>FRAME</c> elements defined within the Web page.</span></span></summary>
        <value><span data-ttu-id="1568b-180">ドキュメントの<c>フレーム</c>オブジェクトおよび<c>IFRAME</c>オブジェクトの。<see cref="T:System.Windows.Forms.HtmlWindowCollection" /></span><span class="sxs-lookup"><span data-stu-id="1568b-180">An <see cref="T:System.Windows.Forms.HtmlWindowCollection" /> of a document's <c>FRAME</c> and <c>IFRAME</c> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-181">`FRAME`は、`FRAMESET`内で定義された一連のウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="1568b-181">A `FRAME` is a set of windows defined within a `FRAMESET`.</span></span> <span data-ttu-id="1568b-182">`FRAME`s 1 つのドキュメント内で複数のドキュメントをホストできるようにします。</span><span class="sxs-lookup"><span data-stu-id="1568b-182">`FRAME`s enable hosting multiple documents within a single document.</span></span> <span data-ttu-id="1568b-183">各`FRAME`は、 `FRAME` `FRAME`特定の行と列の幅を所有するように定義され、ページ上の位置はで定義されている他のに関連しています。の位置は固定されていますが、ユーザーがマウスを使用することもあります。 `FRAMESET`を拡大または縮小`FRAME`するカーソル。</span><span class="sxs-lookup"><span data-stu-id="1568b-183">Each `FRAME` is defined as possessing a certain row and column width, and is position on the page in relation to the other `FRAME`s defined within the `FRAMESET`; the position of a `FRAME` is fixed, although a user may sometimes use the mouse cursor to grow or shrink the `FRAME`.</span></span> <span data-ttu-id="1568b-184">`IFRAME`はフレームに似ていますが、固定された位置に固定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="1568b-184">An `IFRAME` is similar to a frame, but it need not be anchored in a fixed position.</span></span>  
  
 <span data-ttu-id="1568b-185">フレームには、それぞれ<xref:System.Windows.Forms.HtmlWindow> `FRAME`に対して、 `IFRAME`または Web ページ内で定義されているのインスタンスが1つ含まれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-185">Frames will contain one instance of <xref:System.Windows.Forms.HtmlWindow> for each `FRAME` or `IFRAME` defined within a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-186">次のコード例では、フレームを含むページ内の各ドキュメントを検査し、今後の検査のために各ページから送信されるすべてのハイパーリンクのテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="1568b-186">The following code example inspects each document within a page containing frames and creates a table of all of the outgoing hyperlinks from each page for future inspection.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms537459.aspx"><span data-ttu-id="1568b-187">フレームコレクション</span><span class="sxs-lookup"><span data-stu-id="1568b-187">frames Collection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="htmlWindow.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1568b-188">特定の型のハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="1568b-188">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="1568b-189">現在の <see cref="T:System.Windows.Forms.HtmlWindow" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="1568b-189">A hash code for the current <see cref="T:System.Windows.Forms.HtmlWindow" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-190">現在のウィンドウがユーザーの入力フォーカスを得ると発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-190">Occurs when the current window obtains user input focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-191"><xref:System.Windows.Forms.HtmlWindow.GotFocus>次の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-191"><xref:System.Windows.Forms.HtmlWindow.GotFocus> will occur for:</span></span>  
  
-   <span data-ttu-id="1568b-192">最初の`FRAMESET` `FRAMESET`読み込み時の内の最初のウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="1568b-192">The first window in a `FRAMESET` when the `FRAMESET` first loads.</span></span>  
  
-   <span data-ttu-id="1568b-193">コントロールを<xref:System.Windows.Forms.WebBrowser>含むウィンドウを前面に移動したときに最後にフォーカス`FRAME`があった。</span><span class="sxs-lookup"><span data-stu-id="1568b-193">The `FRAME` that last had focus when the window containing the <xref:System.Windows.Forms.WebBrowser> control is brought to the foreground.</span></span>  
  
-   <span data-ttu-id="1568b-194">ユーザー `FRAME`がクリックしたのが、ウィンドウ内の要素にフォーカスを移動していない場合にのみ表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-194">A `FRAME` clicked by the user, but only if the user's click does not put focus on an element within the window.</span></span>  
  
 <span data-ttu-id="1568b-195"><xref:System.Windows.Forms.HtmlWindow.GotFocus>イベントの既定のアクションをキャンセルしたり、バブルから除外したりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="1568b-195">You cannot cancel the default action for the <xref:System.Windows.Forms.HtmlWindow.GotFocus> event, or prevent it from bubbling.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="1568b-196">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-196">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-197">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.GotFocus>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-197">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.GotFocus> event.</span></span> <span data-ttu-id="1568b-198">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-198">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="1568b-199">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-199">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-200">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.GotFocus>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-200">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#452](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#452)]
 [!code-vb[System.Windows.Forms.EventExamples#452](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#452)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536934.aspx"><span data-ttu-id="1568b-201">onfocus イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-201">onfocus Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="History">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlHistory History { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlHistory History" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.History" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property History As HtmlHistory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlHistory ^ History { System::Windows::Forms::HtmlHistory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.History : System.Windows.Forms.HtmlHistory" Usage="System.Windows.Forms.HtmlWindow.History" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlHistory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-202">ユーザーが最近表示した URL を格納するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-202">Gets an object containing the user's most recently visited URLs.</span></span></summary>
        <value><span data-ttu-id="1568b-203">現在のウィンドウの。 <see cref="T:System.Windows.Forms.HtmlHistory" /></span><span class="sxs-lookup"><span data-stu-id="1568b-203">The <see cref="T:System.Windows.Forms.HtmlHistory" /> for the current window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-204"><xref:System.Windows.Forms.HtmlWindow.History%2A>*ナビゲーションスタック*と呼ばれる、現在のウィンドウ内で移動されたすべての url を格納し、それらのドキュメントに戻るためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="1568b-204"><xref:System.Windows.Forms.HtmlWindow.History%2A> contains all URLs navigated to within the current window, which is referred to as the *navigation stack*, and provides methods for navigating back to those documents.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Windows.Forms.HtmlWindow.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-205">このウィンドウが開いているか閉じているかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-205">Gets a value indicating whether this window is open or closed.</span></span></summary>
        <value><span data-ttu-id="1568b-206">ウィンドウが画面上でまだ開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-206"><see langword="true" /> if the window is still open on the screen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-207">がユーザー <xref:System.Windows.Forms.HtmlWindow>によって、またはメソッドの<xref:System.Windows.Forms.HtmlWindow.Close%2A>呼び出しによって閉じられた場合、新しい URL に移動しようとするか、ウィンドウのドキュメントにアクセスしようとすると、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-207">If the <xref:System.Windows.Forms.HtmlWindow> has been closed by the user or by way of a call to the <xref:System.Windows.Forms.HtmlWindow.Close%2A> method, attempting to navigate to a new URL or access the window's document will result in an error.</span></span> <span data-ttu-id="1568b-208">このプロパティを使用して、現在のウィンドウオブジェクトでプロパティとメソッドを安全に呼び出すことができるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1568b-208">Use this property to determine whether it is safe to call properties and methods on the current window object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-209">次のコード例では、ウィンドウを開き、ユーザーが過去5分間にこのウィンドウを使用していない場合は閉じます。</span><span class="sxs-lookup"><span data-stu-id="1568b-209">The following code example opens a window, and closes it if the user has not used it in the past five minutes.</span></span> <span data-ttu-id="1568b-210">このコード例<xref:System.Windows.Forms.WebBrowser>では`WebBrowser1`、フォームにという名前のコントロール、 `Button1`という名前<xref:System.Windows.Forms.Timer>の、 `Timer1` <xref:System.Windows.Forms.Button>およびという名前のクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="1568b-210">The code example requires that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, a <xref:System.Windows.Forms.Button> named `Button1`, and a <xref:System.Windows.Forms.Timer> class named `Timer1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms537459.aspx"><span data-ttu-id="1568b-211">closed プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-211">closed Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Load : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-212">ウィンドウのドキュメントとそのすべての要素の初期化が終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-212">Occurs when the window's document and all of its elements have finished initializing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-213">イベント<xref:System.Windows.Forms.HtmlWindow.Load>は、 <xref:System.Windows.Forms.WebBrowser>コントロールの<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>イベントと同様に動作します。これは、ドキュメント内の HTML 要素に安全にアクセスできることを通知します。</span><span class="sxs-lookup"><span data-stu-id="1568b-213">The <xref:System.Windows.Forms.HtmlWindow.Load> event works similarly to the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control: it signals that it is safe to access HTML elements inside of the document.</span></span>  
  
 <span data-ttu-id="1568b-214"><xref:System.Windows.Forms.HtmlWindow.Load>イベントの既定のアクションを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="1568b-214">You cannot cancel the default action for the <xref:System.Windows.Forms.HtmlWindow.Load> event.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="1568b-215">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-215">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-216">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Load>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-216">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Load> event.</span></span> <span data-ttu-id="1568b-217">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-217">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1568b-218">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-218">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1568b-219">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-219">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-220">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Load>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-220">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Load> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#453](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#453)]
 [!code-vb[System.Windows.Forms.EventExamples#453](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#453)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/cc197055.aspx"><span data-ttu-id="1568b-221">onload イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-221">onload Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-222">ウィンドウがユーザーの入力フォーカスを失うと発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-222">Occurs when user input focus has left the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1568b-223">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-223">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-224">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.LostFocus>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-224">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.LostFocus> event.</span></span> <span data-ttu-id="1568b-225">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-225">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="1568b-226">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-226">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-227">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.LostFocus>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-227">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#454](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#454)]
 [!code-vb[System.Windows.Forms.EventExamples#454](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#454)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-228">画面上の指定した座標にウィンドウを移動します。</span><span class="sxs-lookup"><span data-stu-id="1568b-228">Moves the window to the specified coordinates on the screen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.Drawing.Point -&gt; unit" Usage="htmlWindow.MoveTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1568b-229">ウィンドウの左上隅の x 座標と y 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-229">The x- and y-coordinates of the window's upper-left corner.</span></span></param>
        <summary><span data-ttu-id="1568b-230">画面上の指定した座標にウィンドウを移動します。</span><span class="sxs-lookup"><span data-stu-id="1568b-230">Moves the window to the specified coordinates on the screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-231">を使用<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>して画面の表示されている端からウィンドウを移動することはできません。この方法は、Web ページのスクリプトからも使用できます。また、信頼されていないスクリプトによるウィンドウの表示を許可しないことは、安全とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1568b-231">You cannot use <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> to move a window off of the visible edge of the screen; this method is also available through script on a Web page, and allowing untrusted script to render windows invisible is not considered secure.</span></span>  
  
 <span data-ttu-id="1568b-232"><xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>移動しよう<xref:System.UnauthorizedAccessException>としているウィンドウとその親ウィンドウのトップレベルドメインが異なる場合、はを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1568b-232"><xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> will raise an <xref:System.UnauthorizedAccessException> if the window you are trying to move and its parent window have different top-level domains.</span></span> <span data-ttu-id="1568b-233">たとえば、a.adatum.com をポイントするコントロールを<xref:System.Windows.Forms.WebBrowser>ホストしている場合は、を使用し<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>て b.adatum.com を表示する新しいウィンドウを作成します。</span><span class="sxs-lookup"><span data-stu-id="1568b-233">For example, if you are hosting the <xref:System.Windows.Forms.WebBrowser> control pointing to a.adatum.com, create a new window using <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to display b.adatum.com.</span></span> <span data-ttu-id="1568b-234">この場合、両方のウィンドウは同じトップレベルドメインの一部と見なされ、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="1568b-234">In this case, both windows are considered to be part of the same top-level domain, and the exception is not thrown.</span></span> <span data-ttu-id="1568b-235">ただし、を呼び出し<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>て www、microsoft .com を表示する<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>と、2つのウィンドウのトップレベルドメインが異なるため、この操作によって例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1568b-235">However, if you call <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to display www,microsoft.com, the two windows now have different top-level domains, and the <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> operation will cause the exception to throw.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1568b-236">この操作を実行しようとしたコードには、このウィンドウを操作するアクセス許可が付与されていません。</span><span class="sxs-lookup"><span data-stu-id="1568b-236">The code trying to execute this operation does not have permission to manipulate this window.</span></span></exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536626.aspx"><span data-ttu-id="1568b-237">moveTo メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-237">moveTo Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : int * int -&gt; unit" Usage="htmlWindow.MoveTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1568b-238">ウィンドウの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-238">The x-coordinate of the window's upper-left corner.</span></span></param>
        <param name="y"><span data-ttu-id="1568b-239">ウィンドウの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-239">The y-coordinate of the window's upper-left corner.</span></span></param>
        <summary><span data-ttu-id="1568b-240">画面上の指定した座標にウィンドウを移動します。</span><span class="sxs-lookup"><span data-stu-id="1568b-240">Moves the window to the specified coordinates on the screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-241">を使用<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>して画面の表示されている端からウィンドウを移動することはできません。この方法は、Web ページのスクリプトからも使用できます。また、信頼されていないスクリプトによるウィンドウの表示を許可しないことは、安全とは見なされません。</span><span class="sxs-lookup"><span data-stu-id="1568b-241">You cannot use <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> to move a window off of the visible edge of the screen; this method is also available through script on a Web page, and allowing untrusted script to render windows invisible is not considered secure.</span></span>  
  
 <span data-ttu-id="1568b-242"><xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>移動しよう<xref:System.UnauthorizedAccessException>としているウィンドウとその親ウィンドウのトップレベルドメインが異なる場合、はを発生させます。</span><span class="sxs-lookup"><span data-stu-id="1568b-242"><xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> will raise an <xref:System.UnauthorizedAccessException> if the window you are trying to move and its parent window have different top-level domains.</span></span> <span data-ttu-id="1568b-243">たとえば、 <xref:System.Windows.Forms.WebBrowser>コントロールをホストしていて、それが a.adatum.com を指している場合は、を使用<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>して b.adatum.com を表示する新しいウィンドウを作成します。</span><span class="sxs-lookup"><span data-stu-id="1568b-243">For example, if you are hosting the <xref:System.Windows.Forms.WebBrowser> control and it is pointing to a.adatum.com, you create a new window using <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to display b.adatum.com.</span></span> <span data-ttu-id="1568b-244">この場合、両方のウィンドウは同じトップレベルドメインの一部と見なされ、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="1568b-244">In this case, both windows are considered to be part of the same top-level domain, and the exception is not thrown.</span></span> <span data-ttu-id="1568b-245">ただし、を呼び出し<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>て www、microsoft .com を表示する<xref:System.Windows.Forms.HtmlWindow.MoveTo%2A>と、2つのウィンドウのトップレベルドメインが異なるため、この操作によって例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1568b-245">However, if you call <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> to display www,microsoft.com, the two windows now have different top-level domains, and the <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> operation will cause the exception to throw.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1568b-246">この操作を実行しようとしたコードには、このウィンドウを操作するアクセス許可が付与されていません。</span><span class="sxs-lookup"><span data-stu-id="1568b-246">The code trying to execute this operation does not have permission to manipulate this window.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.HtmlWindow.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-247">ウィンドウの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-247">Gets or sets the name of the window.</span></span></summary>
        <value><span data-ttu-id="1568b-248">名前を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-248">A <see cref="T:System.String" /> representing the name.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534187.aspx"><span data-ttu-id="1568b-249">name プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-249">name Property</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-250">指定した URL にある新しいコンテンツを表示またはダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="1568b-250">Displays or downloads the new content located at the specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="htmlWindow.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString"><span data-ttu-id="1568b-251">URL (Uniform Resource Locator) で表される表示対象のリソース。</span><span class="sxs-lookup"><span data-stu-id="1568b-251">The resource to display, described by a Uniform Resource Locator.</span></span></param>
        <summary><span data-ttu-id="1568b-252">指定した URL にある新しいコンテンツを表示またはダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="1568b-252">Displays or downloads the new content located at the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-253">パラメーターが`url` HTML ページを参照している場合、ウィンドウに現在表示されているページは破棄され、新しいページに置き換えられます。アプリケーションが以前のページのマネージ DOM オブジェクトに保持しているすべての参照は無効になります。</span><span class="sxs-lookup"><span data-stu-id="1568b-253">If the `url` parameter points to an HTML page, the page currently displayed in the window will be destroyed and replaced with the new page; any references your application holds to managed DOM objects in the old page will not be valid.</span></span> <span data-ttu-id="1568b-254">が`url` Internet Explorer によって表示できないリソースを指している場合、アプリケーションの外部でリソースを開くか、ディスクに保存するか、またはダウンロード操作をキャンセルするかを確認するダイアログボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-254">If `url` points to a resource that cannot be displayed by Internet Explorer, the user will be presented with a dialog box asking whether to open the resource outside of the application, save it to disk, or cancel the download operation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536638.aspx"><span data-ttu-id="1568b-255">navigate メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-255">navigate Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="htmlWindow.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1568b-256">現在のウィンドウに表示するドキュメントまたはオブジェクトの、<see cref="T:System.Uri" /> で指定された場所。</span><span class="sxs-lookup"><span data-stu-id="1568b-256">The location, specified as a <see cref="T:System.Uri" />, of the document or object to display in the current window.</span></span></param>
        <summary><span data-ttu-id="1568b-257">現在のウィンドウに新しいドキュメントを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-257">Displays a new document in the current window.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlWindow left, class System.Windows.Forms.HtmlWindow right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlWindow, right As HtmlWindow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlWindow ^ left, System::Windows::Forms::HtmlWindow ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.HtmlWindow * System.Windows.Forms.HtmlWindow -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlWindow" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlWindow" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1568b-258">最初の <see cref="T:System.Windows.Forms.HtmlWindow" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-258">The first <see cref="T:System.Windows.Forms.HtmlWindow" /> object.</span></span></param>
        <param name="right"><span data-ttu-id="1568b-259">2 番目の <see cref="T:System.Windows.Forms.HtmlWindow" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-259">The second <see cref="T:System.Windows.Forms.HtmlWindow" /> object.</span></span></param>
        <summary><span data-ttu-id="1568b-260">2 つの <see cref="T:System.Windows.Forms.HtmlWindow" /> オブジェクトが等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="1568b-260">Tests the two <see cref="T:System.Windows.Forms.HtmlWindow" /> objects for equality.</span></span></summary>
        <returns><span data-ttu-id="1568b-261">両方のパラメーターが <see langword="true" /> の場合、または、基になる COM インターフェイスが両方の要素で同じ場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-261"><see langword="true" /> if both parameters are <see langword="null" />, or if both elements have the same underlying COM interface; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-262">等値演算子は、 `IUnknown`指定<xref:System.Windows.Forms.HtmlWindow>されたクラスによってラップされる、基になる COM オブジェクトのポインターをテストします。</span><span class="sxs-lookup"><span data-stu-id="1568b-262">The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlWindow> classes.</span></span>  
  
 <span data-ttu-id="1568b-263">この演算子の同等の方法は次のようになります。<xref:System.Windows.Forms.HtmlWindow.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1568b-263">The equivalent method for this operator is <xref:System.Windows.Forms.HtmlWindow.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlWindow left, class System.Windows.Forms.HtmlWindow right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlWindow, right As HtmlWindow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlWindow ^ left, System::Windows::Forms::HtmlWindow ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.HtmlWindow * System.Windows.Forms.HtmlWindow -&gt; bool" Usage="System.Windows.Forms.HtmlWindow.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlWindow" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlWindow" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1568b-264">最初の <see cref="T:System.Windows.Forms.HtmlWindow" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-264">The first <see cref="T:System.Windows.Forms.HtmlWindow" /> object.</span></span></param>
        <param name="right"><span data-ttu-id="1568b-265">2 番目の <see cref="T:System.Windows.Forms.HtmlWindow" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1568b-265">The second <see cref="T:System.Windows.Forms.HtmlWindow" /> object.</span></span></param>
        <summary><span data-ttu-id="1568b-266">2 つの <see langword="HtmlWindow" /> オブジェクトが等しくないかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="1568b-266">Tests two <see langword="HtmlWindow" /> objects for inequality.</span></span></summary>
        <returns><span data-ttu-id="1568b-267">いずれか一方のオブジェクトだけが <see langword="true" /> の場合、または、基になる COM ポインターが一致しない場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-267"><see langword="true" /> if one but not both of the objects is <see langword="null" />, or the underlying COM pointers do not match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-268">指定したウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-268">Displays a file in the named window.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Open (string urlString, string target, string windowOptions, bool replaceEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow Open(string urlString, string target, string windowOptions, bool replaceEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (urlString As String, target As String, windowOptions As String, replaceEntry As Boolean) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ Open(System::String ^ urlString, System::String ^ target, System::String ^ windowOptions, bool replaceEntry);" />
      <MemberSignature Language="F#" Value="member this.Open : string * string * string * bool -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.Open (urlString, target, windowOptions, replaceEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
        <Parameter Name="replaceEntry" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString"><span data-ttu-id="1568b-269">読み込むファイルの場所を記述する URL。</span><span class="sxs-lookup"><span data-stu-id="1568b-269">The Uniform Resource Locator that describes the location of the file to load.</span></span></param>
        <param name="target"><span data-ttu-id="1568b-270">リソースを開くウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="1568b-270">The name of the window in which to open the resource.</span></span> <span data-ttu-id="1568b-271">これは、開発者が指定した名前、または次の特殊な値のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="1568b-271">This may be a developer-supplied name, or one of the following special values:</span></span> 
 <span data-ttu-id="1568b-272"><c>_blank</c>: 新しいウィンドウで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-272"><c>_blank</c>: Opens <paramref name="urlString" /> in a new window.</span></span> <span data-ttu-id="1568b-273"><see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" /> を呼び出した場合と同じ動作を行います。</span><span class="sxs-lookup"><span data-stu-id="1568b-273">Works the same as a call to <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />.</span></span>  
  
 <span data-ttu-id="1568b-274"><c>_media</c>: メディア バーで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-274"><c>_media</c>: Opens <paramref name="urlString" /> in the Media bar.</span></span>  
  
 <span data-ttu-id="1568b-275"><c>_parent</c>: 現在のウィンドウを作成したウィンドウで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-275"><c>_parent</c>: Opens <paramref name="urlString" /> in the window that created the current window.</span></span>  
  
 <span data-ttu-id="1568b-276"><c>_search</c>: 検索バーで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-276"><c>_search</c>: Opens <paramref name="urlString" /> in the Search bar.</span></span>  
  
 <span data-ttu-id="1568b-277"><c>_self</c>: 現在のウィンドウで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-277"><c>_self</c>: Opens <paramref name="urlString" /> in the current window.</span></span>  
  
 <span data-ttu-id="1568b-278"><c>_top</c>: <c>FRAME</c> 要素に属するウィンドウに対して呼び出した場合は、その <c>FRAMESET</c> をホストするウィンドウで <paramref name="urlString" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-278"><c>_top</c>: If called against a window belonging to a <c>FRAME</c> element, opens <paramref name="urlString" /> in the window hosting its <c>FRAMESET</c>.</span></span> <span data-ttu-id="1568b-279">それ以外の場合は、<c>_self</c> と同じ動作になります。</span><span class="sxs-lookup"><span data-stu-id="1568b-279">Otherwise, acts the same as <c>_self</c>.</span></span></param>
        <param name="windowOptions"><span data-ttu-id="1568b-280">次のオプションのうち、<c>name=value</c> の形式で表された 0 個以上のオプションを含むコンマ区切り文字列。</span><span class="sxs-lookup"><span data-stu-id="1568b-280">A comma-delimited string consisting of zero or more of the following options in the form <c>name=value</c>.</span></span> <span data-ttu-id="1568b-281"><c>left</c>、<c>top</c>、<c>height</c>、<c>width</c> のオプションについては、任意の整数を指定できます。それ以外の各オプションについて有効な値は、<c>yes</c> (<see langword="1" />) と <c>no</c> (<see langword="0" />) のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="1568b-281">Except for the <c>left</c>, <c>top</c>, <c>height</c>, and <c>width</c> options, which take arbitrary integers, each option accepts <c>yes</c> or <see langword="1" />, and <c>no</c> or <see langword="0" />, as valid values.</span></span>  
  
 <span data-ttu-id="1568b-282"><c>channelmode</c>: Internet Explorer 4.0 の非推奨のチャネルのテクノロジで使用されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-282"><c>channelmode</c>: Used with the deprecated channels technology of Internet Explorer 4.0.</span></span> <span data-ttu-id="1568b-283">既定値は <c>no</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-283">Default is <c>no</c>.</span></span>  
  
 <span data-ttu-id="1568b-284"><c>directories</c>: ウィンドウにディレクトリ移動ボタンを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-284"><c>directories</c>: Whether the window should display directory navigation buttons.</span></span> <span data-ttu-id="1568b-285">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-285">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-286"><c>height</c>: ウィンドウのクライアント領域の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-286"><c>height</c>: The height of the window's client area, in pixels.</span></span> <span data-ttu-id="1568b-287">最小値は 100 です。これよりも小さいウィンドウを開こうとすると、Internet Explorer の既定値に従ってウィンドウが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-287">The minimum is 100; attempts to open a window smaller than this will cause the window to open according to the Internet Explorer defaults.</span></span>  
  
 <span data-ttu-id="1568b-288"><c>left</c>: ユーザーの画面の左上隅を基準とした、ウィンドウの左側 (x 座標) の相対位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-288"><c>left</c>: The left (x-coordinate) position of the window, relative to the upper-left corner of the user's screen, in pixels.</span></span> <span data-ttu-id="1568b-289">正の整数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-289">Must be a positive integer.</span></span>  
  
 <span data-ttu-id="1568b-290"><c>location</c>: ユーザーがウィンドウを新しい URL に移動できるようにするアドレス バーを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-290"><c>location</c>: Whether to display the Address bar, which enables users to navigate the window to a new URL.</span></span> <span data-ttu-id="1568b-291">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-291">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-292"><c>menubar</c>: 新しいウィンドウにメニューを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-292"><c>menubar</c>: Whether to display menus on the new window.</span></span> <span data-ttu-id="1568b-293">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-293">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-294"><c>resizable</c>: ユーザーがウィンドウのサイズを変更できるかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-294"><c>resizable</c>: Whether the window can be resized by the user.</span></span> <span data-ttu-id="1568b-295">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-295">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-296"><c>scrollbars</c>: ウィンドウに水平スクロール バーと垂直スクロール バーを配置するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-296"><c>scrollbars</c>: Whether the window has horizontal and vertical scroll bars.</span></span> <span data-ttu-id="1568b-297">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-297">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-298"><c>status</c>: ウィンドウの下部にステータス バーを配置するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-298"><c>status</c>: Whether the window has a status bar at the bottom.</span></span> <span data-ttu-id="1568b-299">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-299">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-300"><c>titlebar</c>: 現在のページのタイトルを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-300"><c>titlebar</c>: Whether the title of the current page is displayed.</span></span> <span data-ttu-id="1568b-301">マネージド アプリケーションでこのオプションを <c>no</c> に設定しても影響はなく、タイトル バーは常に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-301">Setting this option to <c>no</c> has no effect within a managed application; the title bar will always appear.</span></span>  
  
 <span data-ttu-id="1568b-302"><c>toolbar</c>: **[戻る]**、**[進む]**、**[停止]** などのツールバー ボタンを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-302"><c>toolbar</c>: Whether toolbar buttons such as **Back**, **Forward**, and **Stop** are visible.</span></span> <span data-ttu-id="1568b-303">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-303">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-304"><c>top</c>: ユーザーの画面の左上隅を基準とした、ウィンドウの上端 (y 座標) の相対位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-304"><c>top</c>: The top (y-coordinate) position of the window, relative to the upper-left corner of the user's screen, in pixels.</span></span> <span data-ttu-id="1568b-305">正の整数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-305">Must be a positive integer.</span></span>  
  
 <span data-ttu-id="1568b-306"><c>width</c>: ウィンドウのクライアント領域の幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-306"><c>width</c>: The width of the window's client area, in pixels.</span></span> <span data-ttu-id="1568b-307">最小値は 100 です。これよりも小さいウィンドウを開こうとすると、Internet Explorer の既定値に従ってウィンドウが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-307">The minimum is 100; attempts to open a window smaller than this will cause the window to open according to the Internet Explorer defaults.</span></span></param>
        <param name="replaceEntry"><span data-ttu-id="1568b-308">ナビゲーション履歴に保存されている現在のウィンドウの URL を <paramref name="urlString" /> に置き換えるかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-308">Whether <paramref name="urlString" /> replaces the current window's URL in the navigation history.</span></span> <span data-ttu-id="1568b-309">これは、<see cref="T:System.Windows.Forms.HtmlHistory" /> クラスのメソッドの操作に影響を及ぼします。</span><span class="sxs-lookup"><span data-stu-id="1568b-309">This will effect the operation of methods on the <see cref="T:System.Windows.Forms.HtmlHistory" /> class.</span></span></param>
        <summary><span data-ttu-id="1568b-310">指定したウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-310">Displays a file in the named window.</span></span></summary>
        <returns><span data-ttu-id="1568b-311">新しいウィンドウ、または <paramref name="target" /> パラメーターで指定された以前に作成されたウィンドウを表す <see cref="T:System.Windows.Forms.HtmlWindow" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-311">An <see cref="T:System.Windows.Forms.HtmlWindow" /> representing the new window, or the previously created window named by the <paramref name="target" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-312">パラメーター `target`は、以前にを<xref:System.Windows.Forms.HtmlWindow.Open%2A>呼び出した結果として作成されたウィンドウに名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-312">The `target` parameter can name a window that was created as the result of a previous call to <xref:System.Windows.Forms.HtmlWindow.Open%2A>.</span></span> <span data-ttu-id="1568b-313">また、パラメーターは、ハイパーリンク (`A`要素) をクリックする`FORM`か、 `TARGET`属性を使用して新しいウィンドウでその URL を開く要素をクリックすることによって開くウィンドウを指すこともできます。</span><span class="sxs-lookup"><span data-stu-id="1568b-313">The parameter may also point to a window opened by clicking on a hyperlink (`A` element) or a `FORM` element that uses the `TARGET` attribute to open its URL in a new window.</span></span> <span data-ttu-id="1568b-314">次の HTML コードは、ユーザーがクリックし`orderWindow`たときにという名前の新しいウィンドウを開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-314">The following HTML code will open a new window named `orderWindow` when the user clicks it:</span></span>  
  
 `<A HREF="/startOrder.aspx" TARGET="orderWindow">Click to Start Order</a>`  
  
 <span data-ttu-id="1568b-315">`windowOptions`パラメーターにオプションを指定した場合、含まれていないオプションは自動的に無効になります。</span><span class="sxs-lookup"><span data-stu-id="1568b-315">If you supply any options for the `windowOptions` parameter, any option not included is automatically disabled.</span></span> <span data-ttu-id="1568b-316">つまり、ステータスバーを使用するよう`windowOptions`に指定した場合、メニューバー、ツールバー、タイトル、スクロールバーなどは、で明示的に有効に`windowOptions`しない限り表示されません。</span><span class="sxs-lookup"><span data-stu-id="1568b-316">In other words, if you only specify by way of `windowOptions` that you want a status bar, then the menu bar, toolbar, title, scroll bars, and so on will not be displayed unless you explicitly enable them by way of `windowOptions`.</span></span>  
  
 <span data-ttu-id="1568b-317">によって`url`参照されるファイルが、Internet Explorer 内でホストできる HTML ファイル、テキストファイル、またはその他のファイルの種類である場合は、名前付きのウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-317">If the file referenced by `url` is an HTML file, text file, or other file type that can be hosted inside of Internet Explorer, it will be displayed in the named window.</span></span> <span data-ttu-id="1568b-318">ファイルが Internet Explorer の内部に表示されず、[ターゲット] という名前のウィンドウが存在しない場合は、Internet Explorer がリソースをダウンロードするのに十分な時間だけ、ウィンドウが開きます。その後すぐに終了します。</span><span class="sxs-lookup"><span data-stu-id="1568b-318">If the file cannot be displayed inside of Internet Explorer, and the window named by target does not already exist, then the window will open only long enough for Internet Explorer to download the resource; it will close immediately afterwards.</span></span>  
  
 <span data-ttu-id="1568b-319">または<xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>を使用して新しいウィンドウを作成すると、HTML ドキュメントオブジェクトモデルによって Internet Explorer の新しいインスタンスが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-319">When you create new windows using <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, it causes the HTML Document Object Model to open a new instance of Internet Explorer.</span></span> <span data-ttu-id="1568b-320">作成したすべての<xref:System.Windows.Forms.HtmlWindow.Close%2A>ウィンドウでを呼び出さない場合、アプリケーションが終了した後も、Internet Explorer のこのインスタンスは実行されたままになります。</span><span class="sxs-lookup"><span data-stu-id="1568b-320">If you do not call <xref:System.Windows.Forms.HtmlWindow.Close%2A> on all of the windows you have created, this instance of Internet Explorer will remain running even after your application has quit.</span></span>  
  
 <span data-ttu-id="1568b-321">を使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>して既存のウィンドウに URL を読み込む場合`windowOptions` 、は無視されます。ウィンドウでは、の最初の呼び出し<xref:System.Windows.Forms.HtmlWindow.Open%2A>で指定された寸法、外観、および画面の場所が最初に保持されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-321">If you use <xref:System.Windows.Forms.HtmlWindow.Open%2A> to load a URL in an existing window, `windowOptions` will be ignored; the window will retain the dimensions, appearance, and screen location first given it by the initial call to <xref:System.Windows.Forms.HtmlWindow.Open%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Open (Uri url, string target, string windowOptions, bool replaceEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow Open(class System.Uri url, string target, string windowOptions, bool replaceEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (url As Uri, target As String, windowOptions As String, replaceEntry As Boolean) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ Open(Uri ^ url, System::String ^ target, System::String ^ windowOptions, bool replaceEntry);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri * string * string * bool -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.Open (url, target, windowOptions, replaceEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
        <Parameter Name="replaceEntry" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1568b-322">読み込むファイルの場所を記述する URL。</span><span class="sxs-lookup"><span data-stu-id="1568b-322">The Uniform Resource Locator that describes the location of the file to load.</span></span></param>
        <param name="target"><span data-ttu-id="1568b-323">リソースを開くウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="1568b-323">The name of the window in which to open the resource.</span></span> <span data-ttu-id="1568b-324">これは、開発者が指定した名前、または次の特殊な値のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="1568b-324">This can be a developer-supplied name, or one of the following special values:</span></span> 
 <span data-ttu-id="1568b-325"><c>_blank</c>: 新しいウィンドウで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-325"><c>_blank</c>: Opens <paramref name="url" /> in a new window.</span></span> <span data-ttu-id="1568b-326"><see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" /> を呼び出した場合と同じ動作を行います。</span><span class="sxs-lookup"><span data-stu-id="1568b-326">Works the same as a call to <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />.</span></span>  
  
 <span data-ttu-id="1568b-327"><c>_media</c>: メディア バーで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-327"><c>_media</c>: Opens <paramref name="url" /> in the Media bar.</span></span>  
  
 <span data-ttu-id="1568b-328"><c>_parent</c>: 現在のウィンドウを作成したウィンドウで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-328"><c>_parent</c>: Opens <paramref name="url" /> in the window that created the current window.</span></span>  
  
 <span data-ttu-id="1568b-329"><c>_search</c>: 検索バーで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-329"><c>_search</c>: Opens <paramref name="url" /> in the Search bar.</span></span>  
  
 <span data-ttu-id="1568b-330"><c>_self</c>: 現在のウィンドウで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-330"><c>_self</c>: Opens <paramref name="url" /> in the current window.</span></span>  
  
 <span data-ttu-id="1568b-331"><c>_top</c>: <c>FRAME</c> 要素に属するウィンドウに対して呼び出した場合は、その <c>FRAMESET</c> をホストするウィンドウで <paramref name="url" /> を開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-331"><c>_top</c>: If called against a window belonging to a <c>FRAME</c> element, opens <paramref name="url" /> in the window hosting its <c>FRAMESET</c>.</span></span> <span data-ttu-id="1568b-332">それ以外の場合は、<c>_self</c> と同じ動作になります。</span><span class="sxs-lookup"><span data-stu-id="1568b-332">Otherwise, acts the same as <c>_self</c>.</span></span></param>
        <param name="windowOptions"><span data-ttu-id="1568b-333">次のオプションのうち、<c>name=value</c> の形式で表された 0 個以上のオプションを含むコンマ区切り文字列。</span><span class="sxs-lookup"><span data-stu-id="1568b-333">A comma-delimited string consisting of zero or more of the following options in the form <c>name=value</c>.</span></span> <span data-ttu-id="1568b-334"><c>left</c>、<c>top</c>、<c>height</c>、<c>width</c> のオプションについては、任意の整数を指定できます。それ以外の各オプションについて有効な値は、<c>yes</c> (<see langword="1" />) と <c>no</c> (<see langword="0" />) のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="1568b-334">Except for the <c>left</c>, <c>top</c>, <c>height</c>, and <c>width</c> options, which take arbitrary integers, each option accepts <c>yes</c> or <see langword="1" />, and <c>no</c> or <see langword="0" />, as valid values.</span></span>  
  
 <span data-ttu-id="1568b-335"><c>channelmode</c>: Internet Explorer 4.0 の非推奨のチャネルのテクノロジで使用されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-335"><c>channelmode</c>: Used with the deprecated channels technology of Internet Explorer 4.0.</span></span> <span data-ttu-id="1568b-336">既定値は <c>no</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-336">Default is <c>no</c>.</span></span>  
  
 <span data-ttu-id="1568b-337"><c>directories</c>: ウィンドウにディレクトリ移動ボタンを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-337"><c>directories</c>: Whether the window should display directory navigation buttons.</span></span> <span data-ttu-id="1568b-338">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-338">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-339"><c>height</c>: ウィンドウのクライアント領域の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-339"><c>height</c>: The height of the window's client area, in pixels.</span></span> <span data-ttu-id="1568b-340">最小値は 100 です。これよりも小さいウィンドウを開こうとすると、Internet Explorer の既定値に従ってウィンドウが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-340">The minimum is 100; attempts to open a window smaller than this will cause the window to open according to The Internet Explorer defaults.</span></span>  
  
 <span data-ttu-id="1568b-341"><c>left</c>: ユーザーの画面の左上隅を基準とした、ウィンドウの左側 (x 座標) の相対位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-341"><c>left</c>: The left (x-coordinate) position of the window, relative to the upper-left corner of the user's screen, in pixels.</span></span> <span data-ttu-id="1568b-342">正の整数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-342">Must be a positive integer.</span></span>  
  
 <span data-ttu-id="1568b-343"><c>location</c>: ユーザーがウィンドウを新しい URL に移動できるようにするアドレス バーを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-343"><c>location</c>: Whether to display the Address bar, which enables users to navigate the window to a new URL.</span></span> <span data-ttu-id="1568b-344">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-344">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-345"><c>menubar</c>: 新しいウィンドウにメニューを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-345"><c>menubar</c>: Whether to display menus on the new window.</span></span> <span data-ttu-id="1568b-346">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-346">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-347"><c>resizable</c>: ユーザーがウィンドウのサイズを変更できるかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-347"><c>resizable</c>: Whether the window can be resized by the user.</span></span> <span data-ttu-id="1568b-348">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-348">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-349"><c>scrollbars</c>: ウィンドウに水平スクロール バーと垂直スクロール バーを配置するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-349"><c>scrollbars</c>: Whether the window has horizontal and vertical scroll bars.</span></span> <span data-ttu-id="1568b-350">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-350">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-351"><c>status</c>: ウィンドウの下部にステータス バーを配置するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-351"><c>status</c>: Whether the window has a status bar at the bottom.</span></span> <span data-ttu-id="1568b-352">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-352">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-353"><c>titlebar</c>: 現在のページのタイトルを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-353"><c>titlebar</c>: Whether the title of the current page is displayed.</span></span> <span data-ttu-id="1568b-354">マネージド アプリケーションでこのオプションを <c>no</c> に設定しても影響はなく、タイトル バーは常に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-354">Setting this option to <c>no</c> has no effect within a managed application; the title bar will always appear.</span></span>  
  
 <span data-ttu-id="1568b-355"><c>toolbar</c>: **[戻る]**、**[進む]**、**[停止]** などのツールバー ボタンを表示するかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-355"><c>toolbar</c>: Whether toolbar buttons such as **Back**, **Forward**, and **Stop** are visible.</span></span> <span data-ttu-id="1568b-356">既定値は <c>yes</c> です。</span><span class="sxs-lookup"><span data-stu-id="1568b-356">Default is <c>yes</c>.</span></span>  
  
 <span data-ttu-id="1568b-357"><c>top</c>: ユーザーの画面の左上隅を基準とした、ウィンドウの上端 (y 座標) の相対位置 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-357"><c>top</c>: The top (y-coordinate) position of the window, relative to the upper-left corner of the user's screen, in pixels.</span></span> <span data-ttu-id="1568b-358">正の整数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-358">Must be a positive integer.</span></span>  
  
 <span data-ttu-id="1568b-359"><c>width</c>: ウィンドウのクライアント領域の幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="1568b-359"><c>width</c>: The width of the window's client area, in pixels.</span></span> <span data-ttu-id="1568b-360">最小値は 100 です。これよりも小さいウィンドウを開こうとすると、Internet Explorer の既定値に従ってウィンドウが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-360">The minimum is 100; attempts to open a window smaller than this will cause the window to open according to The Internet Explorer defaults.</span></span></param>
        <param name="replaceEntry"><span data-ttu-id="1568b-361">ナビゲーション履歴に保存されている現在のウィンドウの URL を <paramref name="url" /> に置き換えるかどうか。</span><span class="sxs-lookup"><span data-stu-id="1568b-361">Whether <paramref name="url" /> replaces the current window's URL in the navigation history.</span></span> <span data-ttu-id="1568b-362">これは、<see cref="T:System.Windows.Forms.HtmlHistory" /> クラスのメソッドの操作に影響を及ぼします。</span><span class="sxs-lookup"><span data-stu-id="1568b-362">This will effect the operation of methods on the <see cref="T:System.Windows.Forms.HtmlHistory" /> class.</span></span></param>
        <summary><span data-ttu-id="1568b-363">指定したウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-363">Displays a file in the named window.</span></span></summary>
        <returns><span data-ttu-id="1568b-364">新しいウィンドウ、または <paramref name="target" /> パラメーターで指定された以前に作成されたウィンドウを表す <see cref="T:System.Windows.Forms.HtmlWindow" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-364">An <see cref="T:System.Windows.Forms.HtmlWindow" /> representing the new window, or the previously created window named by the <paramref name="target" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-365">パラメーター `target`は、以前にを<xref:System.Windows.Forms.HtmlWindow.Open%2A>呼び出した結果として作成されたウィンドウに名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-365">The `target` parameter can name a window that was created as the result of a previous call to <xref:System.Windows.Forms.HtmlWindow.Open%2A>.</span></span> <span data-ttu-id="1568b-366">また、パラメーターは、ハイパーリンク (`A`要素) をクリックする`FORM`か、 `TARGET`属性を使用して新しいウィンドウでその URL を開く要素をクリックすることによって開くウィンドウを指すこともできます。</span><span class="sxs-lookup"><span data-stu-id="1568b-366">The parameter may also point to a window opened by clicking on a hyperlink (`A` element) or a `FORM` element that uses the `TARGET` attribute to open its URL in a new window.</span></span> <span data-ttu-id="1568b-367">次の HTML コードは、ユーザーがクリックし`orderWindow`たときにという名前の新しいウィンドウを開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-367">The following HTML code will open a new window named `orderWindow` when the user clicks it:</span></span>  
  
 `<A HREF="/startOrder.aspx" TARGET="orderWindow">Click to Start Order</a>`  
  
 <span data-ttu-id="1568b-368">`windowOptions`パラメーターにオプションを指定した場合、含まれていないオプションは自動的に無効になります。</span><span class="sxs-lookup"><span data-stu-id="1568b-368">If you supply any options for the `windowOptions` parameter, any option not included is automatically disabled.</span></span> <span data-ttu-id="1568b-369">つまり、ステータスバーを使用するよう`windowOptions`に指定した場合、メニューバー、ツールバー、タイトル、スクロールバーなどは、で明示的に有効に`windowOptions`しない限り表示されません。</span><span class="sxs-lookup"><span data-stu-id="1568b-369">In other words, if you only specify by way of `windowOptions` that you want a status bar, then the menu bar, toolbar, title, scroll bars, and so on will not be displayed unless you explicitly enable them by way of `windowOptions`.</span></span>  
  
 <span data-ttu-id="1568b-370">によって`url`参照されるファイルが、Internet Explorer 内でホストできる HTML ファイル、テキストファイル、またはその他のファイルの種類である場合は、名前付きのウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-370">If the file referenced by `url` is an HTML file, text file, or other file type that can be hosted inside of Internet Explorer, it will be displayed in the named window.</span></span> <span data-ttu-id="1568b-371">ファイルが Internet Explorer の内部に表示されず、[ターゲット] という名前のウィンドウが存在しない場合は、Internet Explorer がリソースをダウンロードするのに十分な時間だけ、ウィンドウが開きます。その後すぐに終了します。</span><span class="sxs-lookup"><span data-stu-id="1568b-371">If the file cannot be displayed inside of Internet Explorer, and the window named by target does not already exist, then the window will open only long enough for Internet Explorer to download the resource; it will close immediately afterwards.</span></span>  
  
 <span data-ttu-id="1568b-372">または<xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>を使用して新しいウィンドウを作成すると、HTML ドキュメントオブジェクトモデルによって Internet Explorer の新しいインスタンスが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-372">When you create new windows using <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, it causes the HTML Document Object Model to open a new instance of Internet Explorer.</span></span> <span data-ttu-id="1568b-373">作成したすべての<xref:System.Windows.Forms.HtmlWindow.Close%2A>ウィンドウでを呼び出さない場合、アプリケーションが終了した後も、Internet Explorer のこのインスタンスは実行されたままになります。</span><span class="sxs-lookup"><span data-stu-id="1568b-373">If you do not call <xref:System.Windows.Forms.HtmlWindow.Close%2A> on all of the windows you have created, this instance of Internet Explorer will remain running even after your application has quit.</span></span>  
  
 <span data-ttu-id="1568b-374">を使用<xref:System.Windows.Forms.HtmlWindow.Open%2A>して既存のウィンドウに URL を読み込む場合`windowOptions` 、は無視されます。ウィンドウでは、の最初の呼び出し<xref:System.Windows.Forms.HtmlWindow.Open%2A>で指定された寸法、外観、および画面の場所が最初に保持されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-374">If you use <xref:System.Windows.Forms.HtmlWindow.Open%2A> to load a URL in an existing window, `windowOptions` will be ignored; the window will retain the dimensions, appearance, and screen location first given it by the initial call to <xref:System.Windows.Forms.HtmlWindow.Open%2A> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-375">次のコード例には、2つのメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="1568b-375">The following code example contains two methods:</span></span>  
  
-   <span data-ttu-id="1568b-376">最初のは、という名前`displayWindow`のウィンドウで URL を開きます。このウィンドウは、ステータスバーが表示された状態で作成されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-376">The first opens a URL in a window named `displayWindow`, which it creates with a status bar displayed.</span></span>  
  
-   <span data-ttu-id="1568b-377">2番目の方法では、同じウィンドウで別の URL を開きますが、場所バーのみを表示するように指定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-377">The second opens another URL in the same window, but specifies that only the location bar should be displayed.</span></span>  
  
 <span data-ttu-id="1568b-378">ウィンドウのサイズと表示されるコントロールは、最初に開いた URL によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1568b-378">Notice that the dimensions of the window and the controls that are displayed depends on which URL is opened first.</span></span> <span data-ttu-id="1568b-379">このコード例では、フォームにと<xref:System.Windows.Forms.WebBrowser>いう名前`WebBrowser1`のコントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-379">The code example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536651.aspx"><span data-ttu-id="1568b-380">open メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-380">open Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Opener">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Opener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Opener" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Opener" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Opener As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Opener { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Opener : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindow.Opener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-381">現在のウィンドウを開いたウィンドウへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-381">Gets a reference to the window that opened the current window.</span></span></summary>
        <value><span data-ttu-id="1568b-382"><see cref="T:System.Windows.Forms.HtmlWindow" /> メソッドまたは <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> メソッドの呼び出しによって作成された <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-382">The <see cref="T:System.Windows.Forms.HtmlWindow" /> that was created by a call to the <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> or <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" /> methods.</span></span> <span data-ttu-id="1568b-383">ウィンドウがこれらのメソッドのいずれかを使用して作成されていない場合、このプロパティは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1568b-383">If the window was not created using one of these methods, this property returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenNew">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-384">新しいウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-384">Displays a file in a new window.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow OpenNew (string urlString, string windowOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow OpenNew(string urlString, string windowOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (urlString As String, windowOptions As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ OpenNew(System::String ^ urlString, System::String ^ windowOptions);" />
      <MemberSignature Language="F#" Value="member this.OpenNew : string * string -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.OpenNew (urlString, windowOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString"><span data-ttu-id="1568b-385">読み込むファイルの場所を記述する URL。</span><span class="sxs-lookup"><span data-stu-id="1568b-385">The Uniform Resource Locator that describes the location of the file to load.</span></span></param>
        <param name="windowOptions"><span data-ttu-id="1568b-386">次のオプションのうち、<c>name=value</c> の形式で表された 0 個以上のオプションを含むコンマ区切り文字列。</span><span class="sxs-lookup"><span data-stu-id="1568b-386">A comma-delimited string consisting of zero or more of the following options in the form <c>name=value</c>.</span></span> <span data-ttu-id="1568b-387">有効なオプションの詳細については、<see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-387">See <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> for a full description of the valid options.</span></span></param>
        <summary><span data-ttu-id="1568b-388">新しいウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-388">Displays a file in a new window.</span></span></summary>
        <returns><span data-ttu-id="1568b-389">新しいウィンドウを表す <see cref="T:System.Windows.Forms.HtmlWindow" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-389">An <see cref="T:System.Windows.Forms.HtmlWindow" /> representing the new window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-390">によって`url`参照されるファイルが、Internet Explorer 内でホストできる HTML ファイル、テキストファイル、またはその他のファイルの種類である場合は、新しいウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-390">If the file referenced by `url` is an HTML file, text file, or other file type that can be hosted inside of Internet Explorer, it will be displayed in a new window.</span></span> <span data-ttu-id="1568b-391">ファイルを Internet Explorer 内に表示できない場合は、Internet Explorer がリソースをダウンロードするのに十分な時間だけウィンドウが開きます。その後すぐに終了します。</span><span class="sxs-lookup"><span data-stu-id="1568b-391">If the file cannot be displayed inside of Internet Explorer, then the window will open only long enough for Internet Explorer to download the resource; it will close immediately afterwards.</span></span>  
  
 <span data-ttu-id="1568b-392">または<xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>を使用して新しいウィンドウを作成すると、HTML ドキュメントオブジェクトモデルによって Internet Explorer の新しいインスタンスが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-392">When you create new windows using <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, it causes the HTML Document Object Model to open a new instance of Internet Explorer.</span></span> <span data-ttu-id="1568b-393">作成したすべての<xref:System.Windows.Forms.HtmlWindow.Close%2A>ウィンドウでを呼び出さない場合、アプリケーションが終了した後も、Internet Explorer のこのインスタンスは実行されたままになります。</span><span class="sxs-lookup"><span data-stu-id="1568b-393">If you do not call <xref:System.Windows.Forms.HtmlWindow.Close%2A> on all of the windows you have created, this instance of Internet Explorer will remain running even after your application has quit.</span></span>  
  
 <span data-ttu-id="1568b-394">以前に開いたウィンドウにドキュメントを読み込む場合は、 <xref:System.Windows.Forms.HtmlWindow.Open%2A>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-394">If you want to load a document into a previously opened window, see the <xref:System.Windows.Forms.HtmlWindow.Open%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow OpenNew (Uri url, string windowOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow OpenNew(class System.Uri url, string windowOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (url As Uri, windowOptions As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ OpenNew(Uri ^ url, System::String ^ windowOptions);" />
      <MemberSignature Language="F#" Value="member this.OpenNew : Uri * string -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.OpenNew (url, windowOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="windowOptions" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1568b-395">読み込むファイルの場所を記述する URL。</span><span class="sxs-lookup"><span data-stu-id="1568b-395">The Uniform Resource Locator that describes the location of the file to load.</span></span></param>
        <param name="windowOptions"><span data-ttu-id="1568b-396">次のオプションのうち、<c>name=value</c> の形式で表された 0 個以上のオプションを含むコンマ区切り文字列。</span><span class="sxs-lookup"><span data-stu-id="1568b-396">A comma-delimited string consisting of zero or more of the following options in the form <c>name=value</c>.</span></span> <span data-ttu-id="1568b-397">有効なオプションの詳細については、<see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-397">See <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> for a full description of the valid options.</span></span></param>
        <summary><span data-ttu-id="1568b-398">新しいウィンドウにファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-398">Displays a file in a new window.</span></span></summary>
        <returns><span data-ttu-id="1568b-399">新しいウィンドウを表す <see cref="T:System.Windows.Forms.HtmlWindow" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-399">An <see cref="T:System.Windows.Forms.HtmlWindow" /> representing the new window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-400">によって`url`参照されるファイルが、Internet Explorer 内でホストできる HTML ファイル、テキストファイル、またはその他のファイルの種類である場合は、新しいウィンドウに表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-400">If the file referenced by `url` is an HTML file, text file, or other file type that can be hosted inside of Internet Explorer, it will be displayed in a new window.</span></span> <span data-ttu-id="1568b-401">ファイルを Internet Explorer 内に表示できない場合は、Internet Explorer がリソースをダウンロードするのに十分な時間だけウィンドウが開きます。その後すぐに終了します。</span><span class="sxs-lookup"><span data-stu-id="1568b-401">If the file cannot be displayed inside of Internet Explorer, then the window will open only long enough for Internet Explorer to download the resource; it will close immediately afterwards.</span></span>  
  
 <span data-ttu-id="1568b-402">または<xref:System.Windows.Forms.HtmlWindow.Open%2A> <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>を使用して新しいウィンドウを作成すると、HTML ドキュメントオブジェクトモデルによって Internet Explorer の新しいインスタンスが開かれます。</span><span class="sxs-lookup"><span data-stu-id="1568b-402">When you create new windows using <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, it causes the HTML Document Object Model to open a new instance of Internet Explorer.</span></span> <span data-ttu-id="1568b-403">作成したすべての<xref:System.Windows.Forms.HtmlWindow.Close%2A>ウィンドウでを呼び出さない場合、アプリケーションが終了した後も、Internet Explorer のこのインスタンスは実行されたままになります。</span><span class="sxs-lookup"><span data-stu-id="1568b-403">If you do not call <xref:System.Windows.Forms.HtmlWindow.Close%2A> on all of the windows you have created, this instance of Internet Explorer will remain running even after your application has quit.</span></span>  
  
 <span data-ttu-id="1568b-404">以前に開いたウィンドウにドキュメントを読み込む場合は、 <xref:System.Windows.Forms.HtmlWindow.Open%2A>メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-404">If you want to load a document into a previously opened window, see the <xref:System.Windows.Forms.HtmlWindow.Open%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536651.aspx"><span data-ttu-id="1568b-405">open メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-405">open Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Parent { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindow.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-406">フレームを含むページにおいて、現在のウィンドウの上位にあるウィンドウを取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-406">Gets the window which resides above the current one in a page containing frames.</span></span></summary>
        <value><span data-ttu-id="1568b-407">現在のウィンドウを所有する <see cref="T:System.Windows.Forms.HtmlWindow" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-407">The <see cref="T:System.Windows.Forms.HtmlWindow" /> that owns the current window.</span></span> <span data-ttu-id="1568b-408">現在のウィンドウが<c>フレーム</c>ではない場合、または<c>フレーム</c>内に埋め込まれてい<see langword="null" />ない場合は、を返します。</span><span class="sxs-lookup"><span data-stu-id="1568b-408">If the current window is not a <c>FRAME</c>, or is not embedded inside of a <c>FRAME</c>, it returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-409">フレームを含むドキュメントでは、 `FRAME`内の`FRAMESET`各がページ上の個別の子ウィンドウとして機能します。</span><span class="sxs-lookup"><span data-stu-id="1568b-409">In a document containing frames, each `FRAME` within a `FRAMESET` acts as a separate child window on the page.</span></span> <span data-ttu-id="1568b-410">`FRAME`各`FRAME` の親`FRAMESET`は、を含むです。</span><span class="sxs-lookup"><span data-stu-id="1568b-410">The parent of each `FRAME` is the `FRAMESET` which contains the `FRAME`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534326.aspx"><span data-ttu-id="1568b-411">親プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-411">parent Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Position { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Drawing.Point" Usage="System.Windows.Forms.HtmlWindow.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-412">画面におけるウィンドウのクライアント領域の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-412">Gets the position of the window's client area on the screen.</span></span></summary>
        <value><span data-ttu-id="1568b-413">画面の左上隅の x 座標と y 座標をピクセル単位で記述する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-413">A <see cref="T:System.Drawing.Point" /> describing the x -and y-coordinates of the top-left corner of the screen, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-414"><xref:System.Windows.Forms.WebBrowser>コントロールのプロパティは、フォームの左上隅を基準としてコントロールの位置を返します。 <xref:System.Windows.Forms.Control.Location%2A></span><span class="sxs-lookup"><span data-stu-id="1568b-414">The <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.WebBrowser> control will return the position of the control relative to the upper-left corner of the form.</span></span> <span data-ttu-id="1568b-415">これに対し<xref:System.Windows.Forms.HtmlWindow.Position%2A> 、では、ユーザーのモニターの左上隅を基準として、ドキュメントの表示領域の位置が返されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-415">By contrast, <xref:System.Windows.Forms.HtmlWindow.Position%2A> will return the location of the document's display area relative to the top-left corner of the user's monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-416">次のコード例では、フォーム上のコントロール<xref:System.Windows.Forms.WebBrowser>の上に新しいウィンドウを直接開きます。</span><span class="sxs-lookup"><span data-stu-id="1568b-416">The following code example opens a new window directly over the <xref:System.Windows.Forms.WebBrowser> control on the form.</span></span> <span data-ttu-id="1568b-417">このコード例では、フォームにという名前<xref:System.Windows.Forms.WebBrowser> `WebBrowser1`のコントロールのインスタンスが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-417">The code example requires that your form contains an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.HtmlWindow#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc06e61f-43b6-4408-a676-2542dcfcd96e"><span data-ttu-id="1568b-418">Windows フォームの座標</span><span class="sxs-lookup"><span data-stu-id="1568b-418">Windows Forms Coordinates</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534389.aspx"><span data-ttu-id="1568b-419">screenLeft プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-419">screenLeft Property</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534390.aspx"><span data-ttu-id="1568b-420">screenTop プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-420">screenTop Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public string Prompt (string message, string defaultInputValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Prompt(string message, string defaultInputValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prompt (message As String, defaultInputValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Prompt(System::String ^ message, System::String ^ defaultInputValue);" />
      <MemberSignature Language="F#" Value="member this.Prompt : string * string -&gt; string" Usage="htmlWindow.Prompt (message, defaultInputValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="defaultInputValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1568b-421">ユーザーに表示するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="1568b-421">The message to display to the user.</span></span></param>
        <param name="defaultInputValue"><span data-ttu-id="1568b-422">テキスト ボックスに表示する既定値。</span><span class="sxs-lookup"><span data-stu-id="1568b-422">The default value displayed in the text box.</span></span></param>
        <summary><span data-ttu-id="1568b-423">メッセージとテキスト ボックスをユーザーに表示するダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-423">Shows a dialog box that displays a message and a text box to the user.</span></span></summary>
        <returns><span data-ttu-id="1568b-424">ユーザーによって入力されたテキストを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-424">A <see cref="T:System.String" /> representing the text entered by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-425"><xref:System.Windows.Forms.HtmlWindow.Prompt%2A>ユーザーから簡単なテキスト入力を簡単に取得できる方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="1568b-425"><xref:System.Windows.Forms.HtmlWindow.Prompt%2A> provides a quick, easy way to obtain simple text input from the user.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536673.aspx"><span data-ttu-id="1568b-426">prompt メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-426">prompt Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveFocus">
      <MemberSignature Language="C#" Value="public void RemoveFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.RemoveFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFocus();" />
      <MemberSignature Language="F#" Value="member this.RemoveFocus : unit -&gt; unit" Usage="htmlWindow.RemoveFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1568b-427">現在のウィンドウからフォーカスを移します。</span><span class="sxs-lookup"><span data-stu-id="1568b-427">Takes focus off of the current window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-428">内の`FRAME`ウィンドウで呼び出された場合<xref:System.Windows.Forms.HtmlWindow.RemoveFocus%2A> 、ウィンドウはフォーカスを失いますが、別のウィンドウにフォーカスが自動的に設定されることはありません。`FRAMESET`</span><span class="sxs-lookup"><span data-stu-id="1568b-428">When called on a `FRAME` window in a `FRAMESET`, <xref:System.Windows.Forms.HtmlWindow.RemoveFocus%2A> will cause that window to lose focus, but it will not automatically set focus on another window.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536347.aspx"><span data-ttu-id="1568b-429">ぼかしメソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-429">blur Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Resize : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-430">ユーザーがマウスを使用してウィンドウの寸法を変更すると発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-430">Occurs when the user uses the mouse to change the dimensions of the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1568b-431">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-431">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-432">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Resize>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-432">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Resize> event.</span></span> <span data-ttu-id="1568b-433">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-433">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1568b-434">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-434">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1568b-435">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-435">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-436">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Resize>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-436">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Resize> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#455](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#455)]
 [!code-vb[System.Windows.Forms.EventExamples#455](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#455)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536959.aspx"><span data-ttu-id="1568b-437">onresize イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-437">onresize Event</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResizeTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-438">ウィンドウのサイズを指定した寸法に変更します。</span><span class="sxs-lookup"><span data-stu-id="1568b-438">Changes the size of the window to the specified dimensions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public void ResizeTo (System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResizeTo(valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResizeTo(System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="member this.ResizeTo : System.Drawing.Size -&gt; unit" Usage="htmlWindow.ResizeTo size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="1568b-439">ウィンドウの幅と高さをピクセル単位で記述する <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-439">A <see cref="T:System.Drawing.Size" /> describing the desired width and height of the window, in pixels.</span></span> <span data-ttu-id="1568b-440">幅も高さも 100 ピクセル以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-440">Must be 100 pixels or more in both dimensions.</span></span></param>
        <summary><span data-ttu-id="1568b-441">ウィンドウのサイズを指定した寸法に変更します。</span><span class="sxs-lookup"><span data-stu-id="1568b-441">Changes the size of the window to the specified dimensions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1568b-442">次のコード例では、新しいウィンドウを開き、使用可能な画面領域に合わせてサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="1568b-442">The following code example opens a new window, and resizes it to fill the available screen area.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1568b-443">サイズ変更対象のウィンドウが、親ウィンドウとは別のドメインにあります。</span><span class="sxs-lookup"><span data-stu-id="1568b-443">The window you are trying to resize is in a different domain than its parent window.</span></span> <span data-ttu-id="1568b-444">この制限はフレーム間スクリプト セキュリティの一部です。詳細については、「[フレーム間スクリプトおよびセキュリティについて](https://msdn.microsoft.com/library/ms533028.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-444">This restriction is part of cross-frame scripting security; for more information, see [About Cross-Frame Scripting and Security](https://msdn.microsoft.com/library/ms533028.aspx).</span></span></exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536723.aspx"><span data-ttu-id="1568b-445">resizeTo メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-445">resizeTo Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public void ResizeTo (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResizeTo(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResizeTo (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResizeTo(int width, int height);" />
      <MemberSignature Language="F#" Value="member this.ResizeTo : int * int -&gt; unit" Usage="htmlWindow.ResizeTo (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="1568b-446">ウィンドウの幅をピクセル単位で記述します。</span><span class="sxs-lookup"><span data-stu-id="1568b-446">Describes the desired width of the window, in pixels.</span></span> <span data-ttu-id="1568b-447">100 ピクセル以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-447">Must be 100 pixels or more.</span></span></param>
        <param name="height"><span data-ttu-id="1568b-448">ウィンドウの高さをピクセル単位で記述します。</span><span class="sxs-lookup"><span data-stu-id="1568b-448">Describes the desired height of the window, in pixels.</span></span> <span data-ttu-id="1568b-449">100 ピクセル以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1568b-449">Must be 100 pixels or more.</span></span></param>
        <summary><span data-ttu-id="1568b-450">ウィンドウのサイズを指定した寸法に変更します。</span><span class="sxs-lookup"><span data-stu-id="1568b-450">Changes the size of the window to the specified dimensions.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1568b-451">サイズ変更対象のウィンドウが、親ウィンドウとは別のドメインにあります。</span><span class="sxs-lookup"><span data-stu-id="1568b-451">The window you are trying to resize is in a different domain than its parent window.</span></span> <span data-ttu-id="1568b-452">この制限はフレーム間スクリプト セキュリティの一部です。詳細については、「[フレーム間スクリプトおよびセキュリティについて](https://msdn.microsoft.com/library/ms533028.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-452">This restriction is part of cross-frame scripting security; for more information, see [About Cross-Frame Scripting and Security](https://msdn.microsoft.com/library/ms533028.aspx).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Scroll : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-453">ユーザーがウィンドウをスクロールして、画面に表示されていなかったテキストを表示すると発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-453">Occurs when the user scrolls through the window to view off-screen text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1568b-454">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-454">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-455">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Scroll>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-455">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Scroll> event.</span></span> <span data-ttu-id="1568b-456">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-456">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1568b-457">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-457">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1568b-458">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-458">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-459">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Scroll>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-459">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Scroll> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#456](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#456)]
 [!code-vb[System.Windows.Forms.EventExamples#456](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#456)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536966.aspx"><span data-ttu-id="1568b-460">onscroll イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-460">onscroll Event</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScrollTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1568b-461">指定した位置までウィンドウをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1568b-461">Scrolls the window to the designated position.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollTo(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : System.Drawing.Point -&gt; unit" Usage="htmlWindow.ScrollTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1568b-462">現在のウィンドウの左上隅を基準とした、ページのスクロール先の x 座標と y 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-462">The x- and y-coordinates, relative to the top-left corner of the current window, toward which the page should scroll.</span></span></param>
        <summary><span data-ttu-id="1568b-463">ウィンドウを指定された座標に移動します。</span><span class="sxs-lookup"><span data-stu-id="1568b-463">Moves the window to the specified coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-464"><xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>ドキュメントの指定した座標がドキュメントのウィンドウの左上隅に配置されるように、ドキュメントがスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="1568b-464"><xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> will cause the document to scroll so that the specified coordinate on the document is located in the upper-left corner of the document's window.</span></span> <span data-ttu-id="1568b-465">ドキュメントが長すぎていないか、この処理に十分な<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>大きさでない場合、は、指定された方向にできるだけ、ドキュメントをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1568b-465">If the document is not long or wide enough for this to happen, <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> will scroll through the document as far as possible in the specified direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-466">次のコード例では、ユーザーがクリックした座標位置までドキュメントをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1568b-466">The following code example scrolls through the document to the coordinate position clicked by the user.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536731.aspx"><span data-ttu-id="1568b-467">scrollTo メソッド</span><span class="sxs-lookup"><span data-stu-id="1568b-467">scrollTo Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollTo (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollTo(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : int * int -&gt; unit" Usage="htmlWindow.ScrollTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1568b-468">現在のウィンドウの左上隅を基準とした、ページのスクロール先の x 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-468">The x-coordinate, relative to the top-left corner of the current window, toward which the page should scroll.</span></span></param>
        <param name="y"><span data-ttu-id="1568b-469">現在のウィンドウの左上隅を基準とした、ページのスクロール先の y 座標。</span><span class="sxs-lookup"><span data-stu-id="1568b-469">The y-coordinate, relative to the top-left corner of the current window, toward which the page should scroll.</span></span></param>
        <summary><span data-ttu-id="1568b-470">指定した位置までウィンドウをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1568b-470">Scrolls the window to the designated position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-471"><xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>ドキュメントの指定した座標がドキュメントのウィンドウの左上隅に配置されるように、ドキュメントがスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="1568b-471"><xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> will cause the document to scroll so that the specified coordinate on the document is located in the upper-left corner of the document's window.</span></span> <span data-ttu-id="1568b-472">ドキュメントが長すぎていないか、この処理に十分な<xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A>大きさでない場合、は、指定された方向にできるだけ、ドキュメントをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="1568b-472">If the document is not long or wide enough for this to happen, <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> will scroll through the document as far as possible in the specified direction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.HtmlWindow.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-473">現在のウィンドウのサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-473">Gets or sets the size of the current window.</span></span></summary>
        <value><span data-ttu-id="1568b-474">ウィンドウのサイズをピクセル単位で記述する <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-474">A <see cref="T:System.Drawing.Size" /> describing the size of the window in pixels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBarText">
      <MemberSignature Language="C#" Value="public string StatusBarText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusBarText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.StatusBarText" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBarText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusBarText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusBarText : string with get, set" Usage="System.Windows.Forms.HtmlWindow.StatusBarText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-475">ウィンドウのステータス バーに表示されるテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1568b-475">Gets or sets the text displayed in the status bar of a window.</span></span></summary>
        <value><span data-ttu-id="1568b-476">現在のステータス テキストを格納する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-476">A <see cref="T:System.String" /> containing the current status text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-477">コントロール<xref:System.Windows.Forms.WebBrowser>にはステータスバーは表示されません。</span><span class="sxs-lookup"><span data-stu-id="1568b-477">The <xref:System.Windows.Forms.WebBrowser> control does not display a status bar.</span></span> <span data-ttu-id="1568b-478">ただし、メソッド<xref:System.Windows.Forms.HtmlWindow.Open%2A>またはメソッドを使用し<xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>て開いた新しいウィンドウでは、既定でステータスバーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="1568b-478">Any new window that you open with the <xref:System.Windows.Forms.HtmlWindow.Open%2A> or <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> methods, however, will display a status bar by default.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534648.aspx"><span data-ttu-id="1568b-479">status プロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-479">status Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Unload;" />
      <MemberSignature Language="F#" Value="member this.Unload : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Unload : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-480">現在のページがアンロード中で、新しいページが表示される直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="1568b-480">Occurs when the current page is unloading, and a new page is about to be displayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1568b-481">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1568b-481">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1568b-482">この例では、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Unload>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="1568b-482">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlWindow.Unload> event.</span></span> <span data-ttu-id="1568b-483">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="1568b-483">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1568b-484">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-484">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1568b-485">コード例を実行するには、という名前<xref:System.Windows.Forms.HtmlWindow> `HtmlWindow1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="1568b-485">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlWindow> named `HtmlWindow1`.</span></span> <span data-ttu-id="1568b-486">次に、イベントハンドラーが<xref:System.Windows.Forms.HtmlWindow.Unload>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1568b-486">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlWindow.Unload> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#457](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#457)]
 [!code-vb[System.Windows.Forms.EventExamples#457](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#457)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536973.aspx"><span data-ttu-id="1568b-487">onunload イベント</span><span class="sxs-lookup"><span data-stu-id="1568b-487">onunload Event</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Windows.Forms.HtmlWindow.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-488">ウィンドウに表示されている現在の項目に対応する URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-488">Gets the URL corresponding to the current item displayed in the window.</span></span></summary>
        <value><span data-ttu-id="1568b-489">URL を記述する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1568b-489">A <see cref="T:System.Uri" /> describing the URL.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-490">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1568b-490">This property is read-only.</span></span> <span data-ttu-id="1568b-491">ウィンドウを新しいドキュメントに移動するには、 <xref:System.Windows.Forms.HtmlWindow.Navigate%2A>メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1568b-491">To navigate the window to a new document, use the <xref:System.Windows.Forms.HtmlWindow.Navigate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowFrameElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement WindowFrameElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement WindowFrameElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.WindowFrameElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowFrameElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ WindowFrameElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowFrameElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlWindow.WindowFrameElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1568b-492">このウィンドウに対応するフレーム要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="1568b-492">Gets the frame element corresponding to this window.</span></span></summary>
        <value><span data-ttu-id="1568b-493">このウィンドウの<c>フレーム</c>要素に対応する。<see cref="T:System.Windows.Forms.HtmlElement" /></span><span class="sxs-lookup"><span data-stu-id="1568b-493">An <see cref="T:System.Windows.Forms.HtmlElement" /> corresponding to this window's <c>FRAME</c> element.</span></span> <span data-ttu-id="1568b-494">このウィンドウがフレームではない場合、<see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="1568b-494">If this window is not a frame, it returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1568b-495">コレクションから要素を`FRAME`取得すると、が<xref:System.Windows.Forms.HtmlWindow>返されます。 <xref:System.Windows.Forms.HtmlWindow.Frames%2A></span><span class="sxs-lookup"><span data-stu-id="1568b-495">When you retrieve a `FRAME` element from the <xref:System.Windows.Forms.HtmlWindow.Frames%2A> collection, it returns an <xref:System.Windows.Forms.HtmlWindow>.</span></span> <span data-ttu-id="1568b-496">属性など、基になる<xref:System.Windows.Forms.HtmlWindow.WindowFrameElement%2A> `FRAME`要素の属性にアクセスする必要がある場合は、このオブジェクトに対してを呼び出します。 `SRC`</span><span class="sxs-lookup"><span data-stu-id="1568b-496">Call <xref:System.Windows.Forms.HtmlWindow.WindowFrameElement%2A> on this object if you need to access attributes of the underlying `FRAME` element, such as the `SRC` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1568b-497">次のコード例では`SRC` 、 `FRAMESET`内のフレームの属性を現在の場所と比較します。</span><span class="sxs-lookup"><span data-stu-id="1568b-497">The following code example compares the `SRC` attribute of frames in a `FRAMESET` to the current location.</span></span> <span data-ttu-id="1568b-498">これらが異なる場合は、フレームが元の Url にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="1568b-498">If they are different, the frames are reset to their original URLs.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.UnauthorizedAccessException"><span data-ttu-id="1568b-499">フレームが含まれ<c></c>ているフレーム<c>セット</c>とは別のゾーン<c></c>にフレームがある場合、フレーム要素またはフレームのドキュメントにアクセスすることはできません。 <c></c></span><span class="sxs-lookup"><span data-stu-id="1568b-499">You cannot access a <c>FRAME</c> elements or the <c>FRAME</c>'s document if the <c>FRAME</c> is in a different zone than the <c>FRAMESET</c> that contains it.</span></span> <span data-ttu-id="1568b-500">詳細については、「[フレーム間スクリプトとセキュリティについて](https://msdn.microsoft.com/library/ms533028.aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1568b-500">For a full explanation, see [About Cross-Frame Scripting and Security](https://msdn.microsoft.com/library/ms533028.aspx).</span></span></permission>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533771.aspx"><span data-ttu-id="1568b-501">フレーム要素のプロパティ</span><span class="sxs-lookup"><span data-stu-id="1568b-501">frameElement Property</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
