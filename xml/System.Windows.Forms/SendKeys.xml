<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <Metadata><Meta Name="ms.openlocfilehash" Value="928cd476312384e2f7d1033542661ae526636e6f" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51310795" /></Metadata><TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <TypeSignature Language="F#" Value="type SendKeys = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bf64b-101">キーストロークをアプリケーションに送信するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf64b-102">使用<xref:System.Windows.Forms.SendKeys>にキーストロークを送信し、キーストロークをアクティブなアプリケーションの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="bf64b-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="bf64b-103">このクラスはインスタンス化できません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-103">This class cannot be instantiated.</span></span> <span data-ttu-id="bf64b-104">クラスにキーストロークを送信し、プログラムのフローをすぐに続行使用<xref:System.Windows.Forms.SendKeys.Send%2A>します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="bf64b-105">使用して、キーストロークによって開始されたすべてのプロセスを待つ<xref:System.Windows.Forms.SendKeys.SendWait%2A>します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="bf64b-106">各キーは、1 つまたは複数の文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="bf64b-107">1 つのキーボード文字を指定するには、文字そのものを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="bf64b-108">たとえば、文字 A を表す、文字列"A"でメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="bf64b-109">1 つ以上の文字を表現するには、前に各追加の文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="bf64b-110">文字 A、B、C を表現するには、"ABC"として、パラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="bf64b-111">プラス記号 (+)、キャレット (^)、パーセント記号 (%)、チルダ (~)、およびかっこ () は、特別な意味を持つ<xref:System.Windows.Forms.SendKeys>します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="bf64b-112">これらの文字のいずれかを指定する中かっこで囲みます ({})。</span><span class="sxs-lookup"><span data-stu-id="bf64b-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="bf64b-113">たとえば、プラス記号を指定するには、「{+}」を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="bf64b-114">中かっこ文字を指定するには、次のように使用します。"{{}"と"{}}"。</span><span class="sxs-lookup"><span data-stu-id="bf64b-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="bf64b-115">角かっこ () に特別な意味があるない<xref:System.Windows.Forms.SendKeys>、中かっこで囲む必要がありますが、します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="bf64b-116">他のアプリケーションでは角かっこは可能性のある重要なダイナミック データ エクス (チェンジ DDE) が発生したときに特別な意味になります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bf64b-117">アプリケーションが国際対応し、さまざまなキーボードの使用を想定している場合は、 <xref:System.Windows.Forms.SendKeys.Send%2A> の使用により予期しない結果になる可能性があるため、回避する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="bf64b-118">」と入力やタブ文字ではなく、動作を表すキーなどのキーを押すと表示されていない文字を指定するには、次の表に、コードを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="bf64b-119">キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-119">Key</span></span>|<span data-ttu-id="bf64b-120">コード</span><span class="sxs-lookup"><span data-stu-id="bf64b-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="bf64b-121">BACKSPACE キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-121">BACKSPACE</span></span>|<span data-ttu-id="bf64b-122">{BACKSPACE} {BS} または {BKSP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="bf64b-123">BREAK</span><span class="sxs-lookup"><span data-stu-id="bf64b-123">BREAK</span></span>|<span data-ttu-id="bf64b-124">{0} を中断しました</span><span class="sxs-lookup"><span data-stu-id="bf64b-124">{BREAK}</span></span>|  
|<span data-ttu-id="bf64b-125">キャップス ロックです</span><span class="sxs-lookup"><span data-stu-id="bf64b-125">CAPS LOCK</span></span>|<span data-ttu-id="bf64b-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="bf64b-127">DEL または削除</span><span class="sxs-lookup"><span data-stu-id="bf64b-127">DEL or DELETE</span></span>|<span data-ttu-id="bf64b-128">{削除} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="bf64b-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="bf64b-129">↓</span><span class="sxs-lookup"><span data-stu-id="bf64b-129">DOWN ARROW</span></span>|<span data-ttu-id="bf64b-130">{ダウン}</span><span class="sxs-lookup"><span data-stu-id="bf64b-130">{DOWN}</span></span>|  
|<span data-ttu-id="bf64b-131">End</span><span class="sxs-lookup"><span data-stu-id="bf64b-131">END</span></span>|<span data-ttu-id="bf64b-132">{END}</span><span class="sxs-lookup"><span data-stu-id="bf64b-132">{END}</span></span>|  
|<span data-ttu-id="bf64b-133">Enter</span><span class="sxs-lookup"><span data-stu-id="bf64b-133">ENTER</span></span>|<span data-ttu-id="bf64b-134">{0} に入力} または ~</span><span class="sxs-lookup"><span data-stu-id="bf64b-134">{ENTER} or ~</span></span>|  
|<span data-ttu-id="bf64b-135">Esc</span><span class="sxs-lookup"><span data-stu-id="bf64b-135">ESC</span></span>|<span data-ttu-id="bf64b-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="bf64b-136">{ESC}</span></span>|  
|<span data-ttu-id="bf64b-137">ヘルプ</span><span class="sxs-lookup"><span data-stu-id="bf64b-137">HELP</span></span>|<span data-ttu-id="bf64b-138">{HELP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-138">{HELP}</span></span>|  
|<span data-ttu-id="bf64b-139">ホーム</span><span class="sxs-lookup"><span data-stu-id="bf64b-139">HOME</span></span>|<span data-ttu-id="bf64b-140">{0} ホーム}</span><span class="sxs-lookup"><span data-stu-id="bf64b-140">{HOME}</span></span>|  
|<span data-ttu-id="bf64b-141">アドイン、または INSERT</span><span class="sxs-lookup"><span data-stu-id="bf64b-141">INS or INSERT</span></span>|<span data-ttu-id="bf64b-142">{0} を挿入} または {INS}</span><span class="sxs-lookup"><span data-stu-id="bf64b-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="bf64b-143">←</span><span class="sxs-lookup"><span data-stu-id="bf64b-143">LEFT ARROW</span></span>|<span data-ttu-id="bf64b-144">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="bf64b-144">{LEFT}</span></span>|  
|<span data-ttu-id="bf64b-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="bf64b-145">NUM LOCK</span></span>|<span data-ttu-id="bf64b-146">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="bf64b-147">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="bf64b-147">PAGE DOWN</span></span>|<span data-ttu-id="bf64b-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="bf64b-148">{PGDN}</span></span>|  
|<span data-ttu-id="bf64b-149">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="bf64b-149">PAGE UP</span></span>|<span data-ttu-id="bf64b-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-150">{PGUP}</span></span>|  
|<span data-ttu-id="bf64b-151">画面を印刷します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-151">PRINT SCREEN</span></span>|<span data-ttu-id="bf64b-152">{PRTSC}(将来使用するために予約されています)</span><span class="sxs-lookup"><span data-stu-id="bf64b-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="bf64b-153">→</span><span class="sxs-lookup"><span data-stu-id="bf64b-153">RIGHT ARROW</span></span>|<span data-ttu-id="bf64b-154">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="bf64b-154">{RIGHT}</span></span>|  
|<span data-ttu-id="bf64b-155">SCROLL LOCK</span><span class="sxs-lookup"><span data-stu-id="bf64b-155">SCROLL LOCK</span></span>|<span data-ttu-id="bf64b-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="bf64b-157">Tab</span><span class="sxs-lookup"><span data-stu-id="bf64b-157">TAB</span></span>|<span data-ttu-id="bf64b-158">{TAB}</span><span class="sxs-lookup"><span data-stu-id="bf64b-158">{TAB}</span></span>|  
|<span data-ttu-id="bf64b-159">↑</span><span class="sxs-lookup"><span data-stu-id="bf64b-159">UP ARROW</span></span>|<span data-ttu-id="bf64b-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-160">{UP}</span></span>|  
|<span data-ttu-id="bf64b-161">F1</span><span class="sxs-lookup"><span data-stu-id="bf64b-161">F1</span></span>|<span data-ttu-id="bf64b-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="bf64b-162">{F1}</span></span>|  
|<span data-ttu-id="bf64b-163">F2</span><span class="sxs-lookup"><span data-stu-id="bf64b-163">F2</span></span>|<span data-ttu-id="bf64b-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="bf64b-164">{F2}</span></span>|  
|<span data-ttu-id="bf64b-165">F3</span><span class="sxs-lookup"><span data-stu-id="bf64b-165">F3</span></span>|<span data-ttu-id="bf64b-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="bf64b-166">{F3}</span></span>|  
|<span data-ttu-id="bf64b-167">F4</span><span class="sxs-lookup"><span data-stu-id="bf64b-167">F4</span></span>|<span data-ttu-id="bf64b-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="bf64b-168">{F4}</span></span>|  
|<span data-ttu-id="bf64b-169">F5</span><span class="sxs-lookup"><span data-stu-id="bf64b-169">F5</span></span>|<span data-ttu-id="bf64b-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="bf64b-170">{F5}</span></span>|  
|<span data-ttu-id="bf64b-171">F6</span><span class="sxs-lookup"><span data-stu-id="bf64b-171">F6</span></span>|<span data-ttu-id="bf64b-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="bf64b-172">{F6}</span></span>|  
|<span data-ttu-id="bf64b-173">F7</span><span class="sxs-lookup"><span data-stu-id="bf64b-173">F7</span></span>|<span data-ttu-id="bf64b-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="bf64b-174">{F7}</span></span>|  
|<span data-ttu-id="bf64b-175">F8</span><span class="sxs-lookup"><span data-stu-id="bf64b-175">F8</span></span>|<span data-ttu-id="bf64b-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="bf64b-176">{F8}</span></span>|  
|<span data-ttu-id="bf64b-177">F9</span><span class="sxs-lookup"><span data-stu-id="bf64b-177">F9</span></span>|<span data-ttu-id="bf64b-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="bf64b-178">{F9}</span></span>|  
|<span data-ttu-id="bf64b-179">F10</span><span class="sxs-lookup"><span data-stu-id="bf64b-179">F10</span></span>|<span data-ttu-id="bf64b-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="bf64b-180">{F10}</span></span>|  
|<span data-ttu-id="bf64b-181">F11</span><span class="sxs-lookup"><span data-stu-id="bf64b-181">F11</span></span>|<span data-ttu-id="bf64b-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="bf64b-182">{F11}</span></span>|  
|<span data-ttu-id="bf64b-183">F12</span><span class="sxs-lookup"><span data-stu-id="bf64b-183">F12</span></span>|<span data-ttu-id="bf64b-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="bf64b-184">{F12}</span></span>|  
|<span data-ttu-id="bf64b-185">F13</span><span class="sxs-lookup"><span data-stu-id="bf64b-185">F13</span></span>|<span data-ttu-id="bf64b-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="bf64b-186">{F13}</span></span>|  
|<span data-ttu-id="bf64b-187">F14</span><span class="sxs-lookup"><span data-stu-id="bf64b-187">F14</span></span>|<span data-ttu-id="bf64b-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="bf64b-188">{F14}</span></span>|  
|<span data-ttu-id="bf64b-189">F15</span><span class="sxs-lookup"><span data-stu-id="bf64b-189">F15</span></span>|<span data-ttu-id="bf64b-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="bf64b-190">{F15}</span></span>|  
|<span data-ttu-id="bf64b-191">F16</span><span class="sxs-lookup"><span data-stu-id="bf64b-191">F16</span></span>|<span data-ttu-id="bf64b-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="bf64b-192">{F16}</span></span>|  
|<span data-ttu-id="bf64b-193">キーパッドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-193">Keypad add</span></span>|<span data-ttu-id="bf64b-194">{ADD}</span><span class="sxs-lookup"><span data-stu-id="bf64b-194">{ADD}</span></span>|  
|<span data-ttu-id="bf64b-195">テンキーを減算します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-195">Keypad subtract</span></span>|<span data-ttu-id="bf64b-196">{減算}</span><span class="sxs-lookup"><span data-stu-id="bf64b-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="bf64b-197">テンキーを乗算します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-197">Keypad multiply</span></span>|<span data-ttu-id="bf64b-198">{乗算}</span><span class="sxs-lookup"><span data-stu-id="bf64b-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="bf64b-199">テンキーの除算</span><span class="sxs-lookup"><span data-stu-id="bf64b-199">Keypad divide</span></span>|<span data-ttu-id="bf64b-200">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="bf64b-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="bf64b-201">SHIFT、ctrl キー、および alt の各キーの任意の組み合わせと組み合わせてキーを指定するには、次のコードの 1 つ以上のキー コードを前になります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="bf64b-202">キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-202">Key</span></span>|<span data-ttu-id="bf64b-203">コード</span><span class="sxs-lookup"><span data-stu-id="bf64b-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="bf64b-204">SHIFT キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-204">SHIFT</span></span>|+|  
|<span data-ttu-id="bf64b-205">CTRL キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-205">CTRL</span></span>|^|  
|<span data-ttu-id="bf64b-206">ALT キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-206">ALT</span></span>|%|  
  
 <span data-ttu-id="bf64b-207">その他のいくつかのキーが押されたときに shift キーを押し、CTRL、ALT の任意の組み合わせ保持することを指定するには、かっこでこれらのキー コードを囲みます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="bf64b-208">たとえばを指定すると、電子メールおよび C が押されたときに、shift キーを押し、次のように使用します。"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="bf64b-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="bf64b-209">次に、shift キーを押さず C、E が押されたときに shift キーを保持するために指定するには使用「+ EC」。</span><span class="sxs-lookup"><span data-stu-id="bf64b-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="bf64b-210">繰り返しのキーを指定するには、キー {number} フォームを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="bf64b-211">キーと値の間にスペースを挿入する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-211">You must put a space between key and number.</span></span> <span data-ttu-id="bf64b-212">たとえば、{左 42} は、42 回; 左矢印キーを押します{h 10} は、H 10 回のキーを押してを意味します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-213">別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用するかなど、ネイティブの Windows メソッドを使用`FindWindow`と`SetForegroundWindow`、他のアプリケーションにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-214">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="bf64b-215">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="bf64b-216"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="bf64b-217">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="bf64b-218"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="bf64b-219">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="bf64b-220">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="bf64b-221">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="bf64b-222"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf64b-223">次のコード例は、<xref:System.Windows.Forms.SendKeys.Send%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="bf64b-224">例を実行するには、次のコードを貼り付け Form1 という名前のフォームに Button1 というボタンを配置します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="bf64b-225">この例ではイベント処理メソッドに関連付けられているクリック イベントを確認します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="bf64b-226">ボタン コントロールの<xref:System.Windows.Forms.Control.TabIndex%2A>プロパティを 0 に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="bf64b-227">例が実行されている場合は、ボタンのクリックをトリガーするフォームをダブルクリックしてイベント。</span><span class="sxs-lookup"><span data-stu-id="bf64b-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Windows.Forms.SendKeys.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bf64b-228">メッセージ キューに現在ある Windows メッセージをすべて処理します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf64b-229">使用<xref:System.Windows.Forms.SendKeys.Flush%2A>キーストロークやメッセージ キューにあるその他のオペレーティング システムのメッセージを処理するアプリケーションを待機します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="bf64b-230">これは、呼び出しに相当<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>以上のキーを処理するまでです。</span><span class="sxs-lookup"><span data-stu-id="bf64b-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-231">別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用するかなど、ネイティブの Windows メソッドを使用`FindWindow`と`SetForegroundWindow`、他のアプリケーションにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member Send : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.Send keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="bf64b-232">送信するキーストロークの文字列。</span><span class="sxs-lookup"><span data-stu-id="bf64b-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="bf64b-233">キーストロークをアクティブなアプリケーションに送信します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf64b-234">各キーは、1 つまたは複数の文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="bf64b-235">1 つのキーボード文字を指定するには、文字そのものを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="bf64b-236">たとえば、文字 A を表す、文字列"A"でメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="bf64b-237">1 つ以上の文字を表現するには、前に各追加の文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="bf64b-238">文字 A、B、C を表現するには、"ABC"として、パラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="bf64b-239">プラス記号 (+)、キャレット (^)、パーセント記号 (%)、チルダ (~)、およびかっこ () は、特別な意味を持つ<xref:System.Windows.Forms.SendKeys>します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="bf64b-240">これらの文字のいずれかを指定する中かっこで囲みます ({})。</span><span class="sxs-lookup"><span data-stu-id="bf64b-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="bf64b-241">たとえば、プラス記号を指定するには、「{+}」を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="bf64b-242">中かっこ文字を指定するには、次のように使用します。"{{}"と"{}}"。</span><span class="sxs-lookup"><span data-stu-id="bf64b-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="bf64b-243">角かっこ () に特別な意味があるない<xref:System.Windows.Forms.SendKeys>、中かっこで囲む必要がありますが、します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="bf64b-244">他のアプリケーションでは角かっこは可能性のある重要なダイナミック データ エクス (チェンジ DDE) が発生したときに特別な意味になります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bf64b-245">アプリケーションが国際対応し、さまざまなキーボードの使用を想定している場合は、 <xref:System.Windows.Forms.SendKeys.Send%2A> の使用により予期しない結果になる可能性があるため、回避する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="bf64b-246">」と入力やタブ文字ではなく、動作を表すキーなどのキーを押すと表示されていない文字を指定するには、次の表に、コードを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="bf64b-247">キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-247">Key</span></span>|<span data-ttu-id="bf64b-248">コード</span><span class="sxs-lookup"><span data-stu-id="bf64b-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="bf64b-249">BACKSPACE キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-249">BACKSPACE</span></span>|<span data-ttu-id="bf64b-250">{BACKSPACE} {BS} または {BKSP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="bf64b-251">BREAK</span><span class="sxs-lookup"><span data-stu-id="bf64b-251">BREAK</span></span>|<span data-ttu-id="bf64b-252">{0} を中断しました</span><span class="sxs-lookup"><span data-stu-id="bf64b-252">{BREAK}</span></span>|  
|<span data-ttu-id="bf64b-253">キャップス ロックです</span><span class="sxs-lookup"><span data-stu-id="bf64b-253">CAPS LOCK</span></span>|<span data-ttu-id="bf64b-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="bf64b-255">DEL または削除</span><span class="sxs-lookup"><span data-stu-id="bf64b-255">DEL or DELETE</span></span>|<span data-ttu-id="bf64b-256">{削除} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="bf64b-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="bf64b-257">↓</span><span class="sxs-lookup"><span data-stu-id="bf64b-257">DOWN ARROW</span></span>|<span data-ttu-id="bf64b-258">{ダウン}</span><span class="sxs-lookup"><span data-stu-id="bf64b-258">{DOWN}</span></span>|  
|<span data-ttu-id="bf64b-259">End</span><span class="sxs-lookup"><span data-stu-id="bf64b-259">END</span></span>|<span data-ttu-id="bf64b-260">{END}</span><span class="sxs-lookup"><span data-stu-id="bf64b-260">{END}</span></span>|  
|<span data-ttu-id="bf64b-261">Enter</span><span class="sxs-lookup"><span data-stu-id="bf64b-261">ENTER</span></span>|<span data-ttu-id="bf64b-262">{0} に入力} または ~</span><span class="sxs-lookup"><span data-stu-id="bf64b-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="bf64b-263">Esc</span><span class="sxs-lookup"><span data-stu-id="bf64b-263">ESC</span></span>|<span data-ttu-id="bf64b-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="bf64b-264">{ESC}</span></span>|  
|<span data-ttu-id="bf64b-265">ヘルプ</span><span class="sxs-lookup"><span data-stu-id="bf64b-265">HELP</span></span>|<span data-ttu-id="bf64b-266">{HELP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-266">{HELP}</span></span>|  
|<span data-ttu-id="bf64b-267">ホーム</span><span class="sxs-lookup"><span data-stu-id="bf64b-267">HOME</span></span>|<span data-ttu-id="bf64b-268">{0} ホーム}</span><span class="sxs-lookup"><span data-stu-id="bf64b-268">{HOME}</span></span>|  
|<span data-ttu-id="bf64b-269">アドイン、または INSERT</span><span class="sxs-lookup"><span data-stu-id="bf64b-269">INS or INSERT</span></span>|<span data-ttu-id="bf64b-270">{0} を挿入} または {INS}</span><span class="sxs-lookup"><span data-stu-id="bf64b-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="bf64b-271">←</span><span class="sxs-lookup"><span data-stu-id="bf64b-271">LEFT ARROW</span></span>|<span data-ttu-id="bf64b-272">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="bf64b-272">{LEFT}</span></span>|  
|<span data-ttu-id="bf64b-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="bf64b-273">NUM LOCK</span></span>|<span data-ttu-id="bf64b-274">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="bf64b-275">PAGE DOWN</span><span class="sxs-lookup"><span data-stu-id="bf64b-275">PAGE DOWN</span></span>|<span data-ttu-id="bf64b-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="bf64b-276">{PGDN}</span></span>|  
|<span data-ttu-id="bf64b-277">PAGE UP</span><span class="sxs-lookup"><span data-stu-id="bf64b-277">PAGE UP</span></span>|<span data-ttu-id="bf64b-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-278">{PGUP}</span></span>|  
|<span data-ttu-id="bf64b-279">画面を印刷します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-279">PRINT SCREEN</span></span>|<span data-ttu-id="bf64b-280">{PRTSC}(将来使用するために予約されています)</span><span class="sxs-lookup"><span data-stu-id="bf64b-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="bf64b-281">→</span><span class="sxs-lookup"><span data-stu-id="bf64b-281">RIGHT ARROW</span></span>|<span data-ttu-id="bf64b-282">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="bf64b-282">{RIGHT}</span></span>|  
|<span data-ttu-id="bf64b-283">SCROLL LOCK</span><span class="sxs-lookup"><span data-stu-id="bf64b-283">SCROLL LOCK</span></span>|<span data-ttu-id="bf64b-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="bf64b-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="bf64b-285">Tab</span><span class="sxs-lookup"><span data-stu-id="bf64b-285">TAB</span></span>|<span data-ttu-id="bf64b-286">{TAB}</span><span class="sxs-lookup"><span data-stu-id="bf64b-286">{TAB}</span></span>|  
|<span data-ttu-id="bf64b-287">↑</span><span class="sxs-lookup"><span data-stu-id="bf64b-287">UP ARROW</span></span>|<span data-ttu-id="bf64b-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="bf64b-288">{UP}</span></span>|  
|<span data-ttu-id="bf64b-289">F1</span><span class="sxs-lookup"><span data-stu-id="bf64b-289">F1</span></span>|<span data-ttu-id="bf64b-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="bf64b-290">{F1}</span></span>|  
|<span data-ttu-id="bf64b-291">F2</span><span class="sxs-lookup"><span data-stu-id="bf64b-291">F2</span></span>|<span data-ttu-id="bf64b-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="bf64b-292">{F2}</span></span>|  
|<span data-ttu-id="bf64b-293">F3</span><span class="sxs-lookup"><span data-stu-id="bf64b-293">F3</span></span>|<span data-ttu-id="bf64b-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="bf64b-294">{F3}</span></span>|  
|<span data-ttu-id="bf64b-295">F4</span><span class="sxs-lookup"><span data-stu-id="bf64b-295">F4</span></span>|<span data-ttu-id="bf64b-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="bf64b-296">{F4}</span></span>|  
|<span data-ttu-id="bf64b-297">F5</span><span class="sxs-lookup"><span data-stu-id="bf64b-297">F5</span></span>|<span data-ttu-id="bf64b-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="bf64b-298">{F5}</span></span>|  
|<span data-ttu-id="bf64b-299">F6</span><span class="sxs-lookup"><span data-stu-id="bf64b-299">F6</span></span>|<span data-ttu-id="bf64b-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="bf64b-300">{F6}</span></span>|  
|<span data-ttu-id="bf64b-301">F7</span><span class="sxs-lookup"><span data-stu-id="bf64b-301">F7</span></span>|<span data-ttu-id="bf64b-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="bf64b-302">{F7}</span></span>|  
|<span data-ttu-id="bf64b-303">F8</span><span class="sxs-lookup"><span data-stu-id="bf64b-303">F8</span></span>|<span data-ttu-id="bf64b-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="bf64b-304">{F8}</span></span>|  
|<span data-ttu-id="bf64b-305">F9</span><span class="sxs-lookup"><span data-stu-id="bf64b-305">F9</span></span>|<span data-ttu-id="bf64b-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="bf64b-306">{F9}</span></span>|  
|<span data-ttu-id="bf64b-307">F10</span><span class="sxs-lookup"><span data-stu-id="bf64b-307">F10</span></span>|<span data-ttu-id="bf64b-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="bf64b-308">{F10}</span></span>|  
|<span data-ttu-id="bf64b-309">F11</span><span class="sxs-lookup"><span data-stu-id="bf64b-309">F11</span></span>|<span data-ttu-id="bf64b-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="bf64b-310">{F11}</span></span>|  
|<span data-ttu-id="bf64b-311">F12</span><span class="sxs-lookup"><span data-stu-id="bf64b-311">F12</span></span>|<span data-ttu-id="bf64b-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="bf64b-312">{F12}</span></span>|  
|<span data-ttu-id="bf64b-313">F13</span><span class="sxs-lookup"><span data-stu-id="bf64b-313">F13</span></span>|<span data-ttu-id="bf64b-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="bf64b-314">{F13}</span></span>|  
|<span data-ttu-id="bf64b-315">F14</span><span class="sxs-lookup"><span data-stu-id="bf64b-315">F14</span></span>|<span data-ttu-id="bf64b-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="bf64b-316">{F14}</span></span>|  
|<span data-ttu-id="bf64b-317">F15</span><span class="sxs-lookup"><span data-stu-id="bf64b-317">F15</span></span>|<span data-ttu-id="bf64b-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="bf64b-318">{F15}</span></span>|  
|<span data-ttu-id="bf64b-319">F16</span><span class="sxs-lookup"><span data-stu-id="bf64b-319">F16</span></span>|<span data-ttu-id="bf64b-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="bf64b-320">{F16}</span></span>|  
|<span data-ttu-id="bf64b-321">キーパッドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-321">Keypad add</span></span>|<span data-ttu-id="bf64b-322">{ADD}</span><span class="sxs-lookup"><span data-stu-id="bf64b-322">{ADD}</span></span>|  
|<span data-ttu-id="bf64b-323">テンキーを減算します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-323">Keypad subtract</span></span>|<span data-ttu-id="bf64b-324">{減算}</span><span class="sxs-lookup"><span data-stu-id="bf64b-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="bf64b-325">テンキーを乗算します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-325">Keypad multiply</span></span>|<span data-ttu-id="bf64b-326">{乗算}</span><span class="sxs-lookup"><span data-stu-id="bf64b-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="bf64b-327">テンキーの除算</span><span class="sxs-lookup"><span data-stu-id="bf64b-327">Keypad divide</span></span>|<span data-ttu-id="bf64b-328">{DIVIDE}</span><span class="sxs-lookup"><span data-stu-id="bf64b-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="bf64b-329">SHIFT、ctrl キー、および alt の各キーの任意の組み合わせと組み合わせてキーを指定するには、次のコードの 1 つ以上のキー コードを前になります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="bf64b-330">キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-330">Key</span></span>|<span data-ttu-id="bf64b-331">コード</span><span class="sxs-lookup"><span data-stu-id="bf64b-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="bf64b-332">SHIFT キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-332">SHIFT</span></span>|+|  
|<span data-ttu-id="bf64b-333">CTRL キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-333">CTRL</span></span>|^|  
|<span data-ttu-id="bf64b-334">ALT キー</span><span class="sxs-lookup"><span data-stu-id="bf64b-334">ALT</span></span>|%|  
  
 <span data-ttu-id="bf64b-335">その他のいくつかのキーが押されたときに shift キーを押し、CTRL、ALT の任意の組み合わせ保持することを指定するには、かっこでこれらのキー コードを囲みます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="bf64b-336">たとえばを指定すると、電子メールおよび C が押されたときに、shift キーを押し、次のように使用します。"+ (EC)"。</span><span class="sxs-lookup"><span data-stu-id="bf64b-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="bf64b-337">次に、shift キーを押さず C、E が押されたときに shift キーを保持するために指定するには使用「+ EC」。</span><span class="sxs-lookup"><span data-stu-id="bf64b-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="bf64b-338">繰り返しのキーを指定するには、キー {number} フォームを使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="bf64b-339">キーと値の間にスペースを挿入する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-339">You must put a space between key and number.</span></span> <span data-ttu-id="bf64b-340">たとえば、{左 42} は、42 回; 左矢印キーを押します{h 10} は、H 10 回のキーを押してを意味します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-341">別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用するかなど、ネイティブの Windows メソッドを使用`FindWindow`と`SetForegroundWindow`、他のアプリケーションにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-342">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="bf64b-343">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="bf64b-344"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="bf64b-345">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="bf64b-346"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="bf64b-347">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="bf64b-348">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="bf64b-349">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="bf64b-350"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf64b-351">次のコード例は、使用する方法を示します、<xref:System.Windows.Forms.SendKeys.Send%2A>メソッド。例を実行するには、次のコードを貼り付け Form1 という名前のフォームに Button1 というボタンを配置します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="bf64b-352">この例ではイベント処理メソッドに関連付けられているクリック イベントを確認します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="bf64b-353">ボタン コントロールの<xref:System.Windows.Forms.Control.TabIndex%2A>プロパティを 0 に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="bf64b-354">例が実行されている場合は、ボタンのクリックをトリガーするフォームをダブルクリックしてイベント。</span><span class="sxs-lookup"><span data-stu-id="bf64b-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bf64b-355">キーストロークの送信先となるアクティブなアプリケーションはありません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bf64b-356"><paramref name="keys" /> が有効なキーストロークを表していません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bf64b-357">このメソッドを呼び出すアンマネージ コード。</span><span class="sxs-lookup"><span data-stu-id="bf64b-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="bf64b-358">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="bf64b-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member SendWait : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.SendWait keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="bf64b-359">送信するキーストロークの文字列。</span><span class="sxs-lookup"><span data-stu-id="bf64b-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="bf64b-360">特定のキーをアクティブなアプリケーションに送信し、メッセージが処理されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf64b-361">使用<xref:System.Windows.Forms.SendKeys.SendWait%2A>にキーストロークやキーストロークの組み合わせをアクティブなアプリケーションに送信し、処理するキーストロークのメッセージを待機します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="bf64b-362">このメソッドを使用して、アプリケーションにキーストロークを送信し、完了するためのキーによって起動されるすべてのプロセスを待つことができます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="bf64b-363">これは、その他のアプリケーションが終了した後、アプリケーションは引き続き場合に重要です。</span><span class="sxs-lookup"><span data-stu-id="bf64b-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-364">別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用するかなど、ネイティブの Windows メソッドを使用`FindWindow`と`SetForegroundWindow`、他のアプリケーションにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bf64b-365">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="bf64b-366">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="bf64b-367"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="bf64b-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="bf64b-368">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="bf64b-369"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="bf64b-370">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bf64b-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="bf64b-371">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="bf64b-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="bf64b-372">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="bf64b-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="bf64b-373"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="bf64b-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bf64b-374">このメソッドを呼び出すアンマネージ コード。</span><span class="sxs-lookup"><span data-stu-id="bf64b-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="bf64b-375">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="bf64b-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>