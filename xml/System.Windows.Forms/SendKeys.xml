<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e17014706f0bc08fefb8c6ceeca5f194e4d1f7de" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70604404" /></Metadata><TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <TypeSignature Language="F#" Value="type SendKeys = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90c18-101">キーストロークをアプリケーションに送信するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="90c18-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c18-102">アクティブ<xref:System.Windows.Forms.SendKeys>なアプリケーションにキーストロークとキーストロークの組み合わせを送信するには、を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="90c18-103">このクラスはインスタンス化できません。</span><span class="sxs-lookup"><span data-stu-id="90c18-103">This class cannot be instantiated.</span></span> <span data-ttu-id="90c18-104">クラスにキーストロークを送信し、プログラムのフローをすぐに続行するには<xref:System.Windows.Forms.SendKeys.Send%2A>、を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="90c18-105">キーストロークによって開始されたプロセスを<xref:System.Windows.Forms.SendKeys.SendWait%2A>待機するには、を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="90c18-106">各キーは、1つまたは複数の文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="90c18-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="90c18-107">1つのキーボード文字を指定するには、文字自体を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="90c18-108">たとえば、文字 A を表すには、文字列 "A" をメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="90c18-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="90c18-109">複数の文字を表すには、その前に1つの文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="90c18-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="90c18-110">A、B、および C という文字を表すには、パラメーターを "ABC" として指定します。</span><span class="sxs-lookup"><span data-stu-id="90c18-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="90c18-111">正符号 (+)、キャレット (^)、パーセント記号 (%)、チルダ (~)、およびかっこ () は、に対して<xref:System.Windows.Forms.SendKeys>特別な意味を持ちます。</span><span class="sxs-lookup"><span data-stu-id="90c18-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="90c18-112">これらの文字のいずれかを指定するには、{}中かっこ () で囲みます。</span><span class="sxs-lookup"><span data-stu-id="90c18-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="90c18-113">たとえば、プラス記号を指定するには、"{+}" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="90c18-114">中かっこ文字を指定するには{}、"{{}" および "}" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="90c18-115">角かっこ ([]) はに対し<xref:System.Windows.Forms.SendKeys>て特別な意味を持ちませんが、中かっこで囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="90c18-116">他のアプリケーションでは、ダイナミックデータエクスチェンジ (DDE) が発生したときに、角かっこによって特別な意味を持つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="90c18-117">アプリケーションが国際対応し、さまざまなキーボードの使用を想定している場合は、 <xref:System.Windows.Forms.SendKeys.Send%2A> の使用により予期しない結果になる可能性があるため、回避する必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="90c18-118">ENTER や TAB、文字ではなくアクションを表すキーなど、キーを押したときに表示されない文字を指定するには、次の表のコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="90c18-119">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-119">Key</span></span>|<span data-ttu-id="90c18-120">コード</span><span class="sxs-lookup"><span data-stu-id="90c18-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="90c18-121">行頭</span><span class="sxs-lookup"><span data-stu-id="90c18-121">BACKSPACE</span></span>|<span data-ttu-id="90c18-122">{BACKSPACE}、{BS}、または {BKSP}</span><span class="sxs-lookup"><span data-stu-id="90c18-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="90c18-123">改</span><span class="sxs-lookup"><span data-stu-id="90c18-123">BREAK</span></span>|<span data-ttu-id="90c18-124">改</span><span class="sxs-lookup"><span data-stu-id="90c18-124">{BREAK}</span></span>|  
|<span data-ttu-id="90c18-125">キャップス ロックです</span><span class="sxs-lookup"><span data-stu-id="90c18-125">CAPS LOCK</span></span>|<span data-ttu-id="90c18-126">CAPSLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="90c18-127">DEL または DELETE</span><span class="sxs-lookup"><span data-stu-id="90c18-127">DEL or DELETE</span></span>|<span data-ttu-id="90c18-128">{DELETE} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="90c18-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="90c18-129">↓</span><span class="sxs-lookup"><span data-stu-id="90c18-129">DOWN ARROW</span></span>|<span data-ttu-id="90c18-130">ダウン</span><span class="sxs-lookup"><span data-stu-id="90c18-130">{DOWN}</span></span>|  
|<span data-ttu-id="90c18-131">End</span><span class="sxs-lookup"><span data-stu-id="90c18-131">END</span></span>|<span data-ttu-id="90c18-132">エンド</span><span class="sxs-lookup"><span data-stu-id="90c18-132">{END}</span></span>|  
|<span data-ttu-id="90c18-133">Enter</span><span class="sxs-lookup"><span data-stu-id="90c18-133">ENTER</span></span>|<span data-ttu-id="90c18-134">{ENTER} または ~</span><span class="sxs-lookup"><span data-stu-id="90c18-134">{ENTER} or ~</span></span>|  
|<span data-ttu-id="90c18-135">ESC</span><span class="sxs-lookup"><span data-stu-id="90c18-135">ESC</span></span>|<span data-ttu-id="90c18-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="90c18-136">{ESC}</span></span>|  
|<span data-ttu-id="90c18-137">ヘルプ</span><span class="sxs-lookup"><span data-stu-id="90c18-137">HELP</span></span>|<span data-ttu-id="90c18-138">方法</span><span class="sxs-lookup"><span data-stu-id="90c18-138">{HELP}</span></span>|  
|<span data-ttu-id="90c18-139">ホーム</span><span class="sxs-lookup"><span data-stu-id="90c18-139">HOME</span></span>|<span data-ttu-id="90c18-140">出張</span><span class="sxs-lookup"><span data-stu-id="90c18-140">{HOME}</span></span>|  
|<span data-ttu-id="90c18-141">INS または INSERT</span><span class="sxs-lookup"><span data-stu-id="90c18-141">INS or INSERT</span></span>|<span data-ttu-id="90c18-142">{INSERT} または {INS}</span><span class="sxs-lookup"><span data-stu-id="90c18-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="90c18-143">←</span><span class="sxs-lookup"><span data-stu-id="90c18-143">LEFT ARROW</span></span>|<span data-ttu-id="90c18-144">左側</span><span class="sxs-lookup"><span data-stu-id="90c18-144">{LEFT}</span></span>|  
|<span data-ttu-id="90c18-145">NUMLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-145">NUM LOCK</span></span>|<span data-ttu-id="90c18-146">NUMLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="90c18-147">PageDown</span><span class="sxs-lookup"><span data-stu-id="90c18-147">PAGE DOWN</span></span>|<span data-ttu-id="90c18-148">PAGEDOWN</span><span class="sxs-lookup"><span data-stu-id="90c18-148">{PGDN}</span></span>|  
|<span data-ttu-id="90c18-149">PageUp</span><span class="sxs-lookup"><span data-stu-id="90c18-149">PAGE UP</span></span>|<span data-ttu-id="90c18-150">PAGEUP</span><span class="sxs-lookup"><span data-stu-id="90c18-150">{PGUP}</span></span>|  
|<span data-ttu-id="90c18-151">印刷画面</span><span class="sxs-lookup"><span data-stu-id="90c18-151">PRINT SCREEN</span></span>|<span data-ttu-id="90c18-152">{PRTSC}(将来使用するために予約されています)</span><span class="sxs-lookup"><span data-stu-id="90c18-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="90c18-153">→</span><span class="sxs-lookup"><span data-stu-id="90c18-153">RIGHT ARROW</span></span>|<span data-ttu-id="90c18-154">直角</span><span class="sxs-lookup"><span data-stu-id="90c18-154">{RIGHT}</span></span>|  
|<span data-ttu-id="90c18-155">スクロールロック</span><span class="sxs-lookup"><span data-stu-id="90c18-155">SCROLL LOCK</span></span>|<span data-ttu-id="90c18-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="90c18-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="90c18-157">Tab</span><span class="sxs-lookup"><span data-stu-id="90c18-157">TAB</span></span>|<span data-ttu-id="90c18-158"> タブ</span><span class="sxs-lookup"><span data-stu-id="90c18-158">{TAB}</span></span>|  
|<span data-ttu-id="90c18-159">↑</span><span class="sxs-lookup"><span data-stu-id="90c18-159">UP ARROW</span></span>|<span data-ttu-id="90c18-160">設定</span><span class="sxs-lookup"><span data-stu-id="90c18-160">{UP}</span></span>|  
|<span data-ttu-id="90c18-161">F1</span><span class="sxs-lookup"><span data-stu-id="90c18-161">F1</span></span>|<span data-ttu-id="90c18-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="90c18-162">{F1}</span></span>|  
|<span data-ttu-id="90c18-163">F2</span><span class="sxs-lookup"><span data-stu-id="90c18-163">F2</span></span>|<span data-ttu-id="90c18-164">Bios</span><span class="sxs-lookup"><span data-stu-id="90c18-164">{F2}</span></span>|  
|<span data-ttu-id="90c18-165">F3</span><span class="sxs-lookup"><span data-stu-id="90c18-165">F3</span></span>|<span data-ttu-id="90c18-166">F3</span><span class="sxs-lookup"><span data-stu-id="90c18-166">{F3}</span></span>|  
|<span data-ttu-id="90c18-167">F4</span><span class="sxs-lookup"><span data-stu-id="90c18-167">F4</span></span>|<span data-ttu-id="90c18-168">空白</span><span class="sxs-lookup"><span data-stu-id="90c18-168">{F4}</span></span>|  
|<span data-ttu-id="90c18-169">F5</span><span class="sxs-lookup"><span data-stu-id="90c18-169">F5</span></span>|<span data-ttu-id="90c18-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="90c18-170">{F5}</span></span>|  
|<span data-ttu-id="90c18-171">F6</span><span class="sxs-lookup"><span data-stu-id="90c18-171">F6</span></span>|<span data-ttu-id="90c18-172">F6</span><span class="sxs-lookup"><span data-stu-id="90c18-172">{F6}</span></span>|  
|<span data-ttu-id="90c18-173">F7</span><span class="sxs-lookup"><span data-stu-id="90c18-173">F7</span></span>|<span data-ttu-id="90c18-174">F7</span><span class="sxs-lookup"><span data-stu-id="90c18-174">{F7}</span></span>|  
|<span data-ttu-id="90c18-175">F8</span><span class="sxs-lookup"><span data-stu-id="90c18-175">F8</span></span>|<span data-ttu-id="90c18-176">F8</span><span class="sxs-lookup"><span data-stu-id="90c18-176">{F8}</span></span>|  
|<span data-ttu-id="90c18-177">F9</span><span class="sxs-lookup"><span data-stu-id="90c18-177">F9</span></span>|<span data-ttu-id="90c18-178">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-178">{F9}</span></span>|  
|<span data-ttu-id="90c18-179">F10</span><span class="sxs-lookup"><span data-stu-id="90c18-179">F10</span></span>|<span data-ttu-id="90c18-180">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-180">{F10}</span></span>|  
|<span data-ttu-id="90c18-181">F11</span><span class="sxs-lookup"><span data-stu-id="90c18-181">F11</span></span>|<span data-ttu-id="90c18-182">F11</span><span class="sxs-lookup"><span data-stu-id="90c18-182">{F11}</span></span>|  
|<span data-ttu-id="90c18-183">F12</span><span class="sxs-lookup"><span data-stu-id="90c18-183">F12</span></span>|<span data-ttu-id="90c18-184">F12</span><span class="sxs-lookup"><span data-stu-id="90c18-184">{F12}</span></span>|  
|<span data-ttu-id="90c18-185">F13</span><span class="sxs-lookup"><span data-stu-id="90c18-185">F13</span></span>|<span data-ttu-id="90c18-186">F13</span><span class="sxs-lookup"><span data-stu-id="90c18-186">{F13}</span></span>|  
|<span data-ttu-id="90c18-187">F14</span><span class="sxs-lookup"><span data-stu-id="90c18-187">F14</span></span>|<span data-ttu-id="90c18-188">F14</span><span class="sxs-lookup"><span data-stu-id="90c18-188">{F14}</span></span>|  
|<span data-ttu-id="90c18-189">F15</span><span class="sxs-lookup"><span data-stu-id="90c18-189">F15</span></span>|<span data-ttu-id="90c18-190">F15</span><span class="sxs-lookup"><span data-stu-id="90c18-190">{F15}</span></span>|  
|<span data-ttu-id="90c18-191">F16</span><span class="sxs-lookup"><span data-stu-id="90c18-191">F16</span></span>|<span data-ttu-id="90c18-192">F16</span><span class="sxs-lookup"><span data-stu-id="90c18-192">{F16}</span></span>|  
|<span data-ttu-id="90c18-193">キーボードの追加</span><span class="sxs-lookup"><span data-stu-id="90c18-193">Keypad add</span></span>|<span data-ttu-id="90c18-194">アドイン</span><span class="sxs-lookup"><span data-stu-id="90c18-194">{ADD}</span></span>|  
|<span data-ttu-id="90c18-195">キーパッドの減算</span><span class="sxs-lookup"><span data-stu-id="90c18-195">Keypad subtract</span></span>|<span data-ttu-id="90c18-196">引く</span><span class="sxs-lookup"><span data-stu-id="90c18-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="90c18-197">テンキーの乗算</span><span class="sxs-lookup"><span data-stu-id="90c18-197">Keypad multiply</span></span>|<span data-ttu-id="90c18-198">乗じる</span><span class="sxs-lookup"><span data-stu-id="90c18-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="90c18-199">キーパッドの分割</span><span class="sxs-lookup"><span data-stu-id="90c18-199">Keypad divide</span></span>|<span data-ttu-id="90c18-200">8060</span><span class="sxs-lookup"><span data-stu-id="90c18-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="90c18-201">SHIFT、CTRL、ALT の各キーの任意の組み合わせと組み合わせてキーを指定するには、キーコードの前に次のコードを1つ以上追加します。</span><span class="sxs-lookup"><span data-stu-id="90c18-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="90c18-202">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-202">Key</span></span>|<span data-ttu-id="90c18-203">コード</span><span class="sxs-lookup"><span data-stu-id="90c18-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="90c18-204">転換</span><span class="sxs-lookup"><span data-stu-id="90c18-204">SHIFT</span></span>|+|  
|<span data-ttu-id="90c18-205">+</span><span class="sxs-lookup"><span data-stu-id="90c18-205">CTRL</span></span>|^|  
|<span data-ttu-id="90c18-206">押し</span><span class="sxs-lookup"><span data-stu-id="90c18-206">ALT</span></span>|%|  
  
 <span data-ttu-id="90c18-207">他のいくつかのキーが押されている間に、SHIFT、CTRL、ALT の任意の組み合わせを保持するように指定するには、それらのキーのコードをかっこで囲みます。</span><span class="sxs-lookup"><span data-stu-id="90c18-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="90c18-208">たとえば、E と C が押されている間に SHIFT キーを押したままにするように指定するには、"+ (EC)" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="90c18-209">E が押されている間に shift キーを押したまま shift キーを押したままにする場合は、"+ EC" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="90c18-210">繰り返しキーを指定するには、{key number} という形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="90c18-211">キーと数値の間にスペースを入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-211">You must put a space between key and number.</span></span> <span data-ttu-id="90c18-212">たとえば、{LEFT 42} は左矢印キーを42回押すことを意味します。{h 10} は、H を10回押すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="90c18-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-213">別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、 `FindWindow`や`SetForegroundWindow`などのネイティブ Windows メソッドを使用して、他のアプリケーションにフォーカスを移すことができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-214">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="90c18-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="90c18-215">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="90c18-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="90c18-216"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="90c18-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="90c18-217">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="90c18-218"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="90c18-219">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="90c18-220">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="90c18-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="90c18-221">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="90c18-222"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c18-223">次のコード例は、<xref:System.Windows.Forms.SendKeys.Send%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="90c18-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="90c18-224">この例を実行するには、Button1 というボタンを含む Form1 という名前のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="90c18-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="90c18-225">この例では、click イベントがイベント処理メソッドに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="90c18-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="90c18-226">ボタンコントロールの<xref:System.Windows.Forms.Control.TabIndex%2A>プロパティは0に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="90c18-227">この例が実行されている場合は、フォームをダブルクリックして、ボタンの click イベントをトリガーします。</span><span class="sxs-lookup"><span data-stu-id="90c18-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Windows.Forms.SendKeys.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90c18-228">メッセージ キューに現在ある Windows メッセージをすべて処理します。</span><span class="sxs-lookup"><span data-stu-id="90c18-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c18-229">を<xref:System.Windows.Forms.SendKeys.Flush%2A>使用すると、メッセージキューにあるキーストロークやその他のオペレーティングシステムメッセージをアプリケーションが処理するのを待ちます。</span><span class="sxs-lookup"><span data-stu-id="90c18-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="90c18-230">これは、処理する<xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType>キーがなくなるまでを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="90c18-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-231">別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、 `FindWindow`や`SetForegroundWindow`などのネイティブ Windows メソッドを使用して、他のアプリケーションにフォーカスを移すことができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member Send : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.Send keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="90c18-232">送信するキーストロークの文字列。</span><span class="sxs-lookup"><span data-stu-id="90c18-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="90c18-233">キーストロークをアクティブなアプリケーションに送信します。</span><span class="sxs-lookup"><span data-stu-id="90c18-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c18-234">各キーは、1つまたは複数の文字で表されます。</span><span class="sxs-lookup"><span data-stu-id="90c18-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="90c18-235">1つのキーボード文字を指定するには、文字自体を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="90c18-236">たとえば、文字 A を表すには、文字列 "A" をメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="90c18-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="90c18-237">複数の文字を表すには、その前に1つの文字を追加します。</span><span class="sxs-lookup"><span data-stu-id="90c18-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="90c18-238">A、B、および C という文字を表すには、パラメーターを "ABC" として指定します。</span><span class="sxs-lookup"><span data-stu-id="90c18-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="90c18-239">正符号 (+)、キャレット (^)、パーセント記号 (%)、チルダ (~)、およびかっこ () は、に対して<xref:System.Windows.Forms.SendKeys>特別な意味を持ちます。</span><span class="sxs-lookup"><span data-stu-id="90c18-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="90c18-240">これらの文字のいずれかを指定するには、{}中かっこ () で囲みます。</span><span class="sxs-lookup"><span data-stu-id="90c18-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="90c18-241">たとえば、プラス記号を指定するには、"{+}" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="90c18-242">中かっこ文字を指定するには{}、"{{}" および "}" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="90c18-243">角かっこ ([]) はに対し<xref:System.Windows.Forms.SendKeys>て特別な意味を持ちませんが、中かっこで囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="90c18-244">他のアプリケーションでは、ダイナミックデータエクスチェンジ (DDE) が発生したときに、角かっこによって特別な意味を持つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="90c18-245">アプリケーションが国際対応し、さまざまなキーボードの使用を想定している場合は、 <xref:System.Windows.Forms.SendKeys.Send%2A> の使用により予期しない結果になる可能性があるため、回避する必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="90c18-246">ENTER や TAB、文字ではなくアクションを表すキーなど、キーを押したときに表示されない文字を指定するには、次の表のコードを使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="90c18-247">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-247">Key</span></span>|<span data-ttu-id="90c18-248">コード</span><span class="sxs-lookup"><span data-stu-id="90c18-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="90c18-249">行頭</span><span class="sxs-lookup"><span data-stu-id="90c18-249">BACKSPACE</span></span>|<span data-ttu-id="90c18-250">{BACKSPACE}、{BS}、または {BKSP}</span><span class="sxs-lookup"><span data-stu-id="90c18-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="90c18-251">改</span><span class="sxs-lookup"><span data-stu-id="90c18-251">BREAK</span></span>|<span data-ttu-id="90c18-252">改</span><span class="sxs-lookup"><span data-stu-id="90c18-252">{BREAK}</span></span>|  
|<span data-ttu-id="90c18-253">キャップス ロックです</span><span class="sxs-lookup"><span data-stu-id="90c18-253">CAPS LOCK</span></span>|<span data-ttu-id="90c18-254">CAPSLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="90c18-255">DEL または DELETE</span><span class="sxs-lookup"><span data-stu-id="90c18-255">DEL or DELETE</span></span>|<span data-ttu-id="90c18-256">{DELETE} または {DEL}</span><span class="sxs-lookup"><span data-stu-id="90c18-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="90c18-257">↓</span><span class="sxs-lookup"><span data-stu-id="90c18-257">DOWN ARROW</span></span>|<span data-ttu-id="90c18-258">ダウン</span><span class="sxs-lookup"><span data-stu-id="90c18-258">{DOWN}</span></span>|  
|<span data-ttu-id="90c18-259">End</span><span class="sxs-lookup"><span data-stu-id="90c18-259">END</span></span>|<span data-ttu-id="90c18-260">エンド</span><span class="sxs-lookup"><span data-stu-id="90c18-260">{END}</span></span>|  
|<span data-ttu-id="90c18-261">Enter</span><span class="sxs-lookup"><span data-stu-id="90c18-261">ENTER</span></span>|<span data-ttu-id="90c18-262">{ENTER} または ~</span><span class="sxs-lookup"><span data-stu-id="90c18-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="90c18-263">ESC</span><span class="sxs-lookup"><span data-stu-id="90c18-263">ESC</span></span>|<span data-ttu-id="90c18-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="90c18-264">{ESC}</span></span>|  
|<span data-ttu-id="90c18-265">ヘルプ</span><span class="sxs-lookup"><span data-stu-id="90c18-265">HELP</span></span>|<span data-ttu-id="90c18-266">方法</span><span class="sxs-lookup"><span data-stu-id="90c18-266">{HELP}</span></span>|  
|<span data-ttu-id="90c18-267">ホーム</span><span class="sxs-lookup"><span data-stu-id="90c18-267">HOME</span></span>|<span data-ttu-id="90c18-268">出張</span><span class="sxs-lookup"><span data-stu-id="90c18-268">{HOME}</span></span>|  
|<span data-ttu-id="90c18-269">INS または INSERT</span><span class="sxs-lookup"><span data-stu-id="90c18-269">INS or INSERT</span></span>|<span data-ttu-id="90c18-270">{INSERT} または {INS}</span><span class="sxs-lookup"><span data-stu-id="90c18-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="90c18-271">←</span><span class="sxs-lookup"><span data-stu-id="90c18-271">LEFT ARROW</span></span>|<span data-ttu-id="90c18-272">左側</span><span class="sxs-lookup"><span data-stu-id="90c18-272">{LEFT}</span></span>|  
|<span data-ttu-id="90c18-273">NUMLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-273">NUM LOCK</span></span>|<span data-ttu-id="90c18-274">NUMLOCK</span><span class="sxs-lookup"><span data-stu-id="90c18-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="90c18-275">PageDown</span><span class="sxs-lookup"><span data-stu-id="90c18-275">PAGE DOWN</span></span>|<span data-ttu-id="90c18-276">PAGEDOWN</span><span class="sxs-lookup"><span data-stu-id="90c18-276">{PGDN}</span></span>|  
|<span data-ttu-id="90c18-277">PageUp</span><span class="sxs-lookup"><span data-stu-id="90c18-277">PAGE UP</span></span>|<span data-ttu-id="90c18-278">PAGEUP</span><span class="sxs-lookup"><span data-stu-id="90c18-278">{PGUP}</span></span>|  
|<span data-ttu-id="90c18-279">印刷画面</span><span class="sxs-lookup"><span data-stu-id="90c18-279">PRINT SCREEN</span></span>|<span data-ttu-id="90c18-280">{PRTSC}(将来使用するために予約されています)</span><span class="sxs-lookup"><span data-stu-id="90c18-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="90c18-281">→</span><span class="sxs-lookup"><span data-stu-id="90c18-281">RIGHT ARROW</span></span>|<span data-ttu-id="90c18-282">直角</span><span class="sxs-lookup"><span data-stu-id="90c18-282">{RIGHT}</span></span>|  
|<span data-ttu-id="90c18-283">スクロールロック</span><span class="sxs-lookup"><span data-stu-id="90c18-283">SCROLL LOCK</span></span>|<span data-ttu-id="90c18-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="90c18-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="90c18-285">Tab</span><span class="sxs-lookup"><span data-stu-id="90c18-285">TAB</span></span>|<span data-ttu-id="90c18-286"> タブ</span><span class="sxs-lookup"><span data-stu-id="90c18-286">{TAB}</span></span>|  
|<span data-ttu-id="90c18-287">↑</span><span class="sxs-lookup"><span data-stu-id="90c18-287">UP ARROW</span></span>|<span data-ttu-id="90c18-288">設定</span><span class="sxs-lookup"><span data-stu-id="90c18-288">{UP}</span></span>|  
|<span data-ttu-id="90c18-289">F1</span><span class="sxs-lookup"><span data-stu-id="90c18-289">F1</span></span>|<span data-ttu-id="90c18-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="90c18-290">{F1}</span></span>|  
|<span data-ttu-id="90c18-291">F2</span><span class="sxs-lookup"><span data-stu-id="90c18-291">F2</span></span>|<span data-ttu-id="90c18-292">Bios</span><span class="sxs-lookup"><span data-stu-id="90c18-292">{F2}</span></span>|  
|<span data-ttu-id="90c18-293">F3</span><span class="sxs-lookup"><span data-stu-id="90c18-293">F3</span></span>|<span data-ttu-id="90c18-294">F3</span><span class="sxs-lookup"><span data-stu-id="90c18-294">{F3}</span></span>|  
|<span data-ttu-id="90c18-295">F4</span><span class="sxs-lookup"><span data-stu-id="90c18-295">F4</span></span>|<span data-ttu-id="90c18-296">空白</span><span class="sxs-lookup"><span data-stu-id="90c18-296">{F4}</span></span>|  
|<span data-ttu-id="90c18-297">F5</span><span class="sxs-lookup"><span data-stu-id="90c18-297">F5</span></span>|<span data-ttu-id="90c18-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="90c18-298">{F5}</span></span>|  
|<span data-ttu-id="90c18-299">F6</span><span class="sxs-lookup"><span data-stu-id="90c18-299">F6</span></span>|<span data-ttu-id="90c18-300">F6</span><span class="sxs-lookup"><span data-stu-id="90c18-300">{F6}</span></span>|  
|<span data-ttu-id="90c18-301">F7</span><span class="sxs-lookup"><span data-stu-id="90c18-301">F7</span></span>|<span data-ttu-id="90c18-302">F7</span><span class="sxs-lookup"><span data-stu-id="90c18-302">{F7}</span></span>|  
|<span data-ttu-id="90c18-303">F8</span><span class="sxs-lookup"><span data-stu-id="90c18-303">F8</span></span>|<span data-ttu-id="90c18-304">F8</span><span class="sxs-lookup"><span data-stu-id="90c18-304">{F8}</span></span>|  
|<span data-ttu-id="90c18-305">F9</span><span class="sxs-lookup"><span data-stu-id="90c18-305">F9</span></span>|<span data-ttu-id="90c18-306">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-306">{F9}</span></span>|  
|<span data-ttu-id="90c18-307">F10</span><span class="sxs-lookup"><span data-stu-id="90c18-307">F10</span></span>|<span data-ttu-id="90c18-308">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-308">{F10}</span></span>|  
|<span data-ttu-id="90c18-309">F11</span><span class="sxs-lookup"><span data-stu-id="90c18-309">F11</span></span>|<span data-ttu-id="90c18-310">F11</span><span class="sxs-lookup"><span data-stu-id="90c18-310">{F11}</span></span>|  
|<span data-ttu-id="90c18-311">F12</span><span class="sxs-lookup"><span data-stu-id="90c18-311">F12</span></span>|<span data-ttu-id="90c18-312">F12</span><span class="sxs-lookup"><span data-stu-id="90c18-312">{F12}</span></span>|  
|<span data-ttu-id="90c18-313">F13</span><span class="sxs-lookup"><span data-stu-id="90c18-313">F13</span></span>|<span data-ttu-id="90c18-314">F13</span><span class="sxs-lookup"><span data-stu-id="90c18-314">{F13}</span></span>|  
|<span data-ttu-id="90c18-315">F14</span><span class="sxs-lookup"><span data-stu-id="90c18-315">F14</span></span>|<span data-ttu-id="90c18-316">F14</span><span class="sxs-lookup"><span data-stu-id="90c18-316">{F14}</span></span>|  
|<span data-ttu-id="90c18-317">F15</span><span class="sxs-lookup"><span data-stu-id="90c18-317">F15</span></span>|<span data-ttu-id="90c18-318">F15</span><span class="sxs-lookup"><span data-stu-id="90c18-318">{F15}</span></span>|  
|<span data-ttu-id="90c18-319">F16</span><span class="sxs-lookup"><span data-stu-id="90c18-319">F16</span></span>|<span data-ttu-id="90c18-320">F16</span><span class="sxs-lookup"><span data-stu-id="90c18-320">{F16}</span></span>|  
|<span data-ttu-id="90c18-321">キーボードの追加</span><span class="sxs-lookup"><span data-stu-id="90c18-321">Keypad add</span></span>|<span data-ttu-id="90c18-322">アドイン</span><span class="sxs-lookup"><span data-stu-id="90c18-322">{ADD}</span></span>|  
|<span data-ttu-id="90c18-323">キーパッドの減算</span><span class="sxs-lookup"><span data-stu-id="90c18-323">Keypad subtract</span></span>|<span data-ttu-id="90c18-324">引く</span><span class="sxs-lookup"><span data-stu-id="90c18-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="90c18-325">テンキーの乗算</span><span class="sxs-lookup"><span data-stu-id="90c18-325">Keypad multiply</span></span>|<span data-ttu-id="90c18-326">乗じる</span><span class="sxs-lookup"><span data-stu-id="90c18-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="90c18-327">キーパッドの分割</span><span class="sxs-lookup"><span data-stu-id="90c18-327">Keypad divide</span></span>|<span data-ttu-id="90c18-328">8060</span><span class="sxs-lookup"><span data-stu-id="90c18-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="90c18-329">SHIFT、CTRL、ALT の各キーの任意の組み合わせと組み合わせてキーを指定するには、キーコードの前に次のコードを1つ以上追加します。</span><span class="sxs-lookup"><span data-stu-id="90c18-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="90c18-330">キー</span><span class="sxs-lookup"><span data-stu-id="90c18-330">Key</span></span>|<span data-ttu-id="90c18-331">コード</span><span class="sxs-lookup"><span data-stu-id="90c18-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="90c18-332">転換</span><span class="sxs-lookup"><span data-stu-id="90c18-332">SHIFT</span></span>|+|  
|<span data-ttu-id="90c18-333">+</span><span class="sxs-lookup"><span data-stu-id="90c18-333">CTRL</span></span>|^|  
|<span data-ttu-id="90c18-334">押し</span><span class="sxs-lookup"><span data-stu-id="90c18-334">ALT</span></span>|%|  
  
 <span data-ttu-id="90c18-335">他のいくつかのキーが押されている間に、SHIFT、CTRL、ALT の任意の組み合わせを保持するように指定するには、それらのキーのコードをかっこで囲みます。</span><span class="sxs-lookup"><span data-stu-id="90c18-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="90c18-336">たとえば、E と C が押されている間に SHIFT キーを押したままにするように指定するには、"+ (EC)" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="90c18-337">E が押されている間に shift キーを押したまま shift キーを押したままにする場合は、"+ EC" を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="90c18-338">繰り返しキーを指定するには、{key number} という形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="90c18-339">キーと数値の間にスペースを入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-339">You must put a space between key and number.</span></span> <span data-ttu-id="90c18-340">たとえば、{LEFT 42} は左矢印キーを42回押すことを意味します。{h 10} は、H を10回押すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="90c18-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-341">別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、 `FindWindow`や`SetForegroundWindow`などのネイティブ Windows メソッドを使用して、他のアプリケーションにフォーカスを移すことができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-342">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="90c18-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="90c18-343">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="90c18-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="90c18-344"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="90c18-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="90c18-345">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="90c18-346"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="90c18-347">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="90c18-348">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="90c18-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="90c18-349">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="90c18-350"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90c18-351">次のコード例は、メソッドの<xref:System.Windows.Forms.SendKeys.Send%2A>使用方法を示しています。この例を実行するには、Button1 というボタンを含む Form1 という名前のフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="90c18-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="90c18-352">この例では、click イベントがイベント処理メソッドに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="90c18-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="90c18-353">ボタンコントロールの<xref:System.Windows.Forms.Control.TabIndex%2A>プロパティは0に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="90c18-354">この例が実行されている場合は、フォームをダブルクリックして、ボタンの click イベントをトリガーします。</span><span class="sxs-lookup"><span data-stu-id="90c18-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90c18-355">キーストロークの送信先となるアクティブなアプリケーションはありません。</span><span class="sxs-lookup"><span data-stu-id="90c18-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="90c18-356"><paramref name="keys" /> が有効なキーストロークを表していません。</span><span class="sxs-lookup"><span data-stu-id="90c18-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="90c18-357">アンマネージコードがこのメソッドを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="90c18-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="90c18-358">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="90c18-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member SendWait : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.SendWait keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="90c18-359">送信するキーストロークの文字列。</span><span class="sxs-lookup"><span data-stu-id="90c18-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="90c18-360">特定のキーをアクティブなアプリケーションに送信し、メッセージが処理されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="90c18-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90c18-361">キー <xref:System.Windows.Forms.SendKeys.SendWait%2A>ストロークまたはキーストロークの組み合わせをアクティブなアプリケーションに送信し、キーストロークメッセージが処理されるまで待機するには、を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="90c18-362">このメソッドを使用して、キーストロークをアプリケーションに送信し、キーストロークによって開始されたプロセスが完了するまで待機することができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="90c18-363">これは、アプリケーションを続行する前に他のアプリケーションを終了する必要がある場合に重要です。</span><span class="sxs-lookup"><span data-stu-id="90c18-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-364">別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、 `FindWindow`や`SetForegroundWindow`などのネイティブ Windows メソッドを使用して、他のアプリケーションにフォーカスを移すことができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90c18-365">.NET Framework 3.0 の <xref:System.Windows.Forms.SendKeys> クラスが更新され、Windows Vista で実行されるアプリケーションで使用できるようになりました。</span><span class="sxs-lookup"><span data-stu-id="90c18-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="90c18-366">Windows Vista の強化されたセキュリティ、(ユーザー アカウント制御または UAC と呼ばれます) により、前の実装は想定どおり機能できません。</span><span class="sxs-lookup"><span data-stu-id="90c18-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="90c18-367"><xref:System.Windows.Forms.SendKeys> クラスはタイミングの問題が発生する可能性があり、一部の開発者は回避策を取る必要がありました。</span><span class="sxs-lookup"><span data-stu-id="90c18-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="90c18-368">更新された実装は、引き続きタイミングの問題が発生する可能性がありますが、速度が少し向上し、回避策の変更が必要となる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="90c18-369"><xref:System.Windows.Forms.SendKeys> クラスは、最初に前の実装を使用しようとし、失敗した場合に、新しい実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="90c18-370">その結果、 <xref:System.Windows.Forms.SendKeys> クラスが別のオペレーティング システムと異なる動作を取る可能性があります。</span><span class="sxs-lookup"><span data-stu-id="90c18-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="90c18-371">さらに、 <xref:System.Windows.Forms.SendKeys> クラスは、新しい実装を使用した場合、 <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドが別のプロセスに送信されたときにメッセージの処理を待機しません。</span><span class="sxs-lookup"><span data-stu-id="90c18-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="90c18-372">アプリケーションが、オペレーティング システムに関係なく一貫した動作に依存する場合、app.config ファイルに次のアプリケーション設定を追加することで、 <xref:System.Windows.Forms.SendKeys> クラスが新しい実装を使用するよう強制することができます。</span><span class="sxs-lookup"><span data-stu-id="90c18-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="90c18-373"><xref:System.Windows.Forms.SendKeys> クラスが前の実装を使用するよう強制するには、代わりに値 `"JournalHook"` を使用します。</span><span class="sxs-lookup"><span data-stu-id="90c18-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="90c18-374">アンマネージコードがこのメソッドを呼び出す場合。</span><span class="sxs-lookup"><span data-stu-id="90c18-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="90c18-375">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="90c18-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
