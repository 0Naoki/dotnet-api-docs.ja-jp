<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlElement.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ea4df987f01be023f9505e29b7e260d853c5a31.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ea4df987f01be023f9505e29b7e260d853c5a31</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.HtmlElement">
          <source>Represents an HTML element inside of a Web page.</source>
          <target state="translated">Web ページ内の HTML 要素を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> represents any possible type of element in an HTML document, such as <ph id="ph2">`BODY`</ph>, <ph id="ph3">`TABLE`</ph>, and <ph id="ph4">`FORM`</ph>, among others.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> など、HTML ドキュメント内の要素の可能な型を表す<ph id="ph2">`BODY`</ph>、 <ph id="ph3">`TABLE`</ph>、および<ph id="ph4">`FORM`</ph>、その他。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The class exposes the most common properties you can expect to find on all elements.</source>
          <target state="translated">クラスは、すべての要素を検索する最も一般的なプロパティを公開します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Most elements can have <bpt id="p1">*</bpt>child elements<ept id="p1">*</ept>: other HTML elements that are placed underneath them.</source>
          <target state="translated">ほとんどの要素を持つことができます<bpt id="p1">*</bpt>子要素<ept id="p1">*</ept>: その下に配置されているその他の HTML 要素です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property to test whether a given element has children, and the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection to iterate through them.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph>プロパティを指定された要素がある子かどうかをテストして、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph>それらを反復するコレクション。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> in which the current element is nested.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph>プロパティから返される、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>の現在の要素が入れ子になったのです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>, such as the <ph id="ph2">`SRC`</ph> attribute on an <ph id="ph3">`IMG`</ph> element or the <ph id="ph4">`Submit`</ph> method on a <ph id="ph5">`FORM`</ph>.</source>
          <target state="translated">多くの場合、属性、プロパティ、およびによって直接公開されていない基になる要素のメソッドへのアクセスを必要する<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>など、<ph id="ph2">`SRC`</ph>属性を<ph id="ph3">`IMG`</ph>要素または<ph id="ph4">`Submit`</ph>メソッドを<ph id="ph5">`FORM`</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> methods enable you to retrieve and alter any attribute or property on a specific element, while <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> provides access to any methods not exposed in the managed Document Object Model (DOM).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>を取得し、すべての属性またはの特定の要素のプロパティを変更するメソッドを使用するときに<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>管理対象のドキュメント オブジェクト モデル (DOM) で公開されていないすべてのメソッドへのアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>If your application has unmanaged code permission, you can also access unexposed properties and methods with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;</ph> attribute.</source>
          <target state="translated">場合は、アプリケーションはアンマネージ コードのアクセス許可が、アクセスすることも持つ非公開のプロパティおよびメソッド、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> property to test whether an element is of a specific type.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph>要素が特定の種類があるかどうかをテストするプロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>Any HTML document can be modified at run time.</source>
          <target state="translated">任意の HTML ドキュメントは、実行時に変更できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You can create new <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects with the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method of <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>, and add them to another element using the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.</source>
          <target state="translated">新規に作成することができます<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>オブジェクトと、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>メソッドの<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>、要素を使用して別に追加し、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>または<ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>You can also create the elements as HTML tags and assign them to an existing element's <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property.</source>
          <target state="translated">また要素として HTML タグを作成し、既存の要素に割り当てることができます<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</source>
          <target state="translated">次のコード例は、任意の HTML ドキュメントをチェックし、インデント、HTML 要素を記述する文字列を取得する方法を示しています。 と深さを示すために使用するレベルの番号には、要素が入れ子になった、ドキュメントにします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.HtmlElement">
          <source>This code example requires that your application hosts a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">このコード例では、する必要があります、アプリケーション ホスト、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> of all elements underneath the current element.</source>
          <target state="translated">現在の要素の下位にあるすべての要素の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>A collection of all elements that are direct or indirect children of the current element.</source>
          <target state="translated">現在の要素の直接的または間接的な子であるすべての要素のコレクション。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>If the current element is a <bpt id="p1">&lt;c&gt;</bpt>TABLE<ept id="p1">&lt;/c&gt;</ept>, for example, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.All" /&gt;</ph> will return every <bpt id="p2">&lt;c&gt;</bpt>TH<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>TR<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>TD<ept id="p4">&lt;/c&gt;</ept> element within the table, as well as any other elements, such as <bpt id="p5">&lt;c&gt;</bpt>DIV<ept id="p5">&lt;/c&gt;</ept> and <bpt id="p6">&lt;c&gt;</bpt>SPAN<ept id="p6">&lt;/c&gt;</ept> elements, contained within the cells.</source>
          <target state="translated">現在の要素がある場合、<bpt id="p1">&lt;c&gt;</bpt>テーブル<ept id="p1">&lt;/c&gt;</ept>など、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.All" /&gt;</ph>が返されますすべて<bpt id="p2">&lt;c&gt;</bpt>TH<ept id="p2">&lt;/c&gt;</ept>、 <bpt id="p3">&lt;c&gt;</bpt>TR<ept id="p3">&lt;/c&gt;</ept>、および<bpt id="p4">&lt;c&gt;</bpt>TD<ept id="p4">&lt;/c&gt;</ept>テーブル内の要素その他の要素など<bpt id="p5">&lt;c&gt;</bpt>DIV<ept id="p5">&lt;/c&gt;</ept>と<bpt id="p6">&lt;c&gt;</bpt>スパン<ept id="p6">&lt;/c&gt;</ept>セル内に含まれる要素です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>To access only those elements which have the current element as their direct parent, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection instead.</source>
          <target state="translated">現在の要素とその直接の親を持つ要素のみにアクセスするには、使用、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph>コレクション代わりにします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.All">
          <source>Elements in this collection will not necessarily be returned in source order.</source>
          <target state="translated">このコレクション内の要素はないソースの順序で返さとは限りません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> to append to this location in the tree.</source>
          <target state="translated">ツリーのこの位置に追加する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Adds an element to another element's subtree.</source>
          <target state="translated">要素を別の要素のサブツリーに追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The element after it has been added to the tree.</source>
          <target state="translated">ツリーに追加された後の要素。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) では、さまざまな方法で HTML ファイルの実行時の内容を変更することができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> to add new elements to an existing document, or to move an element on the page.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>または要素をページに移動する既存のドキュメントに新しい要素を追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.</source>
          <target state="translated">要素は既に親されて、別の要素に要素を追加することは自動的に削除その要素以前の親から。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>Any additions made to a document at run-time using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> will not be persisted when you call the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">使用して実行時にドキュメントに対して行われたすべての追加<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>メソッドを呼び出すときは、<ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;</ph>メソッドを<ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The following code example creates a new hyperlink using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method and adds it to end of a page using <ph id="ph2">`AppendChild`</ph> on the <ph id="ph3">`BODY`</ph> element.</source>
          <target state="translated">次のコード例では、使用して新しいハイパーリンクを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>メソッドし、それを終了する追加のページを使用して、<ph id="ph2">`AppendChild`</ph>上、<ph id="ph3">`BODY`</ph>要素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)">
          <source>The example requires that your application contains a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">例では、アプリケーションが含まれている必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The name of the event you want to handle.</source>
          <target state="translated">処理するイベントの名前。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The managed code that handles the event.</source>
          <target state="translated">イベントを処理するマネージ コード。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Adds an event handler for a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML DOM の指定したイベントにイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The Managed Document Object Model (DOM) exposes only a select number of events.</source>
          <target state="translated">管理対象のドキュメント オブジェクト モデル (DOM) は、イベントの選択数のみを公開します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Most of the unexposed events are only defined for specific types of elements; such as the <ph id="ph1">`submit`</ph> event, which is valid only on <ph id="ph2">`FORM`</ph> elements.</source>
          <target state="translated">非公開のイベントのほとんどが特定の種類の要素の定義のみなど、<ph id="ph1">`submit`</ph>でのみ有効であるイベント<ph id="ph2">`FORM`</ph>要素。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> to add an event handler to these unexposed events.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph>これら非公開のイベントにイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>You should not attach an event to the document or one of its objects until the document has completed loading.</source>
          <target state="translated">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトのいずれかのイベントをアタッチする必要がありますできません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>The earliest you should call this method is in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">できるだけ早くこのメソッドを呼び出す必要がありますが、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph>のイベント、<ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)">
          <source>For more information about the available unmanaged events, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept> and the IHTMLElement interfaces: <bpt id="p2">[</bpt>IHTMLElement<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>, <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>, <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>, <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>.</source>
          <target state="translated">使用可能なアンマネージ イベントの詳細については、次を参照してください。 <bpt id="p1">[</bpt>、管理されている HTML ドキュメント オブジェクト モデルでのへのアクセスの非公開メンバー<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>と IHTMLElement インターフェイス: <bpt id="p2">[</bpt>IHTMLElement<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>、 <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>、 <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>、 <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Gets a value indicating whether this element can have child elements.</source>
          <target state="translated">この要素が子要素を持つことができるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if element can have child elements; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素が子要素を持つことができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Some elements, such as <ph id="ph1">`IMG`</ph> and <ph id="ph2">`SCRIPT`</ph>, cannot have any children.</source>
          <target state="translated">一部の要素など<ph id="ph1">`IMG`</ph>と<ph id="ph2">`SCRIPT`</ph>子を持つことはできません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>Use this property before you call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> on an arbitrary element.</source>
          <target state="translated">呼び出す前に、このプロパティを使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph>任意の要素にします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>The following code example handles the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">次のコード例のハンドル、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>でイベントを<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named <ph id="ph1">`MoveElement`</ph>.</source>
          <target state="translated">要素が選択されていない、マウス クリックを使用して場合、コードに割り当てられます要素という名前のプライベート クラス変数<ph id="ph1">`MoveElement`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>If an element was selected, the code attempts to append it to the element that was just clicked.</source>
          <target state="translated">要素を選択した場合、コードは、クリックしてされただけの要素に追加しようとします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.CanHaveChildren">
          <source>This code example requires that your application hosts a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>, and that you have already added an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">このコード例では、する必要があります、アプリケーション ホスト、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>、既にあることとのイベント ハンドラーを追加、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>でイベントを<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> of all children of the current element.</source>
          <target state="translated">現在の要素のすべての子の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>A collection of all <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects that have the current element as a parent.</source>
          <target state="translated">現在の要素を親とするすべての <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> オブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Many of the elements inside of an HTML file can have other HTML elements underneath them.</source>
          <target state="translated">下にある場合は、他の HTML 要素の HTML ファイル内で要素の多くができます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection provides a simple mechanism for exploring the tree structure of a document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph>コレクションは、ドキュメントのツリー構造を探索するための簡単なメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> only exposes elements whose direct parent is the current element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> 要素の直接の親は、現在の要素を公開するだけです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>If you have an <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> for a <ph id="ph2">`TABLE`</ph> element, <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> will give you all of the <ph id="ph4">`TR`</ph> (row) elements inside of the <ph id="ph5">`TABLE`</ph>.</source>
          <target state="translated">ある場合、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>の<ph id="ph2">`TABLE`</ph>要素、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph>が提供するすべての<ph id="ph4">`TR`</ph>(行) の要素の内側、<ph id="ph5">`TABLE`</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>To retrieve the <ph id="ph1">`TD`</ph> (cell) elements contained inside of the <ph id="ph2">`TR`</ph> elements, you will need to use either the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph> collection on each individual <ph id="ph4">`TR`</ph> element, or use the <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> collection on <ph id="ph6">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>.</source>
          <target state="translated">取得する、 <ph id="ph1">`TD`</ph> (セル) 要素の内側に含まれる、<ph id="ph2">`TR`</ph>要素、いずれかを使用する必要が、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;</ph>ごとにコレクション<ph id="ph4">`TR`</ph>要素、または使用する、<ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph>コレクションに<ph id="ph6">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>Elements in this collection are not guaranteed to be in source order.</source>
          <target state="translated">このコレクション内の要素は、ソースの順序である保証はありません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">`Children`</ph> will always be empty.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph>は<ph id="ph2">`false`</ph>、<ph id="ph3">`Children`</ph>は常に空になります。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</source>
          <target state="translated">次のコード例任意の HTML ドキュメントを調べ、インデント、要素を記述する文字列を取得および深さを示すために使用するレベルの番号には、要素が入れ子になった、ドキュメントでは、します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>It does this by searching the <ph id="ph1">`Children`</ph> collection of all elements recursively, starting with the HTML element at the top of the document.</source>
          <target state="translated">これは、検索で、<ph id="ph1">`Children`</ph>コレクションのすべての要素を再帰的に、ドキュメントの上部にある HTML 要素を開始します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Children">
          <source>This code example requires that your application has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">このコード例では、アプリケーションがある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>Occurs when the user clicks on the element with the left mouse button.</source>
          <target state="translated">ユーザーが要素をマウスの左ボタンでクリックしたときに発生します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>If the user clicks on an element that does not currently have input focus, the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event will occur after the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event, but before the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for that element.</source>
          <target state="translated">ない現在入力フォーカスを要素に、ユーザーがクリックした場合、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>イベントが発生した後、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph>イベント、その前に、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>要素のイベントをします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Click">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>Gets the bounds of the client area of the element in the HTML document.</source>
          <target state="translated">HTML ドキュメントにおける要素のクライアント領域の境界を取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>The client area occupied by the element, minus any area taken by borders and scroll bars.</source>
          <target state="translated">要素が占有しているクライアント領域から、境界線とスクロール バーの領域を除いた領域。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>To obtain the position and dimensions of the element inclusive of its adornments, use <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> instead.</source>
          <target state="translated">要素の表示要素を含めた位置および寸法を取得するには、代わりに <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> を使用します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A&gt;</ph> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A&gt;</ph> 明示的な高さと幅を割り当てられている要素または絶対位置を使用する要素だけの位置データを返します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>A document is absolutely positioned if its position style is set to <ph id="ph1">`absolute`</ph>, after which it can be positioned at any coordinate on the HTML page.</source>
          <target state="translated">ドキュメントに、位置スタイルが設定されている場合の絶対位置が<ph id="ph1">`absolute`</ph>、することできますに配置する HTML ページ上の任意の座標の後にします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>Assume you have loaded the following HTML page into a hosted instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
          <target state="translated">ホスト インスタンスに次の HTML ページを読み込んだ前提としています、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ClientRectangle">
          <source>The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the <ph id="ph1">`DIV`</ph> to the <ph id="ph2">`contentEditable`</ph> state so that the user can input text.</source>
          <target state="translated">次のコード例は、この要素を取得し、そのディメンションを展開する場合は、クライアント領域の 50 ピクセル、高さ、幅がより小さい 400 ピクセルし、も設定を示しています、<ph id="ph1">`DIV`</ph>を<ph id="ph2">`contentEditable`</ph>状態のユーザーがテキストを入力できるようにします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>The name of the event you want to handle.</source>
          <target state="translated">処理するイベントの名前。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>The managed code that handles the event.</source>
          <target state="translated">イベントを処理するマネージ コード。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)">
          <source>Removes an event handler from a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML DOM (Document Object Model) の指定したイベントからイベント ハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlDocument" /&gt;</ph> to which this element belongs.</source>
          <target state="translated">この要素が属する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlDocument" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>The parent document of this element.</source>
          <target state="translated">この要素の親ドキュメント。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>Some HTML pages can host frames using the <ph id="ph1">`FRAMESET`</ph> tags.</source>
          <target state="translated">一部の HTML ページを使用してフレームをホストできる、<ph id="ph1">`FRAMESET`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>In this case, each individual <ph id="ph1">`FRAME`</ph> element will contain its own instance of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">この場合、各<ph id="ph1">`FRAME`</ph>要素は、独自のインスタンスを含める<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Document">
          <source>This property is most useful when you have received a reference to an element in an event handler from the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>, and need to perform some action on the document in which the element resides.</source>
          <target state="translated">このプロパティは、要素への参照をイベント ハンドラーから受信したときに、最も役に立つ、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>要素が含まれているドキュメントに対して何らかのアクションを実行する必要があります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>Gets an unmanaged interface pointer for this element.</source>
          <target state="translated">この要素のアンマネージ インターフェイスへのポインターを取得します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>The COM <bpt id="p1">&lt;c&gt;</bpt>IUnknown<ept id="p1">&lt;/c&gt;</ept> pointer for the element, which you can cast to one of the HTML element interfaces, such as <bpt id="p2">&lt;c&gt;</bpt>IHTMLElement<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">COM <bpt id="p1">&lt;c&gt;</bpt>IUnknown<ept id="p1">&lt;/c&gt;</ept>など、要素は、HTML 要素のいずれかにキャストできますへのポインターがインタ フェース<bpt id="p2">&lt;c&gt;</bpt>IHTMLElement<ept id="p2">&lt;/c&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> ラッパーの Internet Explorer ドキュメント オブジェクト モデル (DOM)、コンポーネント オブジェクト モデル (COM) を使用して記述されたです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>If you need to access unexposed properties or methods on the underlying COM interfaces, such as <ph id="ph1">`IHTMLElement`</ph>, you can use this object to query for them.</source>
          <target state="translated">など、非公開のプロパティまたはメソッドに、基になる COM インターフェイスにアクセスする必要がある場合<ph id="ph1">`IHTMLElement`</ph>、それらのクエリには、このオブジェクトを使用することができます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.</source>
          <target state="translated">アンマネージ インターフェイスを使用するのには、アプリケーションに MSHTML ライブラリ (mshtml.dll) をインポートする必要があります。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>However, you can also execute unexposed properties and methods using the <ph id="ph1">`Invoke`</ph> method.</source>
          <target state="translated">ただし、実行することも公開されていないプロパティとメソッドを使用して、<ph id="ph1">`Invoke`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user.</source>
          <target state="translated">次のコード例では、現在選択されているテキストを行い、ユーザーが選択した URL を使用して、ハイパーリンクに変換するアンマネージ インターフェイスを使用します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.DomElement">
          <source>This code was written under the assumption that your form has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>, and that you have added the unmanaged MSHTML library as a reference to your project.</source>
          <target state="translated">このコードには、フォームにあると仮定して書き込んだ、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>プロジェクトへの参照として、アンマネージ MSHTML ライブラリを追加したとします。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>Occurs when the user clicks the left mouse button over an element twice, in rapid succession.</source>
          <target state="translated">ユーザーが要素上でマウスの左ボタンを 2 回すばやく連続的にクリックしたときに発生します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">ダブルクリックは、ユーザーのオペレーティング システムのマウス設定によって決まります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Occurs when the user drags text to various locations.</source>
          <target state="translated">ユーザーがテキストをさまざまな位置にドラッグしたときに発生します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>This event occurs when text is dragged to the following locations:</source>
          <target state="translated">このイベントは、テキストが次の場所にドラッグされたときに発生します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Within or between HTML pages hosted in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control or Internet Explorer</source>
          <target state="translated">内または HTML ページでホストされている間、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>コントロールまたは Internet Explorer</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To another application</source>
          <target state="translated">別のアプリケーションに</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To the Windows desktop</source>
          <target state="translated">Windows デスクトップに</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Drag">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Drag&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>Occurs when a user finishes a drag operation.</source>
          <target state="translated">ユーザーがドラッグ操作を終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragEnd">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragEnd&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>Occurs when the user is no longer dragging an item over this element.</source>
          <target state="translated">ユーザーがこの要素上への項目のドラッグを終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragLeave">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragLeave&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>Occurs when the user drags text over the element.</source>
          <target state="translated">ユーザーがテキストを要素上にドラッグしたときに発生します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.DragOver">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.DragOver&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>Gets or sets whether the user can input data into this element.</source>
          <target state="translated">ユーザーがこの要素にデータを入力できるかどうかを取得または設定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element allows user input; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">要素がユーザーの入力を受け付ける場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>For <ph id="ph1">`FORM`</ph> elements such as text boxes and radio buttons, setting <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph> will prevent the user from using these form fields.</source>
          <target state="translated"><ph id="ph1">`FORM`</ph>テキスト ボックスやオプション ボタン、設定などの要素<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph>に<ph id="ph3">`false`</ph>ユーザーがフォームのフィールドを使用できなくなります。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>For other elements, such as <ph id="ph1">`DIV`</ph> or <ph id="ph2">`SPAN`</ph>, setting <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph> to <ph id="ph4">`false`</ph> will cause all text within the element to appear shaded; however, the text will still be selectable.</source>
          <target state="translated">他の要素のように<ph id="ph1">`DIV`</ph>または<ph id="ph2">`SPAN`</ph>、設定<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.Enabled%2A&gt;</ph>に<ph id="ph4">`false`</ph>灰色表示にすると、要素内のすべてのテキストになります。 ただし、テキストがまだ選択可能です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Enabled">
          <source>To cancel selection, add an event handler for the unexposed <ph id="ph1">`onselectstart`</ph> event using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph> method.</source>
          <target state="translated">選択を解除する、非公開のイベント ハンドラーを追加<ph id="ph1">`onselectstart`</ph>イベントを使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source>The object to test for equality.</source>
          <target state="translated">同じかどうかを確認する対象のオブジェクト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source>Tests if the supplied object is equal to the current element.</source>
          <target state="translated">指定したオブジェクトが現在の要素と等しいかどうかをテストします。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an <ph id="ph3">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> が <ph id="ph3">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>Gets the next element below this element in the document tree.</source>
          <target state="translated">ドキュメント ツリーにおいてこの要素のすぐ下にある次の要素を取得します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> representing the first element contained underneath the current element, in source order.</source>
          <target state="translated">ソース ドキュメントの階層において、現在の要素の下位にある最初の要素を表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.FirstChild">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> to walk the document tree for an HTML document.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph>と共に<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph>を HTML ドキュメントに、ドキュメント ツリーをウォークします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Puts user input focus on the current element.</source>
          <target state="translated">ユーザーの入力フォーカスを現在の要素に設定します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">要素にフォーカスを設定とその要素にフォーカスが移動の両方のアクティブな要素になりますフォーカスを持つ要素がによって返されるなど、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph>プロパティの<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.Focus">
          <source>Any key strokes entered by a user after <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> has been called will be sent to that element.</source>
          <target state="translated">後にユーザーが入力した任意のキー ストローク<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph>が呼び出されたその要素に送信されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>Occurs when the element first receives user input focus.</source>
          <target state="translated">要素が初めてユーザーの入力フォーカスを得たときに発生します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> events again when the user switches back to your application.</source>
          <target state="translated">タスク バーまたは alt キーを押しながら TAB キーを使用して別のアプリケーションへの切り替えを受信する前にフォーカスがあった要素、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph>イベント再度ときにユーザーを切り替える、アプリケーションにします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>You cannot cancel the default behavior of this event.</source>
          <target state="translated">このイベントの既定の動作を取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>To remove focus from an element, call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.</source>
          <target state="translated">フォーカスを要素から削除するには、呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph>内から別の要素で、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event on an element will also occur on that element's parents and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph>その要素の親とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.Focusing">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">属性の名前。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>This argument is case-insensitive.</source>
          <target state="translated">この引数では、大文字と小文字が区別されません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>Retrieves the value of the named attribute on the element.</source>
          <target state="translated">要素の名前付き属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The value of this attribute on the element, as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated">要素のこの属性の値を、<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> の値として返します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>If the specified attribute does not exist on this element, returns an empty string.</source>
          <target state="translated">指定された属性がこの要素に存在しない場合は、空の文字列を返します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>An attribute in HTML is any valid name/value pair for that element.</source>
          <target state="translated">HTML 内の属性は、その要素のいずれかの有効な名前/値ペアです。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph2">`SRC`</ph> is a predefined attribute for the <ph id="ph3">`IMG`</ph> tag, for example, but not for the <ph id="ph4">`DIV`</ph> tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。<ph id="ph2">`SRC`</ph>の定義済み属性は、<ph id="ph3">`IMG`</ph>などのタグのではなく、<ph id="ph4">`DIV`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>を管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> および<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>小文字は区別されません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The following code example retrieves all of the <ph id="ph1">`META`</ph> tags within an HTML document, using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> to find the <ph id="ph3">`META`</ph> tag with the name <ph id="ph4">`Description`</ph>.</source>
          <target state="translated">次のコード例は、すべての取得、 <ph id="ph1">`META`</ph> HTML 内のタグを使用して文書化します。<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph>を検索する、<ph id="ph3">`META`</ph>名前を持つタグ<ph id="ph4">`Description`</ph>です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)">
          <source>The example requires that your application has a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">例では、アプリケーションがある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>The name of the tag whose <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects you wish to retrieve.</source>
          <target state="translated">取得する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> オブジェクトのタグの名前。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>Retrieves a collection of elements represented in HTML by the specified <bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> tag.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> タグで指定することで、HTML で表される要素のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph> containing all elements whose <bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> tag name is equal to <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>HTML<ept id="p1">&lt;/c&gt;</ept> タグ名が <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> と等しいすべての要素を含む <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElementCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetHashCode">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">特定の型のハッシュ関数として機能します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> のハッシュ コード。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>Occurs when the element has received user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを得たときに発生します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>You can neither cancel this event's default behavior, nor prevent it from bubbling.</source>
          <target state="translated">このイベントの既定の動作をキャンセルも、バブルを防止します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>To remove focus from an element, call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> on a different element from within the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph> event.</source>
          <target state="translated">フォーカスを要素から削除するには、呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph>内から別の要素で、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>Save the following HTML code into a file, and load the file into a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control in a Windows Forms project.</source>
          <target state="translated">ファイルに次の HTML コードを保存し、ファイルを読み込む、 <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> Windows フォーム プロジェクトで制御します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>The following code example prevents the next <ph id="ph1">`INPUT`</ph> element in the tab order from receiving user input focus if the previous element contains less than five characters.</source>
          <target state="translated">次のコード例は、次を防止<ph id="ph1">`INPUT`</ph>直前の要素には、5 つ未満の文字が含まれている場合、ユーザーの入力フォーカスを受け取らないタブ オーダー内の要素。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.GotFocus">
          <source>The example requires that the previously mentioned HTML file is loaded into an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">例では、前述の HTML ファイルがのインスタンスに読み込まれている必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>Gets or sets a label by which to identify the element.</source>
          <target state="translated">要素を識別するラベルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>The unique identifier for the element.</source>
          <target state="translated">この要素の固有の識別子。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> must be unique; you cannot have two elements with the same <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> inside of the same document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph> 一意である必要があります。同じ 2 つの要素を持てません<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Id%2A&gt;</ph>同じドキュメント内で。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Id">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to give the same identifier to a group of logically related elements.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph>論理的に関連する要素のグループに同じ識別子を指定するプロパティです。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Gets or sets the HTML markup underneath this element.</source>
          <target state="translated">この要素の下位にある HTML マークアップを取得または設定します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>The HTML markup that defines the child elements of the current element.</source>
          <target state="translated">現在の要素の子要素を定義する HTML マークアップ。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>There are several ways to add new elements to an existing HTML page, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> methods.</source>
          <target state="translated">いくつかの方法など、既存の HTML ページに新しい要素を追加する、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>は多くの場合、新しい要素で多くの属性またはスタイルを設定する必要があるときに、新しいコンテンツを追加する最も簡単な方法です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> differs from <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> in that <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will not include the HTML that represents the object you are calling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> 異なる<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>で<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>を呼び出しているオブジェクトを表す HTML は含まれません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> for more information about the difference between these two properties.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>これら 2 つのプロパティの違いの詳細についてはします。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> destroys any children previously appended to the element.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>要素に追加されるすべての子を破棄します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>If you retrieve an element from the DOM and then assign new HTML to its parents' <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.</source>
          <target state="translated">DOM から要素を取得し、その親に新しい HTML を割り当てる場合<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>プロパティ、その要素への参照は役に立たない、されプロパティとメソッドを呼び出すときは、その動作は未定義です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>For some elements, setting <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> is not a valid operation.</source>
          <target state="translated">設定のいくつかの要素の<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>有効な操作ではありません。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Some HTML tags have no closing tag, such as the <ph id="ph1">`IMG`</ph> tag, and therefore cannot contain nested elements.</source>
          <target state="translated">複数の HTML タグなし終了タグを持つ、ように、<ph id="ph1">`IMG`</ph>タグ、およびそのため、入れ子になった要素を含めることはできません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Some tags, such as the <ph id="ph1">`SCRIPT`</ph> tag, can only contain text content; setting <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will result in an error.</source>
          <target state="translated">などのいくつかのタグ、<ph id="ph1">`SCRIPT`</ph>タグ、テキスト コンテンツ; 設定を含めることができますのみ<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>エラーが発生します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>For both types of tags, the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph> property will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">両方の種類、タグの<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;</ph>が返される<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>However, you also cannot set <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> on <ph id="ph2">`TABLE`</ph> and <ph id="ph3">`TR`</ph> elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.</source>
          <target state="translated">ただし、設定することもできません<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>で<ph id="ph2">`TABLE`</ph>と<ph id="ph3">`TR`</ph>要素は、これらの要素への不正な HTML の割り当てとは、ドキュメントのレンダリングを壊れる可能性があります。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> or the <ph id="ph2">`insertRow`</ph> and <ph id="ph3">`insertCell`</ph> methods on the unmanaged <ph id="ph4">`IHTMLTable`</ph> interface to add rows and cells to a <ph id="ph5">`TABLE`</ph>.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>または<ph id="ph2">`insertRow`</ph>と<ph id="ph3">`insertCell`</ph>アンマネージ メソッド<ph id="ph4">`IHTMLTable`</ph>インターフェイスを追加する行や、行のセル、<ph id="ph5">`TABLE`</ph>です。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>If you need only to assign text to an element and not HTML markup, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> property instead.</source>
          <target state="translated">要素といない HTML マークアップにテキストを割り当てる場合にのみ必要がある場合、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>プロパティ代わりにします。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will destroy any text values previously assigned using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>.</source>
          <target state="translated">値を割り当てる<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>以前割り当てを使用して任意のテキスト値を破棄<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerHtml">
          <source>Creating child elements on this element is not allowed.</source>
          <target state="translated">この要素に子要素を作成することはできません。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>Gets or sets the text assigned to the element.</source>
          <target state="translated">要素に割り当てられたテキストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The element's text, absent any HTML markup.</source>
          <target state="translated">要素のテキスト。HTML マークアップは含まれません。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If the element contains child elements, only the text in those child elements will be preserved.</source>
          <target state="translated">要素に子要素がある場合、その子要素に含まれるテキストのみが保持されます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If you attempt to assign HTML to an element with <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">しようとする HTML を持つ要素に割り当てる<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>、HTML コードは、テキスト ファイル内で HTML を表示していた場合と同様に、ドキュメント内でリテラルとして表示します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>If you assign HTML to an element using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML 要素を使用して、割り当てた場合、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>プロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>を返しますのすべてのテキストを使用して HTML マークアップを削除します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> will destroy any child elements that belong to the element.</source>
          <target state="translated">値を割り当てる<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>要素に属しているすべての子要素が破棄されます。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The following code creates a new hyperlink using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>, and assigns text to the link using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph> property.</source>
          <target state="translated">次のコードの作成、ハイパーリンクを使用して新しい<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>、リンクを使用するテキストを割り当てると、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.InnerText">
          <source>The specified element cannot contain text (for example, an <bpt id="p1">&lt;c&gt;</bpt>IMG<ept id="p1">&lt;/c&gt;</ept> element).</source>
          <target state="translated">指定した要素に、テキストを含めることはできません (たとえば、<bpt id="p1">&lt;c&gt;</bpt>IMG<ept id="p1">&lt;/c&gt;</ept> 要素)。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Where to insert this element in relation to the current element.</source>
          <target state="translated">現在の要素を基準とした、この要素の挿入位置。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The new element to insert.</source>
          <target state="translated">挿入する新しい要素。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Insert a new element into the Document Object Model (DOM).</source>
          <target state="translated">新しい要素をドキュメント オブジェクト モデル (DOM) に挿入します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> that was just inserted.</source>
          <target state="translated">挿入された <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>If insertion failed, this will return <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">挿入が失敗した場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Do not call this method until after the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event on the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control has occurred.</source>
          <target state="translated">後までは、このメソッドを呼び出す必要はありません、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph>でイベントを<ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>コントロールが発生しました。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Calling this method before then can result in an exception, as the document will not have finished loading.</source>
          <target state="translated">その前にこのメソッドを呼び出すとすると、ドキュメントの読み込みが終了しないに、例外が発生することができます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Whether a value of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;</ph> is valid will depend on the type of the element.</source>
          <target state="translated">値かどうか<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;</ph>が有効では、要素の型によって異なります。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin&gt;</ph> is valid if the element is a <ph id="ph2">`DIV`</ph>, but not if it is a <ph id="ph3">`SCRIPT`</ph> or <ph id="ph4">`IMG`</ph> element, neither of which can contain child elements.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin&gt;</ph>場合は、要素が有効では、<ph id="ph2">`DIV`</ph>がない場合は、<ph id="ph3">`SCRIPT`</ph>または<ph id="ph4">`IMG`</ph>要素の子要素を含めることができます。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The following code example inserts a <ph id="ph1">`DIV`</ph> element into the top of every page that users view outside of the ADatum.com server.</source>
          <target state="translated">次のコード例の挿入、 <ph id="ph1">`DIV`</ph> ADatum.com サーバーの外部でのユーザーが表示されるすべてのページの上部に要素をします。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>The example requires that your form contains a <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control named <ph id="ph2">`WebBrowser1`</ph>.</source>
          <target state="translated">例では、フォームが含まれている必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph>という名前のコントロール<ph id="ph2">`WebBrowser1`</ph>です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)">
          <source>Your sample must also import the namespace <ph id="ph1">&lt;xref:System.Text.RegularExpressions&gt;</ph>.</source>
          <target state="translated">サンプルでは、名前空間をインポートする必要がありますも<ph id="ph1">&lt;xref:System.Text.RegularExpressions&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.HtmlElement">
          <source>Executes a method unique to the current element.</source>
          <target state="translated">現在の要素に固有のメソッドを実行します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">呼び出されるプロパティまたはメソッドの名前。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>Executes an unexposed method on the underlying DOM element of this element.</source>
          <target state="translated">この要素の基になる DOM 要素に対して非公開メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>The element returned by this method, represented as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">このメソッドで返される要素を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>Use this version of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> to execute unexposed methods that take no arguments.</source>
          <target state="translated">このバージョンの使用<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>引数を受け取らない非公開メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>.</source>
          <target state="translated">例については、「<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">呼び出されるプロパティまたはメソッドの名前。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>A list of parameters to pass.</source>
          <target state="translated">渡されるパラメーターのリスト。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>Executes a function defined in the current HTML page by a scripting language.</source>
          <target state="translated">現在の HTML ページにスクリプト言語で定義されている関数を実行します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The element returned by the function, represented as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">関数によって返される要素を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>All arguments supplied to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> will be converted to Win32 <ph id="ph2">`VARIANT`</ph> data types before they are passed to the named scripting function.</source>
          <target state="translated">すべての引数を指定する<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph>Win32 に変換される<ph id="ph2">`VARIANT`</ph>データ型、名前付きスクリプト関数に渡される前にします。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])">
          <source>The following code example gets a <ph id="ph1">`TABLE`</ph> called <ph id="ph2">`dataTable`</ph> and uses the unexposed <ph id="ph3">`moveRow`</ph> method to move a row from the end of the table to the beginning.</source>
          <target state="translated">次のコード例を取得、<ph id="ph1">`TABLE`</ph>と呼ばれる<ph id="ph2">`dataTable`</ph>、非公開を使用して<ph id="ph3">`moveRow`</ph>テーブルの末尾から行を先頭に移動します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>Occurs when the user presses a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを押したときに発生します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> occurs before <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which in turns occurs before <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> 前に発生<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>、それに続いて発生する前に<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyDown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>Occurs when the user presses and releases a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを押して離したときに発生します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> occurs after <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph> and before <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> 後に発生<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>前に<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyPress">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>Occurs when the user releases a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを離したときに発生します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> occurs after <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>, which occurs after <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> 後に発生<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</ph>、後に発生する<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.KeyUp">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>Occurs when the element is losing user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを失うときに発生します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LosingFocus">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LosingFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>Occurs when the element has lost user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを失ったときに発生します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>An element will no longer receive key stroke events after <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph> method on that element.</source>
          <target state="translated">要素の後に、キー ストローク イベントを受信できなく<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>指定されるまで、フォーカスもう一度、ページを選択すると、ユーザーまたはアプリケーションの呼び出し元のいずれかが発生した、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;</ph>その要素のメソッドです。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event on an element will also occur on that element's parents and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>その要素の親とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.LostFocus">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>Occurs when the user presses a mouse button.</source>
          <target state="translated">ユーザーがマウス ボタンを押したときに発生します。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseDown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>Occurs when the user first moves the mouse cursor over the current element.</source>
          <target state="translated">ユーザーがマウス カーソルを現在の要素上に初めて移動させたときに発生します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseEnter">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>Occurs when the user moves the mouse cursor off of the current element.</source>
          <target state="translated">ユーザーがマウス カーソルを現在の要素から移動させたときに発生します。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseLeave">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>Occurs when the user moves the mouse cursor across the element.</source>
          <target state="translated">ユーザーがマウス カーソルを要素上に通過させたときに発生します。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseMove">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseMove&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>Occurs when the mouse cursor enters the bounds of the element.</source>
          <target state="translated">マウス カーソルが要素の境界内に入ったときに発生します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseOver">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseOver&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>Occurs when the user releases a mouse button.</source>
          <target state="translated">ユーザーがマウス ボタンを離したときに発生します。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>You can cancel the default action for a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">既定のアクションを取り消すことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph>イベントを設定して要素を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event on an element will also occur on that element's parent elements and on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> class itself, unless you set the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> class to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph>その要素の親要素とも要素のイベントが発生、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>設定していない場合それ自体には、クラス、<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph>のプロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph>クラスを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> named <ph id="ph2">`HtmlElement1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>という<ph id="ph2">`HtmlElement1`</ph>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.HtmlElement.MouseUp">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.MouseUp&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>Gets or sets the name of the element.</source>
          <target state="translated">要素の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the element's name.</source>
          <target state="translated">要素の名前を表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> property to retrieve elements from a document using the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph>を使用してドキュメントから要素を取得するプロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;</ph>メソッドを<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;</ph>プロパティ<ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Name">
          <source>When applied to <ph id="ph1">`INPUT`</ph> elements, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph> defines the variable name for that element's data when its form is submitted to the server.</source>
          <target state="translated">適用すると<ph id="ph1">`INPUT`</ph>要素、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;</ph>そのフォームがサーバーに送信されるときに、その要素のデータの変数名を定義します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>Gets the next element at the same level as this element in the document tree.</source>
          <target state="translated">ドキュメント ツリーにおいてこの要素と同じレベルにある次の要素を取得します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> representing the element to the right of the current element.</source>
          <target state="translated">現在の要素の右側にある要素を表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.NextSibling">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph> to walk the document tree for an HTML element.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;</ph>と共に<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;</ph>を HTML 要素、ドキュメント ツリーをウォークします。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>Gets the element from which <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> is calculated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> を計算するときの基準となる要素を取得します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>The element from which the offsets are calculated.</source>
          <target state="translated">オフセットを計算するときの基準となる要素。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> will be the first relatively or absolutely positioned element in which the current element is nested.</source>
          <target state="translated">要素の親、または要素の階層に含まれる別の要素が、相対位置または絶対位置を使用している場合、<ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> は、相対位置または絶対位置を使用している要素のうち、現在の要素が入れ子になっている最初の要素です。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>If none of the elements above the current element are absolutely or relatively positioned, <ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph> will be the <bpt id="p1">&lt;c&gt;</bpt>BODY<ept id="p1">&lt;/c&gt;</ept> tag of the document.</source>
          <target state="translated">現在の要素の上位要素なしは絶対的または相対的にある場合、<ph id="ph1">&lt;see langword="OffsetParent" /&gt;</ph>なります、<bpt id="p1">&lt;c&gt;</bpt>本文<ept id="p1">&lt;/c&gt;</ept>ドキュメントのタグ。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます。 既定のフローは次の位置です。相対位置で親; に対して、固定量でオフセットが、要素絶対位置とする要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>When a document's elements use relative or absolute positioning, you can use <ph id="ph1">`OffsetParent`</ph> to calculate an element's coordinate position in the client area.</source>
          <target state="translated">ドキュメントの要素は、相対位置または絶対位置を使用して、ときに行うこともできます<ph id="ph1">`OffsetParent`</ph>クライアント領域内の要素の座標位置を計算します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">要素の詳細については、HTML での配置を参照してください<bpt id="p1">[</bpt>要素の配置に関する<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetParent">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> differ for <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> and <ph id="ph5">`span3`</ph>:</source>
          <target state="translated">次のコード例に示す方法<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph>の異なる<ph id="ph3">`span1`</ph>、<ph id="ph4">`span2`</ph>と<ph id="ph5">`span3`</ph>:</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Gets the location of an element relative to its parent.</source>
          <target state="translated">親を基準とした要素の相対的な位置を取得します。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.</source>
          <target state="translated">親を基準とした、要素の相対的な X および Y 座標位置、幅、および高さ。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>If an element's parent is relatively or absolutely positioned, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> will return the offset of the parent element.</source>
          <target state="translated">要素の親が相対位置または絶対位置を使用している場合、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> は親要素のオフセットを返します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>If the element itself is relatively positioned with respect to its parent, <ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> will return the offset from its parent.</source>
          <target state="translated">要素自体が親を基準とした相対位置を使用している場合、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /&gt;</ph> はその親からのオフセットを返します。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Elements can be positioned on an HTML page in one of three ways:</source>
          <target state="translated">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Default flow positioning.</source>
          <target state="translated">既定のフローを配置します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Relative positioning, in which the element is offset by a fixed amount relative to its parent.</source>
          <target state="translated">相対位置でその親の基準とした、固定量で要素のオフセットをします。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">絶対位置を要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">要素の詳細については、HTML での配置を参照してください<bpt id="p1">[</bpt>要素の配置に関する<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OffsetRectangle">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph> differ for <ph id="ph3">`span1`</ph>, <ph id="ph4">`span2`</ph> and <ph id="ph5">`span3`</ph>:</source>
          <target state="translated">次のコード例に示す方法<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OffsetParent%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A&gt;</ph>の異なる<ph id="ph3">`span1`</ph>、<ph id="ph4">`span2`</ph>と<ph id="ph5">`span3`</ph>:</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">最初の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">第 2 の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>Compares two elements for equality.</source>
          <target state="translated">2 つの要素が等しいかどうかを比較します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if both parameters are <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or if both elements have the same underlying COM interface; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">両方のパラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> の場合、または、基になる COM インターフェイスが両方の要素で同じ場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equality operator tests the <ph id="ph1">`IUnknown`</ph> pointers of the underlying COM objects wrapped by the supplied <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> classes.</source>
          <target state="translated">等値演算子のテスト、<ph id="ph1">`IUnknown`</ph>基になるに指定されたによってラップされた COM オブジェクトのポインター<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法は、します。 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">最初の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>.</source>
          <target state="translated">第 2 の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> objects for inequality.</source>
          <target state="translated">2 つの <ph id="ph1">&lt;see cref="T:System.Windows.Forms.HtmlElement" /&gt;</ph> オブジェクトが等しくないかどうかを比較します。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> is only one element is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, or the two objects are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一方の要素だけが <ph id="ph2">&lt;see langword="null" /&gt;</ph> の場合、または 2 つのオブジェクトが等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)">
          <source>The equivalent method for this operator is the negation of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">この演算子を同等の方法の否定であります。 <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Gets or sets the current element's HTML code.</source>
          <target state="translated">現在の要素の HTML コードを取得または設定します。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>The HTML code for the current element and its children.</source>
          <target state="translated">現在の要素とその子の HTML コード。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Whereas <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return all HTML contained in the current element excluding the current element's surrounding tags, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> includes the current element's tag as well as the HTML that tag contains, for example:</source>
          <target state="translated">一方<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>現在の要素の周囲のタグを除く、現在の要素に含まれるすべての HTML を返す<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>HTML タグが含まれている例ができるだけでなく、現在の要素のタグが含まれています。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>In this example, calling <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph> on <ph id="ph2">`div2`</ph> will return:</source>
          <target state="translated">この例では呼び出し<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>で<ph id="ph2">`div2`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> will return:</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterHtml">
          <source>If you assign a new value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.</source>
          <target state="translated">新しい値を割り当てる場合<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;</ph>、現在の要素の参照が無効になり、名前が反映されません以外の場合は HTML のプロパティと子のコンテンツが割り当てられました。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>Gets or sets the current element's text.</source>
          <target state="translated">現在の要素のテキストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>The text inside the current element, and in the element's children.</source>
          <target state="translated">現在の要素、およびその要素の子に含まれるテキスト。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>If you attempt to assign HTML to an element with <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">しようとする HTML を持つ要素に割り当てる<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>、HTML コードは、テキスト ファイル内で HTML を表示していた場合と同様に、ドキュメント内でリテラルとして表示します。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>If you assign HTML to an element using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML 要素を使用して、割り当てた場合、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph>プロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>を返しますのすべてのテキストを使用して HTML マークアップを削除します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>Assigning a value to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph> will destroy any child elements that belong to the element.</source>
          <target state="translated">値を割り当てる<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.OuterText%2A&gt;</ph>要素に属しているすべての子要素が破棄されます。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.OuterText">
          <source>You cannot set text outside of this element.</source>
          <target state="translated">この要素外のテキストを設定することはできません。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>Gets the current element's parent element.</source>
          <target state="translated">現在の要素の親要素を取得します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The element above the current element in the HTML document's hierarchy.</source>
          <target state="translated">HTML ドキュメントの階層で現在の要素の上位にある要素。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property enables discovery of an element's context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph>プロパティ要素のコンテキストの探索を有効にします。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>It is most useful inside of event handlers such as <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>, which can fire for any element anywhere in the document's object hierarchy.</source>
          <target state="translated">イベント ハンドラー内で最も役に立つよう<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;</ph>ドキュメントのオブジェクト階層の任意の場所の任意の要素が起動することができます。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property of the HTML element (the top of an HTML document) points back to itself.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> HTML 要素 (HTML ドキュメントの上部) のプロパティを指す自体です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the <ph id="ph2">`Parent`</ph> property, or else your code may execute an infinite loop.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph>、ループ内、ループのブレークの条件が、現在の要素の型との種類を比較することを確認します、<ph id="ph2">`Parent`</ph>プロパティ、またはそうしないと、コードが無限ループを実行できます。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Parent">
          <source>The following code example finds all of the <ph id="ph1">`IMG`</ph> tags in a document, and uses the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph> property to test whether the <ph id="ph3">`IMG`</ph> is hyperlinked to another page; if it is, the code assigns the URL to the <ph id="ph4">`ALT`</ph> attribute of the <ph id="ph5">`IMG`</ph> tag, so that users can mouse over the image to see where it will take them.</source>
          <target state="translated">次のコード例は、のすべてを検索、 <ph id="ph1">`IMG`</ph> 、ドキュメント内にタグを使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;</ph>プロパティをテストするかどうか、 <ph id="ph3">`IMG`</ph> ; の別のページへのハイパーリンクがへの URL を代入である場合、 <ph id="ph4">`ALT`</ph> の属性<ph id="ph5">`IMG`</ph>タグ、ユーザー マウス ポインターを置くことが実行されますを表示できるようにします。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>The name of the event to raise.</source>
          <target state="translated">発生させるイベントの名前。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>Causes the named event to call all registered event handlers.</source>
          <target state="translated">指定したイベントを発生させて、すべての登録されたイベント ハンドラーを呼び出します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>This method is used to access HTML Document Object Model (DOM) events.</source>
          <target state="translated">このメソッドは HTML ドキュメント オブジェクト モデル (DOM) のイベントにアクセスに使用されます。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>It directly calls the <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept> method.</source>
          <target state="translated">直接呼び出し、 <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)">
          <source>For more information about how to use the DOM through the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> class, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>.</source>
          <target state="translated">を通じて DOM を使用する方法についての詳細、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>クラスを参照してください<bpt id="p1">[</bpt>、管理されている HTML ドキュメント オブジェクト モデルでのアクセスの非公開メンバー<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>Removes focus from the current element, if that element has focus.</source>
          <target state="translated">現在の要素にフォーカスがある場合、そのフォーカスを要素から削除します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>Calling this method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph> event for the element.</source>
          <target state="translated">このメソッドの呼び出しを生成、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;</ph>要素のイベントです。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.RemoveFocus">
          <source>When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.</source>
          <target state="translated">このメソッドを使用して要素からフォーカスをオフにした場合は、タブ オーダーの次の要素ではない要素を含むドキュメントに付与されます。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the top of the object will be displayed at the top of the window.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合、オブジェクトの最上部がウィンドウの最上部に表示されます。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the bottom of the object will be displayed at the bottom of the window.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、オブジェクトの最下部がウィンドウの最下部に表示されます。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.</source>
          <target state="translated">この要素の最上端または最下端がドキュメントのウィンドウに位置合わせされるまで、この要素を含むドキュメントをスクロールします。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)">
          <source>The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.</source>
          <target state="translated">次のコード例では、名前を使用して要素を検索し、要素の先頭が表示されるページの上部に位置合わせされるため、ページをスクロールします。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>Gets or sets the distance between the edge of the element and the left edge of its content.</source>
          <target state="translated">要素の端とその内容の左端との距離を取得または設定します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>The distance, in pixels, between the left edge of the element and the left edge of its content.</source>
          <target state="translated">要素の左端とその内容の左端とのピクセル単位の距離。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollLeft">
          <source>The full dimensions of the scroll area are available using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">`ScrollLeft`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">使用可能なを使用して、スクロール領域の全サイズは<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>です。<ph id="ph2">`ScrollLeft`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph>はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の 2 つのプロパティです。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>Gets the dimensions of an element's scrollable region.</source>
          <target state="translated">要素のスクロール可能な領域の寸法を取得します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>The size and coordinate location of the scrollable area of an element.</source>
          <target state="translated">要素のスクロール可能な領域のサイズと座標位置。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.</source>
          <target state="translated">要素に、要素のオーバーフロー スタイルのレンダリングのスクロール バーを禁止する場合を除きはそのコンテンツがその次元のサイズを超えた場合スクロール可能な領域があります。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.</source>
          <target state="translated">スクロール領域のサイズを直接変更することはできませんが、スクロール領域の端と、要素の端の間の距離を変更することができます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollRectangle">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph> properties to achieve this.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;</ph>これを実現するプロパティです。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>Gets or sets the distance between the edge of the element and the top edge of its content.</source>
          <target state="translated">要素の端とその内容の上端との距離を取得または設定します。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>The distance, in pixels, between the top edge of the element and the top edge of its content.</source>
          <target state="translated">要素の上端とその内容の上端とのピクセル単位の距離。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.ScrollTop">
          <source>The full dimensions of the scroll area are available using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph> and <ph id="ph3">`ScrollTop`</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">使用可能なを使用して、スクロール領域の全サイズは<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;</ph>です。<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;</ph>と<ph id="ph3">`ScrollTop`</ph>はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の 2 つのプロパティです。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The name of the attribute to set.</source>
          <target state="translated">設定する属性名です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The new value of this attribute.</source>
          <target state="translated">この属性の新しい値。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>Sets the value of the named attribute on the element.</source>
          <target state="translated">要素の名前付き属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>An attribute in HTML is any valid name-value pair for that element.</source>
          <target state="translated">HTML 内の属性は、その要素のいずれかの有効な名前と値ペアです。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph2">`SRC`</ph> is a predefined attribute for the <ph id="ph3">`IMG`</ph> tag, for example, but not for the <ph id="ph4">`DIV`</ph> tag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> 要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。<ph id="ph2">`SRC`</ph>の定義済み属性は、<ph id="ph3">`IMG`</ph>などのタグのではなく、<ph id="ph4">`DIV`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>を管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作します。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`attributeName`</ph> is not a defined attribute on an element, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> will define it on the element as a new attribute.</source>
          <target state="translated">場合<ph id="ph1">`attributeName`</ph>要素で定義された属性ではない<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>を新しい属性として要素を定義します。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> are case-insensitive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> および<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>小文字は区別されません。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>To set the <ph id="ph1">`class`</ph> attribute on an <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> , you must refer to the attribute as <ph id="ph3">`className`</ph> when specifying the first argument to <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph></source>
          <target state="translated">設定する、<ph id="ph1">`class`</ph>属性を<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>、として属性を参照する必要があります<ph id="ph3">`className`</ph>1 番目の引数を指定する場合 <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)">
          <source>The following code example adds a new <ph id="ph1">`IMG`</ph> element to the current document, using <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph> to set the <ph id="ph3">`SRC`</ph> attribute for the image.</source>
          <target state="translated">次のコード例は、新しく追加<ph id="ph1">`IMG`</ph>を現在の要素を使用して文書化します。<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>を設定する、<ph id="ph3">`SRC`</ph>イメージの属性です。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>Gets or sets a semicolon-delimited list of styles for the current element.</source>
          <target state="translated">現在の要素のスタイルのセミコロン区切りリストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>A string consisting of all of the element's styles</source>
          <target state="translated">要素のすべてのスタイルを記述した文字列。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) を使ってスタイル World Wide Web コンソーシアムをカスケード スタイル シートの仕様で定義されている要素の表示を制御します。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>Styles in the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Style%2A&gt;</ph> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:</source>
          <target state="translated">スタイル、<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.Style%2A&gt;</ph>プロパティは、コロンで区切られた名前と値のペアの形式、次のように、セミコロンで区切られた各ペアを取る。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>To set the font for a <ph id="ph1">`DIV`</ph> element to 14-point Times New Roman bold, for example, you would assign the following string:</source>
          <target state="translated">フォントを設定する、 <ph id="ph1">`DIV`</ph> 14 ポイント Times New roman bold 要素、たとえば、割り当てると、次の文字列。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.Style">
          <source>For a full list of all available styles in the HTML DOM, see <bpt id="p1">[</bpt>STYLE Attribute<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>.</source>
          <target state="translated">HTML DOM 内のすべての利用可能なスタイルの一覧については、次を参照してください。<bpt id="p1">[</bpt>スタイル属性<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>Gets or sets the location of this element in the tab order.</source>
          <target state="translated">この要素のタブ オーダーにおける位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>The numeric index of the element in the tab order.</source>
          <target state="translated">タブ オーダーにおける要素の数値インデックス。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> determines which element in an HTML document will next receive focus when the user presses the TAB key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> HTML ドキュメント内のどの要素は、ユーザーが TAB キーを押すとフォーカス次を決定します。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>By default, the only elements included in the tab order are <ph id="ph1">`INPUT`</ph> elements, the <ph id="ph2">`SELECT`</ph> control, and any element whose <ph id="ph3">`contentEditable`</ph> property is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">タブ オーダーに含まれる唯一の要素は、既定では、 <ph id="ph1">`INPUT`</ph> 、要素、<ph id="ph2">`SELECT`</ph>制御、および任意の要素が<ph id="ph3">`contentEditable`</ph>プロパティに設定されている<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>You can include any HTML element in the tab order, such as a <ph id="ph1">`DIV`</ph>, by assigning it an explicit <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>.</source>
          <target state="translated">タブ オーダー内など任意の HTML 要素を含めることができます、 <ph id="ph1">`DIV`</ph>、明示的な代入することで<ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TabIndex">
          <source>Valid values for <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph> range from -32767 to 32767.</source>
          <target state="translated">有効な値<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TabIndex%2A&gt;</ph>-32767 から 32767 までの範囲です。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Gets the name of the HTML tag.</source>
          <target state="translated">HTML タグの名前を取得します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>The name used to create this element using HTML markup.</source>
          <target state="translated">HTML マークアップを使用してこの要素を作成するために使用する名前。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the <ph id="ph1">`HREF`</ph> attribute on the <ph id="ph2">`A`</ph> element, or the <ph id="ph3">`Submit`</ph> method on <ph id="ph4">`FORM`</ph>.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル内の要素は、属性、プロパティ、およびそれらの要素に固有のメソッドがあります。など、<ph id="ph1">`HREF`</ph>属性を<ph id="ph2">`A`</ph>要素、または<ph id="ph3">`Submit`</ph>メソッド<ph id="ph4">`FORM`</ph>です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;</ph>可能性のある任意の型の要素があるし、型固有の操作を実行する必要があります。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.HtmlElement.TagName">
          <source>The following code example finds all of the <ph id="ph1">`IMG`</ph> tags in a document, and uses the <ph id="ph2">`TagName`</ph> property to test whether the <ph id="ph3">`IMG`</ph> is hyperlinked to another page; if it is, the code assigns the URL to the <ph id="ph4">`ALT`</ph> attribute of the <ph id="ph5">`IMG`</ph> tag, so that users can mouse over the image to see where it will take them.</source>
          <target state="translated">次のコード例は、のすべてを検索、 <ph id="ph1">`IMG`</ph> 、ドキュメント内にタグを使用して、<ph id="ph2">`TagName`</ph>プロパティをテストするかどうか、 <ph id="ph3">`IMG`</ph> ; の別のページへのハイパーリンクがへの URL を代入である場合、 <ph id="ph4">`ALT`</ph> の属性<ph id="ph5">`IMG`</ph>タグ、ユーザー マウス ポインターを置くことが実行されますを表示できるようにします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>