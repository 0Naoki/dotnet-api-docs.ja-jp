<Type Name="HtmlElement" FullName="System.Windows.Forms.HtmlElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24f68fe9746a2bd5695f7d4beb4bfc865d8bd0bc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlElement sealed" />
  <TypeSignature Language="F#" Value="type HtmlElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c3d5-101">Web ページ内の HTML 要素を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c3d5-101">Represents an HTML element inside of a Web page.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-102"><xref:System.Windows.Forms.HtmlElement> など、HTML ドキュメント内の要素の可能な型を表す`BODY`、 `TABLE`、および`FORM`、その他。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-102"><xref:System.Windows.Forms.HtmlElement> represents any possible type of element in an HTML document, such as `BODY`, `TABLE`, and `FORM`, among others.</span></span> <span data-ttu-id="0c3d5-103">クラスは、すべての要素を検索する最も一般的なプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-103">The class exposes the most common properties you can expect to find on all elements.</span></span>  
  
 <span data-ttu-id="0c3d5-104">ほとんどの要素を持つことができます*子要素*: その下に配置されているその他の HTML 要素です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-104">Most elements can have *child elements*: other HTML elements that are placed underneath them.</span></span> <span data-ttu-id="0c3d5-105">使用して、<xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>プロパティを指定された要素がある子かどうかをテストして、<xref:System.Windows.Forms.HtmlElement.Children%2A>それらを反復するコレクション。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-105">Use the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property to test whether a given element has children, and the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection to iterate through them.</span></span> <span data-ttu-id="0c3d5-106"><xref:System.Windows.Forms.HtmlElement.Parent%2A>プロパティから返される、<xref:System.Windows.Forms.HtmlElement>の現在の要素が入れ子になったのです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-106">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property returns the <xref:System.Windows.Forms.HtmlElement> in which the current element is nested.</span></span>  
  
 <span data-ttu-id="0c3d5-107">多くの場合、属性、プロパティ、およびによって直接公開されていない基になる要素のメソッドへのアクセスを必要する<xref:System.Windows.Forms.HtmlElement>など、`SRC`属性を`IMG`要素または`Submit`メソッドを`FORM`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-107">You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by <xref:System.Windows.Forms.HtmlElement>, such as the `SRC` attribute on an `IMG` element or the `Submit` method on a `FORM`.</span></span> <span data-ttu-id="0c3d5-108"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>と<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を取得し、すべての属性またはの特定の要素のプロパティを変更するメソッドを使用するときに<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>管理対象のドキュメント オブジェクト モデル (DOM) で公開されていないすべてのメソッドへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-108">The <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> methods enable you to retrieve and alter any attribute or property on a specific element, while <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> provides access to any methods not exposed in the managed Document Object Model (DOM).</span></span> <span data-ttu-id="0c3d5-109">場合は、アプリケーションはアンマネージ コードのアクセス許可が、アクセスすることも持つ非公開のプロパティおよびメソッド、<xref:System.Windows.Forms.HtmlElement.DomElement%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-109">If your application has unmanaged code permission, you can also access unexposed properties and methods with the <xref:System.Windows.Forms.HtmlElement.DomElement%2A> attribute.</span></span>  
  
 <span data-ttu-id="0c3d5-110">使用して、<xref:System.Windows.Forms.HtmlElement.TagName%2A>要素が特定の種類があるかどうかをテストするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-110">Use the <xref:System.Windows.Forms.HtmlElement.TagName%2A> property to test whether an element is of a specific type.</span></span>  
  
 <span data-ttu-id="0c3d5-111">任意の HTML ドキュメントは、実行時に変更できます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-111">Any HTML document can be modified at run time.</span></span> <span data-ttu-id="0c3d5-112">新規に作成することができます<xref:System.Windows.Forms.HtmlElement>オブジェクトと、<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>メソッドの<xref:System.Windows.Forms.HtmlDocument>、要素を使用して別に追加し、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>または<xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-112">You can create new <xref:System.Windows.Forms.HtmlElement> objects with the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method of <xref:System.Windows.Forms.HtmlDocument>, and add them to another element using the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods.</span></span> <span data-ttu-id="0c3d5-113">また要素として HTML タグを作成し、既存の要素に割り当てることができます<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-113">You can also create the elements as HTML tags and assign them to an existing element's <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-114">次のコード例は、任意の HTML ドキュメントをチェックし、インデント、HTML 要素を記述する文字列を取得する方法を示しています。 と深さを示すために使用するレベルの番号には、要素が入れ子になった、ドキュメントにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-114">The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</span></span> <span data-ttu-id="0c3d5-115">このコード例では、する必要があります、アプリケーション ホスト、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-115">This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection All" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.All" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property All As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ All { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.All : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlElement.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-116">現在の要素の下位にあるすべての要素の <see cref="T:System.Windows.Forms.HtmlElementCollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-116">Gets an <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all elements underneath the current element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-117">現在の要素の直接的または間接的な子であるすべての要素のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-117">A collection of all elements that are direct or indirect children of the current element.</span>
          </span>
          <span data-ttu-id="0c3d5-118">現在の要素がある場合、<c>テーブル</c>など、<see cref="P:System.Windows.Forms.HtmlElement.All" />が返されますすべて<c>TH</c>、 <c>TR</c>、および<c>TD</c>テーブル内の要素その他の要素など<c>DIV</c>と<c>スパン</c>セル内に含まれる要素です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-118">If the current element is a <c>TABLE</c>, for example, <see cref="P:System.Windows.Forms.HtmlElement.All" /> will return every <c>TH</c>, <c>TR</c>, and <c>TD</c> element within the table, as well as any other elements, such as <c>DIV</c> and <c>SPAN</c> elements, contained within the cells.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-119">現在の要素とその直接の親を持つ要素のみにアクセスするには、使用、<xref:System.Windows.Forms.HtmlElement.Children%2A>コレクション代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-119">To access only those elements which have the current element as their direct parent, use the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection instead.</span></span>  
  
 <span data-ttu-id="0c3d5-120">このコレクション内の要素はないソースの順序で返さとは限りません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-120">Elements in this collection will not necessarily be returned in source order.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.Children" />
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement AppendChild (System.Windows.Forms.HtmlElement newElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement AppendChild(class System.Windows.Forms.HtmlElement newElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendChild (newElement As HtmlElement) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ AppendChild(System::Windows::Forms::HtmlElement ^ newElement);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : System.Windows.Forms.HtmlElement -&gt; System.Windows.Forms.HtmlElement" Usage="htmlElement.AppendChild newElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newElement" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="newElement">
          <span data-ttu-id="0c3d5-121">ツリーのこの位置に追加する <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-121">The <see cref="T:System.Windows.Forms.HtmlElement" /> to append to this location in the tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-122">要素を別の要素のサブツリーに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-122">Adds an element to another element's subtree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-123">ツリーに追加された後の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-123">The element after it has been added to the tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-124">HTML ドキュメント オブジェクト モデル (DOM) では、さまざまな方法で HTML ファイルの実行時の内容を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-124">The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.</span></span> <span data-ttu-id="0c3d5-125">使用して<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>または要素をページに移動する既存のドキュメントに新しい要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-125">Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> to add new elements to an existing document, or to move an element on the page.</span></span>  
  
 <span data-ttu-id="0c3d5-126">要素は既に親されて、別の要素に要素を追加することは自動的に削除その要素以前の親から。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-126">If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.</span></span>  
  
 <span data-ttu-id="0c3d5-127">使用して実行時にドキュメントに対して行われたすべての追加<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>メソッドを呼び出すときは、<xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>メソッドを<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-127">Any additions made to a document at run-time using <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> will not be persisted when you call the <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> method on the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-128">次のコード例では、使用して新しいハイパーリンクを作成、<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>メソッドし、それを終了する追加のページを使用して、`AppendChild`上、`BODY`要素。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-128">The following code example creates a new hyperlink using the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method and adds it to end of a page using `AppendChild` on the `BODY` element.</span></span> <span data-ttu-id="0c3d5-129">例では、アプリケーションが含まれている必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-129">The example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.CreateElement(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.AttachEventHandler : string * EventHandler -&gt; unit" Usage="htmlElement.AttachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="0c3d5-130">処理するイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-130">The name of the event you want to handle.</span>
          </span>
        </param>
        <param name="eventHandler">
          <span data-ttu-id="0c3d5-131">イベントを処理するマネージド コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-131">The managed code that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-132">HTML DOM の指定したイベントにイベント ハンドラーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-132">Adds an event handler for a named event on the HTML Document Object Model (DOM).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-133">管理対象のドキュメント オブジェクト モデル (DOM) は、イベントの選択数のみを公開します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-133">The Managed Document Object Model (DOM) exposes only a select number of events.</span></span> <span data-ttu-id="0c3d5-134">非公開のイベントのほとんどが特定の種類の要素の定義のみなど、`submit`でのみ有効であるイベント`FORM`要素。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-134">Most of the unexposed events are only defined for specific types of elements; such as the `submit` event, which is valid only on `FORM` elements.</span></span> <span data-ttu-id="0c3d5-135">使用して<xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>これら非公開のイベントにイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-135">Use <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> to add an event handler to these unexposed events.</span></span>  
  
 <span data-ttu-id="0c3d5-136">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトのいずれかのイベントをアタッチする必要がありますできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-136">You should not attach an event to the document or one of its objects until the document has completed loading.</span></span> <span data-ttu-id="0c3d5-137">できるだけ早くこのメソッドを呼び出す必要がありますが、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>のイベント、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-137">The earliest you should call this method is in the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
 <span data-ttu-id="0c3d5-138">使用可能なアンマネージ イベントの詳細については、次を参照してください[、管理されている HTML ドキュメント オブジェクト モデルでのへのアクセスの非公開メンバー](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)と IHTMLElement インターフェイス: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876)、 [。IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877)、 [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878)、 [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879)です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-138">For more information about the available unmanaged events, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md) and the IHTMLElement interfaces: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHaveChildren">
      <MemberSignature Language="C#" Value="public bool CanHaveChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHaveChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.CanHaveChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanHaveChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHaveChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanHaveChildren : bool" Usage="System.Windows.Forms.HtmlElement.CanHaveChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-139">この要素が子要素を持つことができるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-139">Gets a value indicating whether this element can have child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-140">要素が子要素を持つことができる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-140">
              <see langword="true" /> if element can have child elements; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-141">一部の要素など`IMG`と`SCRIPT`子を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-141">Some elements, such as `IMG` and `SCRIPT`, cannot have any children.</span></span> <span data-ttu-id="0c3d5-142">呼び出す前に、このプロパティを使用して<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>または<xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>任意の要素にします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-142">Use this property before you call <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> on an arbitrary element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-143">次のコード例のハンドル、<xref:System.Windows.Forms.HtmlElement.Click>でイベントを<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-143">The following code example handles the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="0c3d5-144">要素が選択されていない、マウス クリックを使用して場合、コードに割り当てられます要素という名前のプライベート クラス変数`MoveElement`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-144">If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named `MoveElement`.</span></span> <span data-ttu-id="0c3d5-145">要素を選択した場合、コードは、クリックしてされただけの要素に追加しようとします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-145">If an element was selected, the code attempts to append it to the element that was just clicked.</span></span> <span data-ttu-id="0c3d5-146">このコード例では、する必要があります、アプリケーション ホスト、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`、既にあることとのイベント ハンドラーを追加、<xref:System.Windows.Forms.HtmlElement.Click>でイベントを<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-146">This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have already added an event handler for the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlElement#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElementCollection ^ Children { System::Windows::Forms::HtmlElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Forms.HtmlElementCollection" Usage="System.Windows.Forms.HtmlElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-147">現在の要素のすべての子の <see cref="T:System.Windows.Forms.HtmlElementCollection" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-147">Gets an <see cref="T:System.Windows.Forms.HtmlElementCollection" /> of all children of the current element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-148">現在の要素を親とするすべての <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-148">A collection of all <see cref="T:System.Windows.Forms.HtmlElement" /> objects that have the current element as a parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-149">下にある場合は、他の HTML 要素の HTML ファイル内で要素の多くができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-149">Many of the elements inside of an HTML file can have other HTML elements underneath them.</span></span> <span data-ttu-id="0c3d5-150"><xref:System.Windows.Forms.HtmlElement.Children%2A>コレクションは、ドキュメントのツリー構造を探索するための簡単なメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-150">The <xref:System.Windows.Forms.HtmlElement.Children%2A> collection provides a simple mechanism for exploring the tree structure of a document.</span></span>  
  
 <span data-ttu-id="0c3d5-151"><xref:System.Windows.Forms.HtmlElement.Children%2A> 要素の直接の親は、現在の要素を公開するだけです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-151"><xref:System.Windows.Forms.HtmlElement.Children%2A> only exposes elements whose direct parent is the current element.</span></span> <span data-ttu-id="0c3d5-152">ある場合、<xref:System.Windows.Forms.HtmlElement>の`TABLE`要素、<xref:System.Windows.Forms.HtmlElement.Children%2A>が提供するすべての`TR`(行) の要素の内側、`TABLE`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-152">If you have an <xref:System.Windows.Forms.HtmlElement> for a `TABLE` element, <xref:System.Windows.Forms.HtmlElement.Children%2A> will give you all of the `TR` (row) elements inside of the `TABLE`.</span></span> <span data-ttu-id="0c3d5-153">取得する、 `TD` (セル) 要素の内側に含まれる、`TR`要素、いずれかを使用する必要が、<xref:System.Windows.Forms.HtmlElement.Children%2A>ごとにコレクション`TR`要素、または使用する、<xref:System.Windows.Forms.HtmlElement.All%2A>コレクションに<xref:System.Windows.Forms.HtmlElement>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-153">To retrieve the `TD` (cell) elements contained inside of the `TR` elements, you will need to use either the <xref:System.Windows.Forms.HtmlElement.Children%2A> collection on each individual `TR` element, or use the <xref:System.Windows.Forms.HtmlElement.All%2A> collection on <xref:System.Windows.Forms.HtmlElement>.</span></span>  
  
 <span data-ttu-id="0c3d5-154">このコレクション内の要素は、ソースの順序である保証はありません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-154">Elements in this collection are not guaranteed to be in source order.</span></span>  
  
 <span data-ttu-id="0c3d5-155">場合<xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>は`false`、`Children`は常に空になります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-155">If <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> is `false`, `Children` will always be empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-156">次のコード例任意の HTML ドキュメントを調べ、インデント、要素を記述する文字列を取得および深さを示すために使用するレベルの番号には、要素が入れ子になった、ドキュメントでは、します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-156">The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document.</span></span> <span data-ttu-id="0c3d5-157">これは、検索で、`Children`コレクションのすべての要素を再帰的に、ドキュメントの上部にある HTML 要素を開始します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-157">It does this by searching the `Children` collection of all elements recursively, starting with the HTML element at the top of the document.</span></span> <span data-ttu-id="0c3d5-158">このコード例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-158">This code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.HtmlElement#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.All" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Click : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-159">ユーザーが要素をマウスの左ボタンでクリックしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-159">Occurs when the user clicks on the element with the left mouse button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-160">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.Click>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-160">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Click> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-161">A<xref:System.Windows.Forms.HtmlElement.Click>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-161">A <xref:System.Windows.Forms.HtmlElement.Click> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-162">ない現在入力フォーカスを要素に、ユーザーがクリックした場合、<xref:System.Windows.Forms.HtmlElement.Click>イベントが発生した後、<xref:System.Windows.Forms.HtmlElement.Focusing>イベント、その前に、<xref:System.Windows.Forms.HtmlElement.LostFocus>要素のイベントをします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-162">If the user clicks on an element that does not currently have input focus, the <xref:System.Windows.Forms.HtmlElement.Click> event will occur after the <xref:System.Windows.Forms.HtmlElement.Focusing> event, but before the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for that element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-163">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-163">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-164">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-164">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Click> event.</span></span> <span data-ttu-id="0c3d5-165">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-165">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-166">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-166">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-167">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-167">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-168">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-168">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Click> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#432](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#432)]
 [!code-vb[System.Windows.Forms.EventExamples#432](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#432)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-169">HTML ドキュメントにおける要素のクライアント領域の境界を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-169">Gets the bounds of the client area of the element in the HTML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-170">要素が占有しているクライアント領域から、境界線とスクロール バーの領域を除いた領域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-170">The client area occupied by the element, minus any area taken by borders and scroll bars.</span>
          </span>
          <span data-ttu-id="0c3d5-171">要素の表示要素を含めた位置および寸法を取得するには、代わりに <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-171">To obtain the position and dimensions of the element inclusive of its adornments, use <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> instead.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-172"><xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> 明示的な高さと幅を割り当てられている要素または絶対位置を使用する要素だけの位置データを返します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-172"><xref:System.Windows.Forms.HtmlElement.ClientRectangle%2A> will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.</span></span> <span data-ttu-id="0c3d5-173">ドキュメントに、位置スタイルが設定されている場合の絶対位置が`absolute`、することできますに配置する HTML ページ上の任意の座標の後にします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-173">A document is absolutely positioned if its position style is set to `absolute`, after which it can be positioned at any coordinate on the HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-174">ホスト インスタンスに次の HTML ページを読み込んだ前提としています、<xref:System.Windows.Forms.WebBrowser>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-174">Assume you have loaded the following HTML page into a hosted instance of the <xref:System.Windows.Forms.WebBrowser> control.</span></span>  
  
```  
<HTML>  
  
    <BODY>  
  
        <DIV id="div1" style="position:absolute;top:100px;left:100px;border-      style:solid;border-width:1px;">  
            Edit this text.  
        </DIV>  
  
    </BODY>  
  
</HTML>  
```  
  
 <span data-ttu-id="0c3d5-175">次のコード例は、この要素を取得し、そのディメンションを展開する場合は、クライアント領域の 50 ピクセル、高さ、幅がより小さい 400 ピクセルし、も設定を示しています、`DIV`を`contentEditable`状態のユーザーがテキストを入力できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-175">The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the `DIV` to the `contentEditable` state so that the user can input text.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlElement#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" />
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.DetachEventHandler : string * EventHandler -&gt; unit" Usage="htmlElement.DetachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="0c3d5-176">処理するイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-176">The name of the event you want to handle.</span>
          </span>
        </param>
        <param name="eventHandler">
          <span data-ttu-id="0c3d5-177">イベントを処理するマネージド コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-177">The managed code that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-178">HTML DOM (Document Object Model) の指定したイベントからイベント ハンドラーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-178">Removes an event handler from a named event on the HTML Document Object Model (DOM).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.HtmlElement.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-179">この要素が属する <see cref="T:System.Windows.Forms.HtmlDocument" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-179">Gets the <see cref="T:System.Windows.Forms.HtmlDocument" /> to which this element belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-180">この要素の親ドキュメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-180">The parent document of this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-181">一部の HTML ページを使用してフレームをホストできる、`FRAMESET`タグ。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-181">Some HTML pages can host frames using the `FRAMESET` tags.</span></span> <span data-ttu-id="0c3d5-182">この場合、各`FRAME`要素は、独自のインスタンスを含める<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-182">In this case, each individual `FRAME` element will contain its own instance of <xref:System.Windows.Forms.HtmlDocument>.</span></span> <span data-ttu-id="0c3d5-183">このプロパティは、要素への参照をイベント ハンドラーから受信したときに、最も役に立つ、<xref:System.Windows.Forms.HtmlElementEventArgs>要素が含まれているドキュメントに対して何らかのアクションを実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-183">This property is most useful when you have received a reference to an element in an event handler from the <xref:System.Windows.Forms.HtmlElementEventArgs>, and need to perform some action on the document in which the element resides.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="DomElement">
      <MemberSignature Language="C#" Value="public object DomElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.DomElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomElement As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomElement { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomElement : obj" Usage="System.Windows.Forms.HtmlElement.DomElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-184">この要素のアンマネージ インターフェイスへのポインターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-184">Gets an unmanaged interface pointer for this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-185">COM <c>IUnknown</c>など、要素は、HTML 要素のいずれかにキャストできますへのポインターがインタ フェース<c>IHTMLElement</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-185">The COM <c>IUnknown</c> pointer for the element, which you can cast to one of the HTML element interfaces, such as <c>IHTMLElement</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-186"><xref:System.Windows.Forms.HtmlElement> ラッパーの Internet Explorer ドキュメント オブジェクト モデル (DOM)、コンポーネント オブジェクト モデル (COM) を使用して記述されたです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-186"><xref:System.Windows.Forms.HtmlElement> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).</span></span> <span data-ttu-id="0c3d5-187">など、非公開のプロパティまたはメソッドに、基になる COM インターフェイスにアクセスする必要がある場合`IHTMLElement`、それらのクエリには、このオブジェクトを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-187">If you need to access unexposed properties or methods on the underlying COM interfaces, such as `IHTMLElement`, you can use this object to query for them.</span></span>  
  
 <span data-ttu-id="0c3d5-188">アンマネージ インターフェイスを使用するのには、アプリケーションに MSHTML ライブラリ (mshtml.dll) をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-188">In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.</span></span> <span data-ttu-id="0c3d5-189">ただし、実行することも公開されていないプロパティとメソッドを使用して、`Invoke`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-189">However, you can also execute unexposed properties and methods using the `Invoke` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-190">次のコード例では、現在選択されているテキストを行い、ユーザーが選択した URL を使用して、ハイパーリンクに変換するアンマネージ インターフェイスを使用します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-190">The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user.</span></span> <span data-ttu-id="0c3d5-191">このコードには、フォームにあると仮定して書き込んだ、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`プロジェクトへの参照として、アンマネージ MSHTML ライブラリを追加したとします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-191">This code was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have added the unmanaged MSHTML library as a reference to your project.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.HtmlElement#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlDocument.DomDocument" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DoubleClick : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-192">ユーザーが要素上でマウスの左ボタンを 2 回すばやく連続的にクリックしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-192">Occurs when the user clicks the left mouse button over an element twice, in rapid succession.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-193">ダブルクリックは、ユーザーのオペレーティング システムのマウス設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-193">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="0c3d5-194">ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-194">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span>  
  
 <span data-ttu-id="0c3d5-195">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.DoubleClick>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-195">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-196">A<xref:System.Windows.Forms.HtmlElement.DoubleClick>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-196">A <xref:System.Windows.Forms.HtmlElement.DoubleClick> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-197">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-197">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-198">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.DoubleClick>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-198">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event.</span></span> <span data-ttu-id="0c3d5-199">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-199">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-200">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-200">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-201">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-201">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-202">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.DoubleClick>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-202">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#433](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#433)]
 [!code-vb[System.Windows.Forms.EventExamples#433](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#433)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Drag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Drag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Drag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drag As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Drag;" />
      <MemberSignature Language="F#" Value="member this.Drag : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Drag : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-203">ユーザーがテキストをさまざまな位置にドラッグしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-203">Occurs when the user drags text to various locations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-204">このイベントは、テキストが次の場所にドラッグされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-204">This event occurs when text is dragged to the following locations:</span></span>  
  
-   <span data-ttu-id="0c3d5-205">内または HTML ページでホストされている間、<xref:System.Windows.Forms.WebBrowser>コントロールまたは Internet Explorer</span><span class="sxs-lookup"><span data-stu-id="0c3d5-205">Within or between HTML pages hosted in the <xref:System.Windows.Forms.WebBrowser> control or Internet Explorer</span></span>  
  
-   <span data-ttu-id="0c3d5-206">別のアプリケーションに</span><span class="sxs-lookup"><span data-stu-id="0c3d5-206">To another application</span></span>  
  
-   <span data-ttu-id="0c3d5-207">Windows デスクトップに</span><span class="sxs-lookup"><span data-stu-id="0c3d5-207">To the Windows desktop</span></span>  
  
 <span data-ttu-id="0c3d5-208">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.Drag>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-208">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.Drag> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-209">A<xref:System.Windows.Forms.HtmlElement.Drag>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-209">A <xref:System.Windows.Forms.HtmlElement.Drag> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-210">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-210">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-211">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.Drag>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-211">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Drag> event.</span></span> <span data-ttu-id="0c3d5-212">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-212">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-213">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-213">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-214">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-214">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-215">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.Drag>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-215">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Drag> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#434](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#434)]
 [!code-vb[System.Windows.Forms.EventExamples#434](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#434)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnd">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnd As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragEnd;" />
      <MemberSignature Language="F#" Value="member this.DragEnd : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragEnd : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-216">ユーザーがドラッグ操作を終了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-216">Occurs when a user finishes a drag operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-217">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.DragEnd>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-217">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-218">A<xref:System.Windows.Forms.HtmlElement.DragEnd>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-218">A <xref:System.Windows.Forms.HtmlElement.DragEnd> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-219">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-219">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-220">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.DragEnd>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-220">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragEnd> event.</span></span> <span data-ttu-id="0c3d5-221">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-221">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-222">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-222">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-223">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-223">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-224">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.DragEnd>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-224">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#435](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#435)]
 [!code-vb[System.Windows.Forms.EventExamples#435](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#435)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragLeave : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-225">ユーザーがこの要素上への項目のドラッグを終了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-225">Occurs when the user is no longer dragging an item over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c3d5-226">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-226">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-227">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.DragLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-227">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragLeave> event.</span></span> <span data-ttu-id="0c3d5-228">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-228">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-229">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-229">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-230">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-230">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-231">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.DragLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-231">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#436](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#436)]
 [!code-vb[System.Windows.Forms.EventExamples#436](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#436)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.DragOver : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-232">ユーザーがテキストを要素上にドラッグしたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-232">Occurs when the user drags text over the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-233">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.DragOver>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-233">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-234">A<xref:System.Windows.Forms.HtmlElement.DragOver>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-234">A <xref:System.Windows.Forms.HtmlElement.DragOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-235">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-235">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-236">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.DragOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-236">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.DragOver> event.</span></span> <span data-ttu-id="0c3d5-237">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-237">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-238">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-238">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-239">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-239">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-240">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.DragOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-240">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.DragOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#437](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#437)]
 [!code-vb[System.Windows.Forms.EventExamples#437](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#437)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.HtmlElement.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-241">ユーザーがこの要素にデータを入力できるかどうかを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-241">Gets or sets whether the user can input data into this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-242">要素がユーザーの入力を受け付ける場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-242">
              <see langword="true" /> if the element allows user input; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-243">`FORM`テキスト ボックスやオプション ボタン、設定などの要素<xref:System.Windows.Forms.HtmlElement.Enabled%2A>に`false`ユーザーがフォームのフィールドを使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-243">For `FORM` elements such as text boxes and radio buttons, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will prevent the user from using these form fields.</span></span> <span data-ttu-id="0c3d5-244">他の要素のように`DIV`または`SPAN`、設定<xref:System.Windows.Forms.HtmlElement.Enabled%2A>に`false`灰色表示にすると、要素内のすべてのテキストになります。 ただし、テキストがまだ選択可能です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-244">For other elements, such as `DIV` or `SPAN`, setting <xref:System.Windows.Forms.HtmlElement.Enabled%2A> to `false` will cause all text within the element to appear shaded; however, the text will still be selectable.</span></span> <span data-ttu-id="0c3d5-245">選択を解除する、非公開のイベント ハンドラーを追加`onselectstart`イベントを使用して、<xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-245">To cancel selection, add an event handler for the unexposed `onselectstart` event using the <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="htmlElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0c3d5-246">同じかどうかを確認する対象のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-246">The object to test for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-247">指定したオブジェクトが現在の要素と等しいかどうかをテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-247">Tests if the supplied object is equal to the current element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-248">
            <paramref name="obj" /> が <see cref="T:System.Windows.Forms.HtmlElement" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-248">
              <see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Windows.Forms.HtmlElement" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ FirstChild { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-249">ドキュメント ツリーにおいてこの要素のすぐ下にある次の要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-249">Gets the next element below this element in the document tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-250">ソース ドキュメントの階層において、現在の要素の下位にある最初の要素を表す <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-250">An <see cref="T:System.Windows.Forms.HtmlElement" /> representing the first element contained underneath the current element, in source order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-251">使用して<xref:System.Windows.Forms.HtmlElement.FirstChild%2A>と共に<xref:System.Windows.Forms.HtmlElement.NextSibling%2A>を HTML ドキュメントに、ドキュメント ツリーをウォークします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-251">Use <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> to walk the document tree for an HTML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; unit" Usage="htmlElement.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-252">ユーザーの入力フォーカスを現在の要素に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-252">Puts user input focus on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-253">要素にフォーカスを設定とその要素にフォーカスが移動の両方のアクティブな要素になりますフォーカスを持つ要素がによって返されるなど、<xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A>プロパティの<xref:System.Windows.Forms.HtmlDocument>します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-253">Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> property of <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 <span data-ttu-id="0c3d5-254">後にユーザーが入力した任意のキー ストローク<xref:System.Windows.Forms.HtmlElement.Focus%2A>が呼び出されたその要素に送信されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-254">Any key strokes entered by a user after <xref:System.Windows.Forms.HtmlElement.Focus%2A> has been called will be sent to that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Focusing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Focusing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.Focusing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Focusing As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Focusing;" />
      <MemberSignature Language="F#" Value="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Focusing : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-255">要素が初めてユーザーの入力フォーカスを得たときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-255">Occurs when the element first receives user input focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-256">タスク バーまたは alt キーを押しながら TAB キーを使用して別のアプリケーションへの切り替えを受信する前にフォーカスがあった要素、<xref:System.Windows.Forms.HtmlElement.Focusing>と<xref:System.Windows.Forms.HtmlElement.GotFocus>イベント再度ときにユーザーを切り替える、アプリケーションにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-256">An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the <xref:System.Windows.Forms.HtmlElement.Focusing> and <xref:System.Windows.Forms.HtmlElement.GotFocus> events again when the user switches back to your application.</span></span>  
  
 <span data-ttu-id="0c3d5-257">このイベントの既定の動作を取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-257">You cannot cancel the default behavior of this event.</span></span> <span data-ttu-id="0c3d5-258">フォーカスを要素から削除するには、呼び出す<xref:System.Windows.Forms.HtmlElement.Focus%2A>内から別の要素で、<xref:System.Windows.Forms.HtmlElement.GotFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-258">To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.</span></span>  
  
 <span data-ttu-id="0c3d5-259">A<xref:System.Windows.Forms.HtmlElement.Focusing>その要素の親とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-259">A <xref:System.Windows.Forms.HtmlElement.Focusing> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-260">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-260">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-261">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.Focusing>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-261">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.Focusing> event.</span></span> <span data-ttu-id="0c3d5-262">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-262">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="0c3d5-263">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-263">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-264">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.Focusing>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-264">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.Focusing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#438](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#438)]
 [!code-vb[System.Windows.Forms.EventExamples#438](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#438)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAttribute(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (attributeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="member this.GetAttribute : string -&gt; string" Usage="htmlElement.GetAttribute attributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="0c3d5-265">属性の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-265">The name of the attribute.</span>
          </span>
          <span data-ttu-id="0c3d5-266">この引数では、大文字と小文字が区別されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-266">This argument is case-insensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-267">要素の名前付き属性の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-267">Retrieves the value of the named attribute on the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-268">要素のこの属性の値を、<see cref="T:System.String" /> の値として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-268">The value of this attribute on the element, as a <see cref="T:System.String" /> value.</span>
          </span>
          <span data-ttu-id="0c3d5-269">指定された属性がこの要素に存在しない場合は、空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-269">If the specified attribute does not exist on this element, returns an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-270">HTML 内の属性は、その要素のいずれかの有効な名前/値ペアです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-270">An attribute in HTML is any valid name/value pair for that element.</span></span> <span data-ttu-id="0c3d5-271"><xref:System.Windows.Forms.HtmlElement> 要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。`SRC`の定義済み属性は、`IMG`などのタグのではなく、`DIV`タグ。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-271"><xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag.</span></span> <span data-ttu-id="0c3d5-272">使用して<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>と<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-272">Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="0c3d5-273"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> および<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-273"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-274">次のコード例は、すべての取得、 `META` HTML 内のタグを使用して文書化します。<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>を検索する、`META`名前を持つタグ`Description`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-274">The following code example retrieves all of the `META` tags within an HTML document, using <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> to find the `META` tag with the name `Description`.</span></span> <span data-ttu-id="0c3d5-275">例では、アプリケーションがある必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-275">The example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlDocument#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlDocument/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElementCollection GetElementsByTagName(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementsByTagName (tagName As String) As HtmlElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElementCollection ^ GetElementsByTagName(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="member this.GetElementsByTagName : string -&gt; System.Windows.Forms.HtmlElementCollection" Usage="htmlElement.GetElementsByTagName tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="0c3d5-276">取得する <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトのタグの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-276">The name of the tag whose <see cref="T:System.Windows.Forms.HtmlElement" /> objects you wish to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-277">
            <c>HTML</c> タグで指定することで、HTML で表される要素のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-277">Retrieves a collection of elements represented in HTML by the specified <c>HTML</c> tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-278">
            <c>HTML</c> タグ名が <paramref name="tagName" /> と等しいすべての要素を含む <see cref="T:System.Windows.Forms.HtmlElementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-278">An <see cref="T:System.Windows.Forms.HtmlElementCollection" /> containing all elements whose <c>HTML</c> tag name is equal to <paramref name="tagName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="htmlElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-279">特定の型のハッシュ関数として機能します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-279">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-280">現在の <see cref="T:System.Object" /> のハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-280">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-281">要素がユーザーの入力フォーカスを得たときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-281">Occurs when the element has received user input focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-282">このイベントの既定の動作をキャンセルも、バブルを防止します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-282">You can neither cancel this event's default behavior, nor prevent it from bubbling.</span></span> <span data-ttu-id="0c3d5-283">フォーカスを要素から削除するには、呼び出す<xref:System.Windows.Forms.HtmlElement.Focus%2A>内から別の要素で、<xref:System.Windows.Forms.HtmlElement.GotFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-283">To remove focus from an element, call <xref:System.Windows.Forms.HtmlElement.Focus%2A> on a different element from within the <xref:System.Windows.Forms.HtmlElement.GotFocus> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-284">ファイルに次の HTML コードを保存し、ファイルを読み込む、 <xref:System.Windows.Forms.WebBrowser> Windows フォーム プロジェクトで制御します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-284">Save the following HTML code into a file, and load the file into a <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms project.</span></span>  
  
```  
<HTML>  
    <BODY>  
        <FORM name="form1">  
            <INPUT type="text" size=20 name="text1">  
            <INPUT type="text" size=20 name="text2">  
            <INPUT type="text" size=20 name="text3">  
        </FORM>  
    </BODY>  
</HTML>  
```  
  
 <span data-ttu-id="0c3d5-285">次のコード例は、次を防止`INPUT`直前の要素には、5 つ未満の文字が含まれている場合、ユーザーの入力フォーカスを受け取らないタブ オーダー内の要素。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-285">The following code example prevents the next `INPUT` element in the tab order from receiving user input focus if the previous element contains less than five characters.</span></span> <span data-ttu-id="0c3d5-286">例では、前述の HTML ファイルがのインスタンスに読み込まれている必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-286">The example requires that the previously mentioned HTML file is loaded into an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlElement#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Windows.Forms.HtmlElement.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-287">要素を識別するラベルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-287">Gets or sets a label by which to identify the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-288">この要素の固有の識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-288">The unique identifier for the element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-289"><xref:System.Windows.Forms.HtmlElement.Id%2A> 一意である必要があります。同じ 2 つの要素を持てません<xref:System.Windows.Forms.HtmlElement.Id%2A>同じドキュメント内で。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-289"><xref:System.Windows.Forms.HtmlElement.Id%2A> must be unique; you cannot have two elements with the same <xref:System.Windows.Forms.HtmlElement.Id%2A> inside of the same document.</span></span> <span data-ttu-id="0c3d5-290">使用して、<xref:System.Windows.Forms.HtmlElement.Name%2A>論理的に関連する要素のグループに同じ識別子を指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-290">Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to give the same identifier to a group of logically related elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Windows.Forms.HtmlElement.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-291">この要素の下位にある HTML マークアップを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-291">Gets or sets the HTML markup underneath this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-292">現在の要素の子要素を定義する HTML マークアップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-292">The HTML markup that defines the child elements of the current element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-293">いくつかの方法など、既存の HTML ページに新しい要素を追加する、<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>と<xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-293">There are several ways to add new elements to an existing HTML page, such as the <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> and <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> methods.</span></span> <span data-ttu-id="0c3d5-294">使用して<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>は多くの場合、新しい要素で多くの属性またはスタイルを設定する必要があるときに、新しいコンテンツを追加する最も簡単な方法です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-294">Using <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is often the fastest way to add new content when you have to set many attributes or styles on your new elements.</span></span>  
  
 <span data-ttu-id="0c3d5-295"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> 異なる<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>で<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>を呼び出しているオブジェクトを表す HTML は含まれません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-295"><xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> differs from <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> in that <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will not include the HTML that represents the object you are calling.</span></span> <span data-ttu-id="0c3d5-296">参照してください<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>これら 2 つのプロパティの違いの詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-296">See <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> for more information about the difference between these two properties.</span></span>  
  
 <span data-ttu-id="0c3d5-297">設定<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>要素に追加されるすべての子を破棄します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-297">Setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> destroys any children previously appended to the element.</span></span> <span data-ttu-id="0c3d5-298">DOM から要素を取得し、その親に新しい HTML を割り当てる場合<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティ、その要素への参照は役に立たない、されプロパティとメソッドを呼び出すときは、その動作は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-298">If you retrieve an element from the DOM and then assign new HTML to its parents' <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.</span></span>  
  
 <span data-ttu-id="0c3d5-299">設定のいくつかの要素の<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>有効な操作ではありません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-299">For some elements, setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> is not a valid operation.</span></span> <span data-ttu-id="0c3d5-300">複数の HTML タグなし終了タグを持つ、ように、`IMG`タグ、およびそのため、入れ子になった要素を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-300">Some HTML tags have no closing tag, such as the `IMG` tag, and therefore cannot contain nested elements.</span></span> <span data-ttu-id="0c3d5-301">などのいくつかのタグ、`SCRIPT`タグ、テキスト コンテンツ; 設定を含めることができますのみ<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-301">Some tags, such as the `SCRIPT` tag, can only contain text content; setting <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will result in an error.</span></span> <span data-ttu-id="0c3d5-302">両方の種類、タグの<xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>が返される`false`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-302">For both types of tags, the <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> property will return `false`.</span></span> <span data-ttu-id="0c3d5-303">ただし、設定することもできません<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>で`TABLE`と`TR`要素は、これらの要素への不正な HTML の割り当てとは、ドキュメントのレンダリングを壊れる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-303">However, you also cannot set <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> on `TABLE` and `TR` elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.</span></span> <span data-ttu-id="0c3d5-304">使用して<xref:System.Windows.Forms.HtmlElement.AppendChild%2A>または`insertRow`と`insertCell`アンマネージ メソッド`IHTMLTable`インターフェイスを追加する行や、行のセル、`TABLE`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-304">Use <xref:System.Windows.Forms.HtmlElement.AppendChild%2A> or the `insertRow` and `insertCell` methods on the unmanaged `IHTMLTable` interface to add rows and cells to a `TABLE`.</span></span>  
  
 <span data-ttu-id="0c3d5-305">要素といない HTML マークアップにテキストを割り当てる場合にのみ必要がある場合、<xref:System.Windows.Forms.HtmlElement.InnerText%2A>プロパティ代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-305">If you need only to assign text to an element and not HTML markup, use the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property instead.</span></span>  
  
 <span data-ttu-id="0c3d5-306">値を割り当てる<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>以前割り当てを使用して任意のテキスト値を破棄<xref:System.Windows.Forms.HtmlElement.InnerText%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-306">Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will destroy any text values previously assigned using <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c3d5-307">この要素に子要素を作成することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-307">Creating child elements on this element is not allowed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)" />
        <altmember cref="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)" />
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Windows.Forms.HtmlElement.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-308">要素に割り当てられたテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-308">Gets or sets the text assigned to the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-309">要素のテキスト。HTML マークアップは含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-309">The element's text, absent any HTML markup.</span>
          </span>
          <span data-ttu-id="0c3d5-310">要素に子要素がある場合、その子要素に含まれるテキストのみが保持されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-310">If the element contains child elements, only the text in those child elements will be preserved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-311">しようとする HTML を持つ要素に割り当てる<xref:System.Windows.Forms.HtmlElement.InnerText%2A>、HTML コードは、テキスト ファイル内で HTML を表示していた場合と同様に、ドキュメント内でリテラルとして表示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-311">If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.InnerText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</span></span> <span data-ttu-id="0c3d5-312">HTML 要素を使用して、割り当てた場合、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティ、<xref:System.Windows.Forms.HtmlElement.InnerText%2A>を返しますのすべてのテキストを使用して HTML マークアップを削除します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-312">If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will return all of the text in that HTML with the markup removed.</span></span>  
  
 <span data-ttu-id="0c3d5-313">値を割り当てる<xref:System.Windows.Forms.HtmlElement.InnerText%2A>要素に属しているすべての子要素が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-313">Assigning a value to <xref:System.Windows.Forms.HtmlElement.InnerText%2A> will destroy any child elements that belong to the element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-314">次のコードの作成、ハイパーリンクを使用して新しい<xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>、リンクを使用するテキストを割り当てると、<xref:System.Windows.Forms.HtmlElement.InnerText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-314">The following code creates a new hyperlink using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, and assigns text to the link using the <xref:System.Windows.Forms.HtmlElement.InnerText%2A> property.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlElement#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c3d5-315">指定した要素に、テキストを含めることはできません (たとえば、<c>IMG</c> 要素)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-315">The specified element cannot contain text (for example, an <c>IMG</c> element).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="InsertAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement InsertAdjacentElement (System.Windows.Forms.HtmlElementInsertionOrientation orient, System.Windows.Forms.HtmlElement newElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlElement InsertAdjacentElement(valuetype System.Windows.Forms.HtmlElementInsertionOrientation orient, class System.Windows.Forms.HtmlElement newElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertAdjacentElement (orient As HtmlElementInsertionOrientation, newElement As HtmlElement) As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlElement ^ InsertAdjacentElement(System::Windows::Forms::HtmlElementInsertionOrientation orient, System::Windows::Forms::HtmlElement ^ newElement);" />
      <MemberSignature Language="F#" Value="member this.InsertAdjacentElement : System.Windows.Forms.HtmlElementInsertionOrientation * System.Windows.Forms.HtmlElement -&gt; System.Windows.Forms.HtmlElement" Usage="htmlElement.InsertAdjacentElement (orient, newElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orient" Type="System.Windows.Forms.HtmlElementInsertionOrientation" />
        <Parameter Name="newElement" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="orient">
          <span data-ttu-id="0c3d5-316">現在の要素を基準とした、この要素の挿入位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-316">Where to insert this element in relation to the current element.</span>
          </span>
        </param>
        <param name="newElement">
          <span data-ttu-id="0c3d5-317">挿入する新しい要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-317">The new element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-318">新しい要素をドキュメント オブジェクト モデル (DOM) に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-318">Insert a new element into the Document Object Model (DOM).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-319">挿入された <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-319">The <see cref="T:System.Windows.Forms.HtmlElement" /> that was just inserted.</span>
          </span>
          <span data-ttu-id="0c3d5-320">挿入が失敗した場合は <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-320">If insertion failed, this will return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-321">後までは、このメソッドを呼び出す必要はありません、<xref:System.Windows.Forms.WebBrowser.DocumentCompleted>でイベントを<xref:System.Windows.Forms.WebBrowser>コントロールが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-321">Do not call this method until after the <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> event on the <xref:System.Windows.Forms.WebBrowser> control has occurred.</span></span> <span data-ttu-id="0c3d5-322">その前にこのメソッドを呼び出すとすると、ドキュメントの読み込みが終了しないに、例外が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-322">Calling this method before then can result in an exception, as the document will not have finished loading.</span></span>  
  
 <span data-ttu-id="0c3d5-323">値かどうか<xref:System.Windows.Forms.HtmlElementInsertionOrientation>が有効では、要素の型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-323">Whether a value of <xref:System.Windows.Forms.HtmlElementInsertionOrientation> is valid will depend on the type of the element.</span></span> <span data-ttu-id="0c3d5-324">たとえば、<xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin>場合は、要素が有効では、`DIV`がない場合は、`SCRIPT`または`IMG`要素の子要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-324">For example, <xref:System.Windows.Forms.HtmlElementInsertionOrientation.AfterBegin> is valid if the element is a `DIV`, but not if it is a `SCRIPT` or `IMG` element, neither of which can contain child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-325">次のコード例の挿入、 `DIV` ADatum.com サーバーの外部でのユーザーが表示されるすべてのページの上部に要素をします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-325">The following code example inserts a `DIV` element into the top of every page that users view outside of the ADatum.com server.</span></span> <span data-ttu-id="0c3d5-326">例では、フォームが含まれている必要があります、<xref:System.Windows.Forms.WebBrowser>という名前のコントロール`WebBrowser1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-326">The example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.</span></span> <span data-ttu-id="0c3d5-327">サンプルでは、名前空間をインポートする必要がありますも<xref:System.Text.RegularExpressions>します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-327">Your sample must also import the namespace <xref:System.Text.RegularExpressions>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlElement#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeMember">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-328">現在の要素に固有のメソッドを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-328">Executes a method unique to the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeMember(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMember (methodName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="member this.InvokeMember : string -&gt; obj" Usage="htmlElement.InvokeMember methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="0c3d5-329">呼び出されるプロパティまたはメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-329">The name of the property or method to invoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-330">この要素の基になる DOM 要素に対して非公開メソッドを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-330">Executes an unexposed method on the underlying DOM element of this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-331">このメソッドで返される要素を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-331">The element returned by this method, represented as an <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="0c3d5-332">この <see cref="T:System.Object" /> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-332">If this <see cref="T:System.Object" /> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-333">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-333">This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</span></span> <span data-ttu-id="0c3d5-334">このバージョンの使用<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>引数を受け取らない非公開メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-334">Use this version of <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> to execute unexposed methods that take no arguments.</span></span> <span data-ttu-id="0c3d5-335">例については、「<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-335">For an example, see <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string methodName, params object[] parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeMember(string methodName, object[] parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMember (methodName As String, ParamArray parameter As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ methodName, ... cli::array &lt;System::Object ^&gt; ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.InvokeMember : string * obj[] -&gt; obj" Usage="htmlElement.InvokeMember (methodName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameter" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="0c3d5-336">呼び出されるプロパティまたはメソッドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-336">The name of the property or method to invoke.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="0c3d5-337">渡されるパラメーターのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-337">A list of parameters to pass.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-338">現在の HTML ページにスクリプト言語で定義されている関数を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-338">Executes a function defined in the current HTML page by a scripting language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-339">関数によって返される要素を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-339">The element returned by the function, represented as an <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="0c3d5-340">この <see cref="T:System.Object" /> が別の HTML 要素で、アンマネージ MSHTML ライブラリへの参照がプロジェクトに追加されている場合は、これを適切なアンマネージ インターフェイスにキャストできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-340">If this <see cref="T:System.Object" /> is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-341">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-341">This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</span></span> <span data-ttu-id="0c3d5-342">すべての引数を指定する<xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>Win32 に変換される`VARIANT`データ型、名前付きスクリプト関数に渡される前にします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-342">All arguments supplied to <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> will be converted to Win32 `VARIANT` data types before they are passed to the named scripting function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-343">次のコード例を取得、`TABLE`と呼ばれる`dataTable`、非公開を使用して`moveRow`テーブルの末尾から行を先頭に移動します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-343">The following code example gets a `TABLE` called `dataTable` and uses the unexposed `moveRow` method to move a row from the end of the table to the beginning.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.HtmlElement#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyDown : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-344">ユーザーがキーボードのキーを押したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-344">Occurs when the user presses a key on the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-345"><xref:System.Windows.Forms.HtmlElement.KeyDown> 前に発生<xref:System.Windows.Forms.HtmlElement.KeyPress>、それに続いて発生する前に<xref:System.Windows.Forms.HtmlElement.KeyUp>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-345"><xref:System.Windows.Forms.HtmlElement.KeyDown> occurs before <xref:System.Windows.Forms.HtmlElement.KeyPress>, which in turns occurs before <xref:System.Windows.Forms.HtmlElement.KeyUp>.</span></span>  
  
 <span data-ttu-id="0c3d5-346">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.KeyDown>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-346">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-347">A<xref:System.Windows.Forms.HtmlElement.KeyDown>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-347">A <xref:System.Windows.Forms.HtmlElement.KeyDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-348">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-348">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-349">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.KeyDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-349">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyDown> event.</span></span> <span data-ttu-id="0c3d5-350">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-350">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-351">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-351">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-352">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-352">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-353">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.KeyDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-353">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#442](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#442)]
 [!code-vb[System.Windows.Forms.EventExamples#442](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#442)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyPress : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-354">ユーザーがキーボードのキーを押して離したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-354">Occurs when the user presses and releases a key on the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-355"><xref:System.Windows.Forms.HtmlElement.KeyPress> 後に発生<xref:System.Windows.Forms.HtmlElement.KeyDown>前に<xref:System.Windows.Forms.HtmlElement.KeyUp>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-355"><xref:System.Windows.Forms.HtmlElement.KeyPress> occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown> and before <xref:System.Windows.Forms.HtmlElement.KeyUp>.</span></span>  
  
 <span data-ttu-id="0c3d5-356">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.KeyPress>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-356">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-357">A<xref:System.Windows.Forms.HtmlElement.KeyPress>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-357">A <xref:System.Windows.Forms.HtmlElement.KeyPress> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-358">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-358">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-359">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.KeyPress>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-359">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyPress> event.</span></span> <span data-ttu-id="0c3d5-360">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-360">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-361">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-361">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-362">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-362">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-363">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.KeyPress>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-363">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyPress> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#443](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#443)]
 [!code-vb[System.Windows.Forms.EventExamples#443](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#443)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.KeyUp : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-364">ユーザーがキーボードのキーを離したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-364">Occurs when the user releases a key on the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-365"><xref:System.Windows.Forms.HtmlElement.KeyUp> 後に発生<xref:System.Windows.Forms.HtmlElement.KeyPress>、後に発生する<xref:System.Windows.Forms.HtmlElement.KeyDown>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-365"><xref:System.Windows.Forms.HtmlElement.KeyUp> occurs after <xref:System.Windows.Forms.HtmlElement.KeyPress>, which occurs after <xref:System.Windows.Forms.HtmlElement.KeyDown>.</span></span>  
  
 <span data-ttu-id="0c3d5-366">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-366">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="0c3d5-367">A<xref:System.Windows.Forms.HtmlElement.KeyUp>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-367">A <xref:System.Windows.Forms.HtmlElement.KeyUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-368">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-369">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.KeyUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.KeyUp> event.</span></span> <span data-ttu-id="0c3d5-370">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-371">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-372">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-373">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.KeyUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.KeyUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#444](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#444)]
 [!code-vb[System.Windows.Forms.EventExamples#444](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#444)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LosingFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LosingFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.LosingFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LosingFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LosingFocus;" />
      <MemberSignature Language="F#" Value="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LosingFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-374">要素がユーザーの入力フォーカスを失うときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-374">Occurs when the element is losing user input focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c3d5-375">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-375">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-376">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.LosingFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-376">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event.</span></span> <span data-ttu-id="0c3d5-377">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-377">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="0c3d5-378">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-378">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-379">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.LosingFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-379">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LosingFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#440](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#440)]
 [!code-vb[System.Windows.Forms.EventExamples#440](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#440)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-380">要素がユーザーの入力フォーカスを失ったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-380">Occurs when the element has lost user input focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-381">要素の後に、キー ストローク イベントを受信できなく<xref:System.Windows.Forms.HtmlElement.LostFocus>指定されるまで、フォーカスもう一度、ページを選択すると、ユーザーまたはアプリケーションの呼び出し元のいずれかが発生した、<xref:System.Windows.Forms.HtmlElement.Focus%2A>その要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-381">An element will no longer receive key stroke events after <xref:System.Windows.Forms.HtmlElement.LostFocus> occurs until it is given focus again, either by the user selecting it on the page or by the application calling the <xref:System.Windows.Forms.HtmlElement.Focus%2A> method on that element.</span></span>  
  
 <span data-ttu-id="0c3d5-382">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-382">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="0c3d5-383"><xref:System.Windows.Forms.HtmlElement.LostFocus>その要素の親とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-383">An <xref:System.Windows.Forms.HtmlElement.LostFocus> event on an element will also occur on that element's parents and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-384">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-384">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-385">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.LostFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-385">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.LostFocus> event.</span></span> <span data-ttu-id="0c3d5-386">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-386">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="0c3d5-387">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-387">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-388">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.LostFocus>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-388">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#441](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#441)]
 [!code-vb[System.Windows.Forms.EventExamples#441](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#441)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseDown : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-389">ユーザーがマウス ボタンを押したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-389">Occurs when the user presses a mouse button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-390">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.MouseDown>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-390">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-391">A<xref:System.Windows.Forms.HtmlElement.MouseDown>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-391">A <xref:System.Windows.Forms.HtmlElement.MouseDown> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-392">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-392">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-393">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-393">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseDown> event.</span></span> <span data-ttu-id="0c3d5-394">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-394">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-395">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-395">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-396">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-396">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-397">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-397">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#446](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#446)]
 [!code-vb[System.Windows.Forms.EventExamples#446](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#446)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseEnter : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-398">ユーザーがマウス カーソルを現在の要素上に初めて移動させたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-398">Occurs when the user first moves the mouse cursor over the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c3d5-399">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-399">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-400">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseEnter>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-400">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event.</span></span> <span data-ttu-id="0c3d5-401">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-401">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-402">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-402">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-403">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-403">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-404">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseEnter>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-404">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseEnter> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#449](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#449)]
 [!code-vb[System.Windows.Forms.EventExamples#449](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#449)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseLeave : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-405">ユーザーがマウス カーソルを現在の要素から移動させたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-405">Occurs when the user moves the mouse cursor off of the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c3d5-406">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-406">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-407">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-407">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event.</span></span> <span data-ttu-id="0c3d5-408">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-408">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-409">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-409">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-410">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-410">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-411">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseLeave>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-411">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseLeave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#450](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#450)]
 [!code-vb[System.Windows.Forms.EventExamples#450](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#450)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseMove : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-412">ユーザーがマウス カーソルを要素上に通過させたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-412">Occurs when the user moves the mouse cursor across the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-413">このイベントを取り消すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-413">You cannot cancel this event.</span></span>  
  
 <span data-ttu-id="0c3d5-414">A<xref:System.Windows.Forms.HtmlElement.MouseMove>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-414">A <xref:System.Windows.Forms.HtmlElement.MouseMove> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-415">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-415">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-416">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseMove>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-416">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseMove> event.</span></span> <span data-ttu-id="0c3d5-417">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-417">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-418">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-418">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-419">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-419">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-420">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseMove>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-420">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseMove> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#445](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#445)]
 [!code-vb[System.Windows.Forms.EventExamples#445](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#445)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseOver As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseOver;" />
      <MemberSignature Language="F#" Value="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseOver : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-421">マウス カーソルが要素の境界内に入ったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-421">Occurs when the mouse cursor enters the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-422">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.MouseOver>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-422">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-423">A<xref:System.Windows.Forms.HtmlElement.MouseOver>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-423">A <xref:System.Windows.Forms.HtmlElement.MouseOver> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-424">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-424">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-425">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-425">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseOver> event.</span></span> <span data-ttu-id="0c3d5-426">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-426">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-427">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-427">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-428">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-428">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-429">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseOver>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-429">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseOver> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#447](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#447)]
 [!code-vb[System.Windows.Forms.EventExamples#447](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#447)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.MouseUp : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-430">ユーザーがマウス ボタンを離したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-430">Occurs when the user releases a mouse button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-431">既定のアクションを取り消すことができます、<xref:System.Windows.Forms.HtmlElement.MouseUp>イベントを設定して要素を<xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-431">You can cancel the default action for a <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element by setting the <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
 <span data-ttu-id="0c3d5-432">A<xref:System.Windows.Forms.HtmlElement.MouseUp>その要素の親要素とも要素のイベントが発生、<xref:System.Windows.Forms.HtmlDocument>設定していない場合それ自体には、クラス、<xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>のプロパティ、<xref:System.Windows.Forms.HtmlElementEventArgs>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-432">A <xref:System.Windows.Forms.HtmlElement.MouseUp> event on an element will also occur on that element's parent elements and on the <xref:System.Windows.Forms.HtmlDocument> class itself, unless you set the <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> property of the <xref:System.Windows.Forms.HtmlElementEventArgs> class to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-433">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-433">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0c3d5-434">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.HtmlElement.MouseUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-434">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlElement.MouseUp> event.</span></span> <span data-ttu-id="0c3d5-435">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-435">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0c3d5-436">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-436">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0c3d5-437">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.HtmlElement>という`HtmlElement1`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-437">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`.</span></span> <span data-ttu-id="0c3d5-438">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.HtmlElement.MouseUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-438">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlElement.MouseUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#448](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#448)]
 [!code-vb[System.Windows.Forms.EventExamples#448](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#448)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.HtmlElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-439">要素の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-439">Gets or sets the name of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-440">要素の名前を表す <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-440">A <see cref="T:System.String" /> representing the element's name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-441">使用して、<xref:System.Windows.Forms.HtmlElement.Name%2A>を使用してドキュメントから要素を取得するプロパティを<xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A>メソッドを<xref:System.Windows.Forms.HtmlElement.All%2A>プロパティ<xref:System.Windows.Forms.HtmlDocument>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-441">Use the <xref:System.Windows.Forms.HtmlElement.Name%2A> property to retrieve elements from a document using the <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> method on the <xref:System.Windows.Forms.HtmlElement.All%2A> property of <xref:System.Windows.Forms.HtmlDocument>.</span></span>  
  
 <span data-ttu-id="0c3d5-442">適用すると`INPUT`要素、<xref:System.Windows.Forms.HtmlElement.Name%2A>そのフォームがサーバーに送信されるときに、その要素のデータの変数名を定義します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-442">When applied to `INPUT` elements, <xref:System.Windows.Forms.HtmlElement.Name%2A> defines the variable name for that element's data when its form is submitted to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ NextSibling { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-443">ドキュメント ツリーにおいてこの要素と同じレベルにある次の要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-443">Gets the next element at the same level as this element in the document tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-444">現在の要素の右側にある要素を表す <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-444">An <see cref="T:System.Windows.Forms.HtmlElement" /> representing the element to the right of the current element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-445">使用して<xref:System.Windows.Forms.HtmlElement.NextSibling%2A>と共に<xref:System.Windows.Forms.HtmlElement.FirstChild%2A>を HTML 要素、ドキュメント ツリーをウォークします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-445">Use <xref:System.Windows.Forms.HtmlElement.NextSibling%2A> in conjunction with <xref:System.Windows.Forms.HtmlElement.FirstChild%2A> to walk the document tree for an HTML element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement OffsetParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement OffsetParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OffsetParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetParent As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ OffsetParent { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetParent : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.OffsetParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-446">
            <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> を計算するときの基準となる要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-446">Gets the element from which <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> is calculated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-447">オフセットを計算するときの基準となる要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-447">The element from which the offsets are calculated.</span>
          </span>
          <span data-ttu-id="0c3d5-448">要素の親、または要素の階層に含まれる別の要素が、相対位置または絶対位置を使用している場合、<see langword="OffsetParent" /> は、相対位置または絶対位置を使用している要素のうち、現在の要素が入れ子になっている最初の要素です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-448">If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <see langword="OffsetParent" /> will be the first relatively or absolutely positioned element in which the current element is nested.</span>
          </span>
          <span data-ttu-id="0c3d5-449">現在の要素の上位要素なしは絶対的または相対的にある場合、<see langword="OffsetParent" />なります、<c>本文</c>ドキュメントのタグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-449">If none of the elements above the current element are absolutely or relatively positioned, <see langword="OffsetParent" /> will be the <c>BODY</c> tag of the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-450">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます。 既定のフローは次の位置です。相対位置で親; に対して、固定量でオフセットが、要素絶対位置とする要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-450">Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</span></span>  
  
 <span data-ttu-id="0c3d5-451">ドキュメントの要素は、相対位置または絶対位置を使用して、ときに行うこともできます`OffsetParent`クライアント領域内の要素の座標位置を計算します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-451">When a document's elements use relative or absolute positioning, you can use `OffsetParent` to calculate an element's coordinate position in the client area.</span></span>  
  
 <span data-ttu-id="0c3d5-452">要素の詳細については、HTML での配置を参照してください[要素の配置に関する](http://msdn.microsoft.com/library/ms533005.aspx)です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-452">For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-453">次のコード例に示す方法<xref:System.Windows.Forms.HtmlElement.OffsetParent%2A>と<xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A>の異なる`span1`、`span2`と`span3`:</span><span class="sxs-lookup"><span data-stu-id="0c3d5-453">The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:</span></span>  
  
```  
<HTML>  
    <BODY id="documentBody">  
  
        <DIV id="div1">  
            <SPAN id="span1">Placeholder text 1.</SPAN>  
        </DIV>  
  
        <DIV id="div2" style="position:relative;top:100px;left:100px;">  
            <SPAN id="span2">Placeholder text 2.</SPAN>  
        </DIV>  
  
        <DIV id="div3" style="position:absolute;top:200px;left:200px;">  
            <DIV id="div4" style="position:relative;top:100px;left:100px;">  
                <SPAN id="span3">Placeholder text 3.</SPAN>  
            </DIV>  
        </DIV>  
  
    </BODY>  
</HTML>  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle OffsetRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle OffsetRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OffsetRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle OffsetRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.OffsetRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-454">親を基準とした要素の相対的な位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-454">Gets the location of an element relative to its parent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-455">親を基準とした、要素の相対的な X および Y 座標位置、幅、および高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-455">The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.</span>
          </span>
          <span data-ttu-id="0c3d5-456">要素の親が相対位置または絶対位置を使用している場合、<see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> は親要素のオフセットを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-456">If an element's parent is relatively or absolutely positioned, <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> will return the offset of the parent element.</span>
          </span>
          <span data-ttu-id="0c3d5-457">要素自体が親を基準とした相対位置を使用している場合、<see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> はその親からのオフセットを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-457">If the element itself is relatively positioned with respect to its parent, <see cref="P:System.Windows.Forms.HtmlElement.OffsetRectangle" /> will return the offset from its parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-458">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-458">Elements can be positioned on an HTML page in one of three ways:</span></span>  
  
-   <span data-ttu-id="0c3d5-459">既定のフローを配置します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-459">Default flow positioning.</span></span>  
  
-   <span data-ttu-id="0c3d5-460">相対位置でその親の基準とした、固定量で要素のオフセットをします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-460">Relative positioning, in which the element is offset by a fixed amount relative to its parent.</span></span>  
  
-   <span data-ttu-id="0c3d5-461">絶対位置を要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-461">Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</span></span>  
  
 <span data-ttu-id="0c3d5-462">要素の詳細については、HTML での配置を参照してください[要素の配置に関する](http://msdn.microsoft.com/library/ms533005.aspx)です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-462">For more information about element positioning in HTML, see [About Element Positioning](http://msdn.microsoft.com/library/ms533005.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-463">次のコード例に示す方法<xref:System.Windows.Forms.HtmlElement.OffsetParent%2A>と<xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A>の異なる`span1`、`span2`と`span3`:</span><span class="sxs-lookup"><span data-stu-id="0c3d5-463">The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:</span></span>  
  
```  
<HTML>  
    <BODY id="documentBody">  
  
        <DIV id="div1">  
            <SPAN id="span1">Placeholder text 1.</SPAN>  
        </DIV>  
  
        <DIV id="div2" style="position:relative;top:100px;left:100px;">  
            <SPAN id="span2">Placeholder text 2.</SPAN>  
        </DIV>  
  
        <DIV id="div3" style="position:absolute;top:200px;left:200px;">  
            <DIV id="div4" style="position:relative;top:100px;left:100px;">  
                <SPAN id="span3">Placeholder text 3.</SPAN>  
            </DIV>  
        </DIV>  
  
    </BODY>  
</HTML>  
```  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.HtmlElement#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.OffsetParent" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlElement left, class System.Windows.Forms.HtmlElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlElement, right As HtmlElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlElement ^ left, System::Windows::Forms::HtmlElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.HtmlElement * System.Windows.Forms.HtmlElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlElement" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0c3d5-464">最初の <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-464">The first <see cref="T:System.Windows.Forms.HtmlElement" />.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0c3d5-465">第 2 の <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-465">The second <see cref="T:System.Windows.Forms.HtmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-466">2 つの要素が等しいかどうかを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-466">Compares two elements for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-467">両方のパラメーターが <see langword="null" /> の場合、または、基になる COM インターフェイスが両方の要素で同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-467">
              <see langword="true" /> if both parameters are <see langword="null" />, or if both elements have the same underlying COM interface; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-468">等値演算子のテスト、`IUnknown`基になるに指定されたによってラップされた COM オブジェクトのポインター<xref:System.Windows.Forms.HtmlElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-468">The equality operator tests the `IUnknown` pointers of the underlying COM objects wrapped by the supplied <xref:System.Windows.Forms.HtmlElement> classes.</span></span>  
  
 <span data-ttu-id="0c3d5-469">この演算子を同等の方法は、します。 <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c3d5-469">The equivalent method for this operator is <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlElement left, class System.Windows.Forms.HtmlElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlElement, right As HtmlElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlElement ^ left, System::Windows::Forms::HtmlElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.HtmlElement * System.Windows.Forms.HtmlElement -&gt; bool" Usage="System.Windows.Forms.HtmlElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlElement" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlElement" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0c3d5-470">最初の <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-470">The first <see cref="T:System.Windows.Forms.HtmlElement" />.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0c3d5-471">第 2 の <see cref="T:System.Windows.Forms.HtmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-471">The second <see cref="T:System.Windows.Forms.HtmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-472">2 つの <see cref="T:System.Windows.Forms.HtmlElement" /> オブジェクトが等しくないかどうかを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-472">Compares two <see cref="T:System.Windows.Forms.HtmlElement" /> objects for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c3d5-473">一方の要素だけが <see langword="null" /> の場合、または 2 つのオブジェクトが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-473">
              <see langword="true" /> is only one element is <see langword="null" />, or the two objects are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="0c3d5-474">この演算子を同等の方法の否定であります。 <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0c3d5-474">The equivalent method for this operator is the negation of <xref:System.Windows.Forms.HtmlElement.Equals%2A?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterHtml">
      <MemberSignature Language="C#" Value="public string OuterHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterHtml" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OuterHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property OuterHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OuterHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterHtml : string with get, set" Usage="System.Windows.Forms.HtmlElement.OuterHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-475">現在の要素の HTML コードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-475">Gets or sets the current element's HTML code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-476">現在の要素とその子の HTML コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-476">The HTML code for the current element and its children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-477">一方<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>現在の要素の周囲のタグを除く、現在の要素に含まれるすべての HTML を返す<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>HTML タグが含まれている例ができるだけでなく、現在の要素のタグが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-477">Whereas <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return all HTML contained in the current element excluding the current element's surrounding tags, <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> includes the current element's tag as well as the HTML that tag contains, for example:</span></span>  
  
 `<HTML>`  
  
 `<BODY>`  
  
 `<DIV id="div1">`  
  
 `Hello`  
  
 `<DIV id="div2">`  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 `</BODY>`  
  
 `</HTML>`  
  
 <span data-ttu-id="0c3d5-478">この例では呼び出し<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>で`div2`が返されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-478">In this example, calling <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> on `div2` will return:</span></span>  
  
 `<DIV id="div2">`  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 `</DIV>`  
  
 <span data-ttu-id="0c3d5-479">呼び出す<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>が返されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-479">Calling <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> will return:</span></span>  
  
 `World`  
  
 `<DIV id="div3">`  
  
 `How are you?`  
  
 `</DIV>`  
  
 <span data-ttu-id="0c3d5-480">新しい値を割り当てる場合<xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>、現在の要素の参照が無効になり、名前が反映されません以外の場合は HTML のプロパティと子のコンテンツが割り当てられました。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-480">If you assign a new value to <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="OuterText">
      <MemberSignature Language="C#" Value="public string OuterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.OuterText" />
      <MemberSignature Language="VB.NET" Value="Public Property OuterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OuterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OuterText : string with get, set" Usage="System.Windows.Forms.HtmlElement.OuterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-481">現在の要素のテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-481">Gets or sets the current element's text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-482">現在の要素、およびその要素の子に含まれるテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-482">The text inside the current element, and in the element's children.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-483">しようとする HTML を持つ要素に割り当てる<xref:System.Windows.Forms.HtmlElement.OuterText%2A>、HTML コードは、テキスト ファイル内で HTML を表示していた場合と同様に、ドキュメント内でリテラルとして表示します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-483">If you attempt to assign HTML to an element with <xref:System.Windows.Forms.HtmlElement.OuterText%2A>, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</span></span> <span data-ttu-id="0c3d5-484">HTML 要素を使用して、割り当てた場合、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>プロパティ、<xref:System.Windows.Forms.HtmlElement.OuterText%2A>を返しますのすべてのテキストを使用して HTML マークアップを削除します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-484">If you assign HTML to an element using the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> property, <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will return all of the text in that HTML with the markup removed.</span></span>  
  
 <span data-ttu-id="0c3d5-485">値を割り当てる<xref:System.Windows.Forms.HtmlElement.OuterText%2A>要素に属しているすべての子要素が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-485">Assigning a value to <xref:System.Windows.Forms.HtmlElement.OuterText%2A> will destroy any child elements that belong to the element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0c3d5-486">この要素外のテキストを設定することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-486">You cannot set text outside of this element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.HtmlElement.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ Parent { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-487">現在の要素の親要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-487">Gets the current element's parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-488">HTML ドキュメントの階層で現在の要素の上位にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-488">The element above the current element in the HTML document's hierarchy.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-489"><xref:System.Windows.Forms.HtmlElement.Parent%2A>プロパティ要素のコンテキストの探索を有効にします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-489">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property enables discovery of an element's context.</span></span> <span data-ttu-id="0c3d5-490">イベント ハンドラー内で最も役に立つよう<xref:System.Windows.Forms.HtmlElement.Click>ドキュメントのオブジェクト階層の任意の場所の任意の要素が起動することができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-490">It is most useful inside of event handlers such as <xref:System.Windows.Forms.HtmlElement.Click>, which can fire for any element anywhere in the document's object hierarchy.</span></span>  
  
 <span data-ttu-id="0c3d5-491"><xref:System.Windows.Forms.HtmlElement.Parent%2A> HTML 要素 (HTML ドキュメントの上部) のプロパティを指す自体です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-491">The <xref:System.Windows.Forms.HtmlElement.Parent%2A> property of the HTML element (the top of an HTML document) points back to itself.</span></span> <span data-ttu-id="0c3d5-492">呼び出す場合<xref:System.Windows.Forms.HtmlElement.Parent%2A>、ループ内、ループのブレークの条件が、現在の要素の型との種類を比較することを確認します、`Parent`プロパティ、またはそうしないと、コードが無限ループを実行できます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-492">If you call <xref:System.Windows.Forms.HtmlElement.Parent%2A> inside a loop, verify that the loop's break condition compares the type of the current element and the type of the `Parent` property, or else your code may execute an infinite loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-493">次のコード例は、のすべてを検索、 `IMG` 、ドキュメント内にタグを使用して、<xref:System.Windows.Forms.HtmlElement.Parent%2A>プロパティをテストするかどうか、 `IMG` ; の別のページへのハイパーリンクがへの URL を代入である場合、 `ALT` の属性`IMG`タグ、ユーザー マウス ポインターを置くことが実行されますを表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-493">The following code example finds all of the `IMG` tags in a document, and uses the <xref:System.Windows.Forms.HtmlElement.Parent%2A> property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseEvent(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.RaiseEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseEvent(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.RaiseEvent : string -&gt; unit" Usage="htmlElement.RaiseEvent eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="0c3d5-494">発生させるイベントの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-494">The name of the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-495">指定したイベントを発生させて、すべての登録されたイベント ハンドラーを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-495">Causes the named event to call all registered event handlers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-496">このメソッドは HTML ドキュメント オブジェクト モデル (DOM) のイベントにアクセスに使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-496">This method is used to access HTML Document Object Model (DOM) events.</span></span> <span data-ttu-id="0c3d5-497">直接呼び出し、 [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189)メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-497">It directly calls the [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) method.</span></span> <span data-ttu-id="0c3d5-498">を通じて DOM を使用する方法についての詳細、<xref:System.Windows.Forms.HtmlElement>クラスを参照してください[、管理されている HTML ドキュメント オブジェクト モデルでのアクセスの非公開メンバー](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-498">For more information about how to use the DOM through the <xref:System.Windows.Forms.HtmlElement> class, see [Accessing Unexposed Members on the Managed HTML Document Object Model](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFocus">
      <MemberSignature Language="C#" Value="public void RemoveFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.RemoveFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFocus();" />
      <MemberSignature Language="F#" Value="member this.RemoveFocus : unit -&gt; unit" Usage="htmlElement.RemoveFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-499">現在の要素にフォーカスがある場合、そのフォーカスを要素から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-499">Removes focus from the current element, if that element has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-500">このメソッドの呼び出しを生成、<xref:System.Windows.Forms.HtmlElement.LostFocus>要素のイベントです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-500">Calling this method raises the <xref:System.Windows.Forms.HtmlElement.LostFocus> event for the element.</span></span>  
  
 <span data-ttu-id="0c3d5-501">このメソッドを使用して要素からフォーカスをオフにした場合は、タブ オーダーの次の要素ではない要素を含むドキュメントに付与されます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-501">When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignWithTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(bool alignWithTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignWithTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignWithTop);" />
      <MemberSignature Language="F#" Value="member this.ScrollIntoView : bool -&gt; unit" Usage="htmlElement.ScrollIntoView alignWithTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignWithTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignWithTop">
          <span data-ttu-id="0c3d5-502">
            <see langword="true" /> の場合、オブジェクトの最上部がウィンドウの最上部に表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-502">If <see langword="true" />, the top of the object will be displayed at the top of the window.</span>
          </span>
          <span data-ttu-id="0c3d5-503">
            <see langword="false" /> の場合、オブジェクトの最下部がウィンドウの最下部に表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-503">If <see langword="false" />, the bottom of the object will be displayed at the bottom of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-504">この要素の最上端または最下端がドキュメントのウィンドウに位置合わせされるまで、この要素を含むドキュメントをスクロールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-504">Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c3d5-505">次のコード例では、名前を使用して要素を検索し、要素の先頭が表示されるページの上部に位置合わせされるため、ページをスクロールします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-505">The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.HtmlElement#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollLeft">
      <MemberSignature Language="C#" Value="public int ScrollLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLeft : int with get, set" Usage="System.Windows.Forms.HtmlElement.ScrollLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-506">要素の端とその内容の左端との距離を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-506">Gets or sets the distance between the edge of the element and the left edge of its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-507">要素の左端とその内容の左端とのピクセル単位の距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-507">The distance, in pixels, between the left edge of the element and the left edge of its content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-508">使用可能なを使用して、スクロール領域の全サイズは<xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>です。`ScrollLeft`と<xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の 2 つのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-508">The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> are exposed independently because these are the only two properties of the scroll area that developers can set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ScrollRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ScrollRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ScrollRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.HtmlElement.ScrollRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-509">要素のスクロール可能な領域の寸法を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-509">Gets the dimensions of an element's scrollable region.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-510">要素のスクロール可能な領域のサイズと座標位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-510">The size and coordinate location of the scrollable area of an element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-511">要素に、要素のオーバーフロー スタイルのレンダリングのスクロール バーを禁止する場合を除きはそのコンテンツがその次元のサイズを超えた場合スクロール可能な領域があります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-511">An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.</span></span>  
  
 <span data-ttu-id="0c3d5-512">スクロール領域のサイズを直接変更することはできませんが、スクロール領域の端と、要素の端の間の距離を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-512">You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.</span></span> <span data-ttu-id="0c3d5-513">使用して、<xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>と<xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>これを実現するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-513">Use the <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> properties to achieve this.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollTop">
      <MemberSignature Language="C#" Value="public int ScrollTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.ScrollTop" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollTop : int with get, set" Usage="System.Windows.Forms.HtmlElement.ScrollTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-514">要素の端とその内容の上端との距離を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-514">Gets or sets the distance between the edge of the element and the top edge of its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-515">要素の上端とその内容の上端とのピクセル単位の距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-515">The distance, in pixels, between the top edge of the element and the top edge of its content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-516">使用可能なを使用して、スクロール領域の全サイズは<xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>です。<xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>と`ScrollTop`はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の 2 つのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-516">The full dimensions of the scroll area are available using <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> and `ScrollTop` are exposed independently because these are the only two properties of the scroll area that developers can set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string attributeName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAttribute(string attributeName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (attributeName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ attributeName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetAttribute : string * string -&gt; unit" Usage="htmlElement.SetAttribute (attributeName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">
          <span data-ttu-id="0c3d5-517">設定する属性名です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-517">The name of the attribute to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0c3d5-518">この属性の新しい値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-518">The new value of this attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c3d5-519">要素の名前付き属性の値を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-519">Sets the value of the named attribute on the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-520">HTML 内の属性は、その要素のいずれかの有効な名前と値ペアです。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-520">An attribute in HTML is any valid name-value pair for that element.</span></span> <span data-ttu-id="0c3d5-521"><xref:System.Windows.Forms.HtmlElement> 要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。`SRC`の定義済み属性は、`IMG`などのタグのではなく、`DIV`タグ。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-521"><xref:System.Windows.Forms.HtmlElement> exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; `SRC` is a predefined attribute for the `IMG` tag, for example, but not for the `DIV` tag.</span></span> <span data-ttu-id="0c3d5-522">使用して<xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>と<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-522">Use <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to manipulate attributes not exposed on the managed Document Object Model (DOM).</span></span>  
  
 <span data-ttu-id="0c3d5-523">場合`attributeName`要素で定義された属性ではない<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を新しい属性として要素を定義します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-523">If `attributeName` is not a defined attribute on an element, <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> will define it on the element as a new attribute.</span></span>  
  
 <span data-ttu-id="0c3d5-524"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> および<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-524"><xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> and <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> are case-insensitive.</span></span>  
  
 <span data-ttu-id="0c3d5-525">設定する、`class`属性を<xref:System.Windows.Forms.HtmlElement>、として属性を参照する必要があります`className`1 番目の引数を指定する場合 <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="0c3d5-525">To set the `class` attribute on an <xref:System.Windows.Forms.HtmlElement> , you must refer to the attribute as `className` when specifying the first argument to <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-526">次のコード例は、新しく追加`IMG`を現在の要素を使用して文書化します。<xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>を設定する、`SRC`イメージの属性です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-526">The following code example adds a new `IMG` element to the current document, using <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> to set the `SRC` attribute for the image.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlElement#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public string Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Style { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : string with get, set" Usage="System.Windows.Forms.HtmlElement.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-527">現在の要素のスタイルのセミコロン区切りリストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-527">Gets or sets a semicolon-delimited list of styles for the current element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-528">要素のすべてのスタイルを記述した文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-528">A string consisting of all of the element's styles</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-529">HTML ドキュメント オブジェクト モデル (DOM) を使ってスタイル World Wide Web コンソーシアムをカスケード スタイル シートの仕様で定義されている要素の表示を制御します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-529">The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.</span></span> <span data-ttu-id="0c3d5-530">スタイル、<xref:System.Windows.Forms.HtmlElement.Style%2A>プロパティは、コロンで区切られた名前と値のペアの形式、次のように、セミコロンで区切られた各ペアを取る。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-530">Styles in the <xref:System.Windows.Forms.HtmlElement.Style%2A> property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:</span></span>  
  
 `style-name1:value1;...;[style-nameN:valueN;]`  
  
 <span data-ttu-id="0c3d5-531">フォントを設定する、 `DIV` 14 ポイント Times New roman bold 要素、たとえば、割り当てると、次の文字列。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-531">To set the font for a `DIV` element to 14-point Times New Roman bold, for example, you would assign the following string:</span></span>  
  
 `font-face:Times New Roman;font-size:14px;font-weight:bold;`  
  
 <span data-ttu-id="0c3d5-532">HTML DOM 内のすべての利用可能なスタイルの一覧については、次を参照してください。[スタイル属性](http://msdn.microsoft.com/library/ms534651.aspx)です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-532">For a full list of all available styles in the HTML DOM, see [STYLE Attribute](http://msdn.microsoft.com/library/ms534651.aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Windows.Forms.HtmlElement.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-533">この要素のタブ オーダーにおける位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-533">Gets or sets the location of this element in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-534">タブ オーダーにおける要素の数値インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-534">The numeric index of the element in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-535"><xref:System.Windows.Forms.HtmlElement.TabIndex%2A> HTML ドキュメント内のどの要素は、ユーザーが TAB キーを押すとフォーカス次を決定します。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-535"><xref:System.Windows.Forms.HtmlElement.TabIndex%2A> determines which element in an HTML document will next receive focus when the user presses the TAB key.</span></span> <span data-ttu-id="0c3d5-536">タブ オーダーに含まれる唯一の要素は、既定では、 `INPUT` 、要素、`SELECT`制御、および任意の要素が`contentEditable`プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-536">By default, the only elements included in the tab order are `INPUT` elements, the `SELECT` control, and any element whose `contentEditable` property is set to `true`.</span></span> <span data-ttu-id="0c3d5-537">タブ オーダー内など任意の HTML 要素を含めることができます、 `DIV`、明示的な代入することで<xref:System.Windows.Forms.HtmlElement.TabIndex%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-537">You can include any HTML element in the tab order, such as a `DIV`, by assigning it an explicit <xref:System.Windows.Forms.HtmlElement.TabIndex%2A>.</span></span>  
  
 <span data-ttu-id="0c3d5-538">有効な値<xref:System.Windows.Forms.HtmlElement.TabIndex%2A>-32767 から 32767 までの範囲です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-538">Valid values for <xref:System.Windows.Forms.HtmlElement.TabIndex%2A> range from -32767 to 32767.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlElement.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Windows.Forms.HtmlElement.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c3d5-539">HTML タグの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-539">Gets the name of the HTML tag.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c3d5-540">HTML マークアップを使用してこの要素を作成するために使用する名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c3d5-540">The name used to create this element using HTML markup.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c3d5-541">HTML ドキュメント オブジェクト モデル内の要素は、属性、プロパティ、およびそれらの要素に固有のメソッドがあります。など、`HREF`属性を`A`要素、または`Submit`メソッド`FORM`です。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-541">Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the `HREF` attribute on the `A` element, or the `Submit` method on `FORM`.</span></span> <span data-ttu-id="0c3d5-542">使用して<xref:System.Windows.Forms.HtmlElement.TagName%2A>可能性のある任意の型の要素があるし、型固有の操作を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-542">Use <xref:System.Windows.Forms.HtmlElement.TagName%2A> when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c3d5-543">次のコード例は、のすべてを検索、 `IMG` 、ドキュメント内にタグを使用して、`TagName`プロパティをテストするかどうか、 `IMG` ; の別のページへのハイパーリンクがへの URL を代入である場合、 `ALT` の属性`IMG`タグ、ユーザー マウス ポインターを置くことが実行されますを表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0c3d5-543">The following code example finds all of the `IMG` tags in a document, and uses the `TagName` property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.</span></span>  
  
 [!code-csharp[System.Windows.Forms.HtmlElement#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.HtmlElement#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElement/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.HtmlDocument.GetElementsByTagName(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>