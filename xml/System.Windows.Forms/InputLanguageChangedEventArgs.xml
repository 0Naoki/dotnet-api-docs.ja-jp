<Type Name="InputLanguageChangedEventArgs" FullName="System.Windows.Forms.InputLanguageChangedEventArgs">
  <TypeSignature Language="C#" Value="public class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputLanguageChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputLanguageChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type InputLanguageChangedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データを使用することができます、<xref:System.Windows.Forms.InputLanguageChangedEventArgs>する入力方式エディター (Ime) を変更または右から左の値を交換するかどうかを決定します。 変更することもできます、<xref:System.Threading.Thread.CurrentCulture%2A>スレッドの<xref:System.Threading.Thread.CurrentUICulture%2A>プロパティさまざまなリソース取得されるようにします。  
  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs>ロケールと、新しい入力言語の文字セットを識別します。  
  
 <xref:System.Windows.Forms.Form.InputLanguageChanging>イベントの前に、<xref:System.Windows.Forms.Form.InputLanguageChanged>イベント。  
  
   
  
## Examples  
 次の例では、作成、新しい<xref:System.Windows.Forms.Form>にイベント ハンドラーをアタッチし、<xref:System.Windows.Forms.Form.InputLanguageChanged>イベント。 このイベントの変更、`IMEmode`入力言語が日本語に変更されたとき。  
  
 [!code-cpp[InputLanguageChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InputLanguageChanged/CPP/form1.cpp#1)]
 [!code-csharp[InputLanguageChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InputLanguageChanged/CS/form1.cs#1)]
 [!code-vb[InputLanguageChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InputLanguageChanged/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.InputLanguage" />
    <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Globalization.CultureInfo culture, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Globalization.CultureInfo,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo, charSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Globalization::CultureInfo ^ culture, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Globalization.CultureInfo * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (culture, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="culture">入力言語のロケール。</param>
        <param name="charSet">新しい入力言語に関連付けられている文字セット。</param>
        <summary>ロケールと文字セットを指定して、<see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Windows.Forms.InputLanguage inputLanguage, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.InputLanguage inputLanguage, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Windows.Forms.InputLanguage,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Windows::Forms::InputLanguage ^ inputLanguage, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Windows.Forms.InputLanguage * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (inputLanguage, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputLanguage" Type="System.Windows.Forms.InputLanguage" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="inputLanguage">入力言語。</param>
        <param name="charSet">新しい入力言語に関連付けられている文字セット。</param>
        <summary>入力言語と文字セットを指定して、<see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力言語では、カルチャ/キーボード レイアウトの組み合わせを指定します。  
  
 参照してください、<xref:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet%2A>有効な文字セットの一覧のプロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public byte CharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharSet As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte CharSet { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.CharSet : byte" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しい入力言語に関連付けられている文字セットを取得します。</summary>
        <value>文字セットに対応する 8 ビット符号なし整数。次の表に示します。  
  
 <list type="table"><listheader><term> 文字セット</term><description>値</description> </listheader> <item> <term> ANSI_CHARSET </term> <description> 0 </description> </item> <item> <term>DEFAULT_CHARSET </term> <description> 1 </description> </item> <item> <term> SYMBOL_CHARSET </term> <description> 2 </description> </item> <item> <term>MAC_CHARSET </term> <description> 77 </description> </item> <item> <term> SHIFTJI_CHARSET </term> <description> 128 </description> </item> <item> <term>HANGEUL_CHARSET </term> <description> 129 </description> </item> <item> <term> HANGUL_CHARSET </term> <description> 129 </description> </item> <item><term> JOHAB_CHARSET </term> <description> 130 </description> </item> <item> <term> GB2312_CHARSET </term> <description> 134 </description></item> <item> <term> CHINESEBIG5_CHARSET </term> <description> 136 </description> </item> <item> <term> GREEK_CHARSET </term><description> 161 </description> </item> <item> <term> TURKISH_CHARSET </term> <description> 162 </description> </item> <item><term> VIETNAMESE_CHARSET </term> <description> 163 </description> </item> <item> <term> HEBREW_CHARSET </term> <description> 177 </description></item> <item> <term> ARABIC_CHARSET </term> <description> 178 </description> </item> <item> <term> BALTIC_CHARSET </term> <description> 186 </description> </item> <item> <term> RUSSIAN_CHARSET </term> <description> 204 </description> </item> <item> <term> THAI_CHARSET </term> <description> 222 </description> </item> <item> <term> EASTEUROPE_CHARSET </term> <description> 238 </description> </item> <item> <term> OEM_CHARSET</term>{1  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、ユーザーの切り替えを Win32 文字セットです。 ANSI システムでは、正しい文字セットを表示できるフォントを作成するこのプロパティを使用できます。 Unicode システムを通常必要はありませんこのプロパティを使用します。 代わりに、使用、<xref:System.Globalization.CultureInfo>これらの機能のためのクラス。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力言語のロケールを取得します。</summary>
        <value>入力言語のロケールを指定する <see cref="T:System.Globalization.CultureInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.InputLanguageChangedEventArgs.Culture%2A>プロパティを指定します、<xref:System.Globalization.CultureInfo>し、言語、サブ言語、国/地域、およびユーザーのカルチャの規則に依存するユーザー設定の情報のセットを定義します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InputLanguage InputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.InputLanguage InputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InputLanguage ^ InputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力言語を示す値を取得します。</summary>
        <value>オブジェクトに関連付けられた入力言語。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>