<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="863386f3d0e7e915403f816ec1fb401a03754863" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72401648" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9048-101">4 つの異なるビューの 1 つを使用して表示できる項目のコレクションを表示する、Windows リスト ビュー コントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="c9048-101">Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-102">@No__t 0 コントロールを使用すると、項目のテキストを含む項目の一覧を表示できます。また、必要に応じて、項目の種類を識別するアイコンを表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-102">A <xref:System.Windows.Forms.ListView> control allows you to display a list of items with item text and, optionally, an icon to identify the type of item.</span></span> <span data-ttu-id="c9048-103">たとえば、エクスプローラーのファイルの一覧は、@no__t 0 コントロールのように見えます。</span><span class="sxs-lookup"><span data-stu-id="c9048-103">For example, the Windows Explorer list of files is similar in appearance to a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-104">ツリーで現在選択されているファイルとフォルダーの一覧が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-104">It displays a list of the files and folders currently selected in the tree.</span></span> <span data-ttu-id="c9048-105">各ファイルとフォルダーには、ファイルまたはフォルダーの種類を識別できるように、関連付けられているアイコンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-105">Each file and folder displays an icon associated with it to help identify the type of file or folder.</span></span> <span data-ttu-id="c9048-106">@No__t-0 クラスは、@no__t 1 コントロール内の項目を表します。</span><span class="sxs-lookup"><span data-stu-id="c9048-106">The <xref:System.Windows.Forms.ListViewItem> class represents an item within a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-107">一覧に表示される項目は、5つの異なるビューのいずれかで表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-107">The items that are displayed in the list can be shown in one of five different views.</span></span> <span data-ttu-id="c9048-108">項目は、大きいアイコンとして、小さいアイコンとして、または縦の一覧に小さいアイコンとして表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-108">Items can be displayed as large icons, as small icons, or as small icons in a vertical list.</span></span> <span data-ttu-id="c9048-109">アイテムには、親アイテムに関連する情報を含むサブ項目を含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-109">Items can also have subitems which contain information that is related to the parent item.</span></span> <span data-ttu-id="c9048-110">詳細ビューでは、アイテムとそのサブ項目を、サブアイテムに表示されている情報を識別する列ヘッダーを持つグリッドに表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-110">The details view allows you to display the item and its subitems in a grid with column headers that identify the information being displayed in a subitem.</span></span> <span data-ttu-id="c9048-111">タイルビューでは、以下で説明するように、可用性が制限されているため、テキスト情報の横に大きいアイコンが含まれるタイルとして項目とそのサブ項目を表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-111">The tile view, which has limited availability as described below, allows you to display the item and its subitems as a tile that contains a large icon next to the textual information.</span></span> <span data-ttu-id="c9048-112"><xref:System.Windows.Forms.ListView> は、1つまたは複数の選択をサポートします。</span><span class="sxs-lookup"><span data-stu-id="c9048-112"><xref:System.Windows.Forms.ListView> supports single or multiple selection.</span></span> <span data-ttu-id="c9048-113">複数選択機能を使用すると、ユーザーは @no__t 0 コントロールと同様の方法で項目の一覧から選択できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-113">The multiple selection feature lets the user select from a list of items in a way similar to a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="c9048-114">さらに、ユーザーは選択した項目をアクティブ化してタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-114">Additionally, the user can activate selected items to perform a task.</span></span> <span data-ttu-id="c9048-115">たとえば、@no__t 0 コントロールを使用して、アプリケーションが開いて利用できるファイルの一覧を表示することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-115">For example, you could use a <xref:System.Windows.Forms.ListView> control to display a list of files that the application can then open and utilize.</span></span> <span data-ttu-id="c9048-116">ユーザーは、開くファイルを選択してダブルクリックすることで、項目をアクティブ化し、アプリケーション内のファイルを開くことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-116">The user can select the files to open and then double-click them to activate the items and open the files in the application.</span></span> <span data-ttu-id="c9048-117">@No__t-0 は、<xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティを使用してチェックボックスを表示し、ユーザーがアクションを実行する項目をチェックできるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-117">The <xref:System.Windows.Forms.ListView> can also display check boxes, using the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property, to allow the user to check the items that they want to perform an action on.</span></span> <span data-ttu-id="c9048-118">@No__t 0 コントロールは、さまざまな方法で使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-118">You can use the <xref:System.Windows.Forms.ListView> control in a variety of ways.</span></span> <span data-ttu-id="c9048-119">コントロールを使用して、アプリケーション、データベース、またはテキストファイルの情報を表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-119">The control can be used to display information from an application, a database, or a text file.</span></span> <span data-ttu-id="c9048-120">@No__t 0 を使用して、処理するファイルのセットを選択するなど、ユーザーから情報を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-120">The <xref:System.Windows.Forms.ListView> can also be used to obtain information from the user, such as selecting a set of files to process.</span></span>  
  
 <span data-ttu-id="c9048-121"><xref:System.Windows.Forms.ListView> には、外観と動作の柔軟性を提供する多数のプロパティが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-121"><xref:System.Windows.Forms.ListView> provides a large number of properties that provide flexibility in appearance and behavior.</span></span> <span data-ttu-id="c9048-122">@No__t-0 プロパティを使用すると、アイテムの表示方法を変更できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-122">The <xref:System.Windows.Forms.ListView.View%2A> property allows you to change the way in which items are displayed.</span></span> <span data-ttu-id="c9048-123">@No__t-0、<xref:System.Windows.Forms.ListView.SmallImageList%2A>、および <xref:System.Windows.Forms.ListView.StateImageList%2A> の各プロパティを使用すると、項目に対して表示されるイメージを含む3つのオブジェクトを指定できます。また、@no__t 4 の場合は、<xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティが `true` に設定されているときに表示されるチェックボックスも @no__t 指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-123">The <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>, and <xref:System.Windows.Forms.ListView.StateImageList%2A> properties allow you to specify the <xref:System.Windows.Forms.ImageList> objects that contain the images displayed for items and, in the case of the <xref:System.Windows.Forms.ListView.StateImageList%2A>, the check boxes that are displayed when the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property is set to `true`.</span></span> <span data-ttu-id="c9048-124">どの項目がチェックされているかを判断するには、<xref:System.Windows.Forms.ListView.CheckedItems%2A> プロパティを使用して、<xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> コレクションにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9048-124">To determine which items are checked, you can use the <xref:System.Windows.Forms.ListView.CheckedItems%2A> property to access the <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> collection.</span></span> <span data-ttu-id="c9048-125">@No__t-0 プロパティを使用すると、<xref:System.Windows.Forms.ListView.ColumnHeaderCollection> にアクセスできます。このプロパティは、コントロールの <xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されている場合に表示される列ヘッダーを格納します。</span><span class="sxs-lookup"><span data-stu-id="c9048-125">The <xref:System.Windows.Forms.ListView.Columns%2A> property allows access to the <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, which stores the column headers that are displayed when the <xref:System.Windows.Forms.ListView.View%2A> property of the control is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-126">項目は、<xref:System.Windows.Forms.ListView> から <xref:System.Windows.Forms.ListView.Items%2A> の各プロパティに追加および削除されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-126">Items are added and removed from the <xref:System.Windows.Forms.ListView> through the <xref:System.Windows.Forms.ListView.Items%2A> property.</span></span> <span data-ttu-id="c9048-127">@No__t-0 プロパティを使用すると、コントロールの @no__t にアクセスできます。このコントロールには、コントロール内の項目を操作するためのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-127">The <xref:System.Windows.Forms.ListView.Items%2A> property allows you to access the <xref:System.Windows.Forms.ListView.ListViewItemCollection> of the control, which provides methods for manipulating the items in the control.</span></span> <span data-ttu-id="c9048-128">ユーザーが項目のテキストを編集できるようにする場合は、<xref:System.Windows.Forms.ListView.LabelEdit%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-128">If you want to allow the user to edit the text of an item, you can use the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property.</span></span> <span data-ttu-id="c9048-129">コントロールに多数の項目が含まれている場合は、多くの場合、ユーザーが並べ替えられたリストに表示される方が簡単です。</span><span class="sxs-lookup"><span data-stu-id="c9048-129">When your control contains a large number of items, it is often easier for the user to see them in a sorted list.</span></span> <span data-ttu-id="c9048-130">@No__t-0 プロパティを使用して、項目をアルファベット順に並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-130">You can use the <xref:System.Windows.Forms.ListView.Sorting%2A> property to sort the items alphabetically.</span></span> <span data-ttu-id="c9048-131">@No__t 0 コントロールの外観を完全にカスタマイズすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-131">You can also completely customize the appearance of a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-132">これを行うには、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティを `true` に設定し、次のイベントの1つ以上を処理します。 <xref:System.Windows.Forms.ListView.DrawItem>、<xref:System.Windows.Forms.ListView.DrawSubItem>、<xref:System.Windows.Forms.ListView.DrawColumnHeader>。</span><span class="sxs-lookup"><span data-stu-id="c9048-132">To do this, set the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property to `true` and handle one or more of the following events: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.</span></span>  
  
 <span data-ttu-id="c9048-133">@No__t-0 コントロールのプロパティの多くは、コントロールの <xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されている場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-133">Many of the properties of the <xref:System.Windows.Forms.ListView> control are used when the <xref:System.Windows.Forms.ListView.View%2A> property of the control is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-134">@No__t-0 プロパティを使用すると、<xref:System.Windows.Forms.ListView> コントロールのユーザーは、実行時に列の順序を再構成できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-134">The <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> property allows the user of your <xref:System.Windows.Forms.ListView> control to reconfigure the order of columns at run time.</span></span> <span data-ttu-id="c9048-135">@No__t-0 プロパティを使用すると、項目だけでなく項目のサブ項目も選択できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-135">The <xref:System.Windows.Forms.ListView.FullRowSelect%2A> property allows an item and its subitems to be selected instead of just the item.</span></span> <span data-ttu-id="c9048-136">詳細ビューにグリッド線を表示して <xref:System.Windows.Forms.ListView> の項目とサブ項目の境界を特定するには、<xref:System.Windows.Forms.ListView.GridLines%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-136">To display gridlines in the details view to identify the boundaries of items and subitems in the <xref:System.Windows.Forms.ListView>, you can use the <xref:System.Windows.Forms.ListView.GridLines%2A> property.</span></span> <span data-ttu-id="c9048-137">@No__t-0 プロパティを使用すると、表示する列ヘッダーの種類を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-137">The <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property allows you to specify the type of column headers to display.</span></span>  
  
 <span data-ttu-id="c9048-138">@No__t 0 コントロールは、<xref:System.Windows.Forms.ListView.Items%2A> コレクションに格納されるのではなく、<xref:System.Windows.Forms.ListViewItem> オブジェクトが動的に生成される仮想モードで動作できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-138">A <xref:System.Windows.Forms.ListView> control can operate in virtual mode, where <xref:System.Windows.Forms.ListViewItem> objects are generated dynamically instead of being stored in the <xref:System.Windows.Forms.ListView.Items%2A> collection.</span></span> <span data-ttu-id="c9048-139">これは、内容が頻繁に変更される非常に大きなリストやリストを扱う場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="c9048-139">This can be useful for dealing with very large lists or lists whose contents frequently change.</span></span> <span data-ttu-id="c9048-140">仮想モードを有効にするには、<xref:System.Windows.Forms.ListView.VirtualMode%2A> プロパティを `true` に設定し、<xref:System.Windows.Forms.ListView.RetrieveVirtualItem>、<xref:System.Windows.Forms.ListView.CacheVirtualItems>、および @no__t 4 のイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="c9048-140">To enable Virtual mode, set the <xref:System.Windows.Forms.ListView.VirtualMode%2A> property to `true` and handle the <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>, and <xref:System.Windows.Forms.ListView.SearchForVirtualItem> events.</span></span>  
  
 <span data-ttu-id="c9048-141">@No__t 0 コントロールに使用できる多くのプロパティに加えて、アプリケーションで <xref:System.Windows.Forms.ListView> に追加機能を提供するために使用できるメソッドとイベントがあります。</span><span class="sxs-lookup"><span data-stu-id="c9048-141">In addition to the many properties that are available for a <xref:System.Windows.Forms.ListView> control, there are methods and events that your application can use to provide additional capabilities to the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-142">@No__t-0 および <xref:System.Windows.Forms.ListView.EndUpdate%2A> のメソッドを使用すると、項目が追加されるたびにコントロールが再描画されないようにすることで、複数の項目を @no__t 2 に追加するときのパフォーマンスを向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-142">The <xref:System.Windows.Forms.ListView.BeginUpdate%2A> and <xref:System.Windows.Forms.ListView.EndUpdate%2A> methods allow you to improve performance when you add many items to a <xref:System.Windows.Forms.ListView> by preventing the control from repainting every time that an item is added.</span></span> <span data-ttu-id="c9048-143">@No__t 0 コントロールに項目とサブ項目が表示されている場合は、ユーザーがサブ項目を右クリックしたときに機能を提供することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-143">If your <xref:System.Windows.Forms.ListView> control is displaying items and subitems, you may want to provide functionality when the user right-clicks a subitem.</span></span> <span data-ttu-id="c9048-144">サブ項目がクリックされている項目を確認するには、<xref:System.Windows.Forms.ListView.GetItemAt%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-144">To determine the item whose subitem is being clicked, you can use the <xref:System.Windows.Forms.ListView.GetItemAt%2A> method.</span></span> <span data-ttu-id="c9048-145">ユーザーが項目を編集した後で、その項目の検証を実行する場合は、ユーザーに特定の項目を表示して変更することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-145">When performing validation of the items after the user has edited them, you may want to display a specific item to the user to change.</span></span> <span data-ttu-id="c9048-146">@No__t-0 メソッドを呼び出して、特定の項目がコントロールの表示領域内にあることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-146">The <xref:System.Windows.Forms.ListView.EnsureVisible%2A> method can be called to ensure that the specific item is in the visible area of the control.</span></span>  
  
 <span data-ttu-id="c9048-147">@No__t 0 のプロパティが `true` に設定されている場合は、<xref:System.Windows.Forms.ListView.BeforeLabelEdit> および <xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントのイベントハンドラーを作成することによって、テキストの変更前後に編集されるテキストの検証などのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-147">If the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property set to `true`, you can perform tasks such as validating the text being edited before and after the text changed by creating an event handler for the <xref:System.Windows.Forms.ListView.BeforeLabelEdit> and <xref:System.Windows.Forms.ListView.AfterLabelEdit> events.</span></span> <span data-ttu-id="c9048-148">@No__t-0 に表示される項目を編集するためにファイルを開く、またはダイアログボックスを表示するなどのタスクを実行するには、<xref:System.Windows.Forms.ListView.ItemActivate> イベントのイベントハンドラーを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-148">To perform tasks such as opening a file or displaying a dialog box to edit an item displayed in a <xref:System.Windows.Forms.ListView>, you can create an event handler for the <xref:System.Windows.Forms.ListView.ItemActivate> event.</span></span> <span data-ttu-id="c9048-149">ユーザーが列ヘッダーをクリックしたときに <xref:System.Windows.Forms.ListView> の項目を並べ替えることを許可した場合は、<xref:System.Windows.Forms.ListView.ColumnClick> イベントのイベントハンドラーを作成して並べ替えを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-149">If you allow the user to sort the items in a <xref:System.Windows.Forms.ListView> when they click a column header, you can create an event handler for the <xref:System.Windows.Forms.ListView.ColumnClick> event to perform the sorting.</span></span> <span data-ttu-id="c9048-150">@No__t-0 プロパティが `true` に設定されている場合、<xref:System.Windows.Forms.ListView.ItemCheck> イベントを処理することによって、項目のチェック状態の変更がいつ発生したかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-150">When the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property is set to `true`, you can determine when a change in an item's check state has occurred by handling the <xref:System.Windows.Forms.ListView.ItemCheck> event.</span></span>  
  
 <span data-ttu-id="c9048-151">また、<xref:System.Windows.Forms.Control.BackgroundImage%2A> プロパティを使用して <xref:System.Windows.Forms.ListView> の背景画像を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-151">You can also set a background image for the <xref:System.Windows.Forms.ListView> with the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property.</span></span> <span data-ttu-id="c9048-152">@No__t-2 コントロールの背景画像を正しく表示するには、アプリケーションの `Main` メソッドに @no__t 0 が設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-152">Your application must have the <xref:System.STAThreadAttribute> on its `Main` method to correctly display the background image for the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-153">また、背景イメージを持つ @no__t 0 コントロールが Internet Explorer でホストされている場合は、アプリケーションマニフェストファイルの依存アセンブリとして comctl32.dll バージョン6.0 を指定して、背景画像がプロパティに表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="c9048-153">In addition, if a <xref:System.Windows.Forms.ListView> control with a background image is hosted in Internet Explorer, specify comctl32.dll version 6.0 as a dependent assembly in the application manifest file to ensure the background image is property displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-154">@No__t-1 コントロールの <xref:System.Windows.Forms.Control.Cursor%2A> プロパティを設定しても、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] バージョン1.1 以前のカーソルの外観には影響しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-154">Setting the <xref:System.Windows.Forms.Control.Cursor%2A> property for a <xref:System.Windows.Forms.ListView> control has no affect on the appearance of the cursor in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] versions 1.1 and earlier.</span></span>  
  
 <span data-ttu-id="c9048-155">Windows XP と Windows Server 2003 には、アプリケーションがタイルビュー、グループ化、および挿入マークを @no__t 呼び出すときに @no__t 0 コントロールを強化する3つの機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-155">Windows XP and Windows Server 2003 provide three features that enhance the <xref:System.Windows.Forms.ListView> control when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method: tile view, grouping, and the insertion mark.</span></span>  
  
 <span data-ttu-id="c9048-156">タイルビューでは、大きいアイコンの横に項目とサブアイテムのテキストを表示することによって、グラフィックとテキストの情報を調整できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-156">The tile view lets you balance graphical and textual information by displaying item and subitem text next to large icons.</span></span> <span data-ttu-id="c9048-157">この動作を有効にするには、<xref:System.Windows.Forms.ListView.View%2A> プロパティを <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> に設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-157">Set the <xref:System.Windows.Forms.ListView.View%2A> property to <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> to enable this behavior.</span></span>  
  
 <span data-ttu-id="c9048-158">グループ化機能を使用すると、項目を関連カテゴリに視覚的にグループ化できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-158">The grouping feature lets you visually group items into related categories.</span></span> <span data-ttu-id="c9048-159">この機能を有効にする場合は、<xref:System.Windows.Forms.ListView.Groups%2A> プロパティを使用して、<xref:System.Windows.Forms.ListView> コントロールに <xref:System.Windows.Forms.ListViewGroup> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="c9048-159">Use the <xref:System.Windows.Forms.ListView.Groups%2A> property to add <xref:System.Windows.Forms.ListViewGroup> objects to the <xref:System.Windows.Forms.ListView> control when you want to enable this feature.</span></span> <span data-ttu-id="c9048-160">この機能を一時的に無効にするには、<xref:System.Windows.Forms.ListView.ShowGroups%2A> プロパティを `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-160">To temporarily disable the feature, set the <xref:System.Windows.Forms.ListView.ShowGroups%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="c9048-161">挿入マーク機能を使用すると、ドラッグアンドドロップによる項目の位置合わせを視覚的なフィードバックと共に使用して、格納場所を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-161">The insertion mark feature lets you provide drag-and-drop item repositioning with visual feedback to indicate drop locations.</span></span> <span data-ttu-id="c9048-162">挿入マークを表示するには、<xref:System.Windows.Forms.ListView.InsertionMark%2A> プロパティから取得した @no__t 0 オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-162">Use the <xref:System.Windows.Forms.ListViewInsertionMark> object retrieved through the <xref:System.Windows.Forms.ListView.InsertionMark%2A> property to display the insertion mark.</span></span>  
  
 <span data-ttu-id="c9048-163">これらの機能は、Windows XP および Windows Server 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-163">These features are available only under Windows XP and Windows Server 2003.</span></span> <span data-ttu-id="c9048-164">以前のオペレーティングシステムでは、これらの機能に関連するコードは効果がありません。タイルビューは大きいアイコンビューとして表示され、挿入マークとグループは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-164">On earlier operating systems, the code that relate to these features has no effect, the tile view appears as the large icon view, and the insertion mark and groups do not display.</span></span> <span data-ttu-id="c9048-165">場合によっては、これらの機能が使用可能かどうかを判断し、使用できないときに代替機能を提供するコードを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-165">In some cases, you might want to include code that determines whether these features are available, and provide alternate functionality when they are unavailable.</span></span> <span data-ttu-id="c9048-166">これらの機能は、オペレーティングシステムのテーマ機能を提供するのと同じライブラリによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-166">These features are provided by the same library that provides the operating system themes feature.</span></span> <span data-ttu-id="c9048-167">このライブラリが使用可能かどうかを確認するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> メソッドオーバーロードを呼び出し、<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="c9048-167">To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> value.</span></span>  
  
 <span data-ttu-id="c9048-168">次の表に、@no__t 0 のメンバーと、それらがで有効なビューの一部を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-168">The following table shows some of the <xref:System.Windows.Forms.ListView> members and the views they are valid in.</span></span>  
  
|<span data-ttu-id="c9048-169">ListView メンバー</span><span class="sxs-lookup"><span data-stu-id="c9048-169">ListView member</span></span>|<span data-ttu-id="c9048-170">View</span><span class="sxs-lookup"><span data-stu-id="c9048-170">View</span></span>|  
|---------------------|----------|  
|<span data-ttu-id="c9048-171"><xref:System.Windows.Forms.ListView.Alignment%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-171"><xref:System.Windows.Forms.ListView.Alignment%2A> property</span></span>|<span data-ttu-id="c9048-172"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-172"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-173"><xref:System.Windows.Forms.ListView.AutoArrange%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-173"><xref:System.Windows.Forms.ListView.AutoArrange%2A> property</span></span>|<span data-ttu-id="c9048-174"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-174"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-175"><xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-175"><xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> method</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<span data-ttu-id="c9048-176"><xref:System.Windows.Forms.ListView.Columns%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-176"><xref:System.Windows.Forms.ListView.Columns%2A> property</span></span>|<span data-ttu-id="c9048-177"><xref:System.Windows.Forms.View.Details> または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-177"><xref:System.Windows.Forms.View.Details> or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-178"><xref:System.Windows.Forms.ListView.DrawSubItem> イベント</span><span class="sxs-lookup"><span data-stu-id="c9048-178"><xref:System.Windows.Forms.ListView.DrawSubItem> event</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<span data-ttu-id="c9048-179"><xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-179"><xref:System.Windows.Forms.ListView.FindItemWithText%2A> method</span></span>|<span data-ttu-id="c9048-180"><xref:System.Windows.Forms.View.Details>、 <xref:System.Windows.Forms.View.List>、または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-180"><xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>, or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-181"><xref:System.Windows.Forms.ListView.FindNearestItem%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-181"><xref:System.Windows.Forms.ListView.FindNearestItem%2A> method</span></span>|<span data-ttu-id="c9048-182"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-182"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-183"><xref:System.Windows.Forms.ListView.GetItemAt%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-183"><xref:System.Windows.Forms.ListView.GetItemAt%2A> method</span></span>|<span data-ttu-id="c9048-184"><xref:System.Windows.Forms.View.Details> または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-184"><xref:System.Windows.Forms.View.Details> or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-185"><xref:System.Windows.Forms.ListView.Groups%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-185"><xref:System.Windows.Forms.ListView.Groups%2A> property</span></span>|<span data-ttu-id="c9048-186">@No__t を除くすべてのビュー-0</span><span class="sxs-lookup"><span data-stu-id="c9048-186">All views except <xref:System.Windows.Forms.View.List></span></span>|  
|<span data-ttu-id="c9048-187"><xref:System.Windows.Forms.ListView.HeaderStyle%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-187"><xref:System.Windows.Forms.ListView.HeaderStyle%2A> property</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<span data-ttu-id="c9048-188"><xref:System.Windows.Forms.ListView.InsertionMark%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-188"><xref:System.Windows.Forms.ListView.InsertionMark%2A> property</span></span>|<span data-ttu-id="c9048-189"><xref:System.Windows.Forms.View.LargeIcon>、 <xref:System.Windows.Forms.View.SmallIcon>、または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-189"><xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>, or <xref:System.Windows.Forms.View.Tile></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9048-190">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-190">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-191">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-191">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-192">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-192">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-193">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-193">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-194">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-194">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control:</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-195">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-195">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-196">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-196">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-197"><see cref="T:System.Windows.Forms.ListView" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c9048-197">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListView" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9048-198">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-198">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-199">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-199">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-200">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-200">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-201">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-201">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-202">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-202">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control:</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-203">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-203">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-204">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-204">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-205">項目をアクティブにするためにユーザーが実行する必要のあるアクションの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-205">Gets or sets the type of action the user must take to activate an item.</span></span></summary>
        <value><span data-ttu-id="c9048-206"><see cref="T:System.Windows.Forms.ItemActivation" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-206">One of the <see cref="T:System.Windows.Forms.ItemActivation" /> values.</span></span> <span data-ttu-id="c9048-207">既定値は、<see cref="F:System.Windows.Forms.ItemActivation.Standard" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-207">The default is <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-208">@No__t-0 プロパティを使用すると、ユーザーが <xref:System.Windows.Forms.ListView> コントロールの項目をアクティブ化する方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-208">The <xref:System.Windows.Forms.ListView.Activation%2A> property allows you to specify how the user will activate an item in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-209">@No__t 0 の項目をアクティブ化することは、項目を選択するだけとは異なります。</span><span class="sxs-lookup"><span data-stu-id="c9048-209">Activating an item in a <xref:System.Windows.Forms.ListView> differs from just selecting an item.</span></span> <span data-ttu-id="c9048-210">項目がアクティブになると、通常、アクションは @no__t 0 イベントのイベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-210">When an item is activated, an action is typically performed in an event handler for the <xref:System.Windows.Forms.ListView.ItemActivate> event.</span></span> <span data-ttu-id="c9048-211">たとえば、アイテムがアクティブになると、ファイルを開いたり、アイテムの編集を許可するダイアログボックスを表示したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-211">For example, when an item is activated you might open a file or display a dialog box that allows the item to be edited.</span></span> <span data-ttu-id="c9048-212">通常、項目をアクティブ化するには、ユーザーがダブルクリックします。</span><span class="sxs-lookup"><span data-stu-id="c9048-212">Typically, an item is double-clicked by the user to activate it.</span></span> <span data-ttu-id="c9048-213">@No__t-0 プロパティが <xref:System.Windows.Forms.ItemActivation.OneClick> に設定されている場合は、項目を1回クリックするとアクティブになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-213">If the <xref:System.Windows.Forms.ListView.Activation%2A> property is set to <xref:System.Windows.Forms.ItemActivation.OneClick>, clicking the item one time activates it.</span></span> <span data-ttu-id="c9048-214">@No__t-0 プロパティを <xref:System.Windows.Forms.ItemActivation.TwoClick> に設定すると、標準のダブルクリックとは異なります。これは、2回のクリックの間には一定の期間を設定できるためです。</span><span class="sxs-lookup"><span data-stu-id="c9048-214">Setting the <xref:System.Windows.Forms.ListView.Activation%2A> property to <xref:System.Windows.Forms.ItemActivation.TwoClick> differs from the standard double-click because the two clicks can have any duration between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-215">@No__t-0 プロパティが <xref:System.Windows.Forms.ItemActivation.OneClick> または <xref:System.Windows.Forms.ItemActivation.TwoClick> に設定されている場合、<xref:System.Windows.Forms.ListView.LabelEdit%2A> プロパティの値に関係なく、ラベルの編集は許可されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-215">If the <xref:System.Windows.Forms.ListView.Activation%2A> property is set to <xref:System.Windows.Forms.ItemActivation.OneClick> or <xref:System.Windows.Forms.ItemActivation.TwoClick>, label editing will not be allowed regardless of the value of the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-216">指定された値が、<see cref="T:System.Windows.Forms.ItemActivation" /> メンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-216">The value specified is not one of the <see cref="T:System.Windows.Forms.ItemActivation" /> members.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-217">項目のラベルがユーザーによって編集されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-217">Occurs when the label for an item is edited by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-218">@No__t-0 イベントは、ユーザーがアイテムのテキストの変更を終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-218">The <xref:System.Windows.Forms.ListView.AfterLabelEdit> event occurs when the user finishes modifying the text for an item.</span></span> <span data-ttu-id="c9048-219">ユーザーが項目に対して入力する新しい文字列はイベントに渡され、イベントハンドラーは変更を拒否できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-219">The new string that the user types for the item is passed to the event, and the event handler can reject the change.</span></span> <span data-ttu-id="c9048-220">イベントハンドラーによって変更が拒否された場合、テキストは、ユーザーがアイテムの編集を開始する前のテキストに戻ります。</span><span class="sxs-lookup"><span data-stu-id="c9048-220">If the event handler rejects the change, the text reverts to the text as it was before the user began editing the item.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-221">@No__t-0 イベントはラベルの編集がコミットされる前に発生するため、このイベントのハンドラーで <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> メソッドを呼び出すと、元の値を使用して項目が並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-221">Because the <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> event takes place before the label edit is committed, calling the <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> method in a handler for this event will sort the item using the original value.</span></span>  
  
 <span data-ttu-id="c9048-222">@No__t-0 イベントを発生させるには、<xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.LabelEdit%2A> プロパティを `true` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-222">In order for the <xref:System.Windows.Forms.ListView.AfterLabelEdit> event to be raised, the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property of the <xref:System.Windows.Forms.ListView> control must be set to `true`.</span></span>  
  
 <span data-ttu-id="c9048-223">@No__t-0 イベントのイベントハンドラーを作成して、ユーザーが項目のテキストを編集する前にタスクを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-223">You can create an event handler for the <xref:System.Windows.Forms.ListView.BeforeLabelEdit> event to perform tasks before the user edits the text of an item.</span></span>  
  
 <span data-ttu-id="c9048-224">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-224">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-225">次のコード例は、<xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントを使用して、新しく編集されたラベルをアルファベットの文字に制限する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-225">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView.AfterLabelEdit> event to restrict a newly edited label to characters in the alphabet.</span></span> <span data-ttu-id="c9048-226">この例では、<xref:System.Text.ASCIIEncoding> クラスを使用して、新しいラベルの各文字の ASCII 文字コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-226">The example uses the <xref:System.Text.ASCIIEncoding> class to obtain the ASCII character code of each character of the new label.</span></span> <span data-ttu-id="c9048-227">文字が数字を表す ASCII コードの間にある場合、新しいラベルを項目に適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c9048-227">If the character falls between the ASCII codes that represent numbers, the new label cannot be applied to the item.</span></span> <span data-ttu-id="c9048-228">この例では、フォームに @no__t 0 コントロールを作成し、そのコントロールに項目を追加している必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-228">This example requires that you have created a <xref:System.Windows.Forms.ListView> control on a form and added items to it.</span></span> <span data-ttu-id="c9048-229">また、この例では、コード例で定義されているイベントハンドラーに <xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントを接続している必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-229">The example also requires that you have connected the <xref:System.Windows.Forms.ListView.AfterLabelEdit> event to the event handler defined in the example code.</span></span> <span data-ttu-id="c9048-230">@No__t-0 クラスを使用するには、ファイルに <xref:System.Text> 名前空間が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-230">In order to use the <xref:System.Text.ASCIIEncoding> class, your file must include the <xref:System.Text> namespace.</span></span>  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-231">コントロール内の項目の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-231">Gets or sets the alignment of items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-232"><see cref="T:System.Windows.Forms.ListViewAlignment" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-232">One of the <see cref="T:System.Windows.Forms.ListViewAlignment" /> values.</span></span> <span data-ttu-id="c9048-233">既定値は、<see cref="F:System.Windows.Forms.ListViewAlignment.Top" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-233">The default is <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-234">@No__t-0 プロパティは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> または <xref:System.Windows.Forms.View.SmallIcon> に設定されている場合にのみ、アラインメントに影響します。</span><span class="sxs-lookup"><span data-stu-id="c9048-234">The <xref:System.Windows.Forms.ListView.Alignment%2A> property only affects alignment when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon> or <xref:System.Windows.Forms.View.SmallIcon>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-235">このプロパティは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.List> に設定されている場合は効果がありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-235">This property has no effect with the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.List>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-236">指定された値が <see cref="T:System.Windows.Forms.ListViewAlignment" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-236">The value specified is not one of the <see cref="T:System.Windows.Forms.ListViewAlignment" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-237">ユーザーが列ヘッダーをドラッグしてコントロールの列の並べ替えができるかどうかを示す値を、取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-237">Gets or sets a value indicating whether the user can drag column headers to reorder columns in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-238">ドラッグ アンド ドロップによる列の並べ替えができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-238"><see langword="true" /> if drag-and-drop column reordering is allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-239">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-239">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-240">@No__t-1 プロパティが <xref:System.Windows.Forms.View.Details> に設定されていない場合、<xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> プロパティの値を設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-240">Setting the value of the <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> property has no effect unless the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-241">このプロパティを使用すると、ユーザーが実行時にコントロールの列の位置を変更できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-241">You can use this property to allow users to reposition columns in the control at run time.</span></span> <span data-ttu-id="c9048-242">@No__t-0 プロパティが `true` に設定されている場合、ユーザーはコントロール内の列を配置して、アプリケーション内でのニーズを満たすように項目とそのサブ項目を表示することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-242">When the <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> property is set to `true`, users can position the columns in the control to display the item and its subitems in a way that meets their needs within your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-243">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-243">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-244">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-244">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-245">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-245">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-246">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-246">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-247">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-247">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control:</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-248">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-248">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-249">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-249">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9048-250">コントロール内の項目がアイコンとして表示されるときに、それらの項目を配置します。</span><span class="sxs-lookup"><span data-stu-id="c9048-250">Arranges items in the control when they are displayed as icons.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-251">コントロールの項目が <see cref="P:System.Windows.Forms.ListView.Alignment" /> プロパティの値に基づいてアイコンとして表示されるときに、それらの項目を配置します。</span><span class="sxs-lookup"><span data-stu-id="c9048-251">Arranges items in the control when they are displayed as icons based on the value of the <see cref="P:System.Windows.Forms.ListView.Alignment" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-252">@No__t-0 メソッドは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> または <xref:System.Windows.Forms.View.SmallIcon> に設定されている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-252">The <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method is only useful when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon> or <xref:System.Windows.Forms.View.SmallIcon>.</span></span> <span data-ttu-id="c9048-253">このバージョンの <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> メソッドを呼び出すと、<xref:System.Windows.Forms.ListView.Alignment%2A> プロパティの値に基づいて項目が配置されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-253">Calling this version of the <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method arranges the items based on the value of the <xref:System.Windows.Forms.ListView.Alignment%2A> property.</span></span> <span data-ttu-id="c9048-254">@No__t-0 プロパティとは異なる値に基づいて項目を配置するには、他のバージョンの <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-254">To cause the items to be aligned based on a value that differs from that of the <xref:System.Windows.Forms.ListView.Alignment%2A> property, use the other version of the <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c9048-255"><see cref="T:System.Windows.Forms.ListViewAlignment" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-255">One of the <see cref="T:System.Windows.Forms.ListViewAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c9048-256">コントロール内の項目が指定した配置設定を使用してアイコンとして表示されるときに、それらの項目を配置します。</span><span class="sxs-lookup"><span data-stu-id="c9048-256">Arranges items in the control when they are displayed as icons with a specified alignment setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-257">@No__t-0 メソッドは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> または <xref:System.Windows.Forms.View.SmallIcon> に設定されている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-257">The <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method is only useful when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon> or <xref:System.Windows.Forms.View.SmallIcon>.</span></span> <span data-ttu-id="c9048-258">このバージョンの <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> メソッドは、`value` パラメーターに指定されている <xref:System.Windows.Forms.ListViewAlignment> の値に基づいて、<xref:System.Windows.Forms.ListView> にアイコンを配置します。</span><span class="sxs-lookup"><span data-stu-id="c9048-258">This version of the <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method arranges the icons in the <xref:System.Windows.Forms.ListView> based on the <xref:System.Windows.Forms.ListViewAlignment> value specified in the `value` parameter.</span></span> <span data-ttu-id="c9048-259">このメソッドを呼び出すと、コントロールの <xref:System.Windows.Forms.ListView.Alignment%2A> プロパティの値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-259">Calling this method does not change the value of the <xref:System.Windows.Forms.ListView.Alignment%2A> property of the control.</span></span> <span data-ttu-id="c9048-260">このメソッドは、<xref:System.Windows.Forms.ListView.Alignment%2A> プロパティとは異なる値を使用して、コントロールのアイコンを整列するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-260">This method is used to arrange icons on the control using a different value than that of the <xref:System.Windows.Forms.ListView.Alignment%2A> property.</span></span> <span data-ttu-id="c9048-261">@No__t-0 プロパティの値に基づいて項目を配置するには、もう一方のバージョンの <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-261">To cause the items to be aligned based on the value of the <xref:System.Windows.Forms.ListView.Alignment%2A> property, use the other version of the <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9048-262"><paramref name="value" /> パラメーターで指定された値が、<see cref="T:System.Windows.Forms.ListViewAlignment" /> 列挙体のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-262">The value specified in the <paramref name="value" /> parameter is not a member of the <see cref="T:System.Windows.Forms.ListViewAlignment" /> enumeration.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-263">アイコンが自動的に配置されるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-263">Gets or sets whether icons are automatically kept arranged.</span></span></summary>
        <value><span data-ttu-id="c9048-264">アイコンが自動的に配置され、グリッドにスナップされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-264"><see langword="true" /> if icons are automatically kept arranged and snapped to the grid; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-265">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-265">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-266">@No__t-0 プロパティは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> または <xref:System.Windows.Forms.View.SmallIcon> に設定されている場合にのみ、<xref:System.Windows.Forms.ListView> コントロール内の項目を整列します。</span><span class="sxs-lookup"><span data-stu-id="c9048-266">The <xref:System.Windows.Forms.ListView.AutoArrange%2A> property only arranges items in the <xref:System.Windows.Forms.ListView> control when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon> or <xref:System.Windows.Forms.View.SmallIcon>.</span></span> <span data-ttu-id="c9048-267">@No__t 0 コントロールの項目の配置を変更するには、<xref:System.Windows.Forms.ListView.Alignment%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-267">To change the alignment of items in the <xref:System.Windows.Forms.ListView> control, use the <xref:System.Windows.Forms.ListView.Alignment%2A> property.</span></span> <span data-ttu-id="c9048-268">@No__t-0 を使用すると、実行時に重複しないように、<xref:System.Windows.Forms.ListView> コントロール内のすべての項目が自動的に配置されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-268">You can use <xref:System.Windows.Forms.ListView.AutoArrange%2A> to ensure that all items in your <xref:System.Windows.Forms.ListView> control are automatically arranged to avoid overlapping at run time.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="c9048-269">サイズを変更する列の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="c9048-269">The zero-based index of the column to resize.</span></span></param>
        <param name="headerAutoResize"><span data-ttu-id="c9048-270"><see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-270">One of the <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> values.</span></span></param>
        <summary><span data-ttu-id="c9048-271">特定の列の幅を、サイズ変更スタイルで示された幅にサイズ変更します。</span><span class="sxs-lookup"><span data-stu-id="c9048-271">Resizes the width of the given column as indicated by the resize style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-272">このメソッドを呼び出すことができるのは、<xref:System.Windows.Forms.ListView> と <xref:System.Windows.Forms.Form> を含むが構築され、@no__t 2 列のヘッダーと列に項目が設定された場合のみです。</span><span class="sxs-lookup"><span data-stu-id="c9048-272">Calling this method is only effective once the <xref:System.Windows.Forms.ListView> and containing <xref:System.Windows.Forms.Form> have been constructed, and the <xref:System.Windows.Forms.ListView> column headers and columns are populated with items.</span></span> <span data-ttu-id="c9048-273">@No__t-0 に新しい項目が追加されると、<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> が再度呼び出されない限り、列のサイズは変更されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-273">If new items are added to the <xref:System.Windows.Forms.ListView>, the columns will not resize unless <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> is called again.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-274">次の例では、詳細ビューで @no__t 0 を初期化し、<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> メソッドを使用して列のサイズを自動的に変更します。</span><span class="sxs-lookup"><span data-stu-id="c9048-274">The following example initializes a <xref:System.Windows.Forms.ListView> in detail view and automatically resizes the columns using the <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> method.</span></span> <span data-ttu-id="c9048-275">この例を実行するには、次のコードを Windows フォームに貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeResizingListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-275">To run this example, paste this code into a Windows Form and call the `InitializeResizingListView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-276"><see cref="P:System.Windows.Forms.ListView.Columns" /> が <see langword="null" /> の場合に <paramref name="columnIndex" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-276"><paramref name="columnIndex" /> is greater than 0 when <see cref="P:System.Windows.Forms.ListView.Columns" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="c9048-277">または</span><span class="sxs-lookup"><span data-stu-id="c9048-277">-or-</span></span> 
 <span data-ttu-id="c9048-278"><paramref name="columnIndex" /> が 0 未満か、列セットの数よりも大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-278"><paramref name="columnIndex" /> is less than 0 or greater than the number of columns set.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-279"><paramref name="headerAutoResize" /> が <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> 列挙体のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-279"><paramref name="headerAutoResize" /> is not a member of the <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize"><span data-ttu-id="c9048-280"><see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c9048-280">One of the <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" /> values.</span></span></param>
        <summary><span data-ttu-id="c9048-281">列の幅を、サイズ変更スタイルで示された幅にサイズ変更します。</span><span class="sxs-lookup"><span data-stu-id="c9048-281">Resizes the width of the columns as indicated by the resize style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-282">このメソッドを呼び出すことができるのは、<xref:System.Windows.Forms.ListView> と <xref:System.Windows.Forms.Form> を含むが構築され、@no__t 2 列のヘッダーと列に項目が設定された場合のみです。</span><span class="sxs-lookup"><span data-stu-id="c9048-282">Calling this method is only effective once the <xref:System.Windows.Forms.ListView> and containing <xref:System.Windows.Forms.Form> have been constructed, and the <xref:System.Windows.Forms.ListView> column headers and columns are populated with items.</span></span> <span data-ttu-id="c9048-283">@No__t-0 に新しい項目が追加されると、<xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> が再度呼び出されない限り、列のサイズは変更されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-283">If new items are added to the <xref:System.Windows.Forms.ListView>, the columns will not resize unless <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> is called again.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-284">次のコード例は、詳細ビューで @no__t 0 を初期化し、<xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> メソッドを使用して列のサイズを自動的に変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-284">The following code example demonstrates initializing a <xref:System.Windows.Forms.ListView> in detail view and automatically resizing the columns using the <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> method.</span></span> <span data-ttu-id="c9048-285">この例を実行するには、次のコードを Windows フォームに貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeResizingListView2` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-285">To run this example, paste this code into a Windows Form and call the `InitializeResizingListView2` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-286"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> が <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> に設定されていない場合に、<see cref="P:System.Windows.Forms.ListView.View" /> 以外の値を使用して <see cref="F:System.Windows.Forms.View.Details" /> が呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-286"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> is called with a value other than <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> when <see cref="P:System.Windows.Forms.ListView.View" /> is not set to <see cref="F:System.Windows.Forms.View.Details" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-287">背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-287">Gets or sets the background color.</span></span></summary>
        <value><span data-ttu-id="c9048-288">背景の <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-288">The <see cref="T:System.Drawing.Color" /> of the background.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-289">この <see cref="T:System.Windows.Forms.ListView" /> コントロールに表示される背景イメージを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-289">Gets or sets the background image displayed in this <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></summary>
        <value><span data-ttu-id="c9048-290">コントロールの背景に表示するイメージ。</span><span class="sxs-lookup"><span data-stu-id="c9048-290">The image to display in the background of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-291"><see cref="P:System.Windows.Forms.ListView.BackgroundImage" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-291">Occurs when the value of the <see cref="P:System.Windows.Forms.ListView.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-292"><see cref="T:System.Windows.Forms.ImageLayout" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-292">Gets or sets an <see cref="T:System.Windows.Forms.ImageLayout" /> value.</span></span></summary>
        <value><span data-ttu-id="c9048-293"><see cref="T:System.Windows.Forms.ImageLayout" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-293">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-294">このプロパティは @no__t 0 コントロールの背景イメージのレイアウトには影響しないため、デザイナーまたは IntelliSense に表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-294">This property has no effect on the layout of the background image of the <xref:System.Windows.Forms.ListView> control, therefore it is not shown in the designer or by IntelliSense.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-295">指定された値が <see cref="T:System.Windows.Forms.ImageLayout" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-295">The value specified is not one of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-296"><see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-296">Occurs when the <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-297"><see cref="T:System.Windows.Forms.ListView" /> の背景イメージを並べて表示する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-297">Gets or sets a value indicating whether the background image of the <see cref="T:System.Windows.Forms.ListView" /> should be tiled.</span></span></summary>
        <value><span data-ttu-id="c9048-298"><see cref="T:System.Windows.Forms.ListView" /> の背景イメージを並べて表示する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-298"><see langword="true" /> if the background image of the <see cref="T:System.Windows.Forms.ListView" /> should be tiled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-299">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-299">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-300">イメージが設定されていない場合、<xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> プロパティは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-300">The <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> property returns `false` if an image is not set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-301">ユーザーが項目のラベルの編集を開始すると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-301">Occurs when the user starts editing the label of an item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-302">@No__t-0 イベントは、ユーザーがアイテムのテキストの変更を開始したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-302">The <xref:System.Windows.Forms.ListView.BeforeLabelEdit> event occurs when the user starts modifying the text for an item.</span></span> <span data-ttu-id="c9048-303">イベントハンドラーがこのイベントをキャンセルした場合、ユーザーはテキストを編集できません。</span><span class="sxs-lookup"><span data-stu-id="c9048-303">If the event handler cancels this event, the user cannot edit the text.</span></span> <span data-ttu-id="c9048-304">このイベントを使用すると、ユーザーが @no__t 0 コントロールの特定の項目を編集できないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-304">You can use this event to prevent the user from editing specific items in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-305">@No__t-1 コントロールの @no__t 0 プロパティが `false` に設定されている場合、<xref:System.Windows.Forms.ListView.BeforeLabelEdit> イベントは発生しません。ユーザーが項目ラベルを編集しようとしても、すべて自動的に拒否されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-305">If the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property of the <xref:System.Windows.Forms.ListView> control is set to `false`, the <xref:System.Windows.Forms.ListView.BeforeLabelEdit> event is not raised; all user attempts to edit item labels are automatically rejected.</span></span>  
  
 <span data-ttu-id="c9048-306">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-306">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-307">次のコード例では、<xref:System.Windows.Forms.ListView.BeforeLabelEdit> イベントを処理し、<xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> プロパティと <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> プロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-307">The following code example demonstrates handling the <xref:System.Windows.Forms.ListView.BeforeLabelEdit> event and using the <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c9048-308">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 コントロールを含むフォームに貼り付け、少なくとも3つの項目を設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-308">To run the example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> control named `ListView1` and populated with at least three items.</span></span> <span data-ttu-id="c9048-309">例のイベントハンドラーがイベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-309">Ensure the event handler in the example is associated with its event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-310"><see cref="M:System.Windows.Forms.ListView.EndUpdate" /> メソッドが呼び出されるまで、コントロールは描画できません。</span><span class="sxs-lookup"><span data-stu-id="c9048-310">Prevents the control from drawing until the <see cref="M:System.Windows.Forms.ListView.EndUpdate" /> method is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-311">@No__t-0 に複数の項目を追加する方法としては、<xref:System.Windows.Forms.ListView.ListViewItemCollection> の <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> のメソッドを使用することをお勧めします (@no__t の <xref:System.Windows.Forms.ListView.Items%2A> プロパティを通じてアクセス)。</span><span class="sxs-lookup"><span data-stu-id="c9048-311">The preferred way to add multiple items to a <xref:System.Windows.Forms.ListView> is to use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListView.ListViewItemCollection> (accessed through the <xref:System.Windows.Forms.ListView.Items%2A> property of the <xref:System.Windows.Forms.ListView>).</span></span> <span data-ttu-id="c9048-312">これにより、1回の操作でリストに項目の配列を追加できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-312">This enables you to add an array of items to the list in a single operation.</span></span> <span data-ttu-id="c9048-313">ただし、<xref:System.Windows.Forms.ListView.ListViewItemCollection> クラスの @no__t 0 メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> メソッドを使用して、項目が追加されるたびにコントロールが @no__t 3 を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-313">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> method of the <xref:System.Windows.Forms.ListView.ListViewItemCollection> class, you can use the <xref:System.Windows.Forms.ListView.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListView> every time that an item is added.</span></span> <span data-ttu-id="c9048-314">項目をコントロールに追加するタスクを完了したら、<xref:System.Windows.Forms.ListView.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ListView> の再描画を有効にします。</span><span class="sxs-lookup"><span data-stu-id="c9048-314">When you have completed the task of adding items to the control, call the <xref:System.Windows.Forms.ListView.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListView> to repaint.</span></span> <span data-ttu-id="c9048-315">このように項目を追加すると、多数の項目がコントロールに追加されている場合に、@no__t の flickered 描画を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-315">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListView> when lots of items are being added to the control.</span></span>  
  
 <span data-ttu-id="c9048-316">@No__t-0 が2回以上呼び出される場合は、<xref:System.Windows.Forms.ListView.EndUpdate%2A> を同じ回数だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-316">If <xref:System.Windows.Forms.ListView.BeginUpdate%2A> is called more than once, <xref:System.Windows.Forms.ListView.EndUpdate%2A> must be called an equivalent number of times.</span></span> <span data-ttu-id="c9048-317">@No__t-0 に対する最後の呼び出しまでは、<xref:System.Windows.Forms.ListView> は再描画されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-317">Until the last call to <xref:System.Windows.Forms.ListView.EndUpdate%2A> the <xref:System.Windows.Forms.ListView> will not repaint.</span></span> <span data-ttu-id="c9048-318">それ以外の場合、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> に対する複数の呼び出しによる影響はありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-318">Other than this, multiple calls to <xref:System.Windows.Forms.ListView.BeginUpdate%2A> have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-319">次のコード例は、チェックボックスを含むように @no__t 0 コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-319">The following code example demonstrates initializing a <xref:System.Windows.Forms.ListView> control to contain check boxes.</span></span> <span data-ttu-id="c9048-320">また、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> および <xref:System.Windows.Forms.ListView.EndUpdate%2A> のメソッドの使用方法も示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-320">It also demonstrates how to use the <xref:System.Windows.Forms.ListView.BeginUpdate%2A> and <xref:System.Windows.Forms.ListView.EndUpdate%2A> methods.</span></span> <span data-ttu-id="c9048-321">この例を実行するには、`ListView1` という名前の @no__t 0 を含むフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-321">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-322">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-322">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-323">コントロールの境界線スタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-323">Gets or sets the border style of the control.</span></span></summary>
        <value><span data-ttu-id="c9048-324"><see cref="T:System.Windows.Forms.BorderStyle" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-324">One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span></span> <span data-ttu-id="c9048-325">既定値は、<see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-325">The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-326">@No__t-0 プロパティを使用して、フォーム上の他のコントロールの境界線スタイルの設定と一致するように <xref:System.Windows.Forms.ListView> コントロールの境界線スタイルを変更できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-326">You can use the <xref:System.Windows.Forms.ListView.BorderStyle%2A> property to change the border style of the <xref:System.Windows.Forms.ListView> control to match the border style settings of other controls on the form.</span></span> <span data-ttu-id="c9048-327">たとえば、フォーム上の他のコントロールに境界線が表示されていない場合は、他のコントロールと一致するように、<xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.BorderStyle%2A> プロパティを <xref:System.Windows.Forms.BorderStyle.None> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-327">For example, if none of the other controls on your form displays a border, you can set the <xref:System.Windows.Forms.ListView.BorderStyle%2A> property of the <xref:System.Windows.Forms.ListView> control to <xref:System.Windows.Forms.BorderStyle.None> to match the other controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-328">指定された値が <see cref="T:System.Windows.Forms.BorderStyle" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-328">The value specified is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-329">仮想モードで <see cref="T:System.Windows.Forms.ListView" /> の表示領域の内容が変化し、<see cref="T:System.Windows.Forms.ListView" /> によって項目の新しい範囲が必要であると判断された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-329">Occurs when the contents of the display area for a <see cref="T:System.Windows.Forms.ListView" /> in virtual mode has changed, and the <see cref="T:System.Windows.Forms.ListView" /> determines that a new range of items is needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-330">このイベントは、<xref:System.Windows.Forms.ListView.VirtualMode%2A> が `true` の場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-330">This event only occurs when <xref:System.Windows.Forms.ListView.VirtualMode%2A> is `true`.</span></span> <span data-ttu-id="c9048-331">このイベントを処理することで、キャッシュに保持されている項目情報を更新してすぐに使用できるように <xref:System.Windows.Forms.ListView> にすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-331">Handling this event allows the <xref:System.Windows.Forms.ListView> to update the item information held in the cache so that it is readily available.</span></span> <span data-ttu-id="c9048-332">これにより、サイズの大きいリストや、計算に負荷のかかる項目を含むリストのパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="c9048-332">This can improve performance on large lists, or lists whose items are expensive to calculate.</span></span>  
  
 <span data-ttu-id="c9048-333">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-333">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-334">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-334">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-335">この例では、イベントハンドラーはキャッシュの更新が本当に必要であることを確認し、キャッシュを再構築します。</span><span class="sxs-lookup"><span data-stu-id="c9048-335">In the example, the event handler checks to make sure a cache refresh is really necessary, and then rebuilds the cache.</span></span> <span data-ttu-id="c9048-336">このコード例は、<xref:System.Windows.Forms.ListView.VirtualMode%2A> プロパティ用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c9048-336">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ListView.VirtualMode%2A> property.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-337">コントロールの各項目の横にチェック ボックスを表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-337">Gets or sets a value indicating whether a check box appears next to each item in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-338"><see cref="T:System.Windows.Forms.ListView" /> コントロール内の各項目の横にチェック ボックスを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-338"><see langword="true" /> if a check box appears next to each item in the <see cref="T:System.Windows.Forms.ListView" /> control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-339">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-339">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-340">@No__t-0 プロパティを使用すると、リスト内の各項目の横にチェックボックスを表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-340">The <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property allows you to display a check box next to each item in the list.</span></span> <span data-ttu-id="c9048-341">これにより、ユーザーがチェックボックスをクリックして選択できる項目 (@no__t 0 のプロパティが `View.Details` に設定されている場合は、サブ項目) のリストをアプリケーションで表示できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-341">This enables your application to display a list of items (and subitems if the <xref:System.Windows.Forms.ListView.View%2A> property is set to `View.Details`) that the user can select by clicking the check box.</span></span> <span data-ttu-id="c9048-342">@No__t-0 プロパティは、CTRL キーを使用せずに @no__t 1 コントロールで複数の項目を選択する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-342">The <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property offers a way to select multiple items in the <xref:System.Windows.Forms.ListView> control without using the CTRL key.</span></span> <span data-ttu-id="c9048-343">アプリケーションによっては、チェックボックスを使用して、標準の複数選択方法ではなく項目を選択する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-343">Depending on your application, using check boxes to select items rather than the standard multiple selection method may be easier for the user.</span></span> <span data-ttu-id="c9048-344">@No__t-1 コントロールの @no__t 0 プロパティが `false` に設定されている場合でも、チェックボックスを表示して、複数の選択機能をユーザーに提供できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-344">Even if the <xref:System.Windows.Forms.ListView.MultiSelect%2A> property of the <xref:System.Windows.Forms.ListView> control is set to `false`, you can still display checkboxes and provide multiple selection capabilities to the user.</span></span> <span data-ttu-id="c9048-345">この機能は、複数の項目を選択しない場合でも、ユーザーが一覧から複数の項目を選択してアプリケーション内で操作を実行できるようにする場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="c9048-345">This feature can be useful if you do not want multiple items to be selected yet still want to allow the user to choose multiple items from the list to perform an operation within your application.</span></span>  
  
 <span data-ttu-id="c9048-346">項目がチェックされた日時を確認するには、<xref:System.Windows.Forms.ListView.ItemCheck> イベントのイベントハンドラーを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-346">To determine when an item has been checked, create an event handler for the <xref:System.Windows.Forms.ListView.ItemCheck> event.</span></span> <span data-ttu-id="c9048-347">@No__t-0 でチェックされているすべての項目を取得するには、<xref:System.Windows.Forms.ListView.CheckedItems%2A> プロパティを使用して、コントロールの <xref:System.Windows.Forms.ListView.CheckedIndexCollection> にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9048-347">To get all the items that are checked in the <xref:System.Windows.Forms.ListView>, use the <xref:System.Windows.Forms.ListView.CheckedItems%2A> property to access the <xref:System.Windows.Forms.ListView.CheckedIndexCollection> for the control.</span></span> <span data-ttu-id="c9048-348">@No__t-0 でチェックされているすべての項目のインデックスを取得するには、<xref:System.Windows.Forms.ListView.CheckedIndices%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-348">To get the indexes of all items that are checked in the <xref:System.Windows.Forms.ListView>, use the <xref:System.Windows.Forms.ListView.CheckedIndices%2A> property.</span></span>  
  
 <span data-ttu-id="c9048-349">@No__t-1 プロパティに @no__t 0 が指定されている場合、<xref:System.Windows.Forms.ImageList> のインデックス位置0と1のイメージが、チェックボックスの代わりに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-349">If an <xref:System.Windows.Forms.ImageList> is specified in the <xref:System.Windows.Forms.ListView.StateImageList%2A> property, the images at index positions 0 and 1 in the <xref:System.Windows.Forms.ImageList> are displayed instead of the check box.</span></span> <span data-ttu-id="c9048-350">[インデックス位置 0] のイメージは [unchecked] チェックボックスの代わりに表示され、[インデックス位置 1] のイメージはチェックボックスの代わりに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-350">The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-351">このプロパティを `true` に設定すると、<xref:System.Windows.Forms.ListView.ItemCheck> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-351">When you set this property to `true`, the <xref:System.Windows.Forms.ListView.ItemCheck> event occurs.</span></span>  
>   
>  <span data-ttu-id="c9048-352">@No__t-0 プロパティが <xref:System.Windows.Forms.View.Tile> に設定されている場合、チェックボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-352">Check boxes are not displayed when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Tile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-353">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-353">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-354">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-354">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-355">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-355">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-356">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-356">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-357">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-357">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-358">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-358">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-359">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-359">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-360">コントロールの現在チェックされている項目のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-360">Gets the indexes of the currently checked items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-361">現在チェックされている項目のインデックスを含んでいる <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-361">A <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> that contains the indexes of the currently checked items.</span></span> <span data-ttu-id="c9048-362">項目が現在チェックされていない場合は、空の <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-362">If no items are currently checked, an empty <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-363">このプロパティは、<xref:System.Windows.Forms.ListView> コントロールの @no__t 0 プロパティが `true` に設定されている場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-363">This property is only useful when the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.ListView> control is set to `true`.</span></span> <span data-ttu-id="c9048-364">@No__t-0 プロパティは、コントロール内でチェックされているすべての項目の @no__t 内のインデックス位置を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-364">The <xref:System.Windows.Forms.ListView.CheckedIndices%2A> property returns a collection that contains the index positions in the <xref:System.Windows.Forms.ListView.ListViewItemCollection> of all items that are checked in the control.</span></span> <span data-ttu-id="c9048-365">コレクション内の項目を操作する方法の詳細については、「<xref:System.Windows.Forms.ListView.CheckedIndexCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-365">For more information about how to manipulate the items in the collection, see <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.</span></span>  
  
 <span data-ttu-id="c9048-366">チェックされる項目のインデックス位置ではなく、@no__t 0 コントロールでチェックされる項目のコレクションを取得する場合は、<xref:System.Windows.Forms.ListView.CheckedItems%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-366">If you want to obtain a collection of the items that are checked in the <xref:System.Windows.Forms.ListView> control, instead of the index positions of the items that are checked, use the <xref:System.Windows.Forms.ListView.CheckedItems%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-367">コントロールの現在チェックされている項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-367">Gets the currently checked items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-368">現在チェックされている項目を含んでいる <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-368">A <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> that contains the currently checked items.</span></span> <span data-ttu-id="c9048-369">項目が現在チェックされていない場合は、空の <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-369">If no items are currently checked, an empty <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-370">このプロパティは、<xref:System.Windows.Forms.ListView> コントロールの @no__t 0 プロパティが `true` に設定されている場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-370">This property is only useful when the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property of the <xref:System.Windows.Forms.ListView> control is set to `true`.</span></span> <span data-ttu-id="c9048-371">@No__t-0 プロパティは、コントロールでチェックされているすべての項目を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-371">The <xref:System.Windows.Forms.ListView.CheckedItems%2A> property returns a collection that contains all items that are checked in the control.</span></span> <span data-ttu-id="c9048-372">コレクション内の項目を操作する方法の詳細については、「<xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-372">For more information about how to manipulate the items in the collection, see <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.</span></span>  
  
 <span data-ttu-id="c9048-373">チェックされる項目ではなく、<xref:System.Windows.Forms.ListView> コントロールでチェックされる項目の @no__t 0 内のインデックス位置のコレクションを取得する場合は、<xref:System.Windows.Forms.ListView.CheckedIndices%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-373">If you want to obtain a collection of the index positions within the <xref:System.Windows.Forms.ListView.ListViewItemCollection> of the items that are checked in the <xref:System.Windows.Forms.ListView> control, instead of the items that are checked, use the <xref:System.Windows.Forms.ListView.CheckedIndices%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-374">次のコード例は、<xref:System.Windows.Forms.ListView.ItemChecked> イベントを処理する、チェックされた @no__t 0 を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-374">The following code example demonstrates a checked <xref:System.Windows.Forms.ListView> that handles the <xref:System.Windows.Forms.ListView.ItemChecked> event.</span></span> <span data-ttu-id="c9048-375">この例では、<xref:System.Windows.Forms.ListView.CheckedItems%2A> プロパティを使用して、項目がオンまたはオフになるたびに新しい価格を集計します。</span><span class="sxs-lookup"><span data-stu-id="c9048-375">The example uses the <xref:System.Windows.Forms.ListView.CheckedItems%2A> property to tally a new price every time that an item is checked or unchecked.</span></span> <span data-ttu-id="c9048-376">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 と `Textbox1` という名前の @no__t を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-376">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `Textbox1`.</span></span> <span data-ttu-id="c9048-377">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-377">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-378">コントロールからすべての項目と列を削除します。</span><span class="sxs-lookup"><span data-stu-id="c9048-378">Removes all items and columns from the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-379">このメソッドを使用して <xref:System.Windows.Forms.ListView> コントロールからすべての項目と列を削除することができます。そのためには、<xref:System.Windows.Forms.ListView.ColumnHeaderCollection> クラスと <xref:System.Windows.Forms.ListView.ListViewItemCollection> クラスから個々の @no__t のメソッドを呼び出す必要がありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-379">You can use this method to remove all items and columns from the <xref:System.Windows.Forms.ListView> control without having to call the individual `Clear` methods from the <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> and <xref:System.Windows.Forms.ListView.ListViewItemCollection> classes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-380">@No__t-0 メソッドでは、@no__t 2 コントロールに対して指定された <xref:System.Windows.Forms.ListView.Groups%2A> はクリアされません。</span><span class="sxs-lookup"><span data-stu-id="c9048-380">The <xref:System.Windows.Forms.ListView.Clear%2A> method does not clear <xref:System.Windows.Forms.ListView.Groups%2A> specified for the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-381">@No__t をクリアするには、<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-381">To clear <xref:System.Windows.Forms.ListView.Groups%2A> call <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-382">次のコード例は、<xref:System.Windows.Forms.ListView.Clear%2A> と <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> のメンバーの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-382">The following code example demonstrates the use of <xref:System.Windows.Forms.ListView.Clear%2A> and <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="c9048-383">この例を実行するには、次のコードを、`ListView1` という名前の @no__t 0 と、フォームの下部にある `Button1` という名前のボタンを含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-383">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> named `ListView1` and a button, located toward the bottom of the form, named `Button1`.</span></span> <span data-ttu-id="c9048-384">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-384">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-385">ユーザーがリスト ビュー コントロール内の列ヘッダーをクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-385">Occurs when the user clicks a column header within the list view control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-386">@No__t-0 イベントは、ユーザーが <xref:System.Windows.Forms.ListView> コントロール内の項目の詳細ビューのいずれかの列ヘッダーをクリックしたときに発生します (<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されている場合)。</span><span class="sxs-lookup"><span data-stu-id="c9048-386">The <xref:System.Windows.Forms.ListView.ColumnClick> event occurs when the user clicks one of the column headers in a details view of the items in a <xref:System.Windows.Forms.ListView> control (when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details>).</span></span> <span data-ttu-id="c9048-387">@No__t-0 イベントは通常、並べ替えの基準となる列としてクリックされた列を使用して、@no__t の項目を並べ替えるために処理されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-387">The <xref:System.Windows.Forms.ListView.ColumnClick> event is typically handled to sort the items in the <xref:System.Windows.Forms.ListView> using the clicked column as the column to sort by.</span></span>  
  
 <span data-ttu-id="c9048-388">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-388">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-389">次のコード例では、<xref:System.Windows.Forms.ListView> コントロールの列がクリックされたときに項目を手動で並べ替える @no__t 0 コントロールを含むフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-389">The following code example creates a form that contains a <xref:System.Windows.Forms.ListView> control that manually sorts items when a column in the <xref:System.Windows.Forms.ListView> control is clicked.</span></span> <span data-ttu-id="c9048-390">この例では、<xref:System.Windows.Forms.ListViewItem> の比較を実行する <xref:System.Collections.IComparer?displayProperty=nameWithType> インターフェイスを実装する `ListViewItemComparer` というクラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-390">The example defines a class called `ListViewItemComparer` that implements the <xref:System.Collections.IComparer?displayProperty=nameWithType> interface that performs the <xref:System.Windows.Forms.ListViewItem> comparison.</span></span> <span data-ttu-id="c9048-391">この例では、`ListViewItemComparer` のインスタンスを作成し、それを使用して <xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-391">The example creates an instance of `ListViewItemComparer` and uses it to set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-392">@No__t-1 イベントハンドラーの <xref:System.Windows.Forms.ListView.Sort%2A> メソッド呼び出しでは、`ListViewItemComparer` で定義されているメソッドを使用して、クリックされた列に基づいて項目の並べ替えを実行します。</span><span class="sxs-lookup"><span data-stu-id="c9048-392">The <xref:System.Windows.Forms.ListView.Sort%2A> method call in the <xref:System.Windows.Forms.ListView.ColumnClick> event handler uses the methods defined in `ListViewItemComparer` to perform the sort of items, based on the column that is clicked.</span></span>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-393">列ヘッダーの順序が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-393">Occurs when the column header order is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-394">@No__t-0 イベントはキャンセル可能なイベントであり、イベントを処理し、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true` に設定することによって取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-394">The <xref:System.Windows.Forms.ListView.ColumnReordered> event is a cancelable event and can be canceled by handling the event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span> <span data-ttu-id="c9048-395">ただし、イベントが取り消された場合、<xref:System.Windows.Forms.ColumnReorderedEventArgs> の @no__t 0 は <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> の値に変わりません。</span><span class="sxs-lookup"><span data-stu-id="c9048-395">However, if the event is canceled, the <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> of the <xref:System.Windows.Forms.ColumnReorderedEventArgs> will not change to the <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> value.</span></span>  
  
 <span data-ttu-id="c9048-396">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-396">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-397">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-397">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-398">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ColumnReordered> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-398">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ColumnReordered> event.</span></span> <span data-ttu-id="c9048-399">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-399">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-400">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-400">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-401">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-401">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-402">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ColumnReordered> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-402">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ColumnReordered> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-403">コントロールに表示されるすべての列ヘッダーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-403">Gets the collection of all column headers that appear in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-404"><see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> プロパティが <see cref="P:System.Windows.Forms.ListView.View" /> に設定されているときに表示される列ヘッダーを表す <see cref="F:System.Windows.Forms.View.Details" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-404">A <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> that represents the column headers that appear when the <see cref="P:System.Windows.Forms.ListView.View" /> property is set to <see cref="F:System.Windows.Forms.View.Details" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-405">@No__t-0 プロパティは、<xref:System.Windows.Forms.ListView> コントロールに表示される @no__t 1 オブジェクトを含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-405">The <xref:System.Windows.Forms.ListView.Columns%2A> property returns a collection that contains the <xref:System.Windows.Forms.ColumnHeader> objects that are displayed in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-406"><xref:System.Windows.Forms.ColumnHeader> オブジェクトは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されている場合に <xref:System.Windows.Forms.ListView> コントロールに表示される列を定義します。</span><span class="sxs-lookup"><span data-stu-id="c9048-406"><xref:System.Windows.Forms.ColumnHeader> objects define the columns that are displayed in the <xref:System.Windows.Forms.ListView> control when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-407">各列は、<xref:System.Windows.Forms.ListView> の各項目のサブ項目情報を表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-407">Each column is used to display subitem information for each item in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-408">コレクション内の項目を操作する方法の詳細については、「<xref:System.Windows.Forms.ListView.ColumnHeaderCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-408">For more information about how to manipulate the items in the collection, see <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-409">@No__t 0 コントロールに列ヘッダーが指定されておらず、<xref:System.Windows.Forms.ListView.View%2A> プロパティを <xref:System.Windows.Forms.View.Details> に設定した場合、<xref:System.Windows.Forms.ListView> コントロールは項目を表示しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-409">If your <xref:System.Windows.Forms.ListView> control does not have any column headers specified and you set the <xref:System.Windows.Forms.ListView.View%2A> property to <xref:System.Windows.Forms.View.Details>, the <xref:System.Windows.Forms.ListView> control will not display any items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-410">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-410">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-411">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-411">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-412">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-412">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-413">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-413">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-414">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-414">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-415">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-415">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-416">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-416">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-417">列の幅が正常に変更された後で発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-417">Occurs after the width of a column is successfully changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-418">@No__t-0 イベントで列の幅の変更が取り消された場合、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-418">This event will not occur if the column width change is canceled in the <xref:System.Windows.Forms.ListView.ColumnWidthChanging> event</span></span>  
  
 <span data-ttu-id="c9048-419">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-419">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-420">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-420">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-421">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ColumnWidthChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-421">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ColumnWidthChanged> event.</span></span> <span data-ttu-id="c9048-422">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-422">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-423">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-423">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-424">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-424">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-425">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ColumnWidthChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-425">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ColumnWidthChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-426">列の幅が変更される場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-426">Occurs when the width of a column is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-427">このイベントを使用すると、@no__t 0 のプロパティを使用して新しい列の幅を確認し、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true` に設定することによってイベントをキャンセルできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-427">This event allows you to check the new column width with the <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> property, and cancel the event if you choose by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="c9048-428">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-428">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-429">次のコード例は、<xref:System.Windows.Forms.ListView.ColumnWidthChanging> イベントの処理を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-429">The following code example demonstrates handling the <xref:System.Windows.Forms.ListView.ColumnWidthChanging> event.</span></span> <span data-ttu-id="c9048-430">また、<xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> と <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のメンバーも示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-430">It also demonstrates the <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> members.</span></span> <span data-ttu-id="c9048-431">この例を実行するには、Windows フォームにコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-431">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="c9048-432">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeListView1` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-432">Call `InitializeListView1` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-433"><see cref="T:System.Windows.Forms.ListView" /> コントロールのアクセシビリティ オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-433">Creates a new instance of the accessibility object for the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></summary>
        <returns><span data-ttu-id="c9048-434">この <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> コントロールの <see cref="T:System.Windows.Forms.ListView" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-434">The <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> for this <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-435">コントロールのハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-435">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-436">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-436">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="c9048-437">常に <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-437"><see langword="null" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-438">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-438">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-439">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-439">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="c9048-440">コントロールの既定の <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-440">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c9048-441">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-441"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c9048-442"><see cref="T:System.Windows.Forms.ListView" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="c9048-442">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ListView" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-443">コンポーネントが不要になった場合は、<xref:System.Windows.Forms.ListView.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-443">Call the <xref:System.Windows.Forms.ListView.Dispose%2A> method when the component is no longer needed.</span></span> <span data-ttu-id="c9048-444">このメソッドは、コンポーネントがコンテナーから削除され (コンポーネントにサイトがある場合)、dispose イベントがトリガーされます。</span><span class="sxs-lookup"><span data-stu-id="c9048-444">This method removes the component from its container (if the component has a site) and triggers the dispose event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-445">ちらつきを軽減または回避するために、2 次バッファーを使用してコントロールの表面を再描画するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-445">Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</span></span></summary>
        <value><span data-ttu-id="c9048-446">ダブル バッファリングを使用してコントロールの表面を再描画する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-446"><see langword="true" /> if the surface of the control should be drawn using double buffering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-447"><see cref="T:System.Windows.Forms.ListView" /> の詳細ビューが描画され、<see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> プロパティが <see langword="true" /> に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-447">Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-448">このイベントを使用すると、オーナー描画を使用して @no__t 0 コントロールの外観をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-448">This event lets you customize the appearance of a <xref:System.Windows.Forms.ListView> control using owner drawing.</span></span> <span data-ttu-id="c9048-449">この値は、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティが `true` に設定され、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-449">It is raised only when the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property is set to `true` and the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c9048-450">このイベントは、コントロールの各列ヘッダーに対して発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-450">This event can occur for each column header in the control.</span></span> <span data-ttu-id="c9048-451">オーナー描画の詳細については、「<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティのリファレンス」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-451">For more information on owner drawing, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property reference topic.</span></span>  
  
 <span data-ttu-id="c9048-452">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-452">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-453">次のコード例では、<xref:System.Windows.Forms.ListView.DrawColumnHeader> イベントハンドラーの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-453">The following code example provides an implementation of a <xref:System.Windows.Forms.ListView.DrawColumnHeader> event handler.</span></span> <span data-ttu-id="c9048-454">@No__t-0 イベントハンドラーの実装など、完全な例については、「<xref:System.Windows.Forms.ListView.OwnerDraw%2A> リファレンス」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-454">For the complete example, including the implementation of the <xref:System.Windows.Forms.ListView.DrawSubItem> event handler, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> reference topic.</span></span>  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-455"><see cref="T:System.Windows.Forms.ListView" /> が描画され、<see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> プロパティが <see langword="true" /> に設定されているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-455">Occurs when a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-456">このイベントを使用すると、オーナー描画を使用して @no__t 0 コントロールの外観をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-456">This event lets you customize the appearance of a <xref:System.Windows.Forms.ListView> control using owner drawing.</span></span> <span data-ttu-id="c9048-457">この値は、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティが `true` に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-457">It is raised only when the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property is set to `true`.</span></span> <span data-ttu-id="c9048-458">オーナー描画の詳細については、「<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティのリファレンス」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-458">For more information about owner drawing, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property reference topic.</span></span>  
  
 <span data-ttu-id="c9048-459">@No__t-0 イベントは、各 <xref:System.Windows.Forms.ListView> 項目に対して発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-459">The <xref:System.Windows.Forms.ListView.DrawItem> event can occur for each <xref:System.Windows.Forms.ListView> item.</span></span> <span data-ttu-id="c9048-460">@No__t-0 プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されている場合、<xref:System.Windows.Forms.ListView.DrawSubItem> と <xref:System.Windows.Forms.ListView.DrawColumnHeader> のイベントも発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-460">When the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, the <xref:System.Windows.Forms.ListView.DrawSubItem> and <xref:System.Windows.Forms.ListView.DrawColumnHeader> events also occur.</span></span> <span data-ttu-id="c9048-461">この場合は、<xref:System.Windows.Forms.ListView.DrawItem> イベントを処理して、背景などのすべての項目に共通の要素を描画し、テキスト値などの個々のサブ項目の要素を描画するための <xref:System.Windows.Forms.ListView.DrawSubItem> イベントを処理できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-461">In this case, you can handle the <xref:System.Windows.Forms.ListView.DrawItem> event to draw elements common to all items, such as the background, and handle the <xref:System.Windows.Forms.ListView.DrawSubItem> event to draw elements for individual subitems, such as text values.</span></span> <span data-ttu-id="c9048-462">また、2つのイベントのいずれか1つだけを使用して、@no__t 0 コントロール内のすべての項目を描画することもできます。ただし、これは便利ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-462">You can also draw all items in the <xref:System.Windows.Forms.ListView> control using only one of the two events, although this may be less convenient.</span></span> <span data-ttu-id="c9048-463">詳細ビューで列ヘッダーを描画するには、<xref:System.Windows.Forms.ListView.DrawColumnHeader> イベントを処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-463">To draw column headers in the details view, you must handle the <xref:System.Windows.Forms.ListView.DrawColumnHeader> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-464">基になる Win32 コントロールのバグのため、<xref:System.Windows.Forms.ListView.DrawItem> イベントは、マウスポインターが行の上に移動したときに詳細ビューの行ごとに1つの @no__t イベントを伴わずに発生します。これにより、<xref:System.Windows.Forms.ListView.DrawSubItem> イベントハンドラーで描画されたものが、によって描画されます。@no__t 3 イベントハンドラーで描画されたカスタム背景。</span><span class="sxs-lookup"><span data-stu-id="c9048-464">Because of a bug in the underlying Win32 control, the <xref:System.Windows.Forms.ListView.DrawItem> event occurs without accompanying <xref:System.Windows.Forms.ListView.DrawSubItem> events once per row in the details view when the mouse pointer moves over the row, causing anything painted in a <xref:System.Windows.Forms.ListView.DrawSubItem> event handler to be painted over by a custom background drawn in a <xref:System.Windows.Forms.ListView.DrawItem> event handler.</span></span> <span data-ttu-id="c9048-465">余分なイベントが発生したときに各行を無効にする回避策については、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> リファレンストピックの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-465">See the example in the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> reference topic for a workaround that invalidates each row when the extra event occurs.</span></span> <span data-ttu-id="c9048-466">もう1つの回避策は、すべてのカスタム描画コードを @no__t 0 のイベントハンドラーに配置し、項目全体 (サブ項目を含む) の背景を描画することです (<xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> の値が0の場合のみ)。</span><span class="sxs-lookup"><span data-stu-id="c9048-466">An alternative workaround is to put all your custom drawing code in a <xref:System.Windows.Forms.ListView.DrawSubItem> event handler and paint the background for the entire item (including subitems) only when the <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> value is 0.</span></span>  
  
 <span data-ttu-id="c9048-467">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-467">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-468">次のコード例では、<xref:System.Windows.Forms.ListView.DrawItem> イベントハンドラーの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-468">The following code example provides an implementation of a <xref:System.Windows.Forms.ListView.DrawItem> event handler.</span></span> <span data-ttu-id="c9048-469">完全な例については、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> リファレンストピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-469">For the complete example, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> reference topic.</span></span>  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-470"><see cref="T:System.Windows.Forms.ListView" /> の詳細ビューが描画され、<see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> プロパティが <see langword="true" /> に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-470">Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-471">このイベントを使用すると、オーナー描画を使用して @no__t 0 コントロールの外観をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-471">This event lets you customize the appearance of a <xref:System.Windows.Forms.ListView> control using owner drawing.</span></span> <span data-ttu-id="c9048-472">この値は、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティが `true` に設定され、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-472">It is raised only when the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property is set to `true` and the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c9048-473">オーナー描画の詳細については、「<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティのリファレンス」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-473">For more information on owner drawing, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property reference topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-474">通常、サブ項目の情報は、タイルビューだけでなく、詳細ビューにも表示されます。ただし、タイルビューでは、<xref:System.Windows.Forms.ListView.DrawItem> イベントのハンドラーに描画する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-474">Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <xref:System.Windows.Forms.ListView.DrawItem> event.</span></span>  
  
 <span data-ttu-id="c9048-475">@No__t-0 イベントは、<xref:System.Windows.Forms.ListView> サブ項目ごとに発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-475">The <xref:System.Windows.Forms.ListView.DrawSubItem> event can occur for each <xref:System.Windows.Forms.ListView> subitem.</span></span> <span data-ttu-id="c9048-476">@No__t-0 イベントを処理して、背景などのすべてのサブ項目に共通する要素を描画し、<xref:System.Windows.Forms.ListView.DrawSubItem> イベントを処理して、テキスト値など、個々のサブ項目の要素を描画することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-476">You can handle the <xref:System.Windows.Forms.ListView.DrawItem> event to draw elements common to all subitems, such as the background, and handle the <xref:System.Windows.Forms.ListView.DrawSubItem> event to draw elements for individual subitems, such as text values.</span></span> <span data-ttu-id="c9048-477">また、2つのイベントのいずれか1つだけを使用して、@no__t 0 コントロール内のすべての項目を描画することもできます。ただし、これは便利ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-477">You can also draw all items in the <xref:System.Windows.Forms.ListView> control using only one of the two events, although this may be less convenient.</span></span> <span data-ttu-id="c9048-478">詳細ビューで列ヘッダーを描画するには、<xref:System.Windows.Forms.ListView.DrawColumnHeader> イベントを処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-478">To draw column headers in the details view, you must handle the <xref:System.Windows.Forms.ListView.DrawColumnHeader> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-479">@No__t-2 コレクションに <xref:System.Windows.Forms.ColumnHeader> オブジェクトが追加されていないサブ項目については、<xref:System.Windows.Forms.ListView.DrawSubItem> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-479">The <xref:System.Windows.Forms.ListView.DrawSubItem> event does not occur for any subitems for which no <xref:System.Windows.Forms.ColumnHeader> object has been added to the <xref:System.Windows.Forms.ListView.Columns%2A> collection.</span></span> <span data-ttu-id="c9048-480">また、各 <xref:System.Windows.Forms.ListViewItem> オブジェクトの最初のサブ項目は親項目自体を表し、最初の列に表示されることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-480">Note also that the first subitem of each <xref:System.Windows.Forms.ListViewItem> object represents the parent item itself, and is displayed in the first column.</span></span>  
  
 <span data-ttu-id="c9048-481">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-481">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-482">次のコード例では、<xref:System.Windows.Forms.ListView.DrawSubItem> イベントハンドラーの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-482">The following code example provides an implementation of a <xref:System.Windows.Forms.ListView.DrawSubItem> event handler.</span></span> <span data-ttu-id="c9048-483">完全な例については、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> リファレンストピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-483">For the complete example, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> reference topic.</span></span>  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-484"><see cref="M:System.Windows.Forms.ListView.BeginUpdate" /> メソッドによって中断されていたリスト ビュー コントロールの描画を再開します。</span><span class="sxs-lookup"><span data-stu-id="c9048-484">Resumes drawing of the list view control after drawing is suspended by the <see cref="M:System.Windows.Forms.ListView.BeginUpdate" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-485">@No__t-0 に複数の項目を追加する方法としては、<xref:System.Windows.Forms.ListView.ListViewItemCollection> の <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> のメソッドを使用することをお勧めします (@no__t の <xref:System.Windows.Forms.ListView.Items%2A> プロパティを通じてアクセス)。</span><span class="sxs-lookup"><span data-stu-id="c9048-485">The preferred way to add multiple items to a <xref:System.Windows.Forms.ListView> is to use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListView.ListViewItemCollection> (accessed through the <xref:System.Windows.Forms.ListView.Items%2A> property of the <xref:System.Windows.Forms.ListView>).</span></span> <span data-ttu-id="c9048-486">これにより、1回の操作でリストに項目の配列を追加できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-486">This enables you to add an array of items to the list in a single operation.</span></span> <span data-ttu-id="c9048-487">ただし、<xref:System.Windows.Forms.ListView.ListViewItemCollection> クラスの @no__t 0 メソッドを使用して一度に1つずつ項目を追加する場合は、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> メソッドを使用して、項目が追加されるたびにコントロールが @no__t 3 を再描画しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-487">However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> method of the <xref:System.Windows.Forms.ListView.ListViewItemCollection> class, you can use the <xref:System.Windows.Forms.ListView.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListView> each time an item is added.</span></span> <span data-ttu-id="c9048-488">項目をコントロールに追加するタスクを完了したら、<xref:System.Windows.Forms.ListView.EndUpdate%2A> メソッドを呼び出して、<xref:System.Windows.Forms.ListView> の再描画を有効にします。</span><span class="sxs-lookup"><span data-stu-id="c9048-488">Once you have completed the task of adding items to the control, call the <xref:System.Windows.Forms.ListView.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListView> to repaint.</span></span> <span data-ttu-id="c9048-489">このように項目を追加すると、多数の項目がコントロールに追加されている場合に、@no__t の flickered 描画を防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-489">This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListView> when a large number of items are being added to the control.</span></span>  
  
 <span data-ttu-id="c9048-490">@No__t-0 が2回以上呼び出される場合は、<xref:System.Windows.Forms.ListView.EndUpdate%2A> を同じ回数だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-490">If <xref:System.Windows.Forms.ListView.BeginUpdate%2A> is called more than once, <xref:System.Windows.Forms.ListView.EndUpdate%2A> must be called an equivalent number of times.</span></span> <span data-ttu-id="c9048-491">@No__t-0 に対する最後の呼び出しまでは、<xref:System.Windows.Forms.ListView> は再描画されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-491">Until the last call to <xref:System.Windows.Forms.ListView.EndUpdate%2A> the <xref:System.Windows.Forms.ListView> will not repaint.</span></span> <span data-ttu-id="c9048-492">それ以外の場合、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> に対する複数の呼び出しによる影響はありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-492">Other than this, multiple calls to <xref:System.Windows.Forms.ListView.BeginUpdate%2A> have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-493">次のコード例は、チェックボックスを含むように @no__t 0 コントロールを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-493">The following code example demonstrates initializing a <xref:System.Windows.Forms.ListView> control to contain check boxes.</span></span> <span data-ttu-id="c9048-494">また、<xref:System.Windows.Forms.ListView.BeginUpdate%2A> および <xref:System.Windows.Forms.ListView.EndUpdate%2A> のメソッドの使用方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-494">It also demonstrates using the <xref:System.Windows.Forms.ListView.BeginUpdate%2A> and <xref:System.Windows.Forms.ListView.EndUpdate%2A> methods.</span></span> <span data-ttu-id="c9048-495">この例を実行するには、`ListView1` という名前の @no__t 0 を含むフォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-495">To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-496">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-496">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c9048-497">表示されるまでスクロールする項目の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="c9048-497">The zero-based index of the item to scroll into view.</span></span></param>
        <summary><span data-ttu-id="c9048-498">必要に応じてコントロールの内容をスクロールして、指定した項目がコントロール内に確実に表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="c9048-498">Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-499">このメソッドを使用すると、特定の項目が @no__t 0 コントロール内に確実に表示されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-499">You can use this method to ensure that a specific item is visible within the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-500">@No__t 0 の項目に対して検証を実行する場合は、<xref:System.Windows.Forms.ListView.EnsureVisible%2A> メソッドを呼び出して、検証に失敗した項目が <xref:System.Windows.Forms.ListView> コントロールに表示されるようにして、ユーザーが項目に対して変更を実行できるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-500">When performing validation on the items in a <xref:System.Windows.Forms.ListView>, you can call the <xref:System.Windows.Forms.ListView.EnsureVisible%2A> method to ensure that an item that failed validation is displayed in the <xref:System.Windows.Forms.ListView> control to allow the user to perform changes on the item.</span></span> <span data-ttu-id="c9048-501">確認する項目が @no__t 0 コントロールの表示可能領域の上にある場合、<xref:System.Windows.Forms.ListView.EnsureVisible%2A> メソッドを呼び出すと、コントロールの表示可能領域の最初の項目になるまでコントロールの内容がスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="c9048-501">If the item that you want to ensure is visible is located above the viewable region of the <xref:System.Windows.Forms.ListView> control, calling the <xref:System.Windows.Forms.ListView.EnsureVisible%2A> method will scroll the contents of the control until it is the first item in the viewable area of the control.</span></span> <span data-ttu-id="c9048-502">項目が <xref:System.Windows.Forms.ListView> コントロールの表示可能領域を下回っている場合、<xref:System.Windows.Forms.ListView.EnsureVisible%2A> メソッドを呼び出すと、項目がコントロールの表示可能領域の最後の項目になるまで <xref:System.Windows.Forms.ListView> コントロールの内容がスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="c9048-502">If the item is below the viewable region of the <xref:System.Windows.Forms.ListView> control, calling the <xref:System.Windows.Forms.ListView.EnsureVisible%2A> method will scroll the contents of the <xref:System.Windows.Forms.ListView> control until the item is the last item in the viewable area of the control.</span></span>  
  
 <span data-ttu-id="c9048-503">項目が @no__t 0 コントロールの表示領域の一番上にあるかどうかを確認するには、<xref:System.Windows.Forms.ListView.TopItem%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-503">To determine if an item is located at the top of the display area of a <xref:System.Windows.Forms.ListView> control, use the <xref:System.Windows.Forms.ListView.TopItem%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9048-504">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" /> を検索します。</span><span class="sxs-lookup"><span data-stu-id="c9048-504">Finds the first <see cref="T:System.Windows.Forms.ListViewItem" /> with that begins with the given text value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c9048-505">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="c9048-505">The text to search for.</span></span></param>
        <summary><span data-ttu-id="c9048-506">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" /> を検索します。</span><span class="sxs-lookup"><span data-stu-id="c9048-506">Finds the first <see cref="T:System.Windows.Forms.ListViewItem" /> that begins with the specified text value.</span></span></summary>
        <returns><span data-ttu-id="c9048-507">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-507">The first <see cref="T:System.Windows.Forms.ListViewItem" /> that begins with the specified text value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-508">検索では、大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-508">The search is case-insensitive.</span></span>  
  
 <span data-ttu-id="c9048-509">@No__t-0 パラメーターでは、一致するテキストの部分文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-509">The `text` parameter can specify a substring of the desired matching text.</span></span> <span data-ttu-id="c9048-510">さらに、このメソッドは、指定されたテキストで始まる最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-510">In addition, this method will return the first item that starts with the specified text.</span></span> <span data-ttu-id="c9048-511">たとえば、<xref:System.Windows.Forms.ListView> に2つのリスト項目が含まれている場合、最初の項目のテキストが "山かっこ" に設定され、2番目の項目のテキストが "角かっこ" に設定されている場合、パラメーターとして `brack` を渡す <xref:System.Windows.Forms.ListView.FindItemWithText%2A> を呼び出すと、テキストが "角かっ" になります。</span><span class="sxs-lookup"><span data-stu-id="c9048-511">For example, if a <xref:System.Windows.Forms.ListView> contains two list items - the first item's text set to "angle bracket" and the second item's text set to "bracket" - a call to <xref:System.Windows.Forms.ListView.FindItemWithText%2A> passing `brack` as the parameter will return the item whose text is "bracket".</span></span>  
  
 <span data-ttu-id="c9048-512">リストが空であるか、一致する項目がない場合、<xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッドは @no__t を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-512">The <xref:System.Windows.Forms.ListView.FindItemWithText%2A> method returns `null` if the list is empty or there is no matching item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-513">次のコード例は、<xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-513">The following code example demonstrates the <xref:System.Windows.Forms.ListView.FindItemWithText%2A> method.</span></span> <span data-ttu-id="c9048-514">この例を実行するには、次のコードを Windows フォームに貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeFindListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-514">To run this example, paste the following code into a Windows Form and call the `InitializeFindListView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span> <span data-ttu-id="c9048-515">このボタンをクリックすると、メソッド呼び出しの結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-515">Click the button to see the results of the method call.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c9048-516">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="c9048-516">The text to search for.</span></span></param>
        <param name="includeSubItemsInSearch"><span data-ttu-id="c9048-517">検索にサブ項目を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-517"><see langword="true" /> to include subitems in the search; otherwise, <see langword="false" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="c9048-518">検索を開始する位置の項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="c9048-518">The index of the item at which to start the search.</span></span></param>
        <summary><span data-ttu-id="c9048-519">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" /> または <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> (指定されている場合) を検索します。</span><span class="sxs-lookup"><span data-stu-id="c9048-519">Finds the first <see cref="T:System.Windows.Forms.ListViewItem" /> or <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, if indicated, that begins with the specified text value.</span></span> <span data-ttu-id="c9048-520">検索は、指定したインデックス位置から開始されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-520">The search starts at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c9048-521">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-521">The first <see cref="T:System.Windows.Forms.ListViewItem" /> that begins with the specified text value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-522">検索では、大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-522">The search is case-insensitive.</span></span>  
  
 <span data-ttu-id="c9048-523">@No__t-0 パラメーターでは、一致するテキストの部分文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-523">The `text` parameter can specify a substring of the desired matching text.</span></span> <span data-ttu-id="c9048-524">さらに、このメソッドは、指定されたテキストで始まる最初の項目を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-524">In addition, this method will return the first item that starts with the specified text.</span></span> <span data-ttu-id="c9048-525">たとえば、<xref:System.Windows.Forms.ListView> に2つのリスト項目が含まれている場合、最初の項目のテキストが "山かっこ" に設定され、2番目の項目のテキストが "角かっこ" に設定されている場合、パラメーターとして "brack" を渡す <xref:System.Windows.Forms.ListView.FindItemWithText%2A> を呼び出すと、テキストが "角かっこ" になります</span><span class="sxs-lookup"><span data-stu-id="c9048-525">For example, if a <xref:System.Windows.Forms.ListView> contains two list items - the first item's text set to "angle bracket" and the second item's text set to "bracket" - a call to <xref:System.Windows.Forms.ListView.FindItemWithText%2A> passing "brack" as the parameter will return the item whose text is "bracket".</span></span>  
  
 <span data-ttu-id="c9048-526">リストが空であるか、一致する項目がない場合、<xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッドは @no__t を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-526">The <xref:System.Windows.Forms.ListView.FindItemWithText%2A> method returns `null` if the list is empty or there is no matching item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-527"><paramref name="startIndex" /> が 0 未満か、<see cref="T:System.Windows.Forms.ListView" /> の項目数より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-527"><paramref name="startIndex" /> is less 0 or more than the number items in the <see cref="T:System.Windows.Forms.ListView" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c9048-528">検索するテキストです。</span><span class="sxs-lookup"><span data-stu-id="c9048-528">The text to search for.</span></span></param>
        <param name="includeSubItemsInSearch"><span data-ttu-id="c9048-529">検索にサブ項目を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-529"><see langword="true" /> to include subitems in the search; otherwise, <see langword="false" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="c9048-530">検索を開始する位置の項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="c9048-530">The index of the item at which to start the search.</span></span></param>
        <param name="isPrefixSearch"><span data-ttu-id="c9048-531">部分的な一致を許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-531"><see langword="true" /> to allow partial matches; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c9048-532">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" /> または <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> (指定されている場合) を検索します。</span><span class="sxs-lookup"><span data-stu-id="c9048-532">Finds the first <see cref="T:System.Windows.Forms.ListViewItem" /> or <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, if indicated, that begins with the specified text value.</span></span> <span data-ttu-id="c9048-533">検索は、指定したインデックス位置から開始されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-533">The search starts at the specified index.</span></span></summary>
        <returns><span data-ttu-id="c9048-534">指定したテキスト値で始まる最初の <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-534">The first <see cref="T:System.Windows.Forms.ListViewItem" /> that begins with the specified text value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-535">リストが空であるか、一致する項目がない場合、<xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッドは @no__t を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-535">The <xref:System.Windows.Forms.ListView.FindItemWithText%2A> method returns `null` if the list is empty or there is no matching item.</span></span>  
  
 <span data-ttu-id="c9048-536">検索では、大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-536">The search is case-insensitive.</span></span>  
  
 <span data-ttu-id="c9048-537">@No__t-0 パラメーターでは、一致するテキストの部分文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-537">The `text` parameter can specify a substring of the desired matching text.</span></span> <span data-ttu-id="c9048-538">このメソッドは、指定されたテキストで始まる最初の項目を返します。ただし、`isPrefixSearch` の場合は `false` が渡されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-538">This method will return the first item that starts with the specified text, unless `false` is passed in for `isPrefixSearch`.</span></span> <span data-ttu-id="c9048-539">たとえば、@no__t 0 に2つのリスト項目が含まれている場合、最初の項目のテキストが "山かっこ" に設定され、2番目の項目のテキストが "角かっこ" に設定されている場合、検索テキストとして "brack" を渡す <xref:System.Windows.Forms.ListView.FindItemWithText%2A> を呼び出すと、テキストが "角かっこ" になります</span><span class="sxs-lookup"><span data-stu-id="c9048-539">For example, if a <xref:System.Windows.Forms.ListView> contains two list items - the first item's text set to "angle bracket" and the second item's text set to "bracket" - a call to <xref:System.Windows.Forms.ListView.FindItemWithText%2A> passing "brack" as the search text will return the item whose text is "bracket".</span></span> <span data-ttu-id="c9048-540">@No__t-0 が `false` に設定されている場合、この呼び出しは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-540">If `isPrefixSearch` is set to `false`, this call will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-541"><paramref name="startIndex" /> が 0 未満か、<see cref="T:System.Windows.Forms.ListView" /> の項目数より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-541"><paramref name="startIndex" /> is less than 0 or more than the number of items in the <see cref="T:System.Windows.Forms.ListView" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9048-542">指定したポイントから次の項目を検索します。検索は、指定した方向で実行されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-542">Finds the next item from a given point, searching in the specified direction.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dir"><span data-ttu-id="c9048-543"><see cref="T:System.Windows.Forms.SearchDirectionHint" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-543">One of the <see cref="T:System.Windows.Forms.SearchDirectionHint" /> values.</span></span></param>
        <param name="point"><span data-ttu-id="c9048-544">検索の開始位置を示すポイント。</span><span class="sxs-lookup"><span data-stu-id="c9048-544">The point at which to begin searching.</span></span></param>
        <summary><span data-ttu-id="c9048-545">指定したポイントから次の項目を検索します。検索は、指定した方向で実行されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-545">Finds the next item from the given point, searching in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="c9048-546">指定したポイントに最も近い <see cref="T:System.Windows.Forms.ListViewItem" /> を検索します。検索は、指定した方向で実行されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-546">The <see cref="T:System.Windows.Forms.ListViewItem" /> that is closest to the given point, searching in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-547">@No__t-0 メソッドは、指定された方向に項目が見つからない場合に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-547">The <xref:System.Windows.Forms.ListView.FindNearestItem%2A> method returns `null` if no item is found in the given direction.</span></span> <span data-ttu-id="c9048-548">最も近い項目を識別することは、アプリケーションが実行されているオペレーティングシステムによって異なる場合があり、<xref:System.Windows.Forms.ListView.FindNearestItem%2A> の結果に影響します。</span><span class="sxs-lookup"><span data-stu-id="c9048-548">Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-549"><see cref="P:System.Windows.Forms.ListView.View" /> が <see cref="F:System.Windows.Forms.View.SmallIcon" /> または <see cref="F:System.Windows.Forms.View.LargeIcon" /> 以外の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-549"><see cref="P:System.Windows.Forms.ListView.View" /> is set to a value other than <see cref="F:System.Windows.Forms.View.SmallIcon" /> or <see cref="F:System.Windows.Forms.View.LargeIcon" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchDirection"><span data-ttu-id="c9048-550"><see cref="T:System.Windows.Forms.SearchDirectionHint" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c9048-550">One of the <see cref="T:System.Windows.Forms.SearchDirectionHint" /> values.</span></span></param>
        <param name="x"><span data-ttu-id="c9048-551">検索を開始する位置を表すポイントの x 座標。</span><span class="sxs-lookup"><span data-stu-id="c9048-551">The x-coordinate for the point at which to begin searching.</span></span></param>
        <param name="y"><span data-ttu-id="c9048-552">検索を開始する位置を表すポイントの y 座標。</span><span class="sxs-lookup"><span data-stu-id="c9048-552">The y-coordinate for the point at which to begin searching.</span></span></param>
        <summary><span data-ttu-id="c9048-553">指定した x 座標と y 座標から次の項目を検索します。検索は、指定した方向で実行されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-553">Finds the next item from the given x- and y-coordinates, searching in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="c9048-554">指定した検索方向にある、特定の座標に最も近い <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-554">The <see cref="T:System.Windows.Forms.ListViewItem" /> that is closest to the given coordinates, searching in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-555">@No__t-0 メソッドは、指定された方向に項目が見つからない場合に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-555">The <xref:System.Windows.Forms.ListView.FindNearestItem%2A> method returns `null` if no item is found in the given direction.</span></span> <span data-ttu-id="c9048-556">最も近い項目を識別することは、アプリケーションが実行されているオペレーティングシステムによって異なる場合があり、<xref:System.Windows.Forms.ListView.FindNearestItem%2A> の結果に影響します。</span><span class="sxs-lookup"><span data-stu-id="c9048-556">Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-557"><see cref="P:System.Windows.Forms.ListView.View" /> が <see cref="F:System.Windows.Forms.View.SmallIcon" /> または <see cref="F:System.Windows.Forms.View.LargeIcon" /> 以外の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-557"><see cref="P:System.Windows.Forms.ListView.View" /> is set to a value other than <see cref="F:System.Windows.Forms.View.SmallIcon" /> or <see cref="F:System.Windows.Forms.View.LargeIcon" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusedItem As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.FocusedItem" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-558">現在フォーカスを持つコントロールの項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-558">Gets or sets the item in the control that currently has focus.</span></span></summary>
        <value><span data-ttu-id="c9048-559">フォーカスがある項目を表す <see cref="T:System.Windows.Forms.ListViewItem" />。<see cref="T:System.Windows.Forms.ListView" /> 内のどの項目にもフォーカスがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-559">A <see cref="T:System.Windows.Forms.ListViewItem" /> that represents the item that has focus, or <see langword="null" /> if no item has the focus in the <see cref="T:System.Windows.Forms.ListView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-560">@No__t-0 プロパティは、<xref:System.Windows.Forms.ListView> コントロールのフォーカスを示す四角形を現在表示している項目を表す <xref:System.Windows.Forms.ListViewItem> を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-560">The <xref:System.Windows.Forms.ListView.FocusedItem%2A> property returns the <xref:System.Windows.Forms.ListViewItem> that represents the item currently displaying the focus rectangle for the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-561">@No__t 0 コントロールには、表示される項目以外の編集可能な領域がないため、@no__t 1 のコントロールにフォーカスがある場合、<xref:System.Windows.Forms.ListView> 内の項目は、その項目のテキストを中心とした reticle フォーカスを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-561">Because a <xref:System.Windows.Forms.ListView> control has no directly editable areas other than the items it displays, when the <xref:System.Windows.Forms.ListView> control has focus, an item within the <xref:System.Windows.Forms.ListView> displays the focus reticle around its item text.</span></span> <span data-ttu-id="c9048-562">通常、<xref:System.Windows.Forms.ListView> コントロールで最後に選択された項目は、フォーカスのある項目です。</span><span class="sxs-lookup"><span data-stu-id="c9048-562">Typically, the last selected item in the <xref:System.Windows.Forms.ListView> control is the item with focus.</span></span> <span data-ttu-id="c9048-563">項目はフォーカス reticle を表示しているものである場合がありますが、実際には @no__t 0 の項目として選択されていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-563">Although an item may be the one displaying the focus reticle, it may not actually be a selected item in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-564">@No__t-0 または <xref:System.Windows.Forms.ListView.SelectedIndices%2A> のプロパティを使用して、<xref:System.Windows.Forms.ListView> コントロールで選択された項目を取得します。 <xref:System.Windows.Forms.ListView.FocusedItem%2A> プロパティは必ずしも選択されていません。</span><span class="sxs-lookup"><span data-stu-id="c9048-564">Use the <xref:System.Windows.Forms.ListView.SelectedItems%2A> or <xref:System.Windows.Forms.ListView.SelectedIndices%2A> properties to obtain the selected items in the <xref:System.Windows.Forms.ListView> control, the <xref:System.Windows.Forms.ListView.FocusedItem%2A> property is not necessarily selected.</span></span> <span data-ttu-id="c9048-565">@No__t-0 プロパティを使用して、選択状態に関係なく、@no__t 1 コントロールで最後にクリックされた項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-565">You can use the <xref:System.Windows.Forms.ListView.FocusedItem%2A> property to determine which item was last clicked in the <xref:System.Windows.Forms.ListView> control, regardless of selection state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-566">前景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-566">Gets or sets the foreground color.</span></span></summary>
        <value><span data-ttu-id="c9048-567">前景色である <see cref="T:System.Drawing.Color" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-567">The <see cref="T:System.Drawing.Color" /> that is the foreground color.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-568">項目をクリックするとそのすべてのサブ項目を選択するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-568">Gets or sets a value indicating whether clicking an item selects all its subitems.</span></span></summary>
        <value><span data-ttu-id="c9048-569">項目をクリックすると項目とそのすべてのサブ項目を選択する場合は <see langword="true" />。項目をクリックすると項目だけを選択する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-569"><see langword="true" /> if clicking an item selects the item and all its subitems; <see langword="false" /> if clicking an item selects only the item itself.</span></span> <span data-ttu-id="c9048-570">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-570">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-571">@No__t-2 コントロールの <xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されていない場合、<xref:System.Windows.Forms.ListView.FullRowSelect%2A> プロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-571">The <xref:System.Windows.Forms.ListView.FullRowSelect%2A> property has no effect unless the <xref:System.Windows.Forms.ListView.View%2A> property of the <xref:System.Windows.Forms.ListView> control is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-572">@No__t-0 プロパティは通常、<xref:System.Windows.Forms.ListView> が多くのサブ項目を含む項目を表示する場合に使用されます。コントロールの内容を水平方向にスクロールするために項目のテキストが表示されない場合は、選択した項目を表示できるようにすることが重要です。</span><span class="sxs-lookup"><span data-stu-id="c9048-572">The <xref:System.Windows.Forms.ListView.FullRowSelect%2A> property is typically used when a <xref:System.Windows.Forms.ListView> displays items with many subitems and it is important to be able to see selected items when the item text is not visible due to horizontal scrolling of the control's contents.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-573">@No__t-0 が `true` に設定されている場合、<xref:System.Windows.Forms.ListViewItem.ListViewSubItem> のツールヒントは表示されません。親 <xref:System.Windows.Forms.ListViewItem> のツールヒントのみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-573">When <xref:System.Windows.Forms.ListView.FullRowSelect%2A> is set to `true`, ToolTips for a <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> will not be shown; only the ToolTip for the parent <xref:System.Windows.Forms.ListViewItem> is displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-574">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-574">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-575">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-575">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-576">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-576">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-577">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-577">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-578">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-578">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-579">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-579">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-580">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-580">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c9048-581">項目を検索する位置の x 座標 (クライアント座標)。</span><span class="sxs-lookup"><span data-stu-id="c9048-581">The x-coordinate of the location to search for an item (expressed in client coordinates).</span></span></param>
        <param name="y"><span data-ttu-id="c9048-582">項目を検索する位置の y 座標 (クライアント座標)。</span><span class="sxs-lookup"><span data-stu-id="c9048-582">The y-coordinate of the location to search for an item (expressed in client coordinates).</span></span></param>
        <summary><span data-ttu-id="c9048-583">指定した位置にある項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-583">Retrieves the item at the specified location.</span></span></summary>
        <returns><span data-ttu-id="c9048-584">指定した位置にある項目を表す <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-584">A <see cref="T:System.Windows.Forms.ListViewItem" /> that represents the item at the specified position.</span></span> <span data-ttu-id="c9048-585">指定した位置に項目がない場合、メソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-585">If there is no item at the specified location, the method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-586">@No__t-0 メソッドを使用すると、<xref:System.Windows.Forms.ListView> コントロールのクライアント領域内の特定の位置にある項目を特定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-586">The <xref:System.Windows.Forms.ListView.GetItemAt%2A> method lets you determine which item is located at a specific location within the client region of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-587">ユーザーがクリックするか、サブ項目を右クリックしたときに、このメソッドを使用することができます (ときに、<xref:System.Windows.Forms.ListView.View%2A>プロパティに設定されて`View.Details`) し、どの項目がクリックされたユーザーがマウスをクリックした時に、マウスの座標に基づいてサブアイテムを所有しているを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-587">You can use this method when the user clicks or right-clicks a subitem (when the <xref:System.Windows.Forms.ListView.View%2A> property is set to `View.Details`) and you want to determine which item owns the subitem that was clicked based on the mouse coordinates at the time the user clicked the mouse.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-588">@No__t-0 プロパティの値 @no__t が-1 の場合、このメソッドは、指定された位置が親項目の境界内にある場合にのみ項目を返します (コントロールが詳細モードの場合は、最初の列に表示されます)。</span><span class="sxs-lookup"><span data-stu-id="c9048-588">When the <xref:System.Windows.Forms.ListView.FullRowSelect%2A> property value is `false`, this method returns an item only when the specified location is within the bounds of the parent item (which is displayed in the first column when the control is in details mode).</span></span> <span data-ttu-id="c9048-589">このメソッドを使用して項目を取得するには、<xref:System.Windows.Forms.ListView.FullRowSelect%2A> プロパティを `true` に設定する必要があります。これにより、サブ項目の境界内の位置が指定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-589">You must set the <xref:System.Windows.Forms.ListView.FullRowSelect%2A> property to `true` to retrieve an item with this method given a location within the bounds of a subitem.</span></span> <span data-ttu-id="c9048-590">@No__t-0 メソッドを使用して、特定の場所にある項目に関する詳細情報を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-590">You can also use the <xref:System.Windows.Forms.ListView.HitTest%2A> method to retrieve detailed information about the item at a particular location.</span></span>  
  
 <span data-ttu-id="c9048-591">@No__t 0 内の項目のドラッグアンドドロップによる移動を行うには、<xref:System.Windows.Forms.ListView.GetItemAt%2A> メソッドではなく <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> メソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-591">To do drag-and-drop repositioning of items within a <xref:System.Windows.Forms.ListView>, you might want to use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> method rather than the <xref:System.Windows.Forms.ListView.GetItemAt%2A> method.</span></span> <span data-ttu-id="c9048-592">@No__t-0 メソッドは、マウスポインターが置かれている場所に関係なく、最も近い項目を検索します。</span><span class="sxs-lookup"><span data-stu-id="c9048-592">The <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> method finds the closest item regardless of where the mouse pointer is located.</span></span> <span data-ttu-id="c9048-593">一方、<xref:System.Windows.Forms.ListView.GetItemAt%2A> のメソッドは、指定された場所に項目がない場合は `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-593">The <xref:System.Windows.Forms.ListView.GetItemAt%2A> method, on the other hand, returns `null` if there is no item at the specified location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-594">@No__t-0 クラスは、アプリケーションが <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出した場合に、Windows XP と Windows Server 2003 でのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="c9048-594">The <xref:System.Windows.Forms.ListViewInsertionMark> class is supported only on Windows XP and Windows Server 2003 when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-595">次のコード例は、<xref:System.Windows.Forms.PictureBox> および <xref:System.Windows.Forms.ListView> コントロールの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-595">The following code example demonstrates the use of the <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.ListView> controls.</span></span> <span data-ttu-id="c9048-596">@No__t-0 は、それぞれ <xref:System.Windows.Forms.BorderStyle> と @no__t 4 の列挙体を使用して <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> と <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> のプロパティを設定することによって初期化されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-596">The <xref:System.Windows.Forms.PictureBox> is initialized by setting the <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> properties using the <xref:System.Windows.Forms.BorderStyle> and <xref:System.Windows.Forms.PictureBoxSizeMode> enumerations, respectively.</span></span> <span data-ttu-id="c9048-597">@No__t-0 には Samples ディレクトリの画像が設定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-597">The <xref:System.Windows.Forms.ListView> is populated with pictures from the Samples directory.</span></span> <span data-ttu-id="c9048-598">@No__t-0 メソッドは、項目が選択されているかどうかを判断するために、<xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.Control.MouseDown> イベントを処理するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-598">The <xref:System.Windows.Forms.ListView.GetItemAt%2A> method is used in when handling the <xref:System.Windows.Forms.ListView> control's <xref:System.Windows.Forms.Control.MouseDown> event to determine whether an item is selected.</span></span> <span data-ttu-id="c9048-599">項目が選択されている場合、イベントハンドラーは、<xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> プロパティを設定して、選択されたファイルを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-599">If an item is selected, the event handler displays the selected file by setting the <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c9048-600">この例では、C:\documents and および Settings\All Users\Documents\My Pictures\sample pictures Pictures ディレクトリにある JPG ファイルが存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-600">The example requires the existence of JPG files located in the C:\documents and Settings\All Users\Documents\My Pictures\Sample Pictures directory.</span></span> <span data-ttu-id="c9048-601">この例を実行するには、フォームにコードを貼り付け、フォームのコンストラクターまたは `Load` メソッドで `InitializePictureBox` および `PopulateListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-601">To run this example, paste the code into a form and call the `InitializePictureBox` and `PopulateListView` methods in the form's constructor or `Load` method.</span></span> <span data-ttu-id="c9048-602">すべてのイベントがイベントハンドラーに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-602">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9048-603">コントロール内の項目の外接する四角形を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-603">Retrieves the bounding rectangle for an item within the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c9048-604">外接する四角形が返される <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 内の項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="c9048-604">The zero-based index of the item within the <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> whose bounding rectangle you want to return.</span></span></param>
        <summary><span data-ttu-id="c9048-605">リスト ビュー コントロール内の特定の項目の外接する四角形を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-605">Retrieves the bounding rectangle for a specific item within the list view control.</span></span></summary>
        <returns><span data-ttu-id="c9048-606">指定した <see cref="T:System.Drawing.Rectangle" /> の外接する四角形を表す <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-606">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle of the specified <see cref="T:System.Windows.Forms.ListViewItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-607">このバージョンの <xref:System.Windows.Forms.ListView.GetItemRect%2A> メソッドによって返される外接する四角形は、アイコン、項目テキスト、サブ項目テキストを含む項目全体を表します。</span><span class="sxs-lookup"><span data-stu-id="c9048-607">The bounding rectangle returned by this version of the <xref:System.Windows.Forms.ListView.GetItemRect%2A> method represents the entire item, including the icon, item text, and subitem text.</span></span> <span data-ttu-id="c9048-608">項目の外接する四角形の特定の部分を指定するには、別のバージョンの <xref:System.Windows.Forms.ListView.GetItemRect%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-608">To specify a specific portion of the item's bounding rectangle, use the other version of the <xref:System.Windows.Forms.ListView.GetItemRect%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c9048-609">外接する四角形が返される <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> 内の項目の 0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="c9048-609">The zero-based index of the item within the <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> whose bounding rectangle you want to return.</span></span></param>
        <param name="portion"><span data-ttu-id="c9048-610">外接する四角形を取得する <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> の部分を表す <see cref="T:System.Windows.Forms.ListViewItem" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-610">One of the <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> values that represents a portion of the <see cref="T:System.Windows.Forms.ListViewItem" /> for which to retrieve the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="c9048-611">リスト ビュー コントロール内の特定の項目の外接する四角形の指定した部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-611">Retrieves the specified portion of the bounding rectangle for a specific item within the list view control.</span></span></summary>
        <returns><span data-ttu-id="c9048-612">指定した <see cref="T:System.Drawing.Rectangle" /> の指定した部分の外接する四角形を表す <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-612">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle for the specified portion of the specified <see cref="T:System.Windows.Forms.ListViewItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-613">このバージョンの <xref:System.Windows.Forms.ListView.GetItemRect%2A> メソッドによって返される外接する四角形は、`portion` パラメーターで指定された項目のセクションのみを表します。</span><span class="sxs-lookup"><span data-stu-id="c9048-613">The bounding rectangle returned by this version of the <xref:System.Windows.Forms.ListView.GetItemRect%2A> method represents only the section of the item specified in the `portion` parameter.</span></span> <span data-ttu-id="c9048-614">項目全体の外接する四角形を取得するには、別のバージョンの <xref:System.Windows.Forms.ListView.GetItemRect%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-614">To return the bounding rectangle of the entire item, use the other version of the <xref:System.Windows.Forms.ListView.GetItemRect%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-615">コントロールの項目とサブ項目を含む行と列の間にグリッド線を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-615">Gets or sets a value indicating whether grid lines appear between the rows and columns containing the items and subitems in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-616">項目とサブ項目の周りにグリッド線を描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-616"><see langword="true" /> if grid lines are drawn around items and subitems; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-617">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-617">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-618">@No__t-2 コントロールの <xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されていない場合、<xref:System.Windows.Forms.ListView.GridLines%2A> プロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-618">The <xref:System.Windows.Forms.ListView.GridLines%2A> property has no effect unless the <xref:System.Windows.Forms.ListView.View%2A> property of the <xref:System.Windows.Forms.ListView> control is set to <xref:System.Windows.Forms.View.Details>.</span></span> <span data-ttu-id="c9048-619">@No__t-0 プロパティを使用すると、項目とそのサブ項目を表示するときに <xref:System.Windows.Forms.ListView> コントロールに表示される行と列を識別するための行を表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-619">The <xref:System.Windows.Forms.ListView.GridLines%2A> property allows you to display lines to identify the rows and columns that are displayed in the <xref:System.Windows.Forms.ListView> control when it displays items and their subitems.</span></span> <span data-ttu-id="c9048-620">表示されるグリッド線には、Microsoft Excel などのアプリケーションとして行と列のサイズを変更する機能は用意されていません。</span><span class="sxs-lookup"><span data-stu-id="c9048-620">The grid lines that are displayed do not provide the ability to resize rows and columns as an application such as Microsoft Excel does.</span></span> <span data-ttu-id="c9048-621">列のヘッダーが表示されている場合は、列のサイズを変更することができます。列のサイズを変更するには、列の右側にマウスポインターを移動し、サイズを変更して、列が必要なサイズになるまでドラッグします。</span><span class="sxs-lookup"><span data-stu-id="c9048-621">Only columns can be resized, if column headers are displayed, by moving the mouse pointer to the right side of the column to resize and then clicking and dragging until the column is the size you want.</span></span> <span data-ttu-id="c9048-622">グリッド線機能は、項目およびサブ項目の周囲に表示される境界をコントロールのユーザーに提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-622">The grid lines feature is used to provide the user of the control with visible boundaries around items and subitems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-623">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-623">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-624">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-624">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-625">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-625">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-626">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-626">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-627">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-627">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-628">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-628">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-629">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-629">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-630">コントロールに割り当てられた <see cref="T:System.Windows.Forms.ListViewGroup" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-630">Gets the collection of <see cref="T:System.Windows.Forms.ListViewGroup" /> objects assigned to the control.</span></span></summary>
        <value><span data-ttu-id="c9048-631"><see cref="T:System.Windows.Forms.ListViewGroupCollection" /> コントロール内のすべてのグループを格納する <see cref="T:System.Windows.Forms.ListView" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-631">A <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> that contains all the groups in the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-632">@No__t 0 のグループ化機能を使用すると、論理的に関連する <xref:System.Windows.Forms.ListView> 項目のビジュアルグループを作成できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-632">The <xref:System.Windows.Forms.ListView> grouping feature lets you create visual groups of logically related <xref:System.Windows.Forms.ListView> items.</span></span> <span data-ttu-id="c9048-633">各グループは、テキストヘッダーの後に水平線とそのグループに割り当てられた項目で構成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-633">Each group consists of a textual header followed by a horizontal line and the items assigned to that group.</span></span> <span data-ttu-id="c9048-634">ヘッダーテキストは、コントロールの左、右、または中央に揃えて配置できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-634">You can align the header text to the left, right, or center of the control.</span></span> <span data-ttu-id="c9048-635">@No__t-0 コントロールに割り当てられたグループは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.List?displayProperty=nameWithType> 以外の値に設定されている場合に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-635">Any groups assigned to a <xref:System.Windows.Forms.ListView> control appear whenever the <xref:System.Windows.Forms.ListView.View%2A> property is set to a value other than <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c9048-636"><xref:System.Windows.Forms.ListView> のグループを使用すると、項目を有用なカテゴリに分割することで、ユーザーが探している項目を見つけることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-636"><xref:System.Windows.Forms.ListView> groups help your users find the items they are looking for by separating the items into useful categories.</span></span> <span data-ttu-id="c9048-637">必要なすべてのカテゴリを作成できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-637">You can create whatever categories you need.</span></span> <span data-ttu-id="c9048-638">一般的な方法の1つは、リストの並べ替え方法に基づいて項目をグループ化することです。</span><span class="sxs-lookup"><span data-stu-id="c9048-638">One typical approach is to group the items based on the way the list is sorted.</span></span> <span data-ttu-id="c9048-639">たとえば、リストがアルファベット順に並べ替えられている場合、項目名の最初の文字で項目をグループ化することができます。詳細ビューで列ヘッダーをクリックすると、リストが並べ替えられたときに、リストが並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-639">For example, you can group the items by the initial letter of the item name when the list is sorted alphabetically or by subitems such as type or date when the list is sorted by clicking a column header in the details view.</span></span> <span data-ttu-id="c9048-640">エクスプローラーは、この種類のグループ化を使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-640">Windows Explorer uses this type of grouping.</span></span>  
  
 <span data-ttu-id="c9048-641">グループ化機能を使用するには、1つまたは複数の @no__t 0 オブジェクトを <xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.Groups%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="c9048-641">To use the grouping feature, add one or more <xref:System.Windows.Forms.ListViewGroup> objects to the <xref:System.Windows.Forms.ListView.Groups%2A> collection of a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-642">@No__t 0 のコンストラクターでグループヘッダーのテキストとヘッダーの配置を設定するか、<xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> と <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> のプロパティを使用して設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-642">Set the group header text and header alignment in the <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> constructor, or set them using the <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="c9048-643">グループ化機能を一時的に無効にするには、<xref:System.Windows.Forms.ListView.ShowGroups%2A> プロパティを `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-643">To temporarily disable the grouping feature, set the <xref:System.Windows.Forms.ListView.ShowGroups%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="c9048-644">グループに項目を割り当てるには、@no__t 0 のコンストラクターでグループを指定するか、<xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> のプロパティを設定するか、または項目をグループの <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> コレクションに直接追加します。</span><span class="sxs-lookup"><span data-stu-id="c9048-644">You can assign an item to a group by specifying the group in the <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> constructor, by setting the <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> property, or by directly adding the item to the <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> collection of a group.</span></span> <span data-ttu-id="c9048-645">すべての項目は、表示される前にグループに割り当てられる必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-645">All items should be assigned to groups before they are displayed.</span></span> <span data-ttu-id="c9048-646">グループに割り当てられていないアイテムは、"DefaultGroup @ no__t-0" というヘッダーを持つ既定のグループに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-646">Any items that are not assigned to a group will appear in the default group, which has the header label "DefaultGroup{0}".</span></span> <span data-ttu-id="c9048-647">既定のグループは @no__t 0 のコレクションに含まれていないため、変更できません。</span><span class="sxs-lookup"><span data-stu-id="c9048-647">The default group is not contained in the <xref:System.Windows.Forms.ListView.Groups%2A> collection, and cannot be altered.</span></span> <span data-ttu-id="c9048-648">これは主に、すべての項目がグループに適切に追加されていることを確認するためにデバッグに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-648">It is primarily useful in debugging to ensure that all items have been properly added to groups.</span></span>  
  
 <span data-ttu-id="c9048-649">項目は、一度に1つのグループにのみ配置できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-649">An item can only be in one group at a time.</span></span> <span data-ttu-id="c9048-650">項目が属するグループを変更するには、実行時に <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> プロパティを設定するか、別のグループの <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> コレクションに追加します。これにより、前のグループから自動的に削除されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-650">You can change the group to which an item belongs by setting the <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> property at run time or by adding it to the <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> collection of another group, which automatically removes it from the previous group.</span></span>  
  
 <span data-ttu-id="c9048-651">挿入マーク機能は、グループを使用している場合は無効になります。</span><span class="sxs-lookup"><span data-stu-id="c9048-651">The insertion mark feature is disabled when using groups.</span></span> <span data-ttu-id="c9048-652">これは、グループ化機能によって項目がグループメンバーシップによって並べ替えられるのに対し、挿入マーク機能は、まだ項目を順序付けていない @no__t 0 コントロールでのドラッグアンドドロップによる移動で使用されるためです。</span><span class="sxs-lookup"><span data-stu-id="c9048-652">This is because the grouping feature orders items by group membership, while the insertion mark feature is used with drag-and-drop repositioning in a <xref:System.Windows.Forms.ListView> control that does not already order its items.</span></span>  
  
 <span data-ttu-id="c9048-653"><xref:System.Windows.Forms.ListView> のグループは、アプリケーションが <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> のメソッドを呼び出すときに、Windows XP と Windows Server 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-653"><xref:System.Windows.Forms.ListView> groups are available only on Windows XP and Windows Server 2003 when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-654">以前のオペレーティングシステムでは、グループに関連するすべてのコードは効果がなく、グループは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-654">On earlier operating systems, any code relating to groups has no effect and the groups will not appear.</span></span> <span data-ttu-id="c9048-655">その結果、グループ化機能に依存するすべてのコードが正しく機能しなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-655">As a result, any code that depends on the grouping feature might not work correctly.</span></span>  
  
 <span data-ttu-id="c9048-656">グループ化機能が使用可能かどうかを判断し、使用できない場合は代替機能を提供するコードを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-656">You might want to include code that determines whether the grouping feature is available, and provide alternate functionality when it is unavailable.</span></span> <span data-ttu-id="c9048-657">たとえば、グループ別の並べ替えをサポートしていないオペレーティングシステムで実行するときに、代替の並べ替えを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-657">For example, you might want to provide alternate sorting when running on operating systems that do not support sorting by group.</span></span>  
  
 <span data-ttu-id="c9048-658">グループ化機能は、オペレーティングシステムのテーマ機能を提供するのと同じライブラリによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-658">The grouping feature is provided by the same library that provides the operating system themes feature.</span></span> <span data-ttu-id="c9048-659">このライブラリが使用可能かどうかを確認するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> メソッドオーバーロードを呼び出し、<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="c9048-659">To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-660">次のコード例では、@no__t 0 のグループ化機能を使用して、詳細ビューの項目をサブ項目の値で整理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-660">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> grouping feature to organize items by subitem value in the details view.</span></span> <span data-ttu-id="c9048-661">この形式のグループ化は、Windows エクスプローラーで使用されるグループ化に似ています。</span><span class="sxs-lookup"><span data-stu-id="c9048-661">This form of grouping is similar to the grouping used in Windows Explorer.</span></span> <span data-ttu-id="c9048-662">この例では、グループは動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-662">In the example, the groups are created dynamically.</span></span> <span data-ttu-id="c9048-663">各サブ項目列に対して、一意のサブアイテム値ごとに1つのグループが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-663">For each subitem column, one group is created for each unique subitem value.</span></span> <span data-ttu-id="c9048-664">親アイテムの列に対しては、一意の最初の文字ごとに1つのグループが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-664">For the parent item column, one group is created for each unique initial letter.</span></span> <span data-ttu-id="c9048-665">列のヘッダーをクリックすると、その列に対して作成されたグループに項目が並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-665">Clicking the header of a column sorts the items into the groups created for that column.</span></span> <span data-ttu-id="c9048-666">同じ列ヘッダーを再度クリックすると、グループの順序が反転されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-666">Clicking the same column header again reverses the order of the groups.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-667">列ヘッダーのスタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-667">Gets or sets the column header style.</span></span></summary>
        <value><span data-ttu-id="c9048-668"><see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-668">One of the <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> values.</span></span> <span data-ttu-id="c9048-669">既定値は、<see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-669">The default is <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-670">@No__t-0 プロパティを使用すると、<xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details> に設定されている場合に表示する列ヘッダーの種類を指定できます。また、<xref:System.Windows.Forms.ListView> コントロールに <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> で指定した @no__t 5 個のオブジェクトが指定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-670">The <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property allows you to specify the type of column headers to display when the <xref:System.Windows.Forms.ListView.View%2A> property of the <xref:System.Windows.Forms.ListView> control is set to <xref:System.Windows.Forms.View.Details> and the <xref:System.Windows.Forms.ListView> control has <xref:System.Windows.Forms.ColumnHeader> objects specified in the <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.</span></span> <span data-ttu-id="c9048-671"><xref:System.Windows.Forms.ColumnHeader> オブジェクトは、<xref:System.Windows.Forms.ListView> コントロールに表示される列を定義します。</span><span class="sxs-lookup"><span data-stu-id="c9048-671"><xref:System.Windows.Forms.ColumnHeader> objects define the columns that are displayed in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-672">各列は、<xref:System.Windows.Forms.ListView> の各項目のサブ項目情報を表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-672">Each column is used to display subitem information for each item in the <xref:System.Windows.Forms.ListView>.</span></span>  
  
 <span data-ttu-id="c9048-673">@No__t-0 プロパティを使用すると、列ヘッダーを表示するかどうかを指定できます。また、表示される場合は、クリック可能なボタンとして機能するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-673">The <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property allows you to specify whether the column headers are visible or, if they are visible, whether they will function as clickable buttons.</span></span> <span data-ttu-id="c9048-674">@No__t-0 プロパティが <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType> に設定されている場合、<xref:System.Windows.Forms.ListView> コントロールの項目とサブ項目は引き続き列に配置されますが、列ヘッダーは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-674">If the <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property is set to <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, the column headers are not displayed, although the items and subitems of the <xref:System.Windows.Forms.ListView> control are still arranged in columns.</span></span> <span data-ttu-id="c9048-675">@No__t-0 プロパティが <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType> に設定されている場合、列ヘッダーは、ユーザーがクリックして操作を実行できるボタンのように機能します。たとえば、クリックした列の項目をキーとして使用して、<xref:System.Windows.Forms.ListView> コントロールの項目を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-675">If the <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property is set to <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, the column headers act like buttons that users can click to carry out an action, such as sorting the items in the <xref:System.Windows.Forms.ListView> control using the items in the clicked column as a key.</span></span> <span data-ttu-id="c9048-676">この動作は、<xref:System.Windows.Forms.ListView.ColumnClick> イベントのハンドラーで実装できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-676">You can implement this behavior in a handler for the <xref:System.Windows.Forms.ListView.ColumnClick> event.</span></span> <span data-ttu-id="c9048-677">@No__t-0 プロパティが <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType> に設定されている場合、列ヘッダーは表示されますが、クリックすることはできません。</span><span class="sxs-lookup"><span data-stu-id="c9048-677">If the <xref:System.Windows.Forms.ListView.HeaderStyle%2A> property is set to <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, the column headers appear, but cannot be clicked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-678">次のコード例は、複数の項目を選択できるようにする @no__t 0 を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-678">The following code example demonstrates a <xref:System.Windows.Forms.ListView> that allows multiple items to be selected.</span></span> <span data-ttu-id="c9048-679">この例では、<xref:System.Windows.Forms.ListView.HideSelection%2A> および <xref:System.Windows.Forms.ListView.HeaderStyle%2A> プロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-679">The example demonstrates setting the <xref:System.Windows.Forms.ListView.HideSelection%2A> and <xref:System.Windows.Forms.ListView.HeaderStyle%2A> properties.</span></span> <span data-ttu-id="c9048-680">また、<xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> の各プロパティも示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-680">It also demonstrates the <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c9048-681">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-681">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-682">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-682">Call the `InitializeListView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-683">指定された値が <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-683">The value specified is not one of the <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> values.</span></span></exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-684">コントロールがフォーカスを失ったときに、そのコントロールで選択されている項目が強調表示されたままかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-684">Gets or sets a value indicating whether the selected item in the control remains highlighted when the control loses focus.</span></span></summary>
        <value><span data-ttu-id="c9048-685">コントロールがフォーカスを失ったときに選択した項目が強調表示されない場合は <see langword="true" />。コントロールがフォーカスを失ったときに選択した項目が強調表示されている場合は、<see langword="false" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-685"><see langword="true" /> if the selected item does not appear highlighted when the control loses focus; <see langword="false" /> if the selected item still appears highlighted when the control loses focus.</span></span> <span data-ttu-id="c9048-686">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-686">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-687">このプロパティが `false` に設定されている場合、<xref:System.Windows.Forms.ListView> コントロールで選択された項目は、@no__t 2 コントロールがフォーカスを失ったときにオペレーティングシステムによって指定された現在の選択色とは別の色で強調表示されたままになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-687">When this property is set to `false`, selected items in the <xref:System.Windows.Forms.ListView> control remain highlighted in a different color than the current selection color specified by the operating system when the <xref:System.Windows.Forms.ListView> control loses focus.</span></span> <span data-ttu-id="c9048-688">このプロパティを使用すると、ユーザーがフォーム上の別のコントロールをクリックしたとき、または別のウィンドウに移動したときに、ユーザーによって選択された項目を表示したままにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-688">You can use this property to keep items that are selected by the user visible when the user clicks a different control on the form or moves to a different window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-689">アプリケーションのアクセシビリティに不安がある場合は、<xref:System.Windows.Forms.ListView.HideSelection%2A> プロパティを `false` に設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-689">If you are concerned with the accessibility of your applications, it is recommended that you set the <xref:System.Windows.Forms.ListView.HideSelection%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-690">次のコード例は、複数の項目を選択できるようにする @no__t 0 を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-690">The following code example demonstrates a <xref:System.Windows.Forms.ListView> that allows multiple items to be selected.</span></span> <span data-ttu-id="c9048-691">この例では、<xref:System.Windows.Forms.ListView.HideSelection%2A> および <xref:System.Windows.Forms.ListView.HeaderStyle%2A> プロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-691">The example demonstrates setting the <xref:System.Windows.Forms.ListView.HideSelection%2A> and <xref:System.Windows.Forms.ListView.HeaderStyle%2A> properties.</span></span> <span data-ttu-id="c9048-692">また、<xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>、<xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>、および <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> の各プロパティも示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-692">It also demonstrates the <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c9048-693">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-693">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-694">フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-694">Call the `InitializeListView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9048-695">指定した x 座標と y 座標の項目情報を提示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-695">Provides item information, given an x- and y-coordinate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="c9048-696">項目の情報を取得する位置を表す <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-696">The <see cref="T:System.Drawing.Point" /> at which to retrieve the item information.</span></span> <span data-ttu-id="c9048-697">座標は、このコントロールの左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="c9048-697">The coordinates are relative to the upper-left corner of the control.</span></span></param>
        <summary><span data-ttu-id="c9048-698">指定した位置の項目情報を提示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-698">Provides item information, given a point.</span></span></summary>
        <returns><span data-ttu-id="c9048-699">指定した位置の項目情報。</span><span class="sxs-lookup"><span data-stu-id="c9048-699">The item information, given a point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-700">このメソッドを使用して、ポイントが項目またはサブ項目内にあるかどうか、およびポイントが位置する項目の位置 (ラベルやイメージ領域など) を決定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-700">Use this method to determine whether a point is in an item or subitem and where in the item the point is located, such as on the label or image area.</span></span> <span data-ttu-id="c9048-701">座標がコントロールの外側に配置されている場合、返される <xref:System.Windows.Forms.ListViewHitTestInfo> オブジェクトは、"None" の <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> プロパティを持ちます。<xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> プロパティと <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> プロパティが `null` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-701">If the coordinates are located outside the control, the returned <xref:System.Windows.Forms.ListViewHitTestInfo> object has a <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> property of "None"; and the <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> and <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> properties are set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-702">ポイントに、0 未満の座標が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c9048-702">The point contains coordinates that are less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c9048-703">項目情報を取得する位置を表す x 座標。</span><span class="sxs-lookup"><span data-stu-id="c9048-703">The x-coordinate at which to retrieve the item information.</span></span> <span data-ttu-id="c9048-704">座標は、このコントロールの左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="c9048-704">The coordinate is relative to the upper-left corner of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c9048-705">項目情報を取得する位置を表す y 座標。</span><span class="sxs-lookup"><span data-stu-id="c9048-705">The y-coordinate at which to retrieve the item information.</span></span> <span data-ttu-id="c9048-706">座標は、このコントロールの左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="c9048-706">The coordinate is relative to the upper-left corner of the control.</span></span></param>
        <summary><span data-ttu-id="c9048-707">指定した x 座標と y 座標の項目情報を提示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-707">Provides item information, given x- and y-coordinates.</span></span></summary>
        <returns><span data-ttu-id="c9048-708">指定した x 座標と y 座標の項目情報。</span><span class="sxs-lookup"><span data-stu-id="c9048-708">The item information, given x- and y- coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-709">このメソッドを使用して、ポイントが項目またはサブ項目内にあるかどうか、および項目内の位置 (ラベルや画像領域など) の場所を確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-709">Use this method to determine whether a point is in an item or subitem, and where in the item the point is located, such as on the label or image area.</span></span> <span data-ttu-id="c9048-710">座標がコントロールの外側に配置されている場合、返される <xref:System.Windows.Forms.ListViewHitTestInfo> オブジェクトは、"None" の <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> プロパティを持ちます。<xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> プロパティと <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> プロパティが `null` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-710">If the coordinates are located outside the control, the returned <xref:System.Windows.Forms.ListViewHitTestInfo> object has a <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> property of "None"; and the <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> and <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> properties are set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-711">次のコード例では、<xref:System.Windows.Forms.ListView.HitTest%2A> メソッドを使用して、<xref:System.Windows.Forms.ListView> のマウスイベントの場所を確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-711">The following code example demonstrates using the <xref:System.Windows.Forms.ListView.HitTest%2A> method to determine the location of a mouse event in a <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-712">この例を実行するには、項目が設定された `listView1` という @no__t 0 を含む Windows フォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-712">To run this example, paste it into a Windows Form that contains a <xref:System.Windows.Forms.ListView> named `listView1` that is populated with items.</span></span> <span data-ttu-id="c9048-713">この例では、`listView1` の @no__t 0 イベントを `listView1_MouseDown` メソッドに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-713">Associate the <xref:System.Windows.Forms.Control.MouseDown> event for `listView1` with the `listView1_MouseDown` method in this example.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-714">x 座標または y 座標が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="c9048-714">The x- or y-coordinate is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-715">マウス ポインターが置かれたときに、項目またはサブ項目のテキストの外観がハイパーリンクになるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-715">Gets or sets a value indicating whether the text of an item or subitem has the appearance of a hyperlink when the mouse pointer passes over it.</span></span></summary>
        <value><span data-ttu-id="c9048-716">マウスが置かれたときに、項目のテキストの外観がハイパーリンクになる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-716"><see langword="true" /> if the item text has the appearance of a hyperlink when the mouse passes over it; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-717">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-717">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-718">ホットトラッキングを有効にすると、<xref:System.Windows.Forms.ListView.Activation%2A> プロパティが <xref:System.Windows.Forms.ItemActivation.OneClick> に設定され、<xref:System.Windows.Forms.ListView.HoverSelection%2A> プロパティが `true` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-718">Enabling hot tracking will cause the <xref:System.Windows.Forms.ListView.Activation%2A> property to be set to <xref:System.Windows.Forms.ItemActivation.OneClick> and the <xref:System.Windows.Forms.ListView.HoverSelection%2A> property to be set to `true`.</span></span> <span data-ttu-id="c9048-719">また、ホットトラッキングが有効になっている場合、実行時のラベル編集は許可されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-719">In addition, run-time label editing is not allowed when hot tracking is enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-720">次のコード例は、ホット追跡が有効になっている @no__t 0 を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-720">The following code example demonstrates a <xref:System.Windows.Forms.ListView> with hot tracking enabled.</span></span> <span data-ttu-id="c9048-721">この例を実行するには、次のコードを Windows フォームに貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeHotTrackingListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-721">To run this example, paste the following code into a Windows Form and call the `InitializeHotTrackingListView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-722">マウス ポインターが項目の上に数秒間留まったときに、項目が自動的に選択されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-722">Gets or sets a value indicating whether an item is automatically selected when the mouse pointer remains over the item for a few seconds.</span></span></summary>
        <value><span data-ttu-id="c9048-723">マウス ポインターが移動したときに項目が自動的に選択される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-723"><see langword="true" /> if an item is automatically selected when the mouse pointer hovers over it; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-724">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-724">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-725">このプロパティが `true` に設定されている場合、ユーザーは <xref:System.Windows.Forms.ListView> コントロール内の項目をポイントして項目を選択できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-725">When this property is set to `true`, the user can point to an item in the <xref:System.Windows.Forms.ListView> control to select the item.</span></span> <span data-ttu-id="c9048-726">CTRL キーを押しながら各項目をポイントすると、複数の項目を選択できます (@no__t 0 のプロパティが true に設定されている場合)。</span><span class="sxs-lookup"><span data-stu-id="c9048-726">Multiple items can be selected (when the <xref:System.Windows.Forms.ListView.MultiSelect%2A> property is set to true) by holding down the CTRL key while pointing to each item.</span></span> <span data-ttu-id="c9048-727">この機能を使用すると、アプリケーションのユーザーが @no__t 0 コントロールの項目を簡単に選択できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-727">You can use this feature to provide an easier method for the user of your application to select items in the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-728"><see cref="T:System.Windows.Forms.ListView" /> コントロール内で項目がドラッグされる場合に目的のドロップ位置を示すために使用されるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-728">Gets an object used to indicate the expected drop location when an item is dragged within a <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></summary>
        <value><span data-ttu-id="c9048-729">挿入マークを表す <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9048-729">A <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> object representing the insertion mark.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-730">@No__t 0 の挿入マーク機能を使用すると、項目を新しい位置にドラッグしたときに、ドラッグアンドドロップ操作で予想されるドロップ位置を視覚的に示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-730">The <xref:System.Windows.Forms.ListView> insertion mark feature lets you visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position.</span></span> <span data-ttu-id="c9048-731">この機能は、<xref:System.Windows.Forms.ListView.AutoArrange%2A> プロパティが `true` に設定されており、<xref:System.Windows.Forms.ListView> コントロールが項目を自動的に並べ替えない場合にのみ機能します。</span><span class="sxs-lookup"><span data-stu-id="c9048-731">This feature works only when the <xref:System.Windows.Forms.ListView.AutoArrange%2A> property is set to `true` and when the <xref:System.Windows.Forms.ListView> control does not sort the items automatically.</span></span> <span data-ttu-id="c9048-732">自動並べ替えを防ぐには、<xref:System.Windows.Forms.ListView.Sorting%2A> プロパティを <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> に設定し、<xref:System.Windows.Forms.ListView.View%2A> プロパティを <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>、<xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>、または <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-732">To prevent automatic sorting, the <xref:System.Windows.Forms.ListView.Sorting%2A> property must be set to <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> and the <xref:System.Windows.Forms.ListView.View%2A> property must be set to <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, or <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c9048-733">また、グループ化機能では、グループのメンバーシップによって項目が並べ替えられるため、@no__t 0 のグループ化機能で挿入マーク機能が表示されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-733">Additionally, the insertion mark feature may not be visible with the <xref:System.Windows.Forms.ListView> grouping feature because the grouping feature orders the items by group membership.</span></span>  
  
 <span data-ttu-id="c9048-734">@No__t 0 クラスは、通常、項目がドラッグされたときに挿入マークの位置を更新するために、<xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> または <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> イベントのハンドラーで使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-734">The <xref:System.Windows.Forms.ListViewInsertionMark> class is typically used in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event to update the position of the insertion mark as an item is dragged.</span></span> <span data-ttu-id="c9048-735">また、<xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> または <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> イベントのハンドラーで、ドラッグした項目を正しい位置に挿入するためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-735">It is also used in a handler for the <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> or <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> event to insert a dragged item at the correct location.</span></span> <span data-ttu-id="c9048-736">詳細については、「<xref:System.Windows.Forms.ListViewInsertionMark>」と「[」を参照してください。Windows フォーム ListView コントロール @ no__t-0 に挿入マークを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-736">For more information, see <xref:System.Windows.Forms.ListViewInsertionMark> and [How to: Display an Insertion Mark in a Windows Forms ListView Control](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-737">挿入マーク機能は、アプリケーションが <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出したときに、Windows XP と Windows Server 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-737">The insertion mark feature is available only on Windows XP and Windows Server 2003 when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-738">以前のオペレーティング システムでは、挿入マークに関連するすべてのコードは効果がなく、挿入マークは表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-738">On earlier operating systems, any code relating to the insertion mark has no effect and the insertion mark will not appear.</span></span> <span data-ttu-id="c9048-739">その結果、挿入マーク機能に依存するすべてのコードが正しく機能しなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-739">As a result, any code that depends on the insertion mark feature might not work correctly.</span></span> <span data-ttu-id="c9048-740">この機能が使用可能かどうかを判断し、使用できない場合に代替機能を提供するコードを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-740">You might want to include code that determines whether this feature is available, and provide alternate functionality when it is unavailable.</span></span> <span data-ttu-id="c9048-741">たとえば、挿入マークをサポートしていないオペレーティングシステムで実行されている場合、ドラッグアンドドロップによる項目の移動を実装するすべてのコードをバイパスすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-741">For example, you might want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.</span></span>  
>   
>  <span data-ttu-id="c9048-742">挿入マーク機能は、オペレーティングシステムのテーマ機能を提供するのと同じライブラリによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-742">The insertion mark feature is provided by the same library that provides the operating system themes feature.</span></span> <span data-ttu-id="c9048-743">このライブラリが使用可能かどうかを確認するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> メソッドオーバーロードを呼び出し、<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="c9048-743">To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-744">次のコード例は、@no__t 0 の挿入マーク機能の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-744">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature.</span></span> <span data-ttu-id="c9048-745">この例では、標準のドラッグイベントを使用して、ドラッグアンドドロップによる項目の並べ替えを実装します。</span><span class="sxs-lookup"><span data-stu-id="c9048-745">This example implements drag-and-drop item reordering using the standard drag events.</span></span> <span data-ttu-id="c9048-746">挿入マークの位置は、<xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> イベントのハンドラーで更新されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-746">The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="c9048-747">このハンドラーでは、マウスポインターの位置は最も近い項目の中間点と比較され、結果は、挿入マークが項目の左側または右側に表示されるかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-747">In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="c9048-748"><see cref="T:System.Windows.Forms.Keys" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9048-748">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="c9048-749">指定されているキーが、通常の入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-749">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="c9048-750">指定されているキーが通常の入力キーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-750"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-751">アイテムがアクティブになったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-751">Occurs when an item is activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-752">@No__t-0 イベントは、ユーザーが <xref:System.Windows.Forms.ListView> コントロール内の1つ以上の項目をアクティブにしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-752">The <xref:System.Windows.Forms.ListView.ItemActivate> event occurs when the user activates one or more items in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-753">ユーザーは、シングルクリックまたはダブルクリックのいずれかを使用して項目をアクティブ化できます。そのためには、<xref:System.Windows.Forms.ListView.Activation%2A> プロパティの値またはキーボードを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-753">The user can activate an item with either a single-click or double-click, depending on the value of the <xref:System.Windows.Forms.ListView.Activation%2A> property, or with the keyboard.</span></span> <span data-ttu-id="c9048-754">@No__t-0 イベントのイベントハンドラー内から、<xref:System.Windows.Forms.ListView.SelectedItems%2A> または <xref:System.Windows.Forms.ListView.SelectedIndices%2A> のプロパティを参照して、<xref:System.Windows.Forms.ListView> で選択した項目のコレクションにアクセスし、どの項目がアクティブ化されているかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-754">From within the event handler for the <xref:System.Windows.Forms.ListView.ItemActivate> event, you can reference the <xref:System.Windows.Forms.ListView.SelectedItems%2A> or <xref:System.Windows.Forms.ListView.SelectedIndices%2A> properties to access the collection of items selected in the <xref:System.Windows.Forms.ListView> to determine which items are being activated.</span></span>  
  
 <span data-ttu-id="c9048-755">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-755">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-756">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-756">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-757">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemActivate> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-757">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ItemActivate> event.</span></span> <span data-ttu-id="c9048-758">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-758">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-759">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-759">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-760">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-760">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-761">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemActivate> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-761">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ItemActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-762">項目のチェックの状態が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-762">Occurs when the check state of an item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-763">@No__t-1 コントロール内の各項目の横にチェックボックスを表示するには、<xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティを true に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-763">The <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property must be set to true in order for check boxes to be displayed next to each item in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-764">@No__t-0 イベントは、項目のチェックの状態が変化したとき、または <xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティが `true` に設定されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-764">The <xref:System.Windows.Forms.ListView.ItemCheck> event occurs when the check state of an item changes or when the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property is set to `true`.</span></span> <span data-ttu-id="c9048-765">@No__t-0 イベントのイベントハンドラーを作成して、<xref:System.Windows.Forms.ListView> コントロールで項目がチェックされるたびに、項目のアイコンの状態やアプリケーション固有のタスクの状態を変更するなどのタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-765">You can create an event handler for the <xref:System.Windows.Forms.ListView.ItemCheck> event to perform tasks such as changing the state of an item's icon or another application-specific task each time an item is checked in the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-766">@No__t-0 イベントが発生したときにウィンドウハンドルが作成されていない場合、イベントは遅延されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-766">If the window handle has not been created when the <xref:System.Windows.Forms.ListView.ItemCheck> event is raised, the event will be delayed.</span></span> <span data-ttu-id="c9048-767">ウィンドウハンドルが作成されると (フォームが表示されたとき)、遅延 @no__t 0 のイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-767">Once the window handle is created (when the form is shown), any delayed <xref:System.Windows.Forms.ListView.ItemCheck> events will be raised.</span></span> <span data-ttu-id="c9048-768">詳細については、「<xref:System.Windows.Forms.Control.HandleCreated>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-768">For more information, see <xref:System.Windows.Forms.Control.HandleCreated>.</span></span>  
  
 <span data-ttu-id="c9048-769">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-769">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-770">次のコード例は、<xref:System.Windows.Forms.ListView.ItemCheck> イベントを処理する、checked @no__t 0 コントロールを示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-770">The following code example demonstrates a checked <xref:System.Windows.Forms.ListView> control that handles the <xref:System.Windows.Forms.ListView.ItemCheck> event.</span></span> <span data-ttu-id="c9048-771">このメソッドは、<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> および <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> プロパティを使用して、選択されたメニュー項目の価格を取得して集計します。</span><span class="sxs-lookup"><span data-stu-id="c9048-771">The method uses the <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> properties to retrieve and tally the price of the menu items selected.</span></span> <span data-ttu-id="c9048-772">この例を実行するには、次のコードを、`ListView1` という名前の @no__t 0 と `Textbox1` という名前の @no__t を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-772">To run this example, paste the following code into a form containing a `ListView` named `ListView1` and a `TextBox` named `Textbox1`.</span></span> <span data-ttu-id="c9048-773">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-773">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span> <span data-ttu-id="c9048-774">この例では、<xref:System.Windows.Forms.ListView.ItemCheck> イベントがイベントハンドラーに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-774">Ensure that the <xref:System.Windows.Forms.ListView.ItemCheck> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-775">項目のチェック状態が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-775">Occurs when the checked state of an item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-776">このイベントは @no__t 0 イベントに似ていますが、項目がチェックされた後に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-776">This event is similar to the <xref:System.Windows.Forms.ListView.ItemCheck> event, but is raised after the item has been checked.</span></span>  
  
 <span data-ttu-id="c9048-777">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-777">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-778">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-778">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-779">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemChecked> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-779">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ItemChecked> event.</span></span> <span data-ttu-id="c9048-780">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-780">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-781">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-781">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-782">別の例については、<xref:System.Windows.Forms.ListView.ItemCheck> イベントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-782">For another example, see the <xref:System.Windows.Forms.ListView.ItemCheck> event.</span></span> <span data-ttu-id="c9048-783">このコードは、イベントハンドラーが @no__t 0 イベントにアタッチされている場合にも同様に機能します。</span><span class="sxs-lookup"><span data-stu-id="c9048-783">The code there works equally well if the event handler is attached to the <xref:System.Windows.Forms.ListView.ItemChecked> event.</span></span>  
  
 <span data-ttu-id="c9048-784">このコード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-784">To run this example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-785">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemChecked> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-785">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ItemChecked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-786">ユーザーがアイテムのドラッグを始めたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-786">Occurs when the user begins dragging an item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-787">@No__t-0 イベントは、ユーザーが項目のドラッグを開始したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-787">The <xref:System.Windows.Forms.ListView.ItemDrag> event occurs when the user begins dragging an item.</span></span> <span data-ttu-id="c9048-788">通常、<xref:System.Windows.Forms.ListView.ItemDrag> イベントのイベントハンドラーは、<xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> メソッドを呼び出すことによってドラッグ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="c9048-788">Typically the event handler for the <xref:System.Windows.Forms.ListView.ItemDrag> event performs the task of dragging by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-789">このイベントを使用して、アプリケーションの @no__t 0 コントロールに項目をドラッグアンドドロップするために必要なタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-789">You can use this event to perform the tasks necessary to drag items into and out of your application's <xref:System.Windows.Forms.ListView> control.</span></span>  
  
 <span data-ttu-id="c9048-790">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-790">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-791">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-791">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-792">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemDrag> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-792">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ItemDrag> event.</span></span> <span data-ttu-id="c9048-793">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-793">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-794">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-794">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-795">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-795">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-796">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemDrag> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-796">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ItemDrag> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-797">マウス ポインターをアイテムの上に移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-797">Occurs when the mouse hovers over an item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-798">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-798">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-799">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-799">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-800">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemMouseHover> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-800">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ItemMouseHover> event.</span></span> <span data-ttu-id="c9048-801">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-801">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-802">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-802">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-803">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-803">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-804">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemMouseHover> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-804">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ItemMouseHover> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-805">コントロール内のすべての項目を格納するコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-805">Gets a collection containing all items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-806"><see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> コントロール内のすべての項目を格納する <see cref="T:System.Windows.Forms.ListView" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-806">A <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> that contains all the items in the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-807">このプロパティによって返された @no__t 0 を使用して、項目を追加したり、項目を削除したり、項目の数を取得したりできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-807">Using the <xref:System.Windows.Forms.ListView.ListViewItemCollection> returned by this property, you can add items, remove items, and obtain a count of items.</span></span> <span data-ttu-id="c9048-808">コレクション内の項目で実行できるタスクの詳細については、<xref:System.Windows.Forms.ListView.ListViewItemCollection> クラスのリファレンストピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-808">For more information on the tasks that can be performed with the items in the collection, see the <xref:System.Windows.Forms.ListView.ListViewItemCollection> class reference topics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-809">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-809">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-810">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-810">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-811">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-811">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-812">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-812">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-813">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-813">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-814">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-814">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-815">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-815">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-816">項目の選択状態が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-816">Occurs when the selection state of an item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-817">仮想モードでは、複数の項目の選択状態が変化すると、<xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-817">In virtual mode, the <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> event will occur when the selection state of multiple items changes.</span></span>  
  
 <span data-ttu-id="c9048-818">@No__t-0 イベントは、項目の状態が選択から選択解除または選択解除のいずれかに変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-818">The <xref:System.Windows.Forms.ListView.ItemSelectionChanged> event occurs whether the item state changes from selected to deselected or deselected to selected.</span></span>  
  
 <span data-ttu-id="c9048-819">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-819">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-820">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-820">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-821">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemSelectionChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-821">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.ItemSelectionChanged> event.</span></span> <span data-ttu-id="c9048-822">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-822">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-823">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-823">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-824">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-824">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-825">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.ItemSelectionChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-825">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.ItemSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-826">コントロールの項目のラベルをユーザーが編集できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-826">Gets or sets a value indicating whether the user can edit the labels of items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-827">実行時にユーザーが項目のラベルを編集できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-827"><see langword="true" /> if the user can edit the labels of items at run time; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-828">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-828">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-829">@No__t-0 プロパティが `true` に設定されている場合、ユーザーは項目のテキストをクリックして選択し、項目のテキストをもう一度クリックして、ラベルテキストを編集モードにすることで、項目のテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-829">When the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property is set to `true`, the user is able to modify the text of an item by clicking the item text to select it and then clicking the item text again to put the label text into edit mode.</span></span> <span data-ttu-id="c9048-830">ユーザーは、アイテムのテキストラベルを変更または置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-830">The user can then modify or replace the item's text label.</span></span> <span data-ttu-id="c9048-831">@No__t-0 および <xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントを使用して、ユーザーが項目のテキストを編集する前と後にタスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-831">You can use the <xref:System.Windows.Forms.ListView.BeforeLabelEdit> and <xref:System.Windows.Forms.ListView.AfterLabelEdit> events to perform tasks before and after the user edits an item's text.</span></span> <span data-ttu-id="c9048-832">このプロパティが `true` に設定されている場合、サブ項目のテキストは変更できません。</span><span class="sxs-lookup"><span data-stu-id="c9048-832">The text of subitems cannot be modified if this property is set to `true`.</span></span> <span data-ttu-id="c9048-833">サブ項目のテキストを変更するには、コントロール内のサブ項目をダブルクリックしたときに、ユーザーにダイアログボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-833">To change the text of subitems, you can display a dialog box to users when they double-click a subitem in the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-834">@No__t-0 プロパティが <xref:System.Windows.Forms.ItemActivation.OneClick> または <xref:System.Windows.Forms.ItemActivation.TwoClick> に設定されている場合、<xref:System.Windows.Forms.ListView.LabelEdit%2A> プロパティの値に関係なく、ラベルの編集は許可されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-834">If the <xref:System.Windows.Forms.ListView.Activation%2A> property is set to <xref:System.Windows.Forms.ItemActivation.OneClick> or <xref:System.Windows.Forms.ItemActivation.TwoClick>, label editing will not be allowed regardless of the value of the <xref:System.Windows.Forms.ListView.LabelEdit%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-835">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-835">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-836">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-836">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-837">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-837">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-838">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-838">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-839">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-839">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-840">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-840">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-841">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-841">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-842">項目がアイコンとしてコントロールに表示されているときに、項目のラベルを折り返すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-842">Gets or sets a value indicating whether item labels wrap when items are displayed in the control as icons.</span></span></summary>
        <value><span data-ttu-id="c9048-843">項目がアイコンとして表示されるときに、項目のラベルを折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-843"><see langword="true" /> if item labels wrap when items are displayed as icons; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-844">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-844">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-845">@No__t-0 プロパティが `true` に設定されている場合、必要に応じて、項目のテキストがテキストの次の行に折り返されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-845">When the <xref:System.Windows.Forms.ListView.LabelWrap%2A> property is set to `true`, the item text is wrapped to the next line of text if needed.</span></span> <span data-ttu-id="c9048-846">テキストが2行のテキストより長い場合は、テキストが短縮されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-846">If the text is longer than two lines of text, the text is shortened.</span></span> <span data-ttu-id="c9048-847">ユーザーが項目を選択すると、すべての項目のテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-847">If the user selects the item, all the item text is displayed.</span></span> <span data-ttu-id="c9048-848">@No__t-0 プロパティが `false` に設定されている場合、すべての項目テキストが1行に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-848">If the <xref:System.Windows.Forms.ListView.LabelWrap%2A> property is set to `false`, all item text is displayed on a single line.</span></span> <span data-ttu-id="c9048-849">@No__t-0 が `false` に設定されていると、項目のテキスト全体が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-849">The entire item text is displayed when the <xref:System.Windows.Forms.ListView.LabelWrap%2A> is set to `false`.</span></span> <span data-ttu-id="c9048-850">このプロパティは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> または <xref:System.Windows.Forms.View.SmallIcon> に設定されている場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-850">This property is only used when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon> or <xref:System.Windows.Forms.View.SmallIcon>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-851">項目をコントロールで大きいアイコンとして表示するときに使用する <see cref="T:System.Windows.Forms.ImageList" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-851">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> to use when displaying items as large icons in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-852"><see cref="T:System.Windows.Forms.ImageList" /> プロパティが <see cref="P:System.Windows.Forms.ListView.View" /> に設定されているときに使用するアイコンを格納している <see cref="F:System.Windows.Forms.View.LargeIcon" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-852">An <see cref="T:System.Windows.Forms.ImageList" /> that contains the icons to use when the <see cref="P:System.Windows.Forms.ListView.View" /> property is set to <see cref="F:System.Windows.Forms.View.LargeIcon" />.</span></span> <span data-ttu-id="c9048-853">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-853">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-854">@No__t-0 プロパティを使用すると、大きいアイコンを使用して項目を表示するときに使用するアイコンを含む @no__t 1 オブジェクトを指定できます (<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> に設定されている場合)。</span><span class="sxs-lookup"><span data-stu-id="c9048-854">The <xref:System.Windows.Forms.ListView.LargeImageList%2A> property allows you to specify an <xref:System.Windows.Forms.ImageList> object that contains icons to use when displaying items with large icons (when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon>).</span></span> <span data-ttu-id="c9048-855">@No__t 0 コントロールは、アイコンを表示するときに、@no__t 1 コントロールがサポートする任意のグラフィックス形式を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-855">The <xref:System.Windows.Forms.ListView> control can accept any graphics format that the <xref:System.Windows.Forms.ImageList> control supports when displaying icons.</span></span> <span data-ttu-id="c9048-856">@No__t 0 コントロールは、.ico ファイルに限定されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-856">The <xref:System.Windows.Forms.ListView> control is not limited to .ico files.</span></span> <span data-ttu-id="c9048-857">@No__t 0 が <xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティに割り当てられたら、@no__t コントロールの各 <xref:System.Windows.Forms.ListViewItem> の <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> プロパティを、<xref:System.Windows.Forms.ImageList> の適切なイメージのインデックス位置に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-857">Once an <xref:System.Windows.Forms.ImageList> is assigned to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> property, you can set the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> property of each <xref:System.Windows.Forms.ListViewItem> in the <xref:System.Windows.Forms.ListView> control to the index position of the appropriate image in the <xref:System.Windows.Forms.ImageList>.</span></span> <span data-ttu-id="c9048-858">@No__t-0 のアイコンのサイズは、<xref:System.Windows.Forms.ImageList.ImageSize%2A> によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-858">The size of the icons for the <xref:System.Windows.Forms.ListView.LargeImageList%2A> is specified by the <xref:System.Windows.Forms.ImageList.ImageSize%2A>.</span></span>  
  
 <span data-ttu-id="c9048-859">@No__t-0 プロパティに指定できるのは1つのインデックスのみなので、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティで指定されている @no__t オブジェクトのインデックス位置は、表示するイメージと同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-859">Because only one index can be specified for the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.ImageList> objects specified in the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties should have the same index positions for the images to display.</span></span> <span data-ttu-id="c9048-860">たとえば、<xref:System.Windows.Forms.ListViewItem> の @no__t 0 プロパティが0に設定されている場合、小さいアイコンと大きいアイコンの両方に使用するイメージは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> および <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティで指定された @no__t 2 オブジェクトの同じインデックス位置にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-860">For example, if the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> property of a <xref:System.Windows.Forms.ListViewItem> is set to 0, the images to use for both small and large icons should be at the same index position in the <xref:System.Windows.Forms.ImageList> objects specified in the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-861">イメージにキーが指定されている場合でも、イメージの小さなバージョンと大きなバージョンを、それぞれのイメージリストの同じインデックス位置に配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-861">When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists.</span></span> <span data-ttu-id="c9048-862">ビューを切り替えるときに、指定したキー値に関係なく、1つのリストに含まれる画像のインデックス位置を使用して、他の一覧の画像が検索されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-862">When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</span></span>  
  
 <span data-ttu-id="c9048-863">小さいアイコン (<xref:System.Windows.Forms.View.LargeIcon> 以外のすべてのビューモード) を使用して項目を表示するときに使用する <xref:System.Windows.Forms.ImageList> を設定するには、<xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-863">To set the <xref:System.Windows.Forms.ImageList> to use when displaying items with small icons (all view modes other than <xref:System.Windows.Forms.View.LargeIcon>), use the <xref:System.Windows.Forms.ListView.SmallImageList%2A> property.</span></span> <span data-ttu-id="c9048-864">画像を使用して項目の状態を表示する場合は、<xref:System.Windows.Forms.ListView.StateImageList%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-864">If you want to use images to display item state, use the <xref:System.Windows.Forms.ListView.StateImageList%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-865">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-865">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-866">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-866">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-867">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-867">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-868">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-868">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-869">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-869">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-870">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-870">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-871">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-871">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-872">コントロールの並べ替え比較子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-872">Gets or sets the sorting comparer for the control.</span></span></summary>
        <value><span data-ttu-id="c9048-873">コントロールの並べ替え比較子を表す <see cref="T:System.Collections.IComparer" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-873">An <see cref="T:System.Collections.IComparer" /> that represents the sorting comparer for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-874">@No__t-0 プロパティを使用すると、<xref:System.Windows.Forms.ListView.Sort%2A> メソッドが呼び出されたとき、または項目がリストに追加されたときに、<xref:System.Windows.Forms.ListView> コントロール内の項目の並べ替えを実行するオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-874">The <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property allows you to specify the object that performs the sorting of items in a <xref:System.Windows.Forms.ListView> control when the <xref:System.Windows.Forms.ListView.Sort%2A> method is called or when items are added to the list.</span></span> <span data-ttu-id="c9048-875">ラベルのテキストが変更されても、項目は自動的に並べ替えられないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-875">Note that items are not sorted automatically when their label text changes.</span></span>  
  
 <span data-ttu-id="c9048-876">指定されたオブジェクトは、@no__t 0 インターフェイスを実装するクラスのインスタンスである必要があります。このインターフェイスには、<xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType> という1つのメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="c9048-876">The specified object must be an instance of a class that implements the <xref:System.Collections.IComparer> interface, which has a single method called <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c9048-877">このプロパティを使用すると、詳細ビューで列ヘッダーがクリックされたときなどに、カスタムの並べ替えを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-877">You can use this property to provide custom sorting, for example, when a column header is clicked in the details view.</span></span> <span data-ttu-id="c9048-878">これを行うには、@no__t 0 インターフェイスを実装するクラスを作成し、並べ替えの基準となる列のインデックスを受け取るコンストラクターを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-878">To do this, create a class that implements the <xref:System.Collections.IComparer> interface and provides a constructor that accepts the index of a column to sort by.</span></span> <span data-ttu-id="c9048-879">次に、クリックされた列のインデックスを使用して、このクラスのインスタンスを作成する <xref:System.Windows.Forms.ListView.ColumnClick> イベントのハンドラーを実装できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-879">You can then implement a handler for the <xref:System.Windows.Forms.ListView.ColumnClick> event that creates an instance of this class using the index of the clicked column.</span></span> <span data-ttu-id="c9048-880">@No__t-0 プロパティを新しいインスタンスに設定すると、指定されたオブジェクトを使用して <xref:System.Windows.Forms.ListView> コントロールが自動的に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-880">When you set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property to the new instance, the <xref:System.Windows.Forms.ListView> control is automatically sorted using the specified object.</span></span> <span data-ttu-id="c9048-881">後続の <xref:System.Windows.Forms.ListView.Sort%2A> メソッドの呼び出しでは、同じオブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-881">Subsequent calls to the <xref:System.Windows.Forms.ListView.Sort%2A> method use the same object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-882">@No__t-0 プロパティの値を設定すると、<xref:System.Windows.Forms.ListView.Sort%2A> メソッドが自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-882">When you set the value of the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property, the <xref:System.Windows.Forms.ListView.Sort%2A> method is called automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-883">次のコード例では、<xref:System.Windows.Forms.ListView> コントロールの列がクリックされたときに項目を手動で並べ替える @no__t 0 コントロールを含むフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-883">The following code example creates a form that contains a <xref:System.Windows.Forms.ListView> control that manually sorts items when a column in the <xref:System.Windows.Forms.ListView> control is clicked.</span></span> <span data-ttu-id="c9048-884">この例では、<xref:System.Windows.Forms.ListViewItem> の比較を実行する <xref:System.Collections.IComparer?displayProperty=nameWithType> インターフェイスを実装する `ListViewItemComparer` というクラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-884">The example defines a class called `ListViewItemComparer` that implements the <xref:System.Collections.IComparer?displayProperty=nameWithType> interface that performs the <xref:System.Windows.Forms.ListViewItem> comparison.</span></span> <span data-ttu-id="c9048-885">この例では、`ListViewItemComparer` のインスタンスを作成し、それを使用して <xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-885">The example creates an instance of `ListViewItemComparer` and uses it to set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-886">@No__t-1 イベントハンドラーの <xref:System.Windows.Forms.ListView.Sort%2A> メソッド呼び出しでは、`ListViewItemComparer` で定義されているメソッドを使用して、クリックされた列に基づいて項目の並べ替えを実行します。</span><span class="sxs-lookup"><span data-stu-id="c9048-886">The <xref:System.Windows.Forms.ListView.Sort%2A> method call in the <xref:System.Windows.Forms.ListView.ColumnClick> event handler uses the methods defined in `ListViewItemComparer` to perform the sort of items, based on the column that is clicked.</span></span>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-887">複数の項目を選択できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-887">Gets or sets a value indicating whether multiple items can be selected.</span></span></summary>
        <value><span data-ttu-id="c9048-888">コントロールの複数の項目を一度に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-888"><see langword="true" /> if multiple items in the control can be selected at one time; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-889">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-889">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-890">@No__t-0 プロパティが `true` に設定されている場合、<xref:System.Windows.Forms.ListView> コントロールで複数の項目を選択できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-890">When the <xref:System.Windows.Forms.ListView.MultiSelect%2A> property is set to `true`, multiple items can be selected in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-891">複数の項目を選択するには、ユーザーが CTRL キーを押しながら選択する項目をクリックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-891">To select multiple items, the user must hold down the CTRL key while clicking the items to select.</span></span> <span data-ttu-id="c9048-892">連続する項目を選択するには、最初の項目をクリックし、SHIFT キーを押しながら選択する最後の項目をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c9048-892">Consecutive items can be selected by clicking the first item to select and then, while holding down the SHIFT key, clicking the last item to select.</span></span> <span data-ttu-id="c9048-893">複数選択機能を使用すると、@no__t 0 コントロールで複数の項目を選択し、選択したすべての項目に対して操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-893">You can use the multiple selection feature to select multiple items in the <xref:System.Windows.Forms.ListView> control and perform an operation on all the items selected.</span></span> <span data-ttu-id="c9048-894">たとえば、ユーザーは複数の項目を選択し、選択した項目を右クリックすると、選択した項目に対して実行できる一連のタスクを表示するショートカットメニューが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-894">For example, the user could select multiple items and then right-click a selected item to display a shortcut menu that displays a set of tasks that can be performed on the selected items.</span></span>  
  
 <span data-ttu-id="c9048-895">@No__t 0 コントロールで選択されている項目を特定するには、<xref:System.Windows.Forms.ListView.SelectedItems%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-895">To determine which items are selected in the <xref:System.Windows.Forms.ListView> control, use the <xref:System.Windows.Forms.ListView.SelectedItems%2A> property.</span></span> <span data-ttu-id="c9048-896">@No__t-0 プロパティを使用すると、選択した項目の一覧を含む <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-896">The <xref:System.Windows.Forms.ListView.SelectedItems%2A> property allows you to access the <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> that contains a list of the selected items.</span></span> <span data-ttu-id="c9048-897">項目ではなく <xref:System.Windows.Forms.ListView.ListViewItemCollection> のインデックス位置を使用する場合は、<xref:System.Windows.Forms.ListView.SelectedIndices%2A> プロパティを使用して <xref:System.Windows.Forms.ListView.SelectedIndexCollection> にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-897">If you want the index positions in the <xref:System.Windows.Forms.ListView.ListViewItemCollection> instead of the items, you can use the <xref:System.Windows.Forms.ListView.SelectedIndices%2A> property to access the <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.</span></span>  
  
 <span data-ttu-id="c9048-898">@No__t 0 で複数選択を許可しない場合でも、複数の項目を選択できるようにするには、<xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティを `true` に設定して、チェックボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-898">If you do not want to allow multiple selections in the <xref:System.Windows.Forms.ListView>, yet still want to offer the user a way for multiple items to be chosen, you can display check boxes by setting the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-899">次のコード例は、複数の項目を選択できるようにする @no__t 0 を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-899">The following code example demonstrates a <xref:System.Windows.Forms.ListView> that allows multiple items to be selected.</span></span> <span data-ttu-id="c9048-900">この例では、<xref:System.Windows.Forms.ListView.HideSelection%2A> および <xref:System.Windows.Forms.ListView.HeaderStyle%2A> プロパティを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-900">The example demonstrates setting the <xref:System.Windows.Forms.ListView.HideSelection%2A> and <xref:System.Windows.Forms.ListView.HeaderStyle%2A> properties.</span></span> <span data-ttu-id="c9048-901">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-901">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-902">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-902">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-903">イベント データを格納している <see cref="T:System.Windows.Forms.LabelEditEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-903">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-904"><see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-904">Raises the <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-905">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-905">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-906">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-906">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-907"><xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-907">The <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-908">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-908">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-909">次のコード例は、<xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントを使用して、新しく編集されたラベルをアルファベットの文字に制限する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-909">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView.AfterLabelEdit> event to restrict a newly edited label to characters in the alphabet.</span></span> <span data-ttu-id="c9048-910">この例では、<xref:System.Text.ASCIIEncoding> クラスを使用して、新しいラベルの各文字の ASCII 文字コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-910">The example uses the <xref:System.Text.ASCIIEncoding> class to obtain the ASCII character code of each character of the new label.</span></span> <span data-ttu-id="c9048-911">文字が数字を表す ASCII コードの間にある場合、新しいラベルを項目に適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="c9048-911">If the character falls between the ASCII codes that represent numbers, the new label cannot be applied to the item.</span></span> <span data-ttu-id="c9048-912">この例では、フォームに @no__t 0 コントロールを作成し、そのコントロールに項目を追加している必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-912">This example requires that you have created a <xref:System.Windows.Forms.ListView> control on a form and added items to it.</span></span> <span data-ttu-id="c9048-913">また、この例では、コード例で定義されているイベントハンドラーに <xref:System.Windows.Forms.ListView.AfterLabelEdit> イベントを接続している必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-913">The example also requires that you have connected the <xref:System.Windows.Forms.ListView.AfterLabelEdit> event to the event handler defined in the example code.</span></span> <span data-ttu-id="c9048-914">@No__t-0 クラスを使用するには、ファイルに <xref:System.Text> 名前空間が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-914">In order to use the <xref:System.Text.ASCIIEncoding> class, your file must include the <xref:System.Text> namespace.</span></span>  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-915">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-915">When overriding <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-916">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-916">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-917"><see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-917">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-918">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-918">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-919">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-919">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-920"><xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-920">The <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-921">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-921">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-922">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-922">When overriding <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-923">イベント データを格納している <see cref="T:System.Windows.Forms.LabelEditEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-923">A <see cref="T:System.Windows.Forms.LabelEditEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-924"><see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-924">Raises the <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-925">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-925">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-926">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-926">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-927"><xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-927">The <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-928">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-928">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-929">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-929">When overriding <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-930">イベント データを格納している <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-930">A <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-931"><see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-931">Raises the <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-932">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-932">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-933">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-933">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-934"><xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-934">The <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-935">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-935">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-936">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-936">When overriding <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-937">イベント データを格納している <see cref="T:System.Windows.Forms.ColumnClickEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-937">A <see cref="T:System.Windows.Forms.ColumnClickEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-938"><see cref="E:System.Windows.Forms.ListView.ColumnClick" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-938">Raises the <see cref="E:System.Windows.Forms.ListView.ColumnClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-939">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-939">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-940">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-940">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-941"><xref:System.Windows.Forms.ListView.OnColumnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-941">The <xref:System.Windows.Forms.ListView.OnColumnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-942">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-942">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-943">次のコード例では、<xref:System.Windows.Forms.ListView> コントロールの列がクリックされたときに項目を手動で並べ替える @no__t 0 コントロールを含むフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-943">The following code example creates a form that contains a <xref:System.Windows.Forms.ListView> control that manually sorts items when a column in the <xref:System.Windows.Forms.ListView> control is clicked.</span></span> <span data-ttu-id="c9048-944">この例では、<xref:System.Windows.Forms.ListViewItem> の比較を実行する <xref:System.Collections.IComparer?displayProperty=nameWithType> インターフェイスを実装する `ListViewItemComparer` というクラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-944">The example defines a class called `ListViewItemComparer` that implements the <xref:System.Collections.IComparer?displayProperty=nameWithType> interface that performs the <xref:System.Windows.Forms.ListViewItem> comparison.</span></span> <span data-ttu-id="c9048-945">この例では、`ListViewItemComparer` のインスタンスを作成し、それを使用して <xref:System.Windows.Forms.ListView> コントロールの <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-945">The example creates an instance of `ListViewItemComparer` and uses it to set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-946">@No__t-1 イベントハンドラーの <xref:System.Windows.Forms.ListView.Sort%2A> メソッド呼び出しでは、`ListViewItemComparer` で定義されているメソッドを使用して、クリックされた列に基づいて項目の並べ替えを実行します。</span><span class="sxs-lookup"><span data-stu-id="c9048-946">The <xref:System.Windows.Forms.ListView.Sort%2A> method call in the <xref:System.Windows.Forms.ListView.ColumnClick> event handler uses the methods defined in `ListViewItemComparer` to perform the sort of items, based on the column that is clicked.</span></span>  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-947">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-947">When overriding <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-948">イベント データを格納している <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-948">The <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-949"><see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-949">Raises the <see cref="E:System.Windows.Forms.ListView.ColumnReordered" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-950">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-950">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-951">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-951">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-952"><xref:System.Windows.Forms.ListView.OnColumnReordered%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-952">The <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-953">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-953">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-954">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-954">When overriding <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-955">イベント データを格納している <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-955">A <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-956"><see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-956">Raises the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-957">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-957">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-958">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-958">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-959"><xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-959">The <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-960">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-960">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-961">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-961">When overriding <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-962">イベント データを格納している <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-962">A <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-963"><see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-963">Raises the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-964">ウィンドウの [ドラッグ中にウィンドウの内容を表示] オプションが無効になっている場合、<xref:System.Windows.Forms.ListView.ColumnWidthChanging> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-964">The <xref:System.Windows.Forms.ListView.ColumnWidthChanging> event will not occur if the Window's full drag feature, the "Show Window Contents While Dragging" option, is disabled.</span></span>  
  
 <span data-ttu-id="c9048-965">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-965">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-966">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-966">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-967"><xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-967">The <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-968">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-968">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-969">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-969">When overriding <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-970">イベント データを格納している <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-970">A <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-971"><see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-971">Raises the <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-972">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-972">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-973">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-973">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-974"><xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-974">The <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-975">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-975">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-976">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-976">When overriding <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-977">イベント データを格納している <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-977">A <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-978"><see cref="E:System.Windows.Forms.ListView.DrawItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-978">Raises the <see cref="E:System.Windows.Forms.ListView.DrawItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-979">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-979">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-980">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-980">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-981"><xref:System.Windows.Forms.ListView.OnDrawItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-981">The <xref:System.Windows.Forms.ListView.OnDrawItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-982">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-982">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-983">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-983">When overriding <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-984">イベント データを格納している <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-984">A <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-985"><see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-985">Raises the <see cref="E:System.Windows.Forms.ListView.DrawSubItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-986">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-986">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-987">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-987">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-988"><xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-988">The <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-989">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-989">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-990">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-990">When overriding <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-991">イベント データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9048-991">An object that contains event data.</span></span></param>
        <summary><span data-ttu-id="c9048-992"><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-992">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-993">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-993">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-994"><see langword="FontChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-994">Raises the <see langword="FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-995">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-995">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-996"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-996">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-997">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-997">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-998"><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-998">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-999">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-999">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1000"><see cref="E:System.Windows.Forms.ListView.ItemActivate" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1000">Raises the <see cref="E:System.Windows.Forms.ListView.ItemActivate" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1001">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1001">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1002">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1002">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1003"><xref:System.Windows.Forms.ListView.OnItemActivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1003">The <xref:System.Windows.Forms.ListView.OnItemActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1004">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1004">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1005">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1005">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice"><span data-ttu-id="c9048-1006">イベント データを格納している <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1006">An <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1007"><see cref="E:System.Windows.Forms.ListView.ItemCheck" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1007">Raises the <see cref="E:System.Windows.Forms.ListView.ItemCheck" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1008">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1008">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1009">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1009">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1010"><xref:System.Windows.Forms.ListView.OnItemCheck%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1010">The <xref:System.Windows.Forms.ListView.OnItemCheck%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1011">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1011">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1012">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1012">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1013">イベント データを格納している <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1013">An <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1014"><see cref="E:System.Windows.Forms.ListView.ItemChecked" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1014">Raises the <see cref="E:System.Windows.Forms.ListView.ItemChecked" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1015">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1015">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1016">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1016">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1017"><xref:System.Windows.Forms.ListView.OnItemChecked%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1017">The <xref:System.Windows.Forms.ListView.OnItemChecked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1018">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1018">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1019">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1019">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1020">イベント データを格納している <see cref="T:System.Windows.Forms.ItemDragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1020">An <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1021"><see cref="E:System.Windows.Forms.ListView.ItemDrag" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1021">Raises the <see cref="E:System.Windows.Forms.ListView.ItemDrag" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1022">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1022">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1023">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1023">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1024"><xref:System.Windows.Forms.ListView.OnItemDrag%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1024">The <xref:System.Windows.Forms.ListView.OnItemDrag%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1025">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1025">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1026">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1026">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1027">イベント データを格納している <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1027">A <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1028"><see cref="E:System.Windows.Forms.ListView.ItemMouseHover" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1028">Raises the <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1029">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1029">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1030">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1030">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1031"><xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1031">The <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1032">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1032">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1033">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1033">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1034">イベント データを格納している <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1034">A <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1035"><see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1035">Raises the <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1036">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1036">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1037">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1037">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1038"><xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1038">The <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1039">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1039">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1040">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1040">When overriding <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1041">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1041">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1042"><see cref="E:System.Windows.Forms.Control.MouseHover" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1042">Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1043">マウスが <xref:System.Windows.Forms.ListViewItem> の上にポインターを置いたときに <xref:System.Windows.Forms.ListView.OnMouseHover%2A> メソッドが呼び出された場合、メソッドは <xref:System.Windows.Forms.ListView.ItemMouseHover> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1043">If the <xref:System.Windows.Forms.ListView.OnMouseHover%2A> method is called when the mouse is hovering over a <xref:System.Windows.Forms.ListViewItem>, the method raises the <xref:System.Windows.Forms.ListView.ItemMouseHover> event.</span></span>  
  
 <span data-ttu-id="c9048-1044">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1044">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1045">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1045">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1046"><xref:System.Windows.Forms.ListView.OnMouseHover%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1046">The <xref:System.Windows.Forms.ListView.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1047">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1047">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1048">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1048">When overriding <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1049">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1049">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1050"><see cref="E:System.Windows.Forms.Control.MouseLeave" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1050">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1051">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1051">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1052"><see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1052">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1053">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1053">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1054"><see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1054">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1055">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="c9048-1055">A <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1056"><see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1056">Raises the <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1057">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1057">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1058">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1058">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1059"><xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1059">The <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1060">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1060">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1061">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1061">When overriding <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1062">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1062">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1063"><see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1063">Raises the <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1064">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1064">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1065">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1065">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1066"><xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1066">The <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1067">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1067">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1068">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1068">When overriding <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1069">イベント データを格納している <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1069">A <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1070"><see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1070">Raises the <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1071">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1071">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1072">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1072">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1073"><xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1073">The <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1074">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1074">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1075">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1075">When overriding <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1076">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1076">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1077"><see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1077">Raises the <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1078">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1078">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1079">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1079">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1080"><xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1080">The <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1081">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1081">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1082">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1082">When overriding <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1083">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1083">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1084"><see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1084">Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c9048-1085">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="c9048-1085">A <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c9048-1086"><see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1086">Raises the <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1087">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1087">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c9048-1088">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1088">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c9048-1089"><xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1089">The <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c9048-1090">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1090">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c9048-1091">派生クラスで <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1091">When overriding <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1092"><see cref="T:System.Windows.Forms.ListView" /> コントロールを描画したのがオペレーティング システムか作成したコードかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1092">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListView" /> control is drawn by the operating system or by code that you provide.</span></span></summary>
        <value><span data-ttu-id="c9048-1093">独自のコードによって <see cref="T:System.Windows.Forms.ListView" /> コントロールを描画する場合は <see langword="true" />。オペレーティング システムによって <see cref="T:System.Windows.Forms.ListView" /> コントロールを描画する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1093"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ListView" /> control is drawn by code that you provide; <see langword="false" /> if the <see cref="T:System.Windows.Forms.ListView" /> control is drawn by the operating system.</span></span> <span data-ttu-id="c9048-1094">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1094">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1095">@No__t 0 コントロールは、通常、オペレーティングシステムによって描画されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1095">A <xref:System.Windows.Forms.ListView> control is normally drawn by the operating system.</span></span> <span data-ttu-id="c9048-1096">@No__t 0 項目、サブ項目、および列ヘッダーの外観をカスタマイズするには、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティを `true` に設定し、次のイベントの1つ以上のハンドラーを指定します。 <xref:System.Windows.Forms.ListView.DrawItem>、<xref:System.Windows.Forms.ListView.DrawSubItem>、<xref:System.Windows.Forms.ListView.DrawColumnHeader>。</span><span class="sxs-lookup"><span data-stu-id="c9048-1096">In order to customize the appearance of <xref:System.Windows.Forms.ListView> items, subitems, and column headers, set the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property to `true` and provide a handler for one or more of the following events: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.</span></span> <span data-ttu-id="c9048-1097">これはオーナー描画と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1097">This is called owner drawing.</span></span> <span data-ttu-id="c9048-1098">@No__t-0 プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されている場合、3つのイベントがすべて発生します。それ以外の場合、<xref:System.Windows.Forms.ListView.DrawItem> イベントのみが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1098">When the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, all three events occur; otherwise, only the <xref:System.Windows.Forms.ListView.DrawItem> event occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1099">通常、サブ項目の情報は、タイルビューだけでなく、詳細ビューにも表示されます。ただし、タイルビューでは、<xref:System.Windows.Forms.ListView.DrawItem> イベントのハンドラーに描画する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1099">Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <xref:System.Windows.Forms.ListView.DrawItem> event.</span></span> <span data-ttu-id="c9048-1100">@No__t-2 コレクションに <xref:System.Windows.Forms.ColumnHeader> オブジェクトが追加されていないサブ項目については、<xref:System.Windows.Forms.ListView.DrawSubItem> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1100">The <xref:System.Windows.Forms.ListView.DrawSubItem> event does not occur for any subitems for which no <xref:System.Windows.Forms.ColumnHeader> object has been added to the <xref:System.Windows.Forms.ListView.Columns%2A> collection.</span></span> <span data-ttu-id="c9048-1101">また、各 <xref:System.Windows.Forms.ListViewItem> オブジェクトの最初のサブ項目は親項目自体を表し、最初の列に表示されることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1101">Note also that the first subitem of each <xref:System.Windows.Forms.ListViewItem> object represents the parent item itself, and is displayed in the first column.</span></span>  
  
 <span data-ttu-id="c9048-1102">詳細ビューでは、<xref:System.Windows.Forms.ListView.DrawItem> イベントを処理して、背景などのすべてのサブ項目に共通の要素を描画し、テキスト値などの個々のサブ項目の要素を描画するための <xref:System.Windows.Forms.ListView.DrawSubItem> イベントを処理できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1102">In the details view, you can handle the <xref:System.Windows.Forms.ListView.DrawItem> event to draw elements common to all subitems, such as the background, and handle the <xref:System.Windows.Forms.ListView.DrawSubItem> event to draw elements for individual subitems, such as text values.</span></span> <span data-ttu-id="c9048-1103">また、2つのイベントのいずれか1つだけを使用して、@no__t 0 コントロール内のすべての項目を描画することもできます。ただし、これは便利ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1103">You can also draw all items in the <xref:System.Windows.Forms.ListView> control using only one of the two events, although this may be less convenient.</span></span> <span data-ttu-id="c9048-1104">詳細ビューで列ヘッダーを描画するには、<xref:System.Windows.Forms.ListView.DrawColumnHeader> イベントを処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1104">To draw column headers in the details view, you must handle the <xref:System.Windows.Forms.ListView.DrawColumnHeader> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1105">オーナー描画時にグラフィックスがちらつく問題を回避するには、@no__t 0 コントロールをオーバーライドし、<xref:System.Windows.Forms.ListView.DoubleBuffered%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1105">To avoid issues with graphics flickering when owner drawing, override the <xref:System.Windows.Forms.ListView> control and set the <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="c9048-1106">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1106">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1107">次のコード例は、@no__t 0 コントロールのカスタム描画を提供する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1107">The following code example demonstrates how to provide custom drawing for a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1108">この例の @no__t 0 コントロールには、グラデーションの背景があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1108">The <xref:System.Windows.Forms.ListView> control in the example has a gradient background.</span></span> <span data-ttu-id="c9048-1109">負の値を持つサブ項目は、赤の前景と黒の背景を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1109">Subitems with negative values have a red foreground and a black background.</span></span>  
  
 <span data-ttu-id="c9048-1110">@No__t-0 イベントのハンドラーは、項目全体の背景を描画します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1110">A handler for the <xref:System.Windows.Forms.ListView.DrawItem> event draws the background for entire items.</span></span> <span data-ttu-id="c9048-1111">@No__t-0 イベントのハンドラーは、テキスト値と、負の値を持つサブ項目のテキストと背景の両方を描画します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1111">A handler for the <xref:System.Windows.Forms.ListView.DrawSubItem> event draws the text values and both the text and background for subitems that have negative values.</span></span> <span data-ttu-id="c9048-1112">@No__t-0 イベントのハンドラーは、各列ヘッダーを描画します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1112">A handler for the <xref:System.Windows.Forms.ListView.DrawColumnHeader> event draws each column header.</span></span>  
  
 <span data-ttu-id="c9048-1113">@No__t 0 のコンポーネントを使用すると、詳細ビューとリストビューを切り替えることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1113">A <xref:System.Windows.Forms.ContextMenu> component provides a way to switch between the details view and the list view.</span></span> <span data-ttu-id="c9048-1114">リストビューでは、<xref:System.Windows.Forms.ListView.DrawItem> イベントのみが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1114">In the list view, only the <xref:System.Windows.Forms.ListView.DrawItem> event is raised.</span></span> <span data-ttu-id="c9048-1115">この場合、テキストと背景は両方とも <xref:System.Windows.Forms.ListView.DrawItem> イベントハンドラーに描画されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1115">In this case, the text and background are both drawn in the <xref:System.Windows.Forms.ListView.DrawItem> event handler.</span></span>  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1116"><see cref="T:System.Windows.Forms.ListView" /> コントロールとその内容との間の間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1116">Gets or sets the space between the <see cref="T:System.Windows.Forms.ListView" /> control and its contents.</span></span></summary>
        <value><span data-ttu-id="c9048-1117"><see cref="T:System.Windows.Forms.Padding" /> コントロールとその内容との間の間隔を指定する <see cref="T:System.Windows.Forms.ListView" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1117">The <see cref="T:System.Windows.Forms.Padding" /> that specifies the space between the <see cref="T:System.Windows.Forms.ListView" /> control and its contents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1118">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1118">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1119"><see cref="P:System.Windows.Forms.ListView.Padding" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1119">Occurs when the value of the <see cref="P:System.Windows.Forms.ListView.Padding" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1120">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1120">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1121"><see cref="T:System.Windows.Forms.ListView" /> コントロールが描画されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1121">Occurs when the <see cref="T:System.Windows.Forms.ListView" /> control is painted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1122">@No__t 0 コントロールはオペレーティングシステムによって描画されるか、所有者描画されるので、<xref:System.Windows.Forms.ListView.Paint> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1122">The <xref:System.Windows.Forms.ListView> control is drawn by the operating system or is owner drawn, so the <xref:System.Windows.Forms.ListView.Paint> event is never raised.</span></span> <span data-ttu-id="c9048-1123">オーナー描画の詳細については、<xref:System.Windows.Forms.ListView.OwnerDraw%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1123">For more information about owner-drawing, see the <xref:System.Windows.Forms.ListView.OwnerDraw%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-1124">コントロールの外観を管理する <see cref="T:System.Windows.Forms.ListView" /> コントロールのプロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1124">Initializes the properties of the <see cref="T:System.Windows.Forms.ListView" /> control that manage the appearance of the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="c9048-1125">再描画される範囲内の最初の項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="c9048-1125">The index for the first item in the range to be redrawn.</span></span></param>
        <param name="endIndex"><span data-ttu-id="c9048-1126">再描画される範囲内の最後の項目のインデックス。</span><span class="sxs-lookup"><span data-stu-id="c9048-1126">The index for the last item of the range to be redrawn.</span></span></param>
        <param name="invalidateOnly"><span data-ttu-id="c9048-1127">その範囲の項目を無効にする場合は <see langword="true" />。項目を無効にして再描画する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1127"><see langword="true" /> to invalidate the range of items; <see langword="false" /> to invalidate and repaint the items.</span></span></param>
        <summary><span data-ttu-id="c9048-1128">ある範囲の <see cref="T:System.Windows.Forms.ListViewItem" /> オブジェクトを強制的に再描画します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1128">Forces a range of <see cref="T:System.Windows.Forms.ListViewItem" /> objects to be redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1129">@No__t-0 メソッドは、@no__t が仮想モードであるか標準モードであるかにかかわらず使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1129">The <xref:System.Windows.Forms.ListView.RedrawItems%2A> method can be used whether the <xref:System.Windows.Forms.ListView> is in virtual mode or regular mode.</span></span>  
  
 <span data-ttu-id="c9048-1130">@No__t-1 の呼び出しの前に @no__t 0 メソッドが呼び出された場合、再描画は行われません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1130">If the <xref:System.Windows.Forms.ListView.BeginUpdate%2A> method has been called prior to the call to <xref:System.Windows.Forms.ListView.RedrawItems%2A>, the redraw will not occur.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9048-1131"><paramref name="startIndex" /> または <paramref name="endIndex" /> が 0 未満か、<see cref="T:System.Windows.Forms.ListView" /> 内の項目数以上です。または、仮想モードの場合、<see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> の値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1131"><paramref name="startIndex" /> or <paramref name="endIndex" /> is less than 0, greater than or equal to the number of items in the <see cref="T:System.Windows.Forms.ListView" /> or, if in virtual mode, greater than the value of <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.</span></span>  
  
<span data-ttu-id="c9048-1132">または</span><span class="sxs-lookup"><span data-stu-id="c9048-1132">-or-</span></span> 
<span data-ttu-id="c9048-1133">指定された <paramref name="startIndex" /> が <paramref name="endIndex." /> より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1133">The given <paramref name="startIndex" /> is greater than the <paramref name="endIndex." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1134"><see cref="T:System.Windows.Forms.ListView" /> が仮想モードで、<see cref="T:System.Windows.Forms.ListViewItem" /> を必要とする場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1134">Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and requires a <see cref="T:System.Windows.Forms.ListViewItem" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1135">@No__t 0 のオブジェクトが仮想モードの場合、<xref:System.Windows.Forms.ListView.Items%2A> のコレクションを使用するのではなく、<xref:System.Windows.Forms.ListViewItem> のオブジェクトを動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1135">When a <xref:System.Windows.Forms.ListView> object is in virtual mode, it creates <xref:System.Windows.Forms.ListViewItem> objects dynamically instead of using the <xref:System.Windows.Forms.ListView.Items%2A> collection.</span></span> <span data-ttu-id="c9048-1136">このイベントは、オブジェクトが @no__t 0 オブジェクトを作成する必要があるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1136">This event is raised when the object must create a <xref:System.Windows.Forms.ListViewItem> object.</span></span> <span data-ttu-id="c9048-1137">このイベントのハンドラーは、適切な @no__t 0 を作成するか、キャッシュから取得し、<xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> プロパティを使用して再度渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1137">A handler for this event should create the appropriate <xref:System.Windows.Forms.ListViewItem> or retrieve it from the cache, and pass it back by way of the <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> property.</span></span>  
  
 <span data-ttu-id="c9048-1138">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1138">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1139">このイベントのハンドラーを示すコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1139">The following code example demonstrates a handler for this event.</span></span> <span data-ttu-id="c9048-1140">この例では、listView1 は各 <xref:System.Windows.Forms.ListViewItem> を使用して、インデックスの2乗を表示する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1140">In this example, listView1 needs each <xref:System.Windows.Forms.ListViewItem> to display the square of its index.</span></span> <span data-ttu-id="c9048-1141">このコード例は、<xref:System.Windows.Forms.ListView.VirtualMode%2A> プロパティ用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1141">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ListView.VirtualMode%2A> property.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-1142"><see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> イベントの処理時に <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> プロパティが項目に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1142">The <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> property is not set to an item when the <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> event is handled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1143">コントロールを右から左方向にレイアウトするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1143">Gets or sets a value indicating whether the control is laid out from right to left.</span></span></summary>
        <value><span data-ttu-id="c9048-1144"><see cref="T:System.Windows.Forms.ListView" /> コントロールが右から左方向にレイアウトされることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1144"><see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.ListView" /> control is laid out from right to left; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1145">@No__t-0 プロパティは、言語が右から左に読み込まれる国際対応アプリケーションで使用するためのものです。</span><span class="sxs-lookup"><span data-stu-id="c9048-1145">The <xref:System.Windows.Forms.ListView> property is for use with international applications where the language is read from right to left.</span></span> <span data-ttu-id="c9048-1146">@No__t-0 と <xref:System.Windows.Forms.RightToLeft> を true に設定した場合、コントロールの内容とテキストは右から左にレイアウトされます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1146">If you set <xref:System.Windows.Forms.ListView> and <xref:System.Windows.Forms.RightToLeft> to true the control's contents and text will be laid out from right to left.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1147"><see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1147">Occurs when the value of the <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1148">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1148">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1149">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1149">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-1150">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1150">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="c9048-1151">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1151">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-1152">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1152">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-1153">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1153">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-1154">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1154">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1155">すべての項目を表示する十分な領域がない場合に、スクロール バーをコントロールに追加するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1155">Gets or sets a value indicating whether a scroll bar is added to the control when there is not enough room to display all items.</span></span></summary>
        <value><span data-ttu-id="c9048-1156">必要に応じてスクロール バーをコントロールに追加して、ユーザーがすべての項目を参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1156"><see langword="true" /> if scroll bars are added to the control when necessary to allow the user to see all the items; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-1157">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1157">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1158">このプロパティを `true` に設定すると、項目数がコントロールのクライアント領域のサイズを超える場合に使用する垂直スクロールバーが <xref:System.Windows.Forms.ListView> に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1158">When this property is set to `true`, the <xref:System.Windows.Forms.ListView> displays a vertical scroll bar to use when the number of items exceeds the size of the client area of the control.</span></span> <span data-ttu-id="c9048-1159">このプロパティを使用して、@no__t 0 コントロールで使用できるすべての項目にユーザーがアクセスできるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1159">You can use this property to ensure that the user can access all items that are available in the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1160">バージョン2.0 より前の [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] のバージョンでは、このプロパティを `false` に設定し、コントロールのサイズを大きくするために、列ヘッダーが正しく描画されませんでした。</span><span class="sxs-lookup"><span data-stu-id="c9048-1160">In versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] prior to version 2.0, the column headers were not painted correctly when setting this property to `false` and resizing the control to make it larger.</span></span> <span data-ttu-id="c9048-1161">この問題を回避するには、このプロパティを <xref:System.Windows.Forms.Form.ResizeBegin> イベントハンドラーの `true` に設定し、<xref:System.Windows.Forms.Form.ResizeEnd> イベントハンドラーで `false` に設定し直します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1161">To work around this issue, set this property to `true` in a <xref:System.Windows.Forms.Form.ResizeBegin> event handler and set it back to `false` in a <xref:System.Windows.Forms.Form.ResizeEnd> event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1162"><see cref="T:System.Windows.Forms.ListView" /> が仮想モードの場合に、検索が実行されると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1162">Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and a search is taking place.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1163">このイベントは、@no__t 0 が仮想モードで、<xref:System.Windows.Forms.ListView.FindNearestItem%2A> または <xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッドが呼び出されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1163">This event occurs when a <xref:System.Windows.Forms.ListView> is in virtual mode and the <xref:System.Windows.Forms.ListView.FindNearestItem%2A> or <xref:System.Windows.Forms.ListView.FindItemWithText%2A> method is called.</span></span> <span data-ttu-id="c9048-1164">このイベントを処理する場合は、<xref:System.Windows.Forms.ListView.Items%2A> プロパティによって指定された項目の一覧から検索条件に一致する項目を計算し、<xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> プロパティを <xref:System.Windows.Forms.ListViewItem> のインデックスに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1164">When handling this event, you should calculate which item from the list of items supplied by the <xref:System.Windows.Forms.ListView.Items%2A> property matches the search criteria and set the <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> property to the index of the <xref:System.Windows.Forms.ListViewItem>.</span></span> <span data-ttu-id="c9048-1165">項目が指定されていない場合、<xref:System.Windows.Forms.ListView.FindNearestItem%2A> と <xref:System.Windows.Forms.ListView.FindItemWithText%2A> は `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1165">If an item is not provided, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> and <xref:System.Windows.Forms.ListView.FindItemWithText%2A> will return `null`.</span></span>  
  
 <span data-ttu-id="c9048-1166">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1166">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1167">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1167">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-1168">この例では、検索は最初の1万二乗のリスト内の指定された整数に最も近い一致を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1168">In the example, a search returns the nearest match to a specified integer in a list of the first ten thousand squares.</span></span> <span data-ttu-id="c9048-1169">このコード例は、<xref:System.Windows.Forms.ListView.VirtualMode%2A> プロパティ用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1169">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ListView.VirtualMode%2A> property.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1170"><see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> コレクションが変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1170">Occurs when the <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> collection changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1171">@No__t 2 の <xref:System.Windows.Forms.ListViewItem.Selected%2A> プロパティが変更されるたびに、<xref:System.Windows.Forms.ListView.SelectedIndices%2A> コレクションが変更されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1171">The <xref:System.Windows.Forms.ListView.SelectedIndices%2A> collection changes whenever the <xref:System.Windows.Forms.ListViewItem.Selected%2A> property of a <xref:System.Windows.Forms.ListViewItem> changes.</span></span> <span data-ttu-id="c9048-1172">プロパティの変更は、プログラムによって、またはユーザーが項目を選択したとき、または項目の選択を解除したときに発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1172">The property change can occur programmatically or when the user selects an item or clears the selection of an item.</span></span> <span data-ttu-id="c9048-1173">複数選択を実行するために CTRL キーを押さずに項目を選択すると、コントロールはまず、前の選択範囲をクリアします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1173">When the user selects an item without pressing CTRL to perform a multiple selection, the control first clears the previous selection.</span></span> <span data-ttu-id="c9048-1174">この場合、このイベントは、以前に選択された項目ごとに1回、新しく選択された項目に対して1回発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1174">In this case, this event occurs one time for each item that was previously selected and one time for the newly selected item.</span></span>  
  
 <span data-ttu-id="c9048-1175">@No__t 0 コントロールで選択されている項目を確認するには、<xref:System.Windows.Forms.ListView.SelectedItems%2A> プロパティを使用して <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1175">To determine which items are selected in the <xref:System.Windows.Forms.ListView> control, use the <xref:System.Windows.Forms.ListView.SelectedItems%2A> property to access the <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.</span></span> <span data-ttu-id="c9048-1176">このイベントのイベントハンドラーを作成して、@no__t 0 コントロールで選択した項目に変更があったときにタスクを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1176">You can create an event handler for this event to perform tasks whenever there is a change to the selected items in the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
 <span data-ttu-id="c9048-1177">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1177">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1178">次のコード例は、<xref:System.Windows.Forms.ListView.SelectedItems%2A> プロパティ、<xref:System.Windows.Forms.ListView.SelectedIndexChanged> イベント、@no__t 2 のメンバー、および <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> クラスを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1178">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView.SelectedItems%2A> property, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> event, <xref:System.Windows.Forms.ListView.HeaderStyle%2A> members, and the <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> class.</span></span> <span data-ttu-id="c9048-1179">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1179">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-1180">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1180">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span> <span data-ttu-id="c9048-1181">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.SelectedIndexChanged> イベントに正しく関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1181">This example requires that the event handler is correctly associated with the <xref:System.Windows.Forms.ListView.SelectedIndexChanged> event</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1182">コントロール内の選択された項目のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1182">Gets the indexes of the selected items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1183">選択された項目のインデックスを格納している <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1183">A <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> that contains the indexes of the selected items.</span></span> <span data-ttu-id="c9048-1184">項目が現在選択されていない場合は、空の <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1184">If no items are currently selected, an empty <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1185">@No__t-1 ハンドルが作成される前にプロパティにアクセスした場合、<xref:System.Windows.Forms.ListView.SelectedIndices%2A> プロパティにはインデックスが含まれません。これは通常、フォームに表示するために <xref:System.Windows.Forms.ListView> が最初に読み込まれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1185">The <xref:System.Windows.Forms.ListView.SelectedIndices%2A> property will not contain any indexes if the property is accessed before the <xref:System.Windows.Forms.ListView> handle is created, which typically occurs when the <xref:System.Windows.Forms.ListView> is initially loaded for display in the form.</span></span> <span data-ttu-id="c9048-1186">@No__t-0 プロパティを使用してハンドルが作成されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1186">You can check to see if the handle is created with the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property.</span></span> <span data-ttu-id="c9048-1187">@No__t-0 プロパティが `true` に設定されている場合、このプロパティは <xref:System.Windows.Forms.ListView> で選択されているすべての項目のインデックスを含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1187">When the <xref:System.Windows.Forms.ListView.MultiSelect%2A> property is set to `true`, this property returns a collection containing the indexes of all items that are selected in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-1188">1つの選択 <xref:System.Windows.Forms.ListView> の場合、このプロパティは、<xref:System.Windows.Forms.ListView> で選択された唯一の項目のインデックスを含む単一の要素を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1188">For a single-selection <xref:System.Windows.Forms.ListView>, this property returns a collection containing a single element containing the index of the only selected item in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-1189">コレクション内の項目で実行できるタスクの詳細については、「<xref:System.Windows.Forms.ListView.SelectedIndexCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1189">For more information on the tasks that can be performed with the items in the collection, see <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.</span></span>  
  
 <span data-ttu-id="c9048-1190">選択された項目のインデックス位置ではなく、@no__t 0 コントロールで選択されている項目のコレクションを取得する場合は、<xref:System.Windows.Forms.ListView.SelectedItems%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1190">If you want to obtain a collection of the items that are selected in the <xref:System.Windows.Forms.ListView> control, instead of the index positions of the items that are selected, use the <xref:System.Windows.Forms.ListView.SelectedItems%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1191">次のコード例では、<xref:System.Windows.Forms.ListView.SelectedIndices%2A>、<xref:System.Windows.Forms.ListView.SelectedIndexChanged>、および @no__t 2 のメンバーと <xref:System.Windows.Forms.ListView.SelectedIndexCollection> クラスを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1191">The following code example demonstrates using the <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, and <xref:System.Windows.Forms.ListView.HeaderStyle%2A> members and the <xref:System.Windows.Forms.ListView.SelectedIndexCollection> class.</span></span> <span data-ttu-id="c9048-1192">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1192">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-1193">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1193">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span> <span data-ttu-id="c9048-1194">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.SelectedIndexChanged> イベントに正しく関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1194">This example requires the event handler is correctly associated with the <xref:System.Windows.Forms.ListView.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1195">コントロール内の選択された項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1195">Gets the items that are selected in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1196">コントロール内の選択された項目を格納している <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1196">A <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> that contains the items that are selected in the control.</span></span> <span data-ttu-id="c9048-1197">項目が現在選択されていない場合は、空の <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1197">If no items are currently selected, an empty <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1198">@No__t-1 ハンドルが作成される前にプロパティにアクセスした場合、<xref:System.Windows.Forms.ListView.SelectedItems%2A> プロパティには項目が含まれません。これは通常、フォームに表示するために <xref:System.Windows.Forms.ListView> が最初に読み込まれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1198">The <xref:System.Windows.Forms.ListView.SelectedItems%2A> property will not contain any items if the property is accessed before the <xref:System.Windows.Forms.ListView> handle is created, which typically occurs when <xref:System.Windows.Forms.ListView> is initially loaded for display in the form.</span></span> <span data-ttu-id="c9048-1199">@No__t-0 プロパティを使用してハンドルが作成されているかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1199">You can check to see if the handle is created with the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property.</span></span> <span data-ttu-id="c9048-1200">@No__t-0 プロパティが `true` に設定されている場合、このプロパティは <xref:System.Windows.Forms.ListView> で選択されている項目を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1200">When the <xref:System.Windows.Forms.ListView.MultiSelect%2A> property is set to `true`, this property returns a collection containing the items that are selected in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-1201">1つの選択 <xref:System.Windows.Forms.ListView> の場合、このプロパティは <xref:System.Windows.Forms.ListView> で選択された唯一の項目を含むコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1201">For a single-selection <xref:System.Windows.Forms.ListView>, this property returns a collection containing the only selected item in the <xref:System.Windows.Forms.ListView>.</span></span> <span data-ttu-id="c9048-1202">コレクション内の項目で実行できるタスクの詳細については、「<xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1202">For more information on the tasks that can be performed with the items in the collection, see <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.</span></span>  
  
 <span data-ttu-id="c9048-1203">選択された項目ではなく、<xref:System.Windows.Forms.ListView> コントロールで選択されている項目の @no__t 0 内のインデックス位置のコレクションを取得する場合は、<xref:System.Windows.Forms.ListView.SelectedIndices%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1203">If you want to obtain a collection of the index positions within the <xref:System.Windows.Forms.ListView.ListViewItemCollection> of the items that are selected in the <xref:System.Windows.Forms.ListView> control, instead of the items that are selected, use the <xref:System.Windows.Forms.ListView.SelectedIndices%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1204">次のコード例では、<xref:System.Windows.Forms.ListView.SelectedItems%2A>、<xref:System.Windows.Forms.ListView.SelectedIndexChanged> イベント、および @no__t 2 のメンバーと <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> クラスを使用しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1204">The following code example demonstrates using the <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> event, and <xref:System.Windows.Forms.ListView.HeaderStyle%2A> members and the <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> class.</span></span> <span data-ttu-id="c9048-1205">この例を実行するには、次のコードを `ListView1` という名前の @no__t 0 オブジェクトと、`TextBox1` という名前の @no__t) を含むフォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1205">To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.ListView> object named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `TextBox1`.</span></span> <span data-ttu-id="c9048-1206">フォームのコンストラクターまたは `Load` メソッドから `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1206">Call the `InitializeListView` method from the form's constructor or `Load` method.</span></span> <span data-ttu-id="c9048-1207">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.SelectedIndexChanged> イベントに正しく関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1207">This example requires the event handler is correctly associated with the <xref:System.Windows.Forms.ListView.SelectedIndexChanged> event</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1208">項目をグループ化して表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1208">Gets or sets a value indicating whether items are displayed in groups.</span></span></summary>
        <value><span data-ttu-id="c9048-1209">項目をグループ化して表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1209"><see langword="true" /> to display items in groups; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-1210">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1210">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1211">@No__t-0 コントロールに割り当てられたグループは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.List> 以外の値に設定されている場合に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1211">Any groups assigned to a <xref:System.Windows.Forms.ListView> control appear whenever the <xref:System.Windows.Forms.ListView.View%2A> property is set to a value other than <xref:System.Windows.Forms.View.List>.</span></span> <span data-ttu-id="c9048-1212">@No__t 0 のグループ化機能を使用すると、Windows XP および Windows Server 2003 で論理的に関連する <xref:System.Windows.Forms.ListView> 項目のビジュアルグループを作成できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1212">The <xref:System.Windows.Forms.ListView> grouping feature lets you create visual groups of logically related <xref:System.Windows.Forms.ListView> items on Windows XP and Windows Server 2003.</span></span> <span data-ttu-id="c9048-1213">この機能を有効にするには、アプリケーションで <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1213">To enable this feature, your application must call the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-1214">詳細については、<xref:System.Windows.Forms.ListView.Groups%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1214">For more information, see the <xref:System.Windows.Forms.ListView.Groups%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1215"><see cref="T:System.Windows.Forms.ListViewItem" /> に配置されている <see cref="T:System.Windows.Forms.ListView" /> オブジェクトにツールヒントが表示されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1215">Gets or sets a value indicating whether ToolTips are shown for the <see cref="T:System.Windows.Forms.ListViewItem" /> objects contained in the <see cref="T:System.Windows.Forms.ListView" />.</span></span></summary>
        <value><span data-ttu-id="c9048-1216"><see cref="T:System.Windows.Forms.ListViewItem" /> @no__t のツールヒントを表示する場合は0です。それ以外の場合は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1216"><see langword="true" /> if <see cref="T:System.Windows.Forms.ListViewItem" /> ToolTips should be shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-1217">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1217">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1218">@No__t-0 プロパティが `true` に設定されている場合、ツールヒントを持つすべての <xref:System.Windows.Forms.ListViewItem> が表示されます。それ以外の場合は、何も表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1218">If the <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> property is set to `true`, any <xref:System.Windows.Forms.ListViewItem> that has a ToolTip will display it; otherwise, nothing is displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1219">次のコード例は、<xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> および <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1219">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> and <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="c9048-1220">この例を実行するには、Windows フォームにコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーから `InitializeItemsWithToolTips` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1220">To run this example, paste the code into a Windows Form and call `InitializeItemsWithToolTips` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1221">項目をコントロールで小さいアイコンとして表示するときに使用する <see cref="T:System.Windows.Forms.ImageList" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1221">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> to use when displaying items as small icons in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1222"><see cref="T:System.Windows.Forms.ImageList" /> プロパティが <see cref="P:System.Windows.Forms.ListView.View" /> に設定されているときに使用するアイコンを格納している <see cref="F:System.Windows.Forms.View.SmallIcon" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1222">An <see cref="T:System.Windows.Forms.ImageList" /> that contains the icons to use when the <see cref="P:System.Windows.Forms.ListView.View" /> property is set to <see cref="F:System.Windows.Forms.View.SmallIcon" />.</span></span> <span data-ttu-id="c9048-1223">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1223">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1224">@No__t-0 プロパティを使用すると、小さいアイコンを使用して項目を表示するときに使用するアイコンを含む @no__t 1 オブジェクトを指定できます (<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> 以外の値に設定されている場合)。</span><span class="sxs-lookup"><span data-stu-id="c9048-1224">The <xref:System.Windows.Forms.ListView.SmallImageList%2A> property allows you to specify an <xref:System.Windows.Forms.ImageList> object that contains icons to use when displaying items with small icons (when the <xref:System.Windows.Forms.ListView.View%2A> property is set to any value other than <xref:System.Windows.Forms.View.LargeIcon>).</span></span> <span data-ttu-id="c9048-1225">@No__t 0 コントロールは、アイコンを表示するときに、@no__t 1 コントロールがサポートする任意のグラフィックス形式を受け入れることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1225">The <xref:System.Windows.Forms.ListView> control can accept any graphics format that the <xref:System.Windows.Forms.ImageList> control supports when displaying icons.</span></span> <span data-ttu-id="c9048-1226">@No__t 0 コントロールは、.ico ファイルに限定されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1226">The <xref:System.Windows.Forms.ListView> control is not limited to .ico files.</span></span> <span data-ttu-id="c9048-1227">@No__t 0 が <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに割り当てられたら、@no__t コントロールの各 <xref:System.Windows.Forms.ListViewItem> の <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> プロパティを、<xref:System.Windows.Forms.ImageList> の適切なイメージのインデックス位置に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1227">Once an <xref:System.Windows.Forms.ImageList> is assigned to the <xref:System.Windows.Forms.ListView.SmallImageList%2A> property, you can set the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> property of each <xref:System.Windows.Forms.ListViewItem> in the <xref:System.Windows.Forms.ListView> control to the index position of the appropriate image in the <xref:System.Windows.Forms.ImageList>.</span></span> <span data-ttu-id="c9048-1228">@No__t-0 のアイコンのサイズは、<xref:System.Windows.Forms.ImageList.ImageSize%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1228">The size of the icons for the <xref:System.Windows.Forms.ListView.SmallImageList%2A> is specified by the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property.</span></span>  
  
 <span data-ttu-id="c9048-1229">@No__t-0 プロパティに指定できるのは1つのインデックスのみなので、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティで指定されている @no__t オブジェクトのインデックス位置は、表示するイメージと同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1229">Because only one index can be specified for the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.ImageList> objects specified in the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties should have the same index positions for the images to display.</span></span> <span data-ttu-id="c9048-1230">たとえば、<xref:System.Windows.Forms.ListViewItem> の @no__t 0 プロパティが0に設定されている場合、小さいアイコンと大きいアイコンの両方に使用するイメージは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> および <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティで指定された @no__t 2 オブジェクトの同じインデックス位置にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1230">For example, if the <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> property of a <xref:System.Windows.Forms.ListViewItem> is set to 0, the images to use for both small and large icons should be at the same index position in the <xref:System.Windows.Forms.ImageList> objects specified in the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1231">イメージにキーが指定されている場合でも、イメージの小さなバージョンと大きなバージョンを、それぞれのイメージリストの同じインデックス位置に配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1231">When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists.</span></span> <span data-ttu-id="c9048-1232">ビューを切り替えるときに、指定したキー値に関係なく、1つのリストに含まれる画像のインデックス位置を使用して、他の一覧の画像が検索されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1232">When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</span></span>  
  
 <span data-ttu-id="c9048-1233">大きいアイコンで項目を表示するときに使用する <xref:System.Windows.Forms.ImageList> を設定するには (<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.LargeIcon> に設定されている場合)、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1233">To set the <xref:System.Windows.Forms.ImageList> to use when displaying items with large icons (when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.LargeIcon>), use the <xref:System.Windows.Forms.ListView.LargeImageList%2A> property.</span></span> <span data-ttu-id="c9048-1234">画像を使用して項目の状態を表示する場合は、<xref:System.Windows.Forms.ListView.StateImageList%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1234">If you want to use images to display item state, use the <xref:System.Windows.Forms.ListView.StateImageList%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1235">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1235">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-1236">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1236">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-1237">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1237">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-1238">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1238">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-1239">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1239">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-1240">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1240">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-1241">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1241">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-1242">リスト ビューの項目を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1242">Sorts the items of the list view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1243">通常、項目は <xref:System.Windows.Forms.ListView.Sorting%2A> プロパティを使用して並べ替えられます。このプロパティは、項目のテキストに基づいて項目を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1243">Typically items are sorted using the <xref:System.Windows.Forms.ListView.Sorting%2A> property, which sorts items based on the item text.</span></span> <span data-ttu-id="c9048-1244">並べ替え順序をカスタマイズするには、@no__t 0 インターフェイスを実装するクラスを記述し、<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティをそのクラスのオブジェクトに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1244">To customize the sort order, you must write a class that implements the <xref:System.Collections.IComparer> interface and set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property to an object of that class.</span></span> <span data-ttu-id="c9048-1245">これは、アイテムをサブアイテムテキストで並べ替える場合などに便利です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1245">This is useful, for example, when you want to sort items by subitem text.</span></span> <span data-ttu-id="c9048-1246">項目の手動による並べ替えの実行の詳細については、<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1246">For more information on performing manual sorting of items, see the example for the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property.</span></span>  
  
 <span data-ttu-id="c9048-1247">@No__t-0 プロパティが <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> 以外の値に設定されている場合、または <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティが設定されている場合は、項目が追加されるときにリストが自動的に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1247">If the <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> property is set to a value other than <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> or if the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property is set, the list is sorted automatically when items are added.</span></span> <span data-ttu-id="c9048-1248">ラベルのテキストが変更されても、項目は自動的に並べ替えられません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1248">Items are not sorted automatically when the label text changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1249">コントロール内の項目の並べ替え順序を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1249">Gets or sets the sort order for items in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1250"><see cref="T:System.Windows.Forms.SortOrder" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c9048-1250">One of the <see cref="T:System.Windows.Forms.SortOrder" /> values.</span></span> <span data-ttu-id="c9048-1251">既定値は、<see cref="F:System.Windows.Forms.SortOrder.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1251">The default is <see cref="F:System.Windows.Forms.SortOrder.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1252">@No__t-0 プロパティでは、<xref:System.Windows.Forms.ListView> コントロールで項目を並べ替えるかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1252">The <xref:System.Windows.Forms.ListView.Sorting%2A> property allows you to specify whether or not items are sorted in the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1253">既定では、並べ替えは実行されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1253">By default, no sorting is performed.</span></span> <span data-ttu-id="c9048-1254">@No__t-0 プロパティが <xref:System.Windows.Forms.SortOrder.Ascending> または <xref:System.Windows.Forms.SortOrder.Descending> に設定されている場合、<xref:System.Windows.Forms.ListView> の項目は、アルファベットの昇順で自動的に並べ替えられます (プロパティが @no__t に設定されている場合)。または、アルファベットの降順で並べ替えられます (プロパティが <xref:System.Windows.Forms.SortOrder.Descending> に設定されている場合)。</span><span class="sxs-lookup"><span data-stu-id="c9048-1254">When the <xref:System.Windows.Forms.ListView.Sorting%2A> property is set to <xref:System.Windows.Forms.SortOrder.Ascending> or <xref:System.Windows.Forms.SortOrder.Descending>, the items in the <xref:System.Windows.Forms.ListView> are sorted automatically in ascending alphabetical order (when the property is set to <xref:System.Windows.Forms.SortOrder.Ascending>) or descending alphabetical order (when the property is set to <xref:System.Windows.Forms.SortOrder.Descending>).</span></span> <span data-ttu-id="c9048-1255">このプロパティを使用すると、@no__t 0 コントロールに表示される項目を自動的に並べ替えることができます。これにより、多数の項目が使用可能になったときに、ユーザーが簡単に項目を検索できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1255">You can use this property to automatically sort items that are displayed in your <xref:System.Windows.Forms.ListView> control to make it easier for users to find items when a large number of items are available.</span></span>  
  
 <span data-ttu-id="c9048-1256">@No__t-0 プロパティを使用するのではなく、独自の項目の並べ替えを実行する場合は、<xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティを <xref:System.Windows.Forms.ListView.Sort%2A> メソッドと組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1256">If you want to perform your own item sorting instead of using the <xref:System.Windows.Forms.ListView.Sorting%2A> property, use the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property in combination with the <xref:System.Windows.Forms.ListView.Sort%2A> method.</span></span>  
  
 <span data-ttu-id="c9048-1257">@No__t-0 プロパティが <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> 以外の値に設定されている場合、または <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> プロパティが設定されている場合は、項目が追加されるときにリストが自動的に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1257">If the <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> property is set to a value other than <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> or if the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> property is set, the list is sorted automatically when items is added.</span></span> <span data-ttu-id="c9048-1258">ラベルのテキストが変更されても、項目は自動的に並べ替えられません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1258">Items are not sorted automatically when the label text changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1259">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1259">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-1260">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1260">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-1261">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1261">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-1262">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1262">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-1263">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1263">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-1264">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1264">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-1265">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1265">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-1266">指定された値が <see cref="T:System.Windows.Forms.SortOrder" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1266">The value specified is not one of the <see cref="T:System.Windows.Forms.SortOrder" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1267">コントロールのアプリケーション定義の状態に関連付けられた <see cref="T:System.Windows.Forms.ImageList" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1267">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> associated with application-defined states in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1268">項目のアプリケーション定義の状態を示すのに使用される、状態のイメージのセットを格納した <see cref="T:System.Windows.Forms.ImageList" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1268">An <see cref="T:System.Windows.Forms.ImageList" /> that contains a set of state images that can be used to indicate an application-defined state of an item.</span></span> <span data-ttu-id="c9048-1269">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1269">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1270">@No__t-0 プロパティを使用すると、@no__t 2 コントロール内の項目のアプリケーション固有の状態を表すために使用するイメージを含む <xref:System.Windows.Forms.ImageList> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1270">The <xref:System.Windows.Forms.ListView.StateImageList%2A> property allows you to specify an <xref:System.Windows.Forms.ImageList> that contains images to use to represent an application-specific state of an item in a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1271">状態イメージは、項目のアイコンの左側に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1271">State images are displayed to the left of an icon for the item.</span></span> <span data-ttu-id="c9048-1272">チェックボックスやチェックボックスをオフにした状態画像を使用して、アプリケーション定義の項目の状態を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1272">You can use state images, such as checked and unchecked check boxes, to indicate application-defined item states.</span></span> <span data-ttu-id="c9048-1273">状態イメージは、@no__t 0 コントロールのすべてのビューに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1273">State images are visible in all views of the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
 <span data-ttu-id="c9048-1274">@No__t-1 プロパティに <xref:System.Windows.Forms.ImageList> が指定されており、<xref:System.Windows.Forms.ListView.CheckBoxes%2A> プロパティが `true` に設定されている場合、チェックボックスの代わりに、@no__t 4 のインデックス位置0および1のイメージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1274">If an <xref:System.Windows.Forms.ImageList> is specified in the <xref:System.Windows.Forms.ListView.StateImageList%2A> property and the <xref:System.Windows.Forms.ListView.CheckBoxes%2A> property is set to `true`, the images at index positions 0 and 1 in the <xref:System.Windows.Forms.ImageList> are displayed instead of the check box.</span></span> <span data-ttu-id="c9048-1275">[インデックス位置 0] のイメージは [unchecked] チェックボックスの代わりに表示され、[インデックス位置 1] のイメージはチェックボックスの代わりに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1275">The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1276">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1276">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="c9048-1277"><see cref="T:System.Windows.Forms.ListView" /> コントロール内で表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="c9048-1277">The text to display in the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1278">このクラスでは、このプロパティは使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1278">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1279"><see cref="P:System.Windows.Forms.ListView.Text" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1279">Occurs when the <see cref="P:System.Windows.Forms.ListView.Text" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1280">タイル ビューで表示されるタイルのサイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1280">Gets or sets the size of the tiles shown in tile view.</span></span></summary>
        <value><span data-ttu-id="c9048-1281">新しいタイルのサイズを格納している <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1281">A <see cref="T:System.Drawing.Size" /> that contains the new tile size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1282">このプロパティは、@no__t 0 のプロパティが <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> に設定されている場合のタイルのサイズを制御します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1282">This property controls the size of tiles when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c9048-1283">このプロパティの設定は、サブ項目のテキストが長すぎて1行に表示できない場合に、行の折り返しを防止するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1283">Setting this property is useful to prevent line-wrapping when subitem text is too long to be displayed on a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1284">次のコード例は、@no__t 0 のタイル機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1284">The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> tiling feature.</span></span> <span data-ttu-id="c9048-1285">この例では、書籍を表す項目がタイルビューに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1285">In the example, the tile view displays items that represent books.</span></span> <span data-ttu-id="c9048-1286">各項目は、書籍のアイコン、タイトル、作成者、出版年度を含むタイルとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1286">Each item is shown as a tile containing an icon of a book, the title, the author, and the publication year.</span></span> <span data-ttu-id="c9048-1287">コード例を使用するには、例と同じディレクトリに、"Book. .ico" という名前のアイコンファイルを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1287">For the example code to work, you must include an icon file named Book.ico in the same directory as the example.</span></span> <span data-ttu-id="c9048-1288">アイコンのないタイルビューを表示するには、@no__t 0 のオブジェクトに関連する行をコメントアウトします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1288">To see the tile view without icons, comment out the lines relating to the <xref:System.Windows.Forms.ImageList> object.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopItem As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.TopItem" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1289">コントロールで最初に表示される項目を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1289">Gets or sets the first visible item in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1290">コントロールで最初に表示される項目を表す <see cref="T:System.Windows.Forms.ListViewItem" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1290">A <see cref="T:System.Windows.Forms.ListViewItem" /> that represents the first visible item in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1291">初期状態では、インデックス位置がゼロ (0) の項目は @no__t 0 コントロールの先頭にあります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1291">Initially, the item with the index position of zero (0) is at the top of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1292">@No__t 0 コントロールの内容がスクロールされている場合は、コントロールの上部に別の項目を配置できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1292">If the <xref:System.Windows.Forms.ListView> control contents are scrolled, a different item can be at the top of the control.</span></span> <span data-ttu-id="c9048-1293">このプロパティを使用して、@no__t 0 コントロールの上部に表示される項目を指定または決定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1293">You can use this property to indicate or determine which item is visible at the top of the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1294">必要な最上位の項目がリストビューにある場所によっては、<xref:System.Windows.Forms.ListView.TopItem%2A> プロパティの値が常に保持されるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1294">The value of the <xref:System.Windows.Forms.ListView.TopItem%2A> property will not always persist, depending on where the desired top item is in the list view.</span></span>  
  
 <span data-ttu-id="c9048-1295">@No__t 0 コントロールに表示される項目の数は、いつでもリストビューの高さとそれに含まれる項目のサイズによって異なります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1295">The number of items visible in a <xref:System.Windows.Forms.ListView> control at any time depends on the height of the list view and the size of the items it contains.</span></span> <span data-ttu-id="c9048-1296">項目がリストビューの高さを超えている場合、項目は複数のページに移動し、ユーザーはスクロールできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1296">If the items exceed the height of the list view, the items will continue onto multiple pages, which the user can scroll through.</span></span> <span data-ttu-id="c9048-1297">@No__t-0 プロパティを <xref:System.Windows.Forms.ListView> の最後のページの項目に設定した場合、項目は自動的にビューにスクロールされます。ただし、<xref:System.Windows.Forms.ListView.TopItem%2A> は最後のページの実際の最上位項目に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1297">If you set the <xref:System.Windows.Forms.ListView.TopItem%2A> property to an item in the last page of the <xref:System.Windows.Forms.ListView>, the item will automatically be scrolled into view; however, <xref:System.Windows.Forms.ListView.TopItem%2A> will be set to the actual top item of the last page.</span></span>  
  
 <span data-ttu-id="c9048-1298">特定の項目がコントロールの可視領域内にあることを確認するには (ただし、必ずしも一番上の位置にある必要はありません)、<xref:System.Windows.Forms.ListView.EnsureVisible%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1298">To ensure that a specific item is in the visible region of the control (but not necessarily in the top position), use the <xref:System.Windows.Forms.ListView.EnsureVisible%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1299">@No__t-0 プロパティ値が-1 @no__t 場合、このプロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1299">Setting this property has no effect when the <xref:System.Windows.Forms.ListView.Scrollable%2A> property value is `false`.</span></span>  
>   
>  <span data-ttu-id="c9048-1300">バージョン2.0 より前のバージョンの @no__t では、このプロパティの設定はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1300">Setting this property is not supported in versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] prior to version 2.0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1301">次のコード例は、<xref:System.Windows.Forms.ListView.TopItem%2A> プロパティと <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> メソッドを使用して、@no__t 0 オブジェクトのサブ項目のスタイルをリセットする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1301">The following code example demonstrates resetting the style of a <xref:System.Windows.Forms.ListViewItem> object's subitems through the use of the <xref:System.Windows.Forms.ListView.TopItem%2A> property and the <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-1302">この例を実行するには、`Button1` という名前のボタンを含むフォームに次のコードを貼り付け、フォームのコンストラクターまたは <xref:System.Windows.Forms.Form.Load> イベントハンドラーで `InitializeListView` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1302">To run the example, paste the following code into a form containing a button named `Button1` and call the `InitializeListView` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-1303"><see cref="P:System.Windows.Forms.ListView.View" /> プロパティは、<see cref="F:System.Windows.Forms.View.LargeIcon" />、<see cref="F:System.Windows.Forms.View.SmallIcon" />、または <see cref="F:System.Windows.Forms.View.Tile" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1303">The <see cref="P:System.Windows.Forms.ListView.View" /> property is set to <see cref="F:System.Windows.Forms.View.LargeIcon" />,  <see cref="F:System.Windows.Forms.View.SmallIcon" />, or <see cref="F:System.Windows.Forms.View.Tile" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-1304"><see cref="T:System.Windows.Forms.ListView" /> コントロールの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1304">Returns a string representation of the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></summary>
        <returns><span data-ttu-id="c9048-1305">コントロールの種類を示す文字列、<see cref="T:System.Windows.Forms.ListView" /> コントロール内の項目数、および項目数が 0 ではない場合は <see cref="T:System.Windows.Forms.ListView" /> 内の最初の項目の種類。</span><span class="sxs-lookup"><span data-stu-id="c9048-1305">A string that states the control type, the count of items in the <see cref="T:System.Windows.Forms.ListView" /> control, and the type of the first item in the <see cref="T:System.Windows.Forms.ListView" />, if the count is not 0.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9048-1306">リスト ビュー コントロールに適用されている拡張スタイルを更新します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1306">Updates the extended styles applied to the list view control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1307">派生クラスの <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> メソッドを使用して、<xref:System.Windows.Forms.ListView> コントロールで使用される拡張スタイルをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1307">You can use the <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> method in your derived class to override the extended styles used by the <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c9048-1308">このメソッドを呼び出す場合は、@no__t 0 コントロールのプロパティによって設定された拡張スタイルが、コントロールの派生バージョンで使用されていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1308">If you call this method, you should ensure that the extended styles set by properties on the <xref:System.Windows.Forms.ListView> control are utilized in your derived version of the control.</span></span>  
  
 <span data-ttu-id="c9048-1309">@No__t 0 コントロールに拡張スタイルを適用するプロパティを次に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1309">The following are the properties that apply an extended style to the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1310">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 または [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 と互換性のある状態イメージの動作を <see cref="T:System.Windows.Forms.ListView" /> で使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1310">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.ListView" /> uses state image behavior that is compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 or the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</span></span></summary>
        <value><span data-ttu-id="c9048-1311">状態イメージの動作が [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 と互換性のある場合は <see langword="true" />。その動作が [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 と互換性のある場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1311"><see langword="true" /> if the state image behavior is compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1; <see langword="false" /> if the behavior is compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</span></span> <span data-ttu-id="c9048-1312">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1312">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1313">@No__t-1 2.0 の @no__t 0 コントロールに対する変更により、カスタム状態の画像を設定して、項目がチェックされているかどうか、または不確定の状態であるかどうかを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1313">Changes to the <xref:System.Windows.Forms.ListView> control in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 enable custom state images to be set to indicate whether an item is checked or unchecked or in an indeterminate state.</span></span> <span data-ttu-id="c9048-1314">この機能の追加により、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 は .NET Framework 1.1 とは動作が異なります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1314">With the addition of this feature, the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 has different behavior than the .NET Framework 1.1.</span></span> <span data-ttu-id="c9048-1315">@No__t-0 1.1 の動作に依存するアプリケーションを作成した場合は、<xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> プロパティが既定値である `true` に設定されていることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1315">If you have created applications that depend on the behavior in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, be sure that the <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> property is set to `true`, which is the default value.</span></span> <span data-ttu-id="c9048-1316">カスタム状態イメージを完全に活用するには、<xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> を `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1316">In order to fully take advantage of custom state images, set <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1317">@No__t-0 デザイナーを使用している場合、<xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> プロパティは `false` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1317">If you are using the [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] designer, the <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> property will be set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1318">コントロールに項目を表示する方法を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1318">Gets or sets how items are displayed in the control.</span></span></summary>
        <value><span data-ttu-id="c9048-1319"><see cref="T:System.Windows.Forms.View" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="c9048-1319">One of the <see cref="T:System.Windows.Forms.View" /> values.</span></span> <span data-ttu-id="c9048-1320">既定値は、<see cref="F:System.Windows.Forms.View.LargeIcon" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1320">The default is <see cref="F:System.Windows.Forms.View.LargeIcon" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1321">@No__t-0 プロパティを使用すると、@no__t 1 コントロールが項目を表示するために使用するディスプレイの種類を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1321">The <xref:System.Windows.Forms.ListView.View%2A> property allows you to specify the type of display the <xref:System.Windows.Forms.ListView> control uses to display items.</span></span> <span data-ttu-id="c9048-1322">@No__t-0 プロパティを設定して、大きいアイコンまたは小さいアイコンを使用して各項目を表示したり、一覧に項目を表示したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1322">You can set the <xref:System.Windows.Forms.ListView.View%2A> property to display each item with large or small icons or display items in a vertical list.</span></span> <span data-ttu-id="c9048-1323">最も豊富なオプションは詳細ビューです。このビューでは、項目だけでなく、項目ごとに指定されたサブ項目も表示できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1323">The richest option is the details view, which allows you to view not only the items but any subitems specified for each item.</span></span> <span data-ttu-id="c9048-1324">各項目がグリッドに表示され、各項目が垂直方向に表示され、各項目のサブ項目が列ヘッダーと共に列に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1324">Each item is displayed in a grid, with each item listed vertically and the subitems for each item displayed in a column, with column headers.</span></span> <span data-ttu-id="c9048-1325">詳細ビューは、データベース情報をユーザーに表示するための最適な方法です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1325">The details view is a perfect way to display database information to a user.</span></span> <span data-ttu-id="c9048-1326">Windows XP と Windows Server 2003 では、選択したサブ項目情報と共に大きいアイコンを表示することで、グラフィックとテキストの情報を調整するタイルとして項目を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1326">With Windows XP and Windows Server 2003, you can also display items as tiles that balance graphical and textual information by showing a large icon along with subitem information of your choosing.</span></span> <span data-ttu-id="c9048-1327">タイルビューを有効にするには、アプリケーションで <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1327">To enable tile view, your application must call the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-1328">小さいイメージビューでは、アイコンとテキスト情報を含む各項目がアイコンの右側に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1328">The small-image view displays each item with an icon and textual information to the right of the icon.</span></span> <span data-ttu-id="c9048-1329">大きなイメージのビューでは、アイコンとテキスト情報を含む各項目がアイコンの下に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1329">The large-image view displays each item with an icon and textual information below the icon.</span></span> <span data-ttu-id="c9048-1330">イメージリストのアイコンのサイズは、<xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティまたは <xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティの <xref:System.Windows.Forms.ImageList> の @no__t 0 プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1330">The size of the icons for the image list is specified by the <xref:System.Windows.Forms.ImageList.ImageSize%2A> property of the <xref:System.Windows.Forms.ImageList> for the <xref:System.Windows.Forms.ListView.SmallImageList%2A> or <xref:System.Windows.Forms.ListView.LargeImageList%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1331">複数のイメージリストを使用している場合、@no__t 0 のコントロールで、サイズの小さいサイズのアイコンを表示するには、イメージの小さいサイズと大きいバージョンを、それぞれのイメージリストの同じインデックス位置に配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1331">If you are using multiple image lists, for small and large icon view, with a <xref:System.Windows.Forms.ListView> control, you should place small and large versions of the image at the same index location in their respective image lists.</span></span> <span data-ttu-id="c9048-1332">ビューを切り替えるときに、指定したキー値に関係なく、1つのリストに含まれる画像のインデックス位置を使用して、他の一覧の画像が検索されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1332">When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</span></span>  
  
 <span data-ttu-id="c9048-1333">@No__t 0 コントロールのほとんどのプロパティは、さまざまなビューの動作または表示方法に影響します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1333">Most of the properties in the <xref:System.Windows.Forms.ListView> control affect how the different views behave or are displayed.</span></span> <span data-ttu-id="c9048-1334">アイテムのビューに影響を与える一部のプロパティは、@no__t 0 プロパティが特定の値に設定されている場合にのみ役立ちます。また、他のプロパティはすべてのビューで役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1334">Some properties that affect the views of the items are only useful when the <xref:System.Windows.Forms.ListView.View%2A> property is set to a specific value, while others are useful in all views.</span></span> <span data-ttu-id="c9048-1335">たとえば、<xref:System.Windows.Forms.ListView.GridLines%2A> や <xref:System.Windows.Forms.ListView.FullRowSelect%2A> などのプロパティは、<xref:System.Windows.Forms.ListView.View%2A> プロパティが <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されている場合にのみ役立ちます。また、<xref:System.Windows.Forms.ListView.MultiSelect%2A> プロパティと @no__t 5 プロパティは、すべてのビューで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1335">For example, properties such as <xref:System.Windows.Forms.ListView.GridLines%2A> and <xref:System.Windows.Forms.ListView.FullRowSelect%2A> are only useful when the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, while the <xref:System.Windows.Forms.ListView.MultiSelect%2A> and <xref:System.Windows.Forms.ListView.CheckBoxes%2A> properties are useful in all views.</span></span>  
  
 <span data-ttu-id="c9048-1336">次の表に、@no__t 0 のメンバーと、それらがで有効なビューの一部を示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1336">The following table shows some of the <xref:System.Windows.Forms.ListView> members and the views they are valid in.</span></span>  
  
|<span data-ttu-id="c9048-1337">ListView メンバー</span><span class="sxs-lookup"><span data-stu-id="c9048-1337">ListView member</span></span>|<span data-ttu-id="c9048-1338">View</span><span class="sxs-lookup"><span data-stu-id="c9048-1338">View</span></span>|  
|---------------------|----------|  
|<span data-ttu-id="c9048-1339"><xref:System.Windows.Forms.ListView.Alignment%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1339"><xref:System.Windows.Forms.ListView.Alignment%2A> property</span></span>|<span data-ttu-id="c9048-1340"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-1340"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-1341"><xref:System.Windows.Forms.ListView.AutoArrange%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1341"><xref:System.Windows.Forms.ListView.AutoArrange%2A> property</span></span>|<span data-ttu-id="c9048-1342"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-1342"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-1343"><xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-1343"><xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> method</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|<span data-ttu-id="c9048-1344">@No__t を除くすべてのビュー-0</span><span class="sxs-lookup"><span data-stu-id="c9048-1344">All views except <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-1345"><xref:System.Windows.Forms.ListView.Columns%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1345"><xref:System.Windows.Forms.ListView.Columns%2A> property</span></span>|<span data-ttu-id="c9048-1346"><xref:System.Windows.Forms.View.Details> または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-1346"><xref:System.Windows.Forms.View.Details> or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-1347"><xref:System.Windows.Forms.ListView.DrawSubItem> イベント</span><span class="sxs-lookup"><span data-stu-id="c9048-1347"><xref:System.Windows.Forms.ListView.DrawSubItem> event</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<span data-ttu-id="c9048-1348"><xref:System.Windows.Forms.ListView.FindItemWithText%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-1348"><xref:System.Windows.Forms.ListView.FindItemWithText%2A> method</span></span>|<span data-ttu-id="c9048-1349"><xref:System.Windows.Forms.View.Details>、 <xref:System.Windows.Forms.View.List>、または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-1349"><xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>, or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-1350"><xref:System.Windows.Forms.ListView.FindNearestItem%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-1350"><xref:System.Windows.Forms.ListView.FindNearestItem%2A> method</span></span>|<span data-ttu-id="c9048-1351"><xref:System.Windows.Forms.View.SmallIcon> または <xref:System.Windows.Forms.View.LargeIcon></span><span class="sxs-lookup"><span data-stu-id="c9048-1351"><xref:System.Windows.Forms.View.SmallIcon> or <xref:System.Windows.Forms.View.LargeIcon></span></span>|  
|<span data-ttu-id="c9048-1352"><xref:System.Windows.Forms.ListView.GetItemAt%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="c9048-1352"><xref:System.Windows.Forms.ListView.GetItemAt%2A> method</span></span>|<span data-ttu-id="c9048-1353"><xref:System.Windows.Forms.View.Details> または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-1353"><xref:System.Windows.Forms.View.Details> or <xref:System.Windows.Forms.View.Tile></span></span>|  
|<span data-ttu-id="c9048-1354"><xref:System.Windows.Forms.ListView.Groups%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1354"><xref:System.Windows.Forms.ListView.Groups%2A> property</span></span>|<span data-ttu-id="c9048-1355">@No__t を除くすべてのビュー-0</span><span class="sxs-lookup"><span data-stu-id="c9048-1355">All views except <xref:System.Windows.Forms.View.List></span></span>|  
|<span data-ttu-id="c9048-1356"><xref:System.Windows.Forms.ListView.HeaderStyle%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1356"><xref:System.Windows.Forms.ListView.HeaderStyle%2A> property</span></span>|<xref:System.Windows.Forms.View.Details>|  
|<span data-ttu-id="c9048-1357"><xref:System.Windows.Forms.ListView.InsertionMark%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="c9048-1357"><xref:System.Windows.Forms.ListView.InsertionMark%2A> property</span></span>|<span data-ttu-id="c9048-1358"><xref:System.Windows.Forms.View.LargeIcon>、 <xref:System.Windows.Forms.View.SmallIcon>、または <xref:System.Windows.Forms.View.Tile></span><span class="sxs-lookup"><span data-stu-id="c9048-1358"><xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>, or <xref:System.Windows.Forms.View.Tile></span></span>|  
  
 <span data-ttu-id="c9048-1359">@No__t-0 プロパティを使用して、アプリケーション内のさまざまなデータビューを提供したり、特定のビューをロックしてそのビューの利点を活用したりできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1359">You can use the <xref:System.Windows.Forms.ListView.View%2A> property to provide different views of data in your application, or to lock a specific view to utilize that view's benefits.</span></span> <span data-ttu-id="c9048-1360">たとえば、<xref:System.Windows.Forms.ListView.View%2A> プロパティは、多くの場合、<xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定されます。これは、詳細ビューには、他のビューでは使用できない表示オプションが多数用意されているためです。</span><span class="sxs-lookup"><span data-stu-id="c9048-1360">For example, the <xref:System.Windows.Forms.ListView.View%2A> property is often set to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> because the details view provides a number of viewing options not available in the other views.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1361">@No__t 0 コントロールに列ヘッダーが指定されておらず、<xref:System.Windows.Forms.ListView.View%2A> プロパティを <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> に設定した場合、<xref:System.Windows.Forms.ListView> コントロールは項目を表示しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1361">If your <xref:System.Windows.Forms.ListView> control does not have any column headers specified and you set the <xref:System.Windows.Forms.ListView.View%2A> property to <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, the <xref:System.Windows.Forms.ListView> control will not display any items.</span></span> <span data-ttu-id="c9048-1362">@No__t 0 コントロールに列ヘッダーが指定されておらず、<xref:System.Windows.Forms.ListView.View%2A> プロパティを <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> に設定した場合、<xref:System.Windows.Forms.ListView> コントロールはサブ項目を表示しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1362">If your <xref:System.Windows.Forms.ListView> control does not have any column headers specified and you set the <xref:System.Windows.Forms.ListView.View%2A> property to <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, the <xref:System.Windows.Forms.ListView> control will not display any subitems.</span></span>  
  
 <span data-ttu-id="c9048-1363">タイルビューには、左側に大きなアイコンが表示され、右側にテキスト情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1363">The tile view displays each item with a large icon on the left and textual information on the right.</span></span> <span data-ttu-id="c9048-1364">テキスト情報は、項目ラベルの後にサブ項目が続く形式で構成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1364">The textual information consists of the item label followed by subitems.</span></span> <span data-ttu-id="c9048-1365">既定では、アイテムラベルに対応する最初のサブアイテムのみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1365">By default, only the first subitem is displayed, which corresponds to the item label.</span></span> <span data-ttu-id="c9048-1366">追加のサブ項目を表示するには、@no__t 0 のオブジェクトを <xref:System.Windows.Forms.ListView.Columns%2A> コレクションに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1366">To display additional subitems, you must add <xref:System.Windows.Forms.ColumnHeader> objects to the <xref:System.Windows.Forms.ListView.Columns%2A> collection.</span></span> <span data-ttu-id="c9048-1367">タイル内の各サブ項目は、列ヘッダーに対応しています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1367">Each subitem in the tile corresponds to a column header.</span></span> <span data-ttu-id="c9048-1368">表示されるサブ項目とその表示順序を制御するには、各項目の <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> プロパティと、各ヘッダーの <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1368">To control which subitems are displayed and the order in which they are displayed, you must set the <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> property for each item and the <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> property for each header.</span></span> <span data-ttu-id="c9048-1369">その後、@no__t 0 のコレクションでヘッダーを追加、削除、および再配置して、目的の結果を得ることができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1369">You can then add, remove, and rearrange headers in the <xref:System.Windows.Forms.ListView.Columns%2A> collection to achieve the desired result.</span></span>  
  
 <span data-ttu-id="c9048-1370">タイルビューでタイルのサイズを制御するには、<xref:System.Windows.Forms.ListView.TileSize%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1370">To control the size of the tiles in the tile view, set the <xref:System.Windows.Forms.ListView.TileSize%2A> property.</span></span> <span data-ttu-id="c9048-1371">これは、サブ項目のテキストが1行に対して長すぎる場合に、行の折り返しを防止するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1371">This is useful to prevent line-wrapping when subitem text is too long for a single line.</span></span>  
  
 <span data-ttu-id="c9048-1372">タイルビューの例については、<xref:System.Windows.Forms.ListView.TileSize%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1372">For an example of the tile view, see the <xref:System.Windows.Forms.ListView.TileSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9048-1373">列は詳細ビューにのみ表示されますが、列ヘッダーのないサブ項目は詳細ビューまたはタイルビューに表示されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1373">Although columns are only displayed in the details view, subitems without column headers will not display in either the details view or the tile view.</span></span>  
  
 <span data-ttu-id="c9048-1374">アプリケーションが <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> メソッドを呼び出すと、タイルビューは Windows XP と Windows Server 2003 でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1374">The tile view is available only on Windows XP and Windows Server 2003 when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c9048-1375">旧バージョンのオペレーティング システムでは、並べて表示ビューに関するコードがすべて無効になり、<xref:System.Windows.Forms.ListView> コントロールは大きなアイコンのビューで表示されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1375">On earlier operating systems, any code related to the tile view has no effect, and the <xref:System.Windows.Forms.ListView> control displays in the large icon view.</span></span> <span data-ttu-id="c9048-1376">その結果、タイルビューに依存するすべてのコードが正しく機能しなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1376">As a result, any code that depends on the tile view might not work correctly.</span></span>  
  
 <span data-ttu-id="c9048-1377">タイルビューが使用可能かどうかを判断し、使用できない場合に代替機能を提供するコードを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1377">You might want to include code that determines whether tile view is available, and provide alternate functionality when it is unavailable.</span></span> <span data-ttu-id="c9048-1378">たとえば、オーナー描画を使用して、タイルビューの @no__t 0 項目の外観をカスタマイズする場合、タイルビューをサポートしていないオペレーティングシステムで実行しているときに、大きいアイコンビューに適した描画コードを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1378">For example, when you use owner drawing to customize the appearance of <xref:System.Windows.Forms.ListView> items in the tile view, you might want to use drawing code appropriate to the large icon view when running on operating systems that do not support the tile view.</span></span>  
  
 <span data-ttu-id="c9048-1379">タイルビュー機能は、オペレーティングシステムのテーマ機能を提供するのと同じライブラリによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1379">The tile view feature is provided by the same library that provides the operating system themes feature.</span></span> <span data-ttu-id="c9048-1380">このライブラリが使用可能かどうかを確認するには、<xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> メソッドオーバーロードを呼び出し、<xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> の値を渡します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1380">To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1381">次のコード例では、3つの @no__t オブジェクトを指定し、各項目に対して3つの @no__t 2 つのオブジェクトを指定して、@no__t 0 のコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1381">The following code example creates a <xref:System.Windows.Forms.ListView> control with three <xref:System.Windows.Forms.ListViewItem> objects specified and three <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objects specified for each item.</span></span> <span data-ttu-id="c9048-1382">また、この例では、詳細ビューにサブ項目を表示する @no__t 0 オブジェクトも作成します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1382">The example also creates <xref:System.Windows.Forms.ColumnHeader> objects to display the subitems in details view.</span></span> <span data-ttu-id="c9048-1383">2つの @no__t 0 オブジェクトもコード例で作成され、<xref:System.Windows.Forms.ListViewItem> オブジェクトのイメージを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1383">Two <xref:System.Windows.Forms.ImageList> objects are also created in the code example to provide images for the <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-1384">これらの <xref:System.Windows.Forms.ImageList> オブジェクトは、<xref:System.Windows.Forms.ListView.LargeImageList%2A> プロパティと <xref:System.Windows.Forms.ListView.SmallImageList%2A> プロパティに追加されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1384">These <xref:System.Windows.Forms.ImageList> objects are added to the <xref:System.Windows.Forms.ListView.LargeImageList%2A> and <xref:System.Windows.Forms.ListView.SmallImageList%2A> properties.</span></span> <span data-ttu-id="c9048-1385">この例では、<xref:System.Windows.Forms.ListView> コントロールを作成するときに、次のプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1385">The example uses the following properties in creating the <xref:System.Windows.Forms.ListView> control.</span></span>  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 <span data-ttu-id="c9048-1386">この例では、コードを @no__t 0 に追加し、コンストラクターまたはフォームの別のメソッドから例で作成したメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1386">This example requires that you have added the code to a <xref:System.Windows.Forms.Form> and call the method created in the example from the constructor or another method on the form.</span></span> <span data-ttu-id="c9048-1387">また、この例では、`MySmallImage1`、`MySmallImage2`、`MyLargeImage1`、および `MyLargeImage2` という名前のイメージが、C ドライブのルートディレクトリに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1387">The example also requires that images named `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, and `MyLargeImage2` are located in the root directory of drive C.</span></span>  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c9048-1388">指定された値が <see cref="T:System.Windows.Forms.View" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1388">The value specified is not one of the <see cref="T:System.Windows.Forms.View" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1389"><see cref="T:System.Windows.Forms.ListView" /> が仮想モードのときに、ある範囲の項目の選択状態が変化すると発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1389">Occurs when a <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and the selection state of a range of items has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1390">@No__t-0 が仮想モードでない場合は、<xref:System.Windows.Forms.ListView.ItemSelectionChanged> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1390">If the <xref:System.Windows.Forms.ListView> is not in virtual mode, the <xref:System.Windows.Forms.ListView.ItemSelectionChanged> event will occur.</span></span>  
  
 <span data-ttu-id="c9048-1391">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1391">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1392">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1392">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c9048-1393">この例では、イベントハンドラーが <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1393">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> event.</span></span> <span data-ttu-id="c9048-1394">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1394">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c9048-1395">複数のイベントまたは頻繁に発生するイベントについてレポートするには、<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> を <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> に置き換えるか、メッセージを複数行 <xref:System.Windows.Forms.TextBox> に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="c9048-1395">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c9048-1396">コード例を実行するには、`ListView1` という名前の @no__t 0 型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1396">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ListView> named `ListView1`.</span></span> <span data-ttu-id="c9048-1397">次に、イベントハンドラーが <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1397">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1398">仮想モードの場合にリストに格納されている <see cref="T:System.Windows.Forms.ListViewItem" /> オブジェクトの数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1398">Gets or sets the number of <see cref="T:System.Windows.Forms.ListViewItem" /> objects contained in the list when in virtual mode.</span></span></summary>
        <value><span data-ttu-id="c9048-1399">仮想モードの場合に <see cref="T:System.Windows.Forms.ListViewItem" /> に格納されている <see cref="T:System.Windows.Forms.ListView" /> オブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="c9048-1399">The number of <see cref="T:System.Windows.Forms.ListViewItem" /> objects contained in the <see cref="T:System.Windows.Forms.ListView" /> when in virtual mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1400">@No__t-1 が `false` に設定されている場合に <xref:System.Windows.Forms.ListView.VirtualListSize%2A> プロパティを取得または設定しても、<xref:System.Windows.Forms.ListView> には影響しません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1400">Getting or setting the <xref:System.Windows.Forms.ListView.VirtualListSize%2A> property when <xref:System.Windows.Forms.ListView.VirtualMode%2A> set to `false` will have no effect on the <xref:System.Windows.Forms.ListView>.</span></span>  
  
 <span data-ttu-id="c9048-1401">@No__t-0 が `true` に設定されており、<xref:System.Windows.Forms.ListView.VirtualListSize%2A> プロパティが0より大きい場合は、有効な @no__t を指定して、<xref:System.Windows.Forms.ListView.RetrieveVirtualItem> イベントを処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1401">If <xref:System.Windows.Forms.ListView.VirtualMode%2A> is set to `true`, and the <xref:System.Windows.Forms.ListView.VirtualListSize%2A> property is greater than 0, you must handle the <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> event, providing a valid <xref:System.Windows.Forms.ListViewItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9048-1402"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> が 0 未満の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="c9048-1402"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> is set to a value less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-1403"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> が <see langword="true" /> に設定されていて、<see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> が 0 より大きく、<see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> が処理されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1403"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> is set to <see langword="true" />, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> is greater than 0, and <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> is not handled.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9048-1404"><see cref="T:System.Windows.Forms.ListView" /> コントロールに対して独自のデータ管理操作を指定したかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1404">Gets or sets a value indicating whether you have provided your own data-management operations for the <see cref="T:System.Windows.Forms.ListView" /> control.</span></span></summary>
        <value><span data-ttu-id="c9048-1405"><see cref="T:System.Windows.Forms.ListView" /> が指定されたデータ管理操作を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1405"><see langword="true" /> if <see cref="T:System.Windows.Forms.ListView" /> uses data-management operations that you provide; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c9048-1406">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1406">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9048-1407">@No__t-0 プロパティを `true` に設定すると、@no__t 2 が仮想モードになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1407">Setting the <xref:System.Windows.Forms.ListView.VirtualMode%2A> property to `true` puts the <xref:System.Windows.Forms.ListView> into virtual mode.</span></span> <span data-ttu-id="c9048-1408">仮想モードでは、通常の <xref:System.Windows.Forms.ListView.Items%2A> コレクションが使用されません。</span><span class="sxs-lookup"><span data-stu-id="c9048-1408">In Virtual mode, the normal <xref:System.Windows.Forms.ListView.Items%2A> collection is unused.</span></span> <span data-ttu-id="c9048-1409">代わりに、<xref:System.Windows.Forms.ListView> で必要とされる @no__t 0 のオブジェクトが動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1409">Instead, <xref:System.Windows.Forms.ListViewItem> objects are created dynamically as the <xref:System.Windows.Forms.ListView> requires them.</span></span>  
  
 <span data-ttu-id="c9048-1410">仮想モードは、さまざまな状況で役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1410">Virtual mode can be useful under many circumstances.</span></span> <span data-ttu-id="c9048-1411">既にメモリ内にある非常に大きなコレクションから @no__t 0 オブジェクトを作成する必要がある場合は、各エントリに対して @no__t 1 オブジェクトを作成すると無駄になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1411">If a <xref:System.Windows.Forms.ListView> object must be populated from a very large collection already in memory, creating a <xref:System.Windows.Forms.ListViewItem> object for each entry can be wasteful.</span></span> <span data-ttu-id="c9048-1412">仮想モードでは、必要な項目だけが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1412">In virtual mode, only the items required are created.</span></span> <span data-ttu-id="c9048-1413">それ以外の場合は、@no__t 0 のオブジェクトの値を頻繁に再計算する必要があり、コレクション全体に対してこの操作を行うと、許容できないパフォーマンスが生じる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1413">In other cases, the values of the <xref:System.Windows.Forms.ListViewItem> objects may need to be recalculated frequently, and doing this for the whole collection would produce unacceptable performance.</span></span> <span data-ttu-id="c9048-1414">仮想モードでは、必要な項目だけが計算されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1414">In virtual mode, only the required items are calculated.</span></span>  
  
 <span data-ttu-id="c9048-1415">仮想モードを使用するには、<xref:System.Windows.Forms.ListView.RetrieveVirtualItem> イベントを処理する必要があります。これは、<xref:System.Windows.Forms.ListView> が項目を必要とするたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1415">In order to use virtual mode, you must handle the <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> event, which is raised every time the <xref:System.Windows.Forms.ListView> requires an item.</span></span> <span data-ttu-id="c9048-1416">このイベントハンドラーは、指定されたインデックスに属する @no__t 0 オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1416">This event handler should create the <xref:System.Windows.Forms.ListViewItem> object that belongs at the specified index.</span></span> <span data-ttu-id="c9048-1417">また、<xref:System.Windows.Forms.ListView.VirtualListSize%2A> プロパティは、仮想リストのサイズに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1417">In addition, the <xref:System.Windows.Forms.ListView.VirtualListSize%2A> property must be set to the size of the virtual list.</span></span>  
  
 <span data-ttu-id="c9048-1418">@No__t-0 イベントを処理すると、仮想モードで検索できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1418">Handling the <xref:System.Windows.Forms.ListView.SearchForVirtualItem> event enables searching in virtual mode.</span></span> <span data-ttu-id="c9048-1419">このイベントが処理されない場合、<xref:System.Windows.Forms.ListView.FindItemWithText%2A> および <xref:System.Windows.Forms.ListView.FindNearestItem%2A> の各メソッドは `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1419">If this event is not handled, the <xref:System.Windows.Forms.ListView.FindItemWithText%2A> and <xref:System.Windows.Forms.ListView.FindNearestItem%2A> methods will return `null`.</span></span>  
  
 <span data-ttu-id="c9048-1420">@No__t-1 オブジェクトのキャッシュを維持するために @no__t 0 イベントを処理できます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1420">You can handle the <xref:System.Windows.Forms.ListView.CacheVirtualItems> event in order to maintain a cache of <xref:System.Windows.Forms.ListViewItem> objects.</span></span> <span data-ttu-id="c9048-1421">@No__t 0 オブジェクトを作成するための計算または参照が高コストである場合、キャッシュを保持するとパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1421">If the calculation or lookup to create a <xref:System.Windows.Forms.ListViewItem> object is expensive, maintaining a cache can improve performance.</span></span>  
  
 <span data-ttu-id="c9048-1422">@No__t-0 プロパティが <xref:System.Windows.Forms.View.Tile> に設定されている場合、<xref:System.Windows.Forms.ListView.VirtualMode%2A> が `true` に設定されていると、値は自動的に <xref:System.Windows.Forms.View.LargeIcon> に変更されます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1422">If the <xref:System.Windows.Forms.ListView.View%2A> property is set to <xref:System.Windows.Forms.View.Tile>, the value will automatically be changed to <xref:System.Windows.Forms.View.LargeIcon> when <xref:System.Windows.Forms.ListView.VirtualMode%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c9048-1423">仮想モードでは、@no__t 0 のコレクションが無効になります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1423">In virtual mode, the <xref:System.Windows.Forms.ListView.Items%2A> collection is disabled.</span></span> <span data-ttu-id="c9048-1424">このファイルにアクセスしようとすると、<xref:System.InvalidOperationException> になります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1424">Attempting to access it results in an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c9048-1425">@No__t-0 コレクションと <xref:System.Windows.Forms.ListView.SelectedItems%2A> コレクションにも同じことが当てはまります。</span><span class="sxs-lookup"><span data-stu-id="c9048-1425">The same is true of the <xref:System.Windows.Forms.ListView.CheckedItems%2A> collection and the <xref:System.Windows.Forms.ListView.SelectedItems%2A> collection.</span></span> <span data-ttu-id="c9048-1426">選択またはチェックされた項目を取得する場合は、代わりに <xref:System.Windows.Forms.ListView.SelectedIndices%2A> と <xref:System.Windows.Forms.ListView.CheckedIndices%2A> のコレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1426">If you want to retrieve the selected or checked items, use the <xref:System.Windows.Forms.ListView.SelectedIndices%2A> and <xref:System.Windows.Forms.ListView.CheckedIndices%2A> collections instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9048-1427">この例では、単純な @no__t 0 を示しています。その内容は、最初の1万二乗です。</span><span class="sxs-lookup"><span data-stu-id="c9048-1427">This example illustrates a simple <xref:System.Windows.Forms.ListView> whose contents are the first ten thousand squares.</span></span> <span data-ttu-id="c9048-1428">検索を処理し、キャッシュを使用してパフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="c9048-1428">It handles searching and uses a cache for increased performance.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c9048-1429"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> が <see langword="true" /> に設定されていて、次のいずれかの条件に該当します。</span><span class="sxs-lookup"><span data-stu-id="c9048-1429"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> is set to <see langword="true" /> and one of the following conditions exist:</span></span> <span data-ttu-id="c9048-1430">
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> が 0 より大きく、<see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> が処理されない。</span><span class="sxs-lookup"><span data-stu-id="c9048-1430">
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> is greater than 0 and <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> is not handled.</span></span>  
  
<span data-ttu-id="c9048-1431">- または -</span><span class="sxs-lookup"><span data-stu-id="c9048-1431">-or-</span></span> <span data-ttu-id="c9048-1432">
-   <see cref="P:System.Windows.Forms.ListView.Items" />、<see cref="P:System.Windows.Forms.ListView.CheckedItems" />、または <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> に項目が含まれている。</span><span class="sxs-lookup"><span data-stu-id="c9048-1432">
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" />, or <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> contains items.</span></span>  
  
<span data-ttu-id="c9048-1433">または</span><span class="sxs-lookup"><span data-stu-id="c9048-1433">-or-</span></span> 
<span data-ttu-id="c9048-1434">-   <see cref="P:System.Windows.Forms.ListView.Items" /> が編集されている。</span><span class="sxs-lookup"><span data-stu-id="c9048-1434">-   Edits are made to <see cref="P:System.Windows.Forms.ListView.Items" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c9048-1435">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="c9048-1435">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="c9048-1436"><see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c9048-1436">Overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
