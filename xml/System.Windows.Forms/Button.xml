<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Button.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef82aaf37d1cd7db9426c24f3a80683816254b7d419b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aaf37d1cd7db9426c24f3a80683816254b7d419b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Button">
          <source>Represents a Windows button control.</source>
          <target state="translated">Windows のボタン コントロールを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> can be clicked by using the mouse, ENTER key, or SPACEBAR if the button has focus.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>ボタンにフォーカスがある場合は、マウス、ENTER キーまたは space キーを使用して、クリックすることができます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> to allow users to click a button by pressing the ENTER or ESC keys even if the button does not have focus.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>ボタンにフォーカスがない場合でも、ENTER キーまたは ESC キーを押すと、ボタンのクリックできるようにします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>This gives the form the behavior of a dialog box.</source>
          <target state="translated">これにより、フォームがダイアログ ボックスの動作です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>When you display a form using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a button to specify the return value of <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">使用してフォームを表示するとき、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドを使用できます、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>プロパティの戻り値を指定するためのボタンの<ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>You can change the button's appearance.</source>
          <target state="translated">ボタンの外観を変更することができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>For example, to make it appear flat for a Web look, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">たとえば、Web の外観をフラットに表示されるように、次のように設定します。、<ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property can also be set to <ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType&gt;</ph>, which appears flat until the mouse pointer passes over the button; then the button takes on the standard Windows button appearance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph>プロパティ設定することもできます<ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType&gt;</ph>ボタンの上にマウス ポインターが通過するまでそのフラットして表示される で標準の Windows ボタンの外観を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>If the control that has focus accepts and processes the ENTER key press, the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> does not process it.</source>
          <target state="translated">コントロールがフォーカスを受け取る場合と、ENTER キーを押して、処理、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>は処理されません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>For example, if a multiline <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or another button has focus, that control processes the ENTER key press instead of the accept button.</source>
          <target state="translated">たとえば、複数行<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>または別のボタンにフォーカスを承認ボタンの代わりに、ENTER キーを押すのによる処理を制御します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Button">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType&gt;</ph>, and adds it to a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>プロパティを<ph id="ph3">&lt;xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType&gt;</ph>に追加し、<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.#ctor">
          <source>By default the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> displays no caption.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>キャプションは表示されません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.#ctor">
          <source>To specify the caption text, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">キャプション テキストを指定するには、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.#ctor">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, sets its <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property to the <ph id="ph3">`OK`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>, and adds it to a <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>プロパティを<ph id="ph3">`OK`</ph>の値<ph id="ph4">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>に追加し、<ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Button.AutoSizeMode">
          <source>Gets or sets the mode by which the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> automatically resizes itself.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> を自動的にサイズ変更するときに使用するモードを取得または設定します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.AutoSizeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.AutoSizeMode">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Button.CreateParams">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> on the base class when creating a window.</source>
          <target state="translated">ウィンドウの作成時に、基本クラスの <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> object on the base class when creating a window.</source>
          <target state="translated">ウィンドウの作成時の、基本クラスの <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.CreateParams">
          <source>Inheriting classes can override this property to add extra functionality, but must first call the <ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph> constructor on the base class to verify that the control continues to work correctly.</source>
          <target state="translated">クラスを継承する追加の機能を追加するには、このプロパティをオーバーライドできますが、最初に呼び出す必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.CreateParams&gt;</ph>正常に機能するコントロールを続行することを確認する基本クラスのコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>Gets or sets a value that is returned to the parent form when the button is clicked.</source>
          <target state="translated">ボタンをクリックしたときに親フォームに返される値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>The default value is <ph id="ph1">&lt;see langword="None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> for this property is set to anything other than <ph id="ph2">`None`</ph>, and if the parent form was displayed through the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method, clicking the button closes the parent form without your having to hook up any events.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>以外の場合このプロパティが何もするセットの<ph id="ph2">`None`</ph>、使用して、親フォームが表示される場合と、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドは、すべてのイベントをフックする必要なく、親フォームを閉じます ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>The form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property is then set to the <ph id="ph2">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> of the button when the button is clicked.</source>
          <target state="translated">フォームの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティに設定し、<ph id="ph2">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>のボタン、ボタンがクリックされたときにします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>For example, to create a "Yes/No/Cancel" dialog box, simply add three buttons and set their <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> properties to <ph id="ph2">`Yes`</ph>, <ph id="ph3">`No`</ph>, and <ph id="ph4">`Cancel`</ph>.</source>
          <target state="translated">たとえば、「はい/いいえ/キャンセル」 ダイアログ ボックスを作成するだけで 3 つのボタンの追加し、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>プロパティ<ph id="ph2">`Yes`</ph>、 <ph id="ph3">`No`</ph>、および<ph id="ph4">`Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, sets its <ph id="ph2">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> property to <ph id="ph3">`OK`</ph>, and adds it to a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">次のコード例を作成、 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>プロパティを<ph id="ph3">`OK`</ph>に追加し、<ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Button.DialogResult">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated">代入された値が、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>Occurs when the user double-clicks the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control.</source>
          <target state="translated">ユーザーが <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> コントロールをダブルクリックすると発生します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType&gt;</ph> style bits are set to <ph id="ph3">`false`</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph> event is not raised.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType&gt;</ph>スタイルのビットに設定されます<ph id="ph3">`false`</ph>の<ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール、および<ph id="ph5">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`Button1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>という<ph id="ph2">`Button1`</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.DoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.DoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>Occurs when the user double-clicks the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control with the mouse.</source>
          <target state="translated">ユーザーがマウスで <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> コントロールをダブルクリックすると発生します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType&gt;</ph> style bits are set to <ph id="ph3">`false`</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, and the <ph id="ph5">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph> event is not raised.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType&gt;</ph>スタイルのビットに設定されます<ph id="ph3">`false`</ph>の<ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール、および<ph id="ph5">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph2">`Button1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>という<ph id="ph2">`Button1`</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Button.MouseDoubleClick">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.MouseDoubleClick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the button is to have the appearance of the default button; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ボタンを既定のボタンの外観にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> whether it is the default button so that it can adjust its appearance accordingly.</source>
          <target state="translated">既定のボタンであるかどうかを <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> に通知します。ボタンはこの通知に応じて外観を調整します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>This method is called by the parent form to notify the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> that it should be set as the default button and to allow it to adjust its appearance accordingly.</source>
          <target state="translated">このメソッドは、親フォームに通知する、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>に設定することを既定のボタンとその外観を調整します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>Typically, a button that is the default button for a form has a thicker border than other buttons on the form.</source>
          <target state="translated">通常、フォームの既定のボタンのボタンは、フォーム上の他のボタンよりも太く境界線を持ちます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.NotifyDefault%2A&gt;</ph> method only draws the button as a default button; it does not change its behavior.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.NotifyDefault%2A&gt;</ph>メソッドでは、既定のボタンとしてボタンのみを描画以外の場合はその動作は変更されません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>To make the button behave like a default button, it must be assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">ボタンの既定のボタンと同様に動作をするためには、割り当てる必要がある、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnFontChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnMouseUp%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button.OnTextChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.PerformClick">
          <source>Generates a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for a button.</source>
          <target state="translated">ボタンの <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> イベントを生成します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.PerformClick">
          <source>This method can be called to raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event.</source>
          <target state="translated">発生させるこのメソッドを呼び出すことができる、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.PerformClick">
          <source>The following code example generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> on alternating <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> events of another button.</source>
          <target state="translated">次のコード例が生成されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>のイベント、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>交互<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>別のボタンのイベントです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.PerformClick">
          <source>This code assumes that two <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls have been instantiated on a form and that a member variable named <ph id="ph2">`myVar`</ph> has been declared as a 32-bit signed integer within the class.</source>
          <target state="translated">このコードには、その 2 つが前提としています<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロールがフォームのインスタンス化されていること、およびという名前のメンバー変数<ph id="ph2">`myVar`</ph>はクラス内で 32 ビット符号付き整数として宣言されています。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)">
          <source>The mnemonic character entered.</source>
          <target state="translated">入力されたニーモニック文字。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">ニーモニック文字を処理します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the mnemonic was processed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ニーモニックが処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)">
          <source>When overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Button.ProcessMnemonic%2A&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.Button.ProcessMnemonic%2A&gt;</ph> to ensure that basic functionality remains unchanged.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;xref:System.Windows.Forms.Button.ProcessMnemonic%2A&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;xref:System.Windows.Forms.Button.ProcessMnemonic%2A&gt;</ph>を基本的な機能が変更されないことを確認します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> の名前 (存在する場合) を格納する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">このメソッドはオーバーライドできません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> の名前 (存在する場合) を格納する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。<ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> に名前が付いていない場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">処理対象の Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows メッセージを処理します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>