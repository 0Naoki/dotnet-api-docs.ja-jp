<Type Name="QueryContinueDragEventArgs" FullName="System.Windows.Forms.QueryContinueDragEventArgs">
  <TypeSignature Language="C#" Value="public class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContinueDragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContinueDragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContinueDragEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aef8b-101"><see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-101">Provides data for the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aef8b-102"><xref:System.Windows.Forms.Control.QueryContinueDrag>イベントがドラッグ アンド ドロップ操作中に発生し、ドラッグ ソースがドラッグ アンド ドロップ操作を取り消す必要があるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-102">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.</span></span> <span data-ttu-id="aef8b-103">A<xref:System.Windows.Forms.QueryContinueDragEventArgs>ドラッグ アンド ドロップ操作を続行するかどうかおよびどのように、どの修飾子キーが押されたかどうか、およびユーザーが ESC キーを押したかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-103">A <xref:System.Windows.Forms.QueryContinueDragEventArgs> specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.</span></span>  
  
 <span data-ttu-id="aef8b-104">既定では、Esc キーが押された場合、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> に設定します。また、マウスの左右または中央のボタンが押された場合は `Action` を <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> に設定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-104">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="aef8b-105">イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aef8b-106">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.QueryContinueDragEventArgs>クラス、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-106">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="aef8b-107">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="aef8b-107">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragAction" />
    <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keyState, bool escapePressed, valuetype System.Windows.Forms.DragAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyState As Integer, escapePressed As Boolean, action As DragAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContinueDragEventArgs(int keyState, bool escapePressed, System::Windows::Forms::DragAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="escapePressed" Type="System.Boolean" />
        <Parameter Name="action" Type="System.Windows.Forms.DragAction" />
      </Parameters>
      <Docs>
        <param name="keyState"><span data-ttu-id="aef8b-108">Shift、Ctrl、Alt の各キーの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="aef8b-108">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="escapePressed">
          <span data-ttu-id="aef8b-109">Esc キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aef8b-109"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="action"><span data-ttu-id="aef8b-110"><see cref="T:System.Windows.Forms.DragAction" /> 値。</span><span class="sxs-lookup"><span data-stu-id="aef8b-110">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></param>
        <summary><span data-ttu-id="aef8b-111"><see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragAction Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As DragAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragAction Action { System::Windows::Forms::DragAction get(); void set(System::Windows::Forms::DragAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aef8b-112">ドラッグ アンド ドロップ操作のステータスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-112">Gets or sets the status of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="aef8b-113"><see cref="T:System.Windows.Forms.DragAction" /> 値。</span><span class="sxs-lookup"><span data-stu-id="aef8b-113">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aef8b-114">既定では、Esc キーが押された場合、<xref:System.Windows.Forms.Control.QueryContinueDrag> イベントは <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> を <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> に設定します。また、マウスの左右または中央のボタンが押された場合は `Action` を <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> に設定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-114">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aef8b-115">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.QueryContinueDragEventArgs>クラス、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-115">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="aef8b-116">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="aef8b-116">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="EscapePressed">
      <MemberSignature Language="C#" Value="public bool EscapePressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EscapePressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapePressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EscapePressed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aef8b-117">ユーザーが Esc キーを押したかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-117">Gets whether the user pressed the ESC key.</span></span></summary>
        <value>
          <span data-ttu-id="aef8b-118">Esc キーが押された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aef8b-118"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aef8b-119">既定では、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント セット<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>に<xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType>場合<xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A>は true です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-119">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> is true.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aef8b-120">使用を次のコード例に示します、<xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A>です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-120">The following code example demonstrates the use of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> .</span></span> <span data-ttu-id="aef8b-121">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-121">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="aef8b-122">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aef8b-122">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aef8b-123">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-123">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aef8b-124">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Control>、ように、<xref:System.Windows.Forms.Button>または<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-124">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="aef8b-125">インスタンスを名前`Control1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-125">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aef8b-126">Shift、Ctrl、Alt の各キーの現在の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-126">Gets the current state of the SHIFT, CTRL, and ALT keys.</span></span></summary>
        <value><span data-ttu-id="aef8b-127">Shift、Ctrl、Alt の各キーの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="aef8b-127">The current state of the SHIFT, CTRL, and ALT keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aef8b-128">設定されているビット、<xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A>プロパティがキーか、操作中に押されたマウス ボタンを識別します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-128">The bits that are set in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="aef8b-129">たとえば、マウスの左ボタンが押された場合、最初のビット、<xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-129">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="aef8b-130">演算を使用することができます`AND`指定されたキーの状態をテストする演算子です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-130">You can use the bitwise `AND` operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="aef8b-131">次の表は、指定したイベントに設定されているビットを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-131">The following table lists the bits that are set for a specified event.</span></span>  
  
|<span data-ttu-id="aef8b-132">ビット</span><span class="sxs-lookup"><span data-stu-id="aef8b-132">Bit</span></span>|<span data-ttu-id="aef8b-133">キー</span><span class="sxs-lookup"><span data-stu-id="aef8b-133">Key</span></span>|  
|---------|---------|  
|<span data-ttu-id="aef8b-134">1</span><span class="sxs-lookup"><span data-stu-id="aef8b-134">1</span></span>|<span data-ttu-id="aef8b-135">マウスの左ボタン</span><span class="sxs-lookup"><span data-stu-id="aef8b-135">The left mouse button.</span></span>|  
|<span data-ttu-id="aef8b-136">2</span><span class="sxs-lookup"><span data-stu-id="aef8b-136">2</span></span>|<span data-ttu-id="aef8b-137">マウスの右ボタン</span><span class="sxs-lookup"><span data-stu-id="aef8b-137">The right mouse button.</span></span>|  
|<span data-ttu-id="aef8b-138">4</span><span class="sxs-lookup"><span data-stu-id="aef8b-138">4</span></span>|<span data-ttu-id="aef8b-139">Shift キー</span><span class="sxs-lookup"><span data-stu-id="aef8b-139">The SHIFT key.</span></span>|  
|<span data-ttu-id="aef8b-140">8</span><span class="sxs-lookup"><span data-stu-id="aef8b-140">8</span></span>|<span data-ttu-id="aef8b-141">CTL キー。</span><span class="sxs-lookup"><span data-stu-id="aef8b-141">The CTL key.</span></span>|  
|<span data-ttu-id="aef8b-142">16</span><span class="sxs-lookup"><span data-stu-id="aef8b-142">16</span></span>|<span data-ttu-id="aef8b-143">マウスの中央ボタン</span><span class="sxs-lookup"><span data-stu-id="aef8b-143">The middle mouse button.</span></span>|  
|<span data-ttu-id="aef8b-144">32</span><span class="sxs-lookup"><span data-stu-id="aef8b-144">32</span></span>|<span data-ttu-id="aef8b-145">Alt キー。</span><span class="sxs-lookup"><span data-stu-id="aef8b-145">The ALT key.</span></span>|  
  
 <span data-ttu-id="aef8b-146">既定では、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント セット<xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>に<xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType>場合<xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A>、ミドル ネーム、左右のマウス ボタンが押されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-146">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> indicates that the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aef8b-147">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="aef8b-147">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="aef8b-148">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-148">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="aef8b-149">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="aef8b-149">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="aef8b-150">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-150">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="aef8b-151">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Control>、ように、<xref:System.Windows.Forms.Button>または<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="aef8b-151">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="aef8b-152">インスタンスを名前`Control1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="aef8b-152">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
  </Members>
</Type>