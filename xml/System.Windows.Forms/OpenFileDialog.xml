<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d43356d06beb24ff2596bda4c8b955c1e484c2b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e81fc-101">ユーザーにファイルを開けるように指示するダイアログ ボックスを表示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e81fc-101">Displays a standard dialog box that prompts the user to open a file.</span>
      </span>
      <span data-ttu-id="e81fc-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e81fc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-103">このクラスを使用すると、ファイルが存在するかどうかを確認しを開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="e81fc-104"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>プロパティは読み取り専用チェック ボックスを表示 ダイアログ ボックスであるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="e81fc-105"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>プロパティは読み取り専用 チェック ボックスをオンになっているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="e81fc-106">このクラスでのコア機能のほとんどの<xref:System.Windows.Forms.FileDialog>クラスです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="e81fc-107">右から左へのオペレーティング システムで設定を含むフォームの<xref:System.Windows.Forms.Control.RightToLeft>プロパティを<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> ダイアログ ボックスのローカライズ**ファイル名**、**開く**、および**をキャンセル**ボタン。</span><span class="sxs-lookup"><span data-stu-id="e81fc-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="e81fc-108">プロパティに設定されていない場合<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>、英語のテキストが代わりに使用されます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="e81fc-109">ユーザー ファイルの代わりにフォルダーを選択して、使用する機能を提供する場合<xref:System.Windows.Forms.FolderBrowserDialog>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="e81fc-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e81fc-110">次のコード例を作成、<xref:System.Windows.Forms.OpenFileDialog>ファイル拡張子フィルターとダイアログ動作を定義するいくつかのプロパティを設定、およびダイアログ ボックスを使用して、表示、<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e81fc-111">フォームでは、<xref:System.Windows.Forms.Button>への参照で、<xref:System.IO>名前空間を追加します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-112">
            <see cref="T:System.Windows.Forms.OpenFileDialog" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-113">これは、既定のコンス トラクターをコンパイラが指定した、<xref:System.Windows.Forms.OpenFileDialog>クラスです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-113">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-114">存在しないファイルの名前をユーザーが指定した場合に、ダイアログ ボックスが警告を表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-115">存在しないファイルの名前をユーザーが指定した場合にダイアログ ボックスが警告を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-115">
              <see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e81fc-116">既定値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-116">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-117">ダイアログ ボックスで複数のファイルを選択できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-118">ダイアログ ボックスで複数のファイルを同時に選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-118">
              <see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e81fc-119">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-119">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-120">使用して、<xref:System.Windows.Forms.FileDialog.FileNames%2A>プロパティの完全な一覧にアクセスするには、ファイル名が選択されています。</span><span class="sxs-lookup"><span data-stu-id="e81fc-120">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e81fc-121">次のコード例には、イメージの数を選択し、表示でそれらをできます<xref:System.Windows.Forms.PictureBox>フォーム上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-121">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="e81fc-122">初期化を示しています、 <xref:System.Windows.Forms.OpenFileDialog>、設定、<xref:System.Windows.Forms.FileDialog.Title%2A>と<xref:System.Windows.Forms.FileDialog.Filter%2A>プロパティ、およびユーザーが設定して複数のファイルを選択できるように、<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A>プロパティを true にします。</span><span class="sxs-lookup"><span data-stu-id="e81fc-122">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="e81fc-123">このコード例では、フォームが既に持っている、<xref:System.Windows.Forms.OpenFileDialog>という名前のコントロール`openFileDialog1`、<xref:System.Windows.Forms.Button>という名前`SelectFileButton`、および<xref:System.Windows.Forms.FlowLayoutPanel>という`flowLayoutPanel1`です。</span><span class="sxs-lookup"><span data-stu-id="e81fc-123">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-124">ユーザーが選択したファイルを読み取り専用で開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-124">Opens the file selected by the user, with read-only permission.</span>
          </span>
          <span data-ttu-id="e81fc-125">このファイルは、<see cref="P:System.Windows.Forms.FileDialog.FileName" /> プロパティで指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e81fc-126">ユーザーが選択した読み取り専用ファイルを指定する <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-127"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>メソッドを使用してすばやくファイルを開く ダイアログ ボックスからの機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-127">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="e81fc-128">セキュリティの目的での読み取り専用モードで、ファイルが開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-128">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="e81fc-129">読み取り/書き込みモードでファイルを開く場合に行う必要があります、別の方法など、<xref:System.IO.FileStream>です。</span><span class="sxs-lookup"><span data-stu-id="e81fc-129">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e81fc-130">次のコード例は、<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-130">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e81fc-131">ファイル名が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-131">The file name is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission">
          <span data-ttu-id="e81fc-132">ファイルを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-132">to open a file.</span>
          </span>
          <span data-ttu-id="e81fc-133">
            <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-133">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-134">読み取り専用チェック ボックスがオンかオフかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-134">Gets or sets a value indicating whether the read-only check box is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-135">読み取り専用チェック ボックスがオンの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-135">
              <see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e81fc-136">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-136">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-137"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>状態では、読み取り/書き込みモードには影響しませんを<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType>を使用して、ダイアログ ボックスで選択されたファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-137">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="e81fc-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 読み取り専用モードで、ファイルが常に開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="e81fc-139"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>読み取り専用 チェック ボックス ダイアログ ボックスに表示される順序で前にプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e81fc-139">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e81fc-140">使用を次のコード例に示します、<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-140">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="e81fc-141">この例は、<xref:System.Windows.Forms.OpenFileDialog>ボックスに、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>プロパティに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="e81fc-141">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="e81fc-142">ユーザーが読み取り専用モードでファイルを開くためのオプションをクリックすると、<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>にプロパティが評価される`true`、および<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>メソッドを使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-142">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="e81fc-143">それ以外の場合、<xref:System.IO.FileStream>クラスは、ファイルを開く、読み取り/書き込みモードで使用します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-143">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-144">すべてのプロパティを既定値にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-144">Resets all properties to their default values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-145">ダイアログ ボックスで選択されたファイルのファイル名と拡張子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-145">Gets the file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="e81fc-146">ファイル名にはパスは含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-146">The file name does not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-147">ダイアログ ボックスで選択されたファイルのファイル名と拡張子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-147">The file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="e81fc-148">ファイル名にはパスは含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-148">The file name does not include the path.</span>
          </span>
          <span data-ttu-id="e81fc-149">既定値は空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-149">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-150">(ファイル名とパスを持たない拡張機能のみ) は、安全なファイル名は、パス情報が公開しないために、アプリケーションのセキュリティを向上させるために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-150">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="e81fc-151">このプロパティは、限定的な信頼で実行されるコードにアクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e81fc-151">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-152">ダイアログ ボックスで選択されたすべてのファイルのファイル名と拡張子の配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="e81fc-153">ファイル名にはパスは含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-153">The file names do not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-154">ダイアログ ボックスで選択されたすべてのファイルのファイル名と拡張子の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-154">An array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="e81fc-155">ファイル名にはパスは含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-155">The file names do not include the path.</span>
          </span>
          <span data-ttu-id="e81fc-156">ファイルが 1 つも選択されていない場合は、空の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-156">If no files are selected, an empty array is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e81fc-157">(ファイル名とパスを持たない拡張機能のみ) は、安全なファイル名は、パス情報が公開しないために、アプリケーションのセキュリティを向上させるために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-157">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="e81fc-158">このプロパティは、限定的な信頼で実行されるコードにアクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e81fc-158">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e81fc-159">ダイアログ ボックスに読み取り専用チェック ボックスが表示されているかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e81fc-160">ダイアログ ボックスに読み取り専用チェック ボックスが表示されている場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-160">
              <see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e81fc-161">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e81fc-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e81fc-162">使用を次のコード例に示します、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e81fc-162">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="e81fc-163">この例は、<xref:System.Windows.Forms.OpenFileDialog>ボックスに、<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>プロパティに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="e81fc-163">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="e81fc-164">ユーザーが読み取り専用モードでファイルを開くためのオプションをクリックすると、<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>メソッドを使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e81fc-164">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="e81fc-165">それ以外の場合、<xref:System.IO.FileStream>クラスは、ファイルを開く、読み取り/書き込みモードで使用します。</span><span class="sxs-lookup"><span data-stu-id="e81fc-165">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>