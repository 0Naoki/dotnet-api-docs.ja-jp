<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Form.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef821f3fc084a02f774d87fefe2646b5cb5ad6cc9733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f3fc084a02f774d87fefe2646b5cb5ad6cc9733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Represents a window or dialog box that makes up an application's user interface.</source>
          <target state="translated">アプリケーションのユーザー インターフェイスを構成するウィンドウまたはダイアログ ボックスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is a representation of any window displayed in your application.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>アプリケーションで表示される任意のウィンドウの表現です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class can be used to create standard, tool, borderless, and floating windows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>クラスは、標準、ツール、ふちなし、フローティング ウィンドウを作成するために使用できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class to create modal windows such as a dialog box.</source>
          <target state="translated">使用することも、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>  ダイアログ ボックスなどのモーダル ウィンドウを作成するクラス。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</source>
          <target state="translated">フォームのマルチ ドキュメント インターフェイス (MDI) フォームの特殊なは、MDI 子フォームと呼ばれるその他のフォームを含めることができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>An MDI form is created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">MDI フォームが設定して作成した、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>MDI child forms are created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to the MDI parent form that will contain the child form.</source>
          <target state="translated">MDI 子フォームが設定して作成した、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>プロパティを子フォームを含む MDI 親フォームをします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>Using the properties available in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</source>
          <target state="translated">使用可能なプロパティを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>クラスを作成するウィンドウまたはダイアログ ボックスの外観、サイズ、色、およびウィンドウの管理機能を決定できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property allows you to specify the caption of the window in the title bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>プロパティでは、タイトル バーのウィンドウのキャプションを指定することができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph> properties allow you to define the size and position of the window when it is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph>プロパティでは、表示しているときに、ウィンドウの位置とサイズを定義することができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> color property to change the default foreground color of all controls placed on the form.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>カラー プロパティのすべてのコントロールの既定前景色を変更するのには、フォームに配置します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>プロパティを使用してコントロールをフォームできる最小化、最大化、または実行時にサイズを変更するかどうか。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In addition to properties, you can use the methods of the class to manipulate a form.</source>
          <target state="translated">プロパティに加えて、クラスのメソッドを使用してフォームを操作することができます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to show a form as a modal dialog box.</source>
          <target state="translated">たとえば、使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>モーダル ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method to position the form on the desktop.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>デストップにフォームを配置する方法です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The events of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class allow you to respond to actions performed on the form.</source>
          <target state="translated">イベント、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>クラスを使用すると、フォームに対して実行されるアクションに応答します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>フォームがアクティブになったときに、フォームのコントロールに表示されるデータの更新などの操作を実行するイベントです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use a form as the starting class in your application by placing a method called <ph id="ph1">`Main`</ph> in the class.</source>
          <target state="translated">呼び出されるメソッドを配置することによって、アプリケーションでのクラスの開始点としてのフォームを使用することができます<ph id="ph1">`Main`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In the <ph id="ph1">`Main`</ph> method add code to create and show the form.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>メソッドが作成し、フォームを表示するコードを追加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You will also need to add the <ph id="ph1">`STAThread`</ph> attribute to the <ph id="ph2">`Main`</ph> method in order for the form to run.</source>
          <target state="translated">追加する必要がありますも、<ph id="ph1">`STAThread`</ph>属性を<ph id="ph2">`Main`</ph>メソッドを実行するためにします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>When the starting form is closed, the application is also closed.</source>
          <target state="translated">開始フォームが閉じられたときにも、アプリケーションが閉じられます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> before the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, setting <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to false in the <ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph> designer), the minimize, maximize, close, and system buttons remain enabled.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>する前に、<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>が表示される (設定など、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>を false に、<ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph>デザイナー) では、最小化、最大化、閉じるには、およびシステム ボタンが有効のままです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> after the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, when the Load event occurs), the buttons are disabled.</source>
          <target state="translated">設定した場合<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>に<ph id="ph2">`false`</ph>後、<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>が (たとえば、読み込みイベントの発生時)、表示されるボタンは無効になります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The default size of a form is 300 pixels in height and 300 pixels in width.</source>
          <target state="translated">フォームの既定のサイズは 300 ピクセルの高さと幅 300 ピクセルです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example also sets uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また使用して、設定、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> 、フォームのメソッド<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>Gets or sets the button on the form that is clicked when the user presses the ENTER key.</source>
          <target state="translated">ユーザーが Enter キーを押したときにクリックされる、フォーム上のボタンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the button to use as the accept button for the form.</source>
          <target state="translated">フォームの [確定] ボタンとして使用するボタンを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</source>
          <target state="translated">このプロパティでは、ユーザーが、アプリケーションで、ENTER キーを押したときに発生する既定のアクションを指定することができます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">このプロパティに割り当てられているボタンである必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>を現在のフォームでは、または現在のフォーム上のコンテナー内に存在します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</source>
          <target state="translated">このプロパティを使用すると、ユーザーが手動で、マウスで確定 ボタンをクリックする代わりが完了したら、単に ENTER キーを押すようにして単純なフォームをすばやく移動できるようにします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</source>
          <target state="translated">フォーム上の現在選択されているコントロールが ENTER キーをインターセプトし、それを処理した場合、確定 ボタンをアクティブ化いない可能性があります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</source>
          <target state="translated">たとえば、複数行テキスト ボックス コントロールは、コントロール内の改行文字を挿入することが選択されているときに押す ENTER キーを使用できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activates the form and gives it focus.</source>
          <target state="translated">フォームをアクティブにし、そのフォームにフォーカスを移します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</source>
          <target state="translated">フォームをアクティブ化することを前面へ移動か、これは、アクティブなアプリケーションにない場合は、アクティブなアプリケーション ウィンドウのキャプションは点滅します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The form must be visible for this method to have any effect.</source>
          <target state="translated">フォームは、影響がないように、このメソッドの表示にする必要があります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To determine the active form in an application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property if your forms are in a Multiple-document interface (MDI) application.</source>
          <target state="translated">アプリケーションのアクティブなフォームを確認する、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph>プロパティまたは<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph>プロパティ フォームがマルチ ドキュメント インターフェイス (MDI) アプリケーション内にある場合。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">例を実行するには、という名前のフォームで、次のコードを貼り付けます<ph id="ph1">`Form1`</ph>というボタンを含む<ph id="ph2">`Button1`</ph>と 2 つ<ph id="ph3">`Label`</ph>と呼ばれるコントロール<ph id="ph4">`Label1`</ph>と<ph id="ph5">`Label2`</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>for changing focus.</source>
          <target state="translated">フォーカスを変更します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Activated">
          <source>Occurs when the form is activated in code or by the user.</source>
          <target state="translated">フォームがコード内またはユーザーの操作によってアクティブになると発生します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>When the application is active and has multiple forms, the active form is the form with the input focus.</source>
          <target state="translated">アプリケーションが複数のフォームがアクティブであり、ときに入力フォーカスがあるフォームがアクティブです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>A form that is not visible cannot be the active form.</source>
          <target state="translated">現在表示されていない形式には、アクティブなフォームをすることはできません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</source>
          <target state="translated">表示されているフォームをアクティブ化する最も簡単な方法は、これをクリックするか、適切なキーの組み合わせを使用してです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To activate a form at run time using code, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method.</source>
          <target state="translated">実行時にコードを使用して、フォームをアクティブに呼び出して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</source>
          <target state="translated">このイベントを使用して、フォームがアクティブ化されていないときに、フォームのデータに加えられた変更に基づいて、フォームの内容を更新などのタスクのことができます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To run the example, paste the following code in a form called Form1 containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">例を実行するには、Form1 を含むと呼ばれる形式で、次のコードを貼り付けます、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>と呼ばれる<ph id="ph2">`Button1`</ph>と 2 つ<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>と呼ばれるコントロール<ph id="ph4">`Label1`</ph>と<ph id="ph5">`Label2`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>The child form to activate.</source>
          <target state="translated">アクティブにする子フォーム。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Activates the MDI child of a form.</source>
          <target state="translated">フォームの MDI 子フォームをアクティブにします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If the <ph id="ph1">`form`</ph> parameter is already the active MDI child form, then the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> method simply returns.</source>
          <target state="translated">場合、<ph id="ph1">`form`</ph>パラメーターは、アクティブな MDI 子フォームでは既に、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph>メソッドだけを返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`form`</ph> is not <ph id="ph2">`null`</ph>, then it is set to be the active MDI child form.</source>
          <target state="translated">場合<ph id="ph1">`form`</ph>は<ph id="ph2">`null`</ph>、アクティブな MDI 子フォームに設定されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Whether the <ph id="ph1">`form`</ph> parameter is <ph id="ph2">`null`</ph> or not, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> raises the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">かどうか、<ph id="ph1">`form`</ph>パラメーターは<ph id="ph2">`null`</ph>もそうでない<ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph>を生成、<ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Gets the currently active form for this application.</source>
          <target state="translated">アプリケーションで現在アクティブなフォームを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active form, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no active form.</source>
          <target state="translated">現在アクティブなフォームを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。アクティブなフォームがない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</source>
          <target state="translated">このメソッドを使用すると、フォームまたはそのコントロールに対して操作を実行するのに現在アクティブなフォームへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>If your application is a multiple-document interface (MDI) application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property to obtain the currently active MDI child form.</source>
          <target state="translated">アプリケーションがマルチ ドキュメント インターフェイス (MDI) アプリケーションの場合を使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph>現在アクティブな MDI 子フォームを取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The following code example gets the active form and disables all the controls on the form.</source>
          <target state="translated">次のコード例では、アクティブなフォームを取得し、フォーム上のすべてのコントロールを無効にします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form to iterate through each control on the form and disable the controls.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>フォーム上の各コントロールを反復処理し、コントロールを無効にするフォームのコレクション。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>for requesting a form.</source>
          <target state="translated">フォームを要求しています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Gets the currently active multiple-document interface (MDI) child window.</source>
          <target state="translated">現在アクティブなマルチ ドキュメント インターフェイス (MDI) 子ウィンドウを取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active MDI child window, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are currently no child windows present.</source>
          <target state="translated">現在アクティブな MDI 子ウィンドウを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> を返します。現在子ウィンドウが存在しない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can use this method to determine whether there are any MDI child forms open in your MDI application.</source>
          <target state="translated">このメソッドを使用すると、MDI アプリケーションで開いている MDI 子フォームがあるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</source>
          <target state="translated">このメソッドを使用して、MDI 親フォームとは、アプリケーションに表示されている別の形式から、MDI 子ウィンドウの操作を実行することができますも。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>If the currently active form is not an MDI child form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property to obtain a reference to it.</source>
          <target state="translated">使用することが現在アクティブなフォームが MDI 子フォームでない場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph>への参照を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>The following code example obtains a reference to the active MDI child form and loops through all <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls on the form, resetting their <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> properties.</source>
          <target state="translated">次のコード例は、アクティブな MDI 子フォームとすべてをループへの参照を取得<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>、フォーム上のコントロールをリセットする、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</source>
          <target state="translated">この例では、MDI 親フォームが作成されていると、このメソッドの呼び出しを MDI 親フォームから行われていますが、必要があります。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that this form will own.</source>
          <target state="translated">対象となるフォームがこれから所有する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Adds an owned form to this form.</source>
          <target state="translated">対象となるフォームに、所有される側のフォームを追加します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">所有者のフォームに割り当てられたまままで所有されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">別の設定が所有するフォームを作成することも、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>その所有者のフォームへの参照を持つプロパティです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">たとえば、という名前のフォーム<ph id="ph1">`Form2`</ph>という名前のフォームによって所有されている<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">場合<ph id="ph1">`Form1`</ph>が閉じられるか、最小化、<ph id="ph2">`Form2`</ph>も閉じられるか、非表示にします。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">所有されているフォームは、所有者のフォームの背後に表示もされません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">所有されているフォームを使用して、検索などの windows 用と所有者フォームを選択すると、所有者のフォームの背後に表示されません必要のある windows の置換を行うことができます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合は、このプロパティは、現在含まれている MDI 子フォームを除く表示されているすべてのフォームを開くを返します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">MDI 親フォームで開かれている MDI 子フォームを取得するを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method to display a form as an owned form of another form.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph>形式、所有されている別の形式としてフォームを表示します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</source>
          <target state="translated">所有されているフォームが表示されると、その所有者のフォームを最小限に抑えることができ、それに所有されているフォームが最小化します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The example requires that the code in the example is called from another event or method of a form.</source>
          <target state="translated">この例では、例のコードが別のイベントまたはフォームのメソッドから呼び出されることが必要です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to show the scroll bars; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">スクロール バーを表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
          <target state="translated">現在のコントロールの位置、および現在選択されているコントロールを基準として、コンテナー上のスクロール バーを調整します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>Gets or sets a value indicating whether the opacity of the form can be adjusted.</source>
          <target state="translated">フォームの不透明度を調整できるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the opacity of the form can be changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームの不透明度を変更できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>This property is automatically set to <ph id="ph1">`true`</ph> if the <ph id="ph2">`Opacity`</ph> is changed.</source>
          <target state="translated">このプロパティに設定が自動的に<ph id="ph1">`true`</ph>場合、<ph id="ph2">`Opacity`</ph>を変更します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>When the opacity of a form is set using the <ph id="ph1">`Opacity`</ph> property, the form will layer objects on the form.</source>
          <target state="translated">使用して、フォームの不透明度を設定すると、<ph id="ph1">`Opacity`</ph>プロパティ、フォーム上のオブジェクトがレイヤーします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph> property to <ph id="ph2">`false`</ph> the form will not be in layered mode which will improve the display performance of the form.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>フォームは、フォームの表示のパフォーマンスを向上する階層化モードに存在しなくなります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>Resizes the form according to the current value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> property and the size of the current font.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> プロパティの現在の値、および現在のフォントのサイズに応じて、フォームのサイズを変更します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>This method determines the form size using the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> value returned by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドの値を使用して、フォームのサイズを決定する、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>によって返される値、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</source>
          <target state="translated">フォームで使用されるフォントの高さに合わせてフォームのサイズを調整し、そのコントロールをスケールするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在フォームに割り当てられているフォントに合わせて、フォームとそのコントロールを自動的にスケールする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph> is obsolete and has been retained for backward compatibility.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph>は廃止されており旧バージョンとの互換性のために残されています。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The non-obsolete alternative is <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">旧式でない代替手段は、<ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">自動スケーリングの詳細については、次を参照してください。 <bpt id="p1">[</bpt>Windows フォームにおける自動スケーリング<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</source>
          <target state="translated">このプロパティを使用するには、フォームを許可してフォントの変更に基づいて、そのコントロールを自動的に調整します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</source>
          <target state="translated">これは、フォントが高まる可能性がありますアプリケーションや Windows で使用するために指定された言語に基づく低下で役立ちます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>To obtain the size the form will auto scale to, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">フォームが自動的にサイズを使用する小数点以下桁数を取得する、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>If you want to determine the size the form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">サイズを決定する場合、フォームは自動スケールを使用して、特定のフォントに基づく、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Gets or sets the base size used for autoscaling of the form.</source>
          <target state="translated">フォームを自動スケールするときに使用する基本サイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the base size that this form uses for autoscaling.</source>
          <target state="translated">対象となるフォームを自動スケールするときに使用する基本サイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">このメンバーは旧バージョンとの互換性のため保持されています。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">自動スケーリングの詳細については、次を参照してください。 <bpt id="p1">[</bpt>Windows フォームにおける自動スケーリング<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property is used at form-display time to compute the scaling factor for the form.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>プロパティは、フォームのスケール ファクターを計算するフォームの表示時に使用します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</source>
          <target state="translated">自動スケーリングの基本サイズがフォームを基準としての使用、システムのフォント サイズを比較を自動スケールを使用する場合は、フォームを拡張する量を調べる。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>If you want to determine the size a form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">サイズを決定する場合、フォームは自動スケールを使用して、特定のフォントに基づく、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of this property is used when the form is initially created.</source>
          <target state="translated">このプロパティの値は、フォームが最初に作成されるときに使用されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Once the property is set, it cannot be changed.</source>
          <target state="translated">プロパティを設定すると、変更できません。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Gets or sets a value indicating whether the form enables autoscrolling.</source>
          <target state="translated">フォームで自動スクロールを有効にするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable autoscrolling on the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームで自動スクロールを有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>If this property is set to <ph id="ph1">`true`</ph>, scroll bars are displayed on the form if any controls are located outside the form's client region.</source>
          <target state="translated">このプロパティ設定されている場合<ph id="ph1">`true`</ph>、任意のコントロールがフォームのクライアント領域の外側にある場合、フォームのスクロール バーが表示されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</source>
          <target state="translated">さらに、自動スクロールが on の場合は、フォームのクライアント領域を自動的に入力フォーカスを持つコントロールを表示するスクロールします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</source>
          <target state="translated">このプロパティを使用して、ユーザーが、画面の解像度設定が低解像度に設定されているときにコントロールを表示する機能が失われることを防止することができます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property to enable the display of controls that are outsize the client area of a form.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> outsize フォームのクライアント領域のコントロールの表示を有効にするプロパティです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The example creates a new form and adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to the form.</source>
          <target state="translated">この例は、新しいフォームを作成し、追加、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>をフォームにコントロールできます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is positioned outsize the client area of the new form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロールが配置されている outsize 新しいフォームのクライアント領域。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph>プロパティが true に設定するユーザー コントロールにスクロールするために、フォーム上のスクロール バーを表示します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">この例では、イベント ハンドラーまたは他の方法で別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Resize the form according to the setting of <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph> の設定に従って、フォームのサイズを変更します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically resize; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it must be manually resized.</source>
          <target state="translated">フォームのサイズが自動的に変更される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。手動でサイズを変更する必要がある場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> to force a form to resize to fit its contents.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>内容に合わせてサイズを変更するためのフォームを強制的にします。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">フォームがの値に関係なく、Visual Studio のフォーム デザイナーで自動的にサイズ変更されない、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">フォームでは、これら 2 つのプロパティの値に基づいて実行時に自体正しく変更します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">一方、カスタム<ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>デザイン時および実行時の両方にそれ自体を自動的に調整します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph> properties are respected, but the current value of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is ignored.</source>
          <target state="translated">使用する場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph>の現在の値が、プロパティが守られて、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>プロパティは無視されます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> also renders the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>レンダリング、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph>プロパティ余分なようにビューからそのコンテナー内のコントロールを非表示にフォームを圧縮する方法はありません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> enumeration for information on how a form behaves when <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>については、フォームの動作時に列挙<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>は<ph id="ph3">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">次のコード例は、その内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示しています。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When run, the form displays a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">実行すると、フォームが表示されます、 <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 、URL を入力するため、<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>ユーザーの既定の Web ブラウザー内でその URL を表示するためです。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph>レイアウトは含まれている 1 つずつを制御します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">また、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>は、フォームの内容に合わせて増減します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoSizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> プロパティが変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Gets or sets the mode by which the form automatically resizes itself.</source>
          <target state="translated">フォームを自動的にサイズ変更するときに使用するモードを取得または設定します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> enumerated value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 列挙値。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> property to a new value causes the form to be laid out again.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>を新しい値にプロパティがもう一度配置するためのフォームをによりします。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">フォームがの値に関係なく、Visual Studio のフォーム デザイナーで自動的にサイズ変更されない、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">フォームでは、これら 2 つのプロパティの値に基づいて実行時に自体正しく変更します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">一方、カスタム<ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>デザイン時および実行時の両方にそれ自体を自動的に調整します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">次のコード例は、その内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示しています。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>When run, the form displaya a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">実行すると、フォームを表示、 <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 、URL を入力するため、<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>ユーザーの既定の Web ブラウザー内でその URL を表示するためです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph>レイアウトは含まれている 1 つずつを制御します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">また、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>は、フォームの内容に合わせて増減します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The value is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> value.</source>
          <target state="translated">値が有効な <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</source>
          <target state="translated">フォーカスが変更されたときに、このコンテナーのコントロールを自動的に検証するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> enumerated value that indicates whether contained controls are implicitly validated on focus change.</source>
          <target state="translated">フォーカスが変更されたときに、格納されたコントロールを暗黙的に検証するかどうかを示す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> 列挙値。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>The default is Inherit.</source>
          <target state="translated">既定値は Inherit です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoValidateChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> プロパティが変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">コントロールの背景色を取得または設定します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated">コントロールの背景色を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> プロパティの値です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>Gets or sets the button control that is clicked when the user presses the ESC key.</source>
          <target state="translated">ユーザーが Esc キーを押したときにクリックされるボタン コントロールを取得または設定します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the cancel button for the form.</source>
          <target state="translated">フォームの [キャンセル] ボタンを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</source>
          <target state="translated">フォームの [キャンセル] ボタンは、ユーザーが ESC キーを押すとクリックされるボタン コントロールです。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">このプロパティに割り当てられているボタンである必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>を現在のフォームでは、または現在のフォーム上のコンテナー内に存在します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>This property allows you to designate a default action to occur when the user presses the ESC key in your application.</source>
          <target state="translated">このプロパティでは、ユーザーが、アプリケーションで、ESC キーを押したときに発生する既定のアクションを指定することができます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</source>
          <target state="translated">このプロパティを使用すると、ユーザーが単に、ESC キーを押して手動で、マウスで、[キャンセル] ボタンをクリックする代わりに変更をコミットせずにウィンドウを閉じるようにして単純なフォームをすばやく移動できるようにします。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> may not work if another control on the form intercepts the ESC key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> フォーム上の別のコントロールは、ESC キーを途中受信している場合は機能しません。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> open on your form, ESC will close the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> instead of closing the Form.</source>
          <target state="translated">ある場合など、 <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> ESC がフォーム上で開く、閉じる、<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>フォームを閉じる代わりにします。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> object assigned to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> must be visible on the form, or else pressing the ESC key will have no effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>オブジェクトに割り当てられている<ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>ESC キーを押すか、または、フォームに表示する必要がありますキーには影響はありません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Centers the position of the form within the bounds of the parent form.</source>
          <target state="translated">フォームを親フォームの境界内の中央に配置します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> method directly from your code.</source>
          <target state="translated">呼び出す必要はありません、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph>コードから直接メソッドです。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>.</source>
          <target state="translated">代わりに、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>If the form or dialog is top-level, then <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> centers the form with respect to the screen or desktop.</source>
          <target state="translated">フォームまたはダイアログは、最上位は場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph>画面またはデスクトップに関してフォームを中央揃えです。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Centers the form on the current screen.</source>
          <target state="translated">フォームを現在の画面の中央に配置します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Do not call this directly from your code.</source>
          <target state="translated">コードから直接はこの呼び出しできません。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>.</source>
          <target state="translated">代わりに、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph> method uses the following priority list to determine the screen used to center the form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph>メソッドでは、次の優先順位一覧を使用して、、フォームの中央に使用される画面を判定します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The HWND owner of the form.</source>
          <target state="translated">フォームの HWND 所有者です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The screen that currently has the mouse cursor.</source>
          <target state="translated">現在、マウスのカーソルのある画面。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>Gets or sets the size of the client area of the form.</source>
          <target state="translated">フォームのクライアント領域のサイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form's client area.</source>
          <target state="translated">フォームのクライアント領域のサイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The size of the client area of the form is the size of the form excluding the borders and the title bar.</source>
          <target state="translated">フォームのクライアント領域のサイズは、境界線とタイトル バーを除く、フォームのサイズです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The client area of a form is the area within a form where controls can be placed.</source>
          <target state="translated">フォームのクライアント領域は、コントロールの配置場所をフォーム領域です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</source>
          <target state="translated">このプロパティを使用すると、グラフィックス操作を実行するとき、またはフォームにコントロールを配置してサイズ変更に適切なサイズを取得します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>To get the size of the entire form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property or use the individual properties <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>.</source>
          <target state="translated">フォーム全体のサイズを取得するを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>プロパティか個々 のプロパティを使用して<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You cannot currently bind to this property using application settings.</source>
          <target state="translated">現在、アプリケーションの設定を使用してこのプロパティにバインドすることはできません。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">アプリケーション設定の詳細については、次を参照してください。<bpt id="p1">[</bpt>アプリケーション設定の概要<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a form.</source>
          <target state="translated">次のコード例のイベント ハンドラーの作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>フォームのイベントです。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The event handler uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph> property of the form to make a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control named <ph id="ph3">`button1`</ph> fill the entire client area of the form.</source>
          <target state="translated">イベント ハンドラーを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph>ために、フォームのプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>という名前のコントロール<ph id="ph3">`button1`</ph>フォームの全体のクライアント領域を塗りつぶします。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>Closes the form.</source>
          <target state="translated">フォームを閉じます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When a form is closed, all resources created within the object are closed and the form is disposed.</source>
          <target state="translated">フォームが閉じられたときに、オブジェクト内で作成されたすべてのリソースが終了し、フォームが破棄されます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>You can prevent the closing of a form at run time by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed as a parameter to your event handler.</source>
          <target state="translated">処理することにより、実行時にフォームの終了を防ぐことができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントと設定、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>イベント ハンドラーにパラメーターとして渡されます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If the form you are closing is the startup form of your application, your application ends.</source>
          <target state="translated">フォームを閉じていますが、アプリケーションのスタートアップ フォームの場合は、アプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>The two conditions when a form is not disposed on <ph id="ph1">`Close`</ph> is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">2 つの条件条件、フォームが破棄されることと<ph id="ph1">`Close`</ph>場合 (1) の一部では、マルチ ドキュメント インターフェイス (MDI) アプリケーションはありません。 および (2) が表示フォームを使用して<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>In these cases, you will need to call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> manually to mark all of the form's controls for garbage collection.</source>
          <target state="translated">このような場合を呼び出す必要がある<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph>すべてのガベージ コレクションのフォームのコントロールをマークするには、手動でします。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>メソッドが、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>モードレス ウィンドウとして表示される、呼び出すことができません、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">フォームを非表示にし、その可視性、使用できるようにする、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>Prior to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated">前のバージョン、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0 では、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>イベントは、いつ発生するか、<ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されてアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出す前に個別に開いているフォーム、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>The form was closed while a handle was being created.</source>
          <target state="translated">ハンドルが作成されている間にフォームが閉じました。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>You cannot call this method from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event when <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph> is set to <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> が <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph> に設定されている場合、このメソッドを <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph> イベントから呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closed">
          <source>Occurs when the form is closed.</source>
          <target state="translated">フォームが閉じたときに発生します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>イベントは、.NET Framework version 2.0 廃止されています。 使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>イベント代わりにします。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>This event occurs after the form has been closed by the user or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method of the form.</source>
          <target state="translated">ユーザーまたはフォームが閉じられた後、このイベントが発生した、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>フォームのメソッドです。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">フォーム閉じるを防ぐために、処理、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントとセット、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>にイベント ハンドラーに渡される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">フォームによって使用されているリソースを解放するなどのタスクを実行して、フォームに入力した情報を保存する、または、親フォームを更新するには、このイベントを使用します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>イベントは、いつ発生するか、<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されてアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出す前に個別に開いているフォーム、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">フォームが MDI 親フォームでは場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>すべての MDI 子フォームのイベントが発生する前に、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 親フォームのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">例を実行するには、という名前のフォームで、次のコードを貼り付けます<ph id="ph1">`Form1`</ph>を含む、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>と呼ばれる<ph id="ph3">`Button1`</ph>と 2 つ<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>と呼ばれるコントロール<ph id="ph5">`Label1`</ph>と<ph id="ph6">`Label2`</ph>です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closing">
          <source>Occurs when the form is closing.</source>
          <target state="translated">フォームが閉じている間に発生します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントは、.NET Framework version 2.0 廃止されています。 使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベント代わりにします。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>フォームが閉じられて、イベントが発生します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is closed, all resources created within the object are released and the form is disposed.</source>
          <target state="translated">フォームが閉じられたときに、オブジェクト内で作成されたすべてのリソースを解放し、フォームが破棄されます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">このイベントをキャンセルした場合、フォームは開いたままになっています。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">フォームのクロージャをキャンセルする、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>にイベント ハンドラーに渡される<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>設定するプロパティを<ph id="ph2">`DialogResult.Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">割り当てられている値をオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティ、ユーザーがクリックしたときに、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept> ボタンを設定して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>のイベント ハンドラーのプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>フォームのイベントです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>メソッドが、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>モードレス ウィンドウとして表示される、呼び出すことができません、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">フォームを非表示にし、その可視性、使用できるようにする、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>イベントは、いつ発生するか、<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されてアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出す前に個別に開いているフォーム、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">フォームが MDI 親フォームでは場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>すべての MDI 子フォームのイベントが発生する前に、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 親フォームのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">キャンセル、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 子フォームのイベントができない、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 親フォームから発生するイベントです。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> that is passed as a parameter to the parent form.</source>
          <target state="translated">設定、イベントをキャンセルする<ph id="ph1">`true`</ph>、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>親フォームにパラメーターとして渡されます。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">すべての MDI 親と子フォームを閉じるには、設定、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>で MDI 親フォームです。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>場合にテスト内のテキスト、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>が変更されました。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">場合は、ユーザーが要求するファイルに変更を保存するかどうか。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</source>
          <target state="translated">フォームのキャプション バーにコントロール ボックスを表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays a control box in the upper-right corner of the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> フォームの右上隅にコントロール ボックスを表示する場合それ以外の場合、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the control box is displayed in the upper-right corner of the caption bar.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、キャプション バーの右上隅にコントロール ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The control box can include minimize, maximize, and help buttons in addition to a close button.</source>
          <target state="translated">コントロールのボックスに含めることができますを最小化、最大化、および閉じるボタンをクリックするボタンをさらにヘルプします。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>For the <ph id="ph1">`ControlBox`</ph> property to have any effect, you must also set the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ControlBox`</ph>影響がないように、プロパティ、フォームを設定することも必要があります。<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティを<ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>、または<ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph2">`false`</ph> and also set the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property of the form is not updated to reflect that the non-client area of the form has been hidden.</source>
          <target state="translated">設定した場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>に<ph id="ph2">`false`</ph>も設定し、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>プロパティ、<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>フォームのプロパティは、フォームの非クライアント領域を非表示にされたことを反映するように更新されません。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>To fix this problem, put the code that alters the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event handler.</source>
          <target state="translated">この問題を解決するには、変更するコードを配置、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>プロパティに、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>When set to <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</source>
          <target state="translated">設定すると<ph id="ph1">`false`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>プロパティは作成時点の最大化されて表示されるマルチ ドキュメント インターフェイス (MDI) 子フォーム上の影響を与えません。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to create a form that does not have any border or caption box.</source>
          <target state="translated">次のコード例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>罫線またはキャプション ボックスがないフォームを作成するプロパティです。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The form created in this example could be used to create a splash screen for an application.</source>
          <target state="translated">この例で作成されたフォームは、アプリケーションのスプラッシュ スクリーンを作成するために可能性があります。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The example requires that the example's method is defined in a form class and called when the form is being initialized.</source>
          <target state="translated">例には、例のメソッドがフォームのクラスで定義されているし、フォームが初期化されているときに呼び出されますことが必要です。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">コントロールのコントロール コレクションの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">コントロールに割り当てられた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>Creates the handle for the form.</source>
          <target state="translated">フォームのハンドルを作成します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>If a derived class overrides this function, it must call the base implementation.</source>
          <target state="translated">派生クラスでこの機能をオーバーライドする場合は、基本の実装を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>A handle for this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> has already been created.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> のハンドルが既に作成されています。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Occurs when the form loses focus and is no longer the active form.</source>
          <target state="translated">フォームがフォーカスを失い、アクティブでなくなると発生します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</source>
          <target state="translated">このイベントを使用して、アプリケーションの別のウィンドウを非アクティブ化された形式のデータで更新などのタスクを実行することができます。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">コントロールがサポートしている既定の IME (Input Method Editor) モードを取得します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">入力方式エディター (IME) は、標準キーボードを使用して日本語の漢字などの記号と複雑な文字を入力できるプログラムです。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">実装されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>クラス、このプロパティは常に返します、<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>The value of this property is assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このプロパティの値が割り当てられた、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">コントロールの既定のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">コントロールの既定の <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">処理対象の Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">指定したメッセージを既定のウィンドウ プロシージャに送信します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Gets or sets the size and location of the form on the Windows desktop.</source>
          <target state="translated">Windows デスクトップ上のフォームのサイズと位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form on the Windows desktop using desktop coordinates.</source>
          <target state="translated">デスクトップ座標を使用して、Windows デスクトップ上のフォームの範囲を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The coordinate system of the desktop is pixel-based.</source>
          <target state="translated">デスクトップの座標系では、ピクセル ベースです。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">アプリケーションが複数のモニター システムで実行されている場合、フォームの座標は、結合されたデスクトップの座標です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</source>
          <target state="translated">このプロパティは、サイズし、Windows デスクトップ上の他のフォームまたはアプリケーションに合わせてフォームの位置を使用できます。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</source>
          <target state="translated">次のコード例は、フォームがデスクトップの最上位からデスクトップおよび 50 ピクセルの左端から 50 ピクセルの位置指定できるように、フォームの位置とサイズを設定します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>This example requires that the method is defined within a form class.</source>
          <target state="translated">この例では、フォーム クラス内でメソッドが定義されている必要があります。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Gets or sets the location of the form on the Windows desktop.</source>
          <target state="translated">Windows デスクトップ上のフォームの位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the location of the form on the desktop.</source>
          <target state="translated">デスクトップ上のフォームの位置を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The coordinate system of the desktop is pixel based.</source>
          <target state="translated">デスクトップの座標系とは、ベース ピクセルです。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">アプリケーションがマルチ モニター システムで実行されている場合、フォームの座標は、結合されたデスクトップの座標です。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>You can use this property to position your form relative to other forms and applications on the Windows desktop.</source>
          <target state="translated">このプロパティを使用して、Windows デスクトップ上の他のフォームおよびアプリケーションと比較して、フォームに配置することができます。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method, your form will be positioned at its default location, which is determined by the operating system.</source>
          <target state="translated">呼び出す場合は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>メソッドを呼び出す前に、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>メソッド、フォームには、オペレーティング システムによって決定される、既定の場所に配置されます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">ウィンドウの配置の詳細については、MSDN ライブラリで「ウィンドウの機能」ドキュメントの「ウィンドウのサイズと位置」セクションを参照して<ph id="ph1">http://msdn.microsoft.com/library</ph>です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>, your form will be positioned at the location you specified.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>呼び出した後<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>フォームには、指定した場所に配置されます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</source>
          <target state="translated">次のコード例は、フォームがデスクトップの最上位からデスクトップ コンピューターと 100 ピクセルの左端から 100 ピクセルの位置指定できるように、フォームの位置を設定します。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>This example requires that method has been defined within a form class.</source>
          <target state="translated">この例では、メソッドをフォーム クラス内で定義されていることが必要です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Gets or sets the dialog result for the form.</source>
          <target state="translated">フォームのダイアログ結果を取得または設定します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> that represents the result of the form when used as a dialog box.</source>
          <target state="translated">フォームがダイアログ ボックスとして使用された場合の結果を表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</source>
          <target state="translated">フォームのダイアログの結果は、モーダル ダイアログ ボックスとして表示されるときに、フォームから返される値です。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If the form is displayed as a dialog box, setting this property with a value from the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</source>
          <target state="translated">フォームがダイアログ ボックスとして表示されている場合からの値では、このプロパティを設定、<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>列挙体は、フォームのダイアログ ボックスの結果の値を設定、モーダル ダイアログ ボックスを非表示にし、呼び出し元のフォームにコントロールを返します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>This property is typically set by the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on the form.</source>
          <target state="translated">このプロパティは通常設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>フォーム上のコントロールです。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When the user clicks the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, the value assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> is assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">ユーザーがクリックしたとき、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>に割り当てられた値を制御する、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>に割り当てられている、<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタン (フォームの右上隅の X のボタン) がフォームを非表示にすると、および<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>設定するプロパティを<ph id="ph2">`DialogResult.Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not automatically called when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>メソッドは、ユーザーがクリックしたときに自動的に呼び出されません、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept> ダイアログ ボックスのボタンの値を設定または、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">代わりに、フォームは、非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Because of this behavior, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">この動作のために呼び出す必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</source>
          <target state="translated">このプロパティを使用して、ダイアログ ボックスで実行されるアクションを正しく処理するために、ダイアログ ボックスを終了する方法を確認することができます。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">割り当てられている値をオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティ、ユーザーがクリックしたときに、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept> ボタンを設定して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>のイベント ハンドラーのプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>フォームのイベントです。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed as a modeless window, the value returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>モードレス ウィンドウは、によって返される値として表示される、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティには、フォームが閉じられたときに、フォームのリソースは自動的に解放されるため、フォームに割り当てられている値を返さない可能性があります。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">次のコード例はダイアログ ボックスとしてフォームを表示し、参照することによって、フォームの [ok] または [キャンセル] ボタンがクリックしてされたかどうかを示すメッセージ ボックスを表示、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定された値が有効値の範囲内にありません。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> で使用されていたリソース (メモリを除く) を解放します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> will be called automatically if the form is shown using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> 使用して、フォームが表示される場合に自動的に呼び出される、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>If another method such as <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> is used, or the form is never shown at all, you must call <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> yourself within your application.</source>
          <target state="translated">場合など、別の方法<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>が使用またはフォームがまったく表示されませんが、呼び出す必要があります<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph>アプリケーション内で自分でします。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.DpiChanged">
          <source>Occurs when the DPI setting changes on the display device where the form is currently displayed.</source>
          <target state="translated">フォームが現在表示されているディスプレイ デバイスの DPI 設定が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Gets or sets the border style of the form.</source>
          <target state="translated">フォームの境界線スタイルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph> that represents the style of border to display for the form.</source>
          <target state="translated">表示するフォームの境界線スタイルを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style of the form determines how the outer edge of the form appears.</source>
          <target state="translated">フォームの境界線のスタイルは、フォームの外側のエッジの表示方法を決定します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>In addition to changing the border display for a form, certain border styles prevent the form from being sized.</source>
          <target state="translated">フォームの境界線の表示を変更するだけでなく特定の罫線のスタイルを防ぐフォーム サイズを変更します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>For example, the <ph id="ph1">`FormBorderStyle.FixedDialog`</ph> border style changes the border of the form to that of a dialog box and prevents the form from being resized.</source>
          <target state="translated">たとえば、<ph id="ph1">`FormBorderStyle.FixedDialog`</ph>罫線のスタイル ダイアログ ボックスのフォームの境界線を変更し、フォームがサイズ変更されることを防止します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style can also affect the size or availability of the caption bar section of a form.</source>
          <target state="translated">罫線のスタイルは、サイズまたはフォームのキャプション バーのセクションの可用性にも影響します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph> style, it is impossible to resize the window below a certain minimum value, even if you have set <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph3">`false`</ph> and assigned a zero-length string to <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph>スタイルは特定の最小値、下のウィンドウのサイズを変更する設定した場合でも<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>に<ph id="ph3">`false`</ph>に長さ 0 の文字列が割り当てられていると<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Consider working around this by using the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph> style instead.</source>
          <target state="translated">使用してこの対処を検討してください、<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph>代わりにスタイルを設定します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定された値が有効値の範囲内にありません。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Occurs after the form is closed.</source>
          <target state="translated">フォームが閉じた後に発生します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event occurs after the form has been closed by the user or by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>ユーザーまたはフォームが閉じられた後にイベントが発生した、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>メソッドまたは<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>のメソッド、<ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">フォーム閉じるを防ぐために、処理、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベントとセット、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>にイベント ハンドラーに渡される<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">フォームによって使用されているリソースを解放するなどのタスクを実行して、フォームに入力した情報を保存する、または、親フォームを更新するには、このイベントを使用します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>すべての MDI 子フォームのイベントが発生する前に、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> MDI 親フォームのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Occurs before the form is closed.</source>
          <target state="translated">フォームが閉じる前に発生します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>フォームが閉じられて、イベントが発生します。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is closed, it is disposed, releasing all resources associated with the form.</source>
          <target state="translated">フォームが閉じられたときに破棄されると、フォームに関連付けられているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">このイベントをキャンセルした場合、フォームは開いたままになっています。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">フォームのクロージャをキャンセルする、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>にイベント ハンドラーに渡される<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>設定するプロパティを<ph id="ph2">`DialogResult.Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the form.</source>
          <target state="translated">割り当てられている値をオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティ、ユーザーがクリックしたときに、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept> ボタンを設定して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>のイベント ハンドラーのプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>フォームのイベントです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>メソッドが、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>モードレス ウィンドウとして表示される、呼び出すことができません、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method.</source>
          <target state="translated">フォームを非表示にし、その可視性、使用できるようにする、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>すべての MDI 子フォームのイベントが発生する前に、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> MDI 親フォームのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">キャンセル、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> MDI 子フォームのイベントができない、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> MDI 親フォームから発生するイベントです。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> class that is passed as a parameter to the parent form.</source>
          <target state="translated">設定、イベントをキャンセルする<ph id="ph1">`true`</ph>、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>親フォームにパラメーターとして渡されるクラスです。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">すべての MDI 親と子フォームを閉じるには、設定、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>で MDI 親フォームです。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> representing the font to determine the autoscaled base size of the form.</source>
          <target state="translated">フォームを自動スケールした場合の基本サイズを決めるフォントを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>Gets the size when autoscaling the form based on a specified font.</source>
          <target state="translated">指定したフォントに基づいてフォームを自動スケールした場合のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> representing the autoscaled size of the form.</source>
          <target state="translated">フォームを自動スケールした後のサイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method is obsolete in.NET Framework version 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>メソッドは廃止 in.NET Framework バージョン 2.0。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">このメンバーは旧バージョンとの互換性のため保持されています。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">自動スケーリングの詳細については、次を参照してください。 <bpt id="p1">[</bpt>Windows フォームにおける自動スケーリング<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</source>
          <target state="translated">このメソッドを使用すると、フォームをフォームにフォントを適用する前に、特定のフォントの自動スケールは、サイズを決定します。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">サイズを決定する場合、フォームがスケールをフォームに現在割り当てられているフォントに基づくを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">ディスプレイの範囲の取得条件となる領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">コントロールの境界の高さおよび幅。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> の値の 1 つ。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">コントロールのスケールが設定される境界を取得します。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated">コントロールのスケールが設定される境界を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</source>
          <target state="translated">フォームのキャプション ボックスに [ヘルプ] ボタンを表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a Help button in the form's caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームのキャプション バーにヘルプ ボタンを表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>When this property is set to <ph id="ph1">`true`</ph>, a small button with a question mark appears in the caption bar to the left of the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">このプロパティを設定すると<ph id="ph1">`true`</ph>、キャプション バーの左側に疑問符 () の付いた小さなボタンが表示されます、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can use this button to display help for your application.</source>
          <target state="translated">このボタンを使用すると、アプリケーションのヘルプを表示します。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display Help information to the user when the Help button of the form is clicked.</source>
          <target state="translated">イベント ハンドラーを作成することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>フォームの [ヘルプ] ボタンがクリックされたときに、ユーザーにヘルプ情報を表示するイベントです。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>To display a Help button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">ヘルプ ボタンをフォームの値を表示する<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティである必要があります<ph id="ph2">`true`</ph>既定値です。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">さらに、設定する必要ありますもフォームの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>、または<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is ignored if the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Minimize<ept id="p2">**</ept> buttons are shown.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>プロパティは、<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>または<bpt id="p2">**</bpt>最小化<ept id="p2">**</ept>ボタンが表示されます。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a Help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated"><bpt id="p1">**</bpt>[ヘルプ]<ept id="p1">**</ept> ボタンがクリックされると発生します。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button in the form's caption bar is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>イベントが発生したときに、<bpt id="p1">**</bpt>ヘルプ<ept id="p1">**</ept>フォームのキャプション バーのボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>ヘルプ<ept id="p1">**</ept>ボタンが表示されるときに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> can be canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> キャンセルできます。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Icon">
          <source>Gets or sets the icon for the form.</source>
          <target state="translated">フォームのアイコンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> that represents the icon for the form.</source>
          <target state="translated">フォームのアイコンを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</source>
          <target state="translated">フォームのアイコンは、フォームのコントロールのボックスに表示されるアイコンと同様に、タスク バーで、フォームを表す画像を指定します。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>This property will have no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">このプロパティは効果がなく場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>に設定されている<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>In that case, the form will not display an icon.</source>
          <target state="translated">その場合は、フォームには、アイコンは表示されません。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Occurs after the input language of the form has changed.</source>
          <target state="translated">フォームの入力言語が変更された後に発生します。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</source>
          <target state="translated">このイベントを使用して、フォームの外観とフォームの入力言語に加えられた変更に基づいてテキストを変更することができます。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Occurs when the user attempts to change the input language for the form.</source>
          <target state="translated">ユーザーがフォームの入力言語を変更しようとすると発生します。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This event occurs before the change of input language is made for the form.</source>
          <target state="translated">このイベントは、フォームの入力言語の変更が行われる前に発生します。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can cancel the language change by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">言語の変更をキャンセルするには、設定、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph>にイベント ハンドラーに渡される<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>If the event is canceled, the input language is not changed.</source>
          <target state="translated">イベントがキャンセルされた場合、入力言語は変更されません。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can use this event to determine whether the requested input language change is appropriate for your application.</source>
          <target state="translated">このイベントを使用して、要求された入力言語の変更がアプリケーションに適切かどうかを決定することができます。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 子フォームかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is an MDI child form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームが MDI 子フォームである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>At run time, MDI child forms are displayed inside the client area of an MDI parent form.</source>
          <target state="translated">実行時に、MDI 子フォームが MDI 親フォームのクライアント領域の内側に表示されます。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>An MDI child form can be maximized, minimized, and moved within the MDI parent form.</source>
          <target state="translated">MDI 子フォームの最大化、最小化、および MDI 親フォーム内で移動します。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 子フォームを作成するには、割り当て、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を MDI 親フォームとなる、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to determine whether a form is an MDI parent form.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>親フォームのプロパティをフォームが MDI であるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph>メソッドまたはプロパティによって返されるフォームが MDI 子フォームまたはダイアログ ボックスなど、アプリケーションでの標準形式かどうかを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>All MDI child forms have sizable borders, a control-menu box, and Minimize and <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> buttons, regardless of the settings of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties.</source>
          <target state="translated">すべての MDI 子フォームは、かなりの数の罫線、コントロール メニュー ボックスで、最小化があると<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>ボタンなどの設定に関係なく、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI: Multiple Document Interface) 子フォームのコンテナーかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is a container for MDI child forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームが MDI 子フォームのコンテナーである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>This property changes the display and behavior of the form to an MDI parent form.</source>
          <target state="translated">このプロパティは、MDI 親フォームを表示し、フォームの動作を変更します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form displays a sunken client area with a raised border.</source>
          <target state="translated">このプロパティに設定するときに<ph id="ph1">`true`</ph>フォーム、浮き出し罫線とくぼみのクライアント領域に表示されます。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>All MDI child forms assigned to the parent form are displayed within its client area.</source>
          <target state="translated">クライアント領域内では、親フォームに割り当てられているすべての MDI 子フォームが表示されます。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When an MDI parent form is closed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">MDI 親フォームが閉じられたときに、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>すべての MDI 子フォームのイベントが発生する前に、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> MDI 親フォームのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">2 つを使用する必要がある場合<ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>設定、MDI 子フォーム上のコントロール<ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>に<ph id="ph3">`true`</ph>フォーム親の 1 つだけの内容と結合、<ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph>追加の子の内容をマージする<ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>MDI 親フォームのコントロールです。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property as well as changing the <ph id="ph2">`BackColor`</ph> property of an MDI Form.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>プロパティと同様の変更、 <ph id="ph2">`BackColor`</ph> MDI フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>To run this example, paste the following code in a new form.</source>
          <target state="translated">この例を実行するには、新しい形式で、次のコードを貼り付けます。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Gets a value indicating whether the form can use all windows and user input events without restriction.</source>
          <target state="translated">フォームがすべてのウィンドウとユーザー入力イベントを制限なく使用できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form has restrictions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームに制限が課せられている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph> property determines whether the <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> permission is granted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph>プロパティを決定するかどうか、<ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph>権限を許可します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</source>
          <target state="translated">このプロパティは、フォームのコンス トラクターで実行時に設定され、フォームの有効期間は、キャッシュします。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</source>
          <target state="translated">共通言語ランタイムによって親コンス トラクターは常にという名前の部分的な信頼で、部分信頼で実行されている Windows フォーム アプリケーションでこのチェックを回避することはできません。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</source>
          <target state="translated">キー イベントがフォーカスを持つコントロールに渡される前に、フォームがそのイベントを受け取るかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will receive all key events; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the currently selected control on the form receives key events.</source>
          <target state="translated">フォームがすべてのキー イベントを受け取る場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。フォーム上で現在選択されているコントロールがキー イベントを受け取る場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form will receive all <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated">このプロパティを設定すると<ph id="ph1">`true`</ph>、フォームがすべてを受け取る<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</source>
          <target state="translated">フォームのイベント ハンドラーのキーストロークの処理が完了すると後、キーストロークがフォーカスを持つコントロールに割り当てられます。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the currently selected control is a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, after the keystroke is handled by the event handlers of the form the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control will receive the key that was pressed.</source>
          <target state="translated">たとえば場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、現在選択されているコントロールが、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>キーストロークがフォームのイベント ハンドラーによって処理された後、<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>コントロールが押されたキーを受け取る。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">フォーム レベルでのみキーボード イベントを処理し、キーボード イベントを受信するコントロールを許可しない、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph>フォームのプロパティ<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>イベント ハンドラーを<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</source>
          <target state="translated">アプリケーションにキーストロークを処理するほとんどのキーストロークを処理するか、キーストロークを処理する適切なコントロールを呼び出すには、このプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</source>
          <target state="translated">たとえば、アプリケーションでは、ファンクション キーを使用するときに可能性があるキーストローク イベントを受け取る各コントロールのコードを記述するのではなく、フォーム レベルでのキーストロークを処理します。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>If a form has no visible or enabled controls, it automatically receives all keyboard events.</source>
          <target state="translated">フォームに表示するか有効になっているコントロールがされていない場合は、すべてのキーボード イベントが自動的に受け取ります。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>A control on a form may be programmed to cancel any keystrokes it receives.</source>
          <target state="translated">フォーム上のコントロールは、受信キーストロークをキャンセルするようにプログラミング可能性があります。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>.</source>
          <target state="translated">コントロールをフォームにこれらのキーストロークを送信しません、ため、フォームには表示されないの設定に関係なく<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The following code example demonstrates setting a form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property to true and handling the key events at the form level.</source>
          <target state="translated">次のコード例では、フォームの設定を示します<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>プロパティを true とフォーム レベルで重要なイベントを処理します。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">例を実行するには、空白のフォームで、次のコードを貼り付けます。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> values that defines the layout of MDI child forms.</source>
          <target state="translated">MDI 子フォームのレイアウトを定義する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</source>
          <target state="translated">マルチ ドキュメント インターフェイス (MDI) 親フォーム内に MDI 子フォームを配置します。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</source>
          <target state="translated">このメソッドを使用すると、ナビゲーションと MDI 子フォームの操作を簡単に許可するように、MDI 親フォームの MDI 子フォームを整列します。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</source>
          <target state="translated">MDI 子フォームに並べて表示できます水平方向および垂直方向にカスケード、または MDI 親フォーム内でのアイコンとして。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</source>
          <target state="translated">次のコード例では、親フォームの MDI アプリケーションのウィンドウ メニューのメニュー項目のイベント ハンドラーを示します。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Each event handler makes calls to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to arrange any child forms that are currently open in the application.</source>
          <target state="translated">各イベント ハンドラーへの呼び出し、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph>を任意の子フォームを整列する方法は、アプリケーションで現在開いています。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Load">
          <source>Occurs before a form is displayed for the first time.</source>
          <target state="translated">フォームが初めて表示される直前に発生します。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>You can use this event to perform tasks such as allocating resources used by the form.</source>
          <target state="translated">このイベントを使用して、フォームで使用されるリソースの割り当てなどのタスクを実行することができます。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">例を実行するには、という名前のフォームで、次のコードを貼り付けます<ph id="ph1">`Form1`</ph>を含む、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>と呼ばれる<ph id="ph3">`Button1`</ph>と 2 つ<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>と呼ばれるコントロール<ph id="ph5">`Label1`</ph>と<ph id="ph6">`Label2`</ph>です。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Location">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated">画面座標における <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> の左上隅を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> を取得および設定します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated">画面座標における <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> の左上隅を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> is a structure, which means that it is a value type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> 値型であることを意味構造体。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>If you access a property in <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>, a copy of the property is returned.</source>
          <target state="translated">プロパティにアクセスする場合<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>プロパティのコピーが返されます。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>Therefore, changing the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property will not affect the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">そのため、変更、<ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph>から返される、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>プロパティは無効になります、 <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>、 <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>、 <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>、または<ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>プロパティの値を<ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>To adjust these properties, set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">これらのプロパティを調整するには、個別に、各プロパティ値を設定するか、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>を新しいプロパティ<ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property gets or sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> base class, and sets the <ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph> property to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>プロパティを取得または設定、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>基本クラス、およびセット、<ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph>プロパティを<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>Gets or sets the primary menu container for the form.</source>
          <target state="translated">フォームの主要メニューのコンテナーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph> that represents the container for the menu structure of the form.</source>
          <target state="translated">フォームのメニュー構造のコンテナーを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>In addition to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph> property, you must <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph> the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control to the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form.</source>
          <target state="translated">設定に加えて、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph>プロパティ、する必要があります<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>コントロールを<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>フォームのコレクション。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> class supersedes the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> class in previous versions of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>クラスに置き換えられる、<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>以前のバージョンの .NET Framework クラスです。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">コントロール間の空白を取得または設定します。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Margin">
          <source>A value that represents the space between controls.</source>
          <target state="translated">コントロール間の空白を表す値。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MarginChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> プロパティが変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">フォームのキャプション バーに <bpt id="p1">**</bpt>[最大化]<ept id="p1">**</ept> ボタンを表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示する、<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>; フォームのボタンをクリックします。 それ以外の場合、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button enables users to enlarge a window to full-screen size.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept> ボタンをウィンドウを全画面表示のサイズを拡大するユーザーを有効にします。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>To display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">表示する、<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>ボタンをクリックして、フォームの値<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティである必要があります<ph id="ph2">`true`</ph>の既定値です。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">さらに、設定する必要ありますもフォームの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>、または<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button automatically becomes a restore button when a window is maximized.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>ボタンが自動的にウィンドウが最大化されたときに [復元] ボタンがなります。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Minimizing or restoring a window automatically changes the restore button back to a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button.</source>
          <target state="translated">[復元] ボタンを最小限にするか、ウィンドウを自動的に復元する変更に戻す、<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Maximizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">実行時にフォームを最大化が生成されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティは、ウィンドウの現在の状態を反映します。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Maximized`</ph>, the form is maximized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティを<ph id="ph2">`FormWindowState.Maximized`</ph>、どのような設定は、有効とは無関係に、フォームが最大化、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Gets and sets the size of the form when it is maximized.</source>
          <target state="translated">最大化された場合のフォームのサイズを取得および設定します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form when it is maximized.</source>
          <target state="translated">最大化された場合のフォームの範囲を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> property is greater than the height of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> プロパティの値がフォームの高さよりも大きくなっています。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> property is greater than the width of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> プロパティの値がフォームの幅よりも大きくなっています。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Classes that inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> can override this method to provide new bounds for the form when it is maximized.</source>
          <target state="translated">継承するクラス<ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>最大化されたときに、フォームの新しい境界を指定するには、このメソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The class sets this property internally when the form's <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">クラスこのプロパティを内部的に設定すると、フォームの<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>Gets the maximum size the form can be resized to.</source>
          <target state="translated">フォームのサイズを変更する場合の最大サイズを取得します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the maximum size for the form.</source>
          <target state="translated">フォームの最大サイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>This property enables you to limit the size of a form to a specified maximum size.</source>
          <target state="translated">このプロパティでは、指定した最大サイズにフォームのサイズを制限することができます。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</source>
          <target state="translated">1 つのウィンドウに非表示にするのにには、他のウィンドウがないようにするのに、同時に複数のウィンドウを表示するときにこの機能を使用できます。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</source>
          <target state="translated">このプロパティ設定されている場合、 <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> 0 の高さと幅、フォームに 0 であるオブジェクトには、Windows によって設定された制限を超える最大サイズはありません。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例は、設定を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> オブジェクト内の高さまたは幅の値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</source>
          <target state="translated">マルチ ドキュメント インターフェイス (MDI) 子フォームが MDI アプリケーション内でアクティブになった場合、または閉じた場合に発生します。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</source>
          <target state="translated">このイベントを使用して、MDI 子フォームの内容の更新などのタスクを実行することができます、メニュー オプションを変更する MDI 親フォームで使用できるに基づいてがアクティブ化する MDI 子フォームの状態。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</source>
          <target state="translated">対象のフォームが親フォームであるマルチ ドキュメント インターフェイス (MDI) 子フォームの配列を取得します。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects, each of which identifies one of this form's MDI child forms.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> オブジェクトの配列。各オブジェクトが、対象となるフォームの MDI 子フォームの 1 つを示します。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</source>
          <target state="translated">このプロパティでは、MDI 親フォームで現在開かれているすべての MDI 子フォームへの参照を取得することができます。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 子フォームを作成するには、割り当て、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を MDI 親フォームとなる、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</source>
          <target state="translated">このプロパティを使用して、すべての MDI 子フォームを MDI 親フォームを閉じるときにデータベースへのデータの保存などの操作を実行するか、アプリケーションで実行されるアクションに基づいて子フォームのフィールドを更新するをループすることができます。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property to iterate through the list of MDI child forms and add a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to each.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> MDI 子フォームのリストを反復処理し、追加のプロパティ、<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>それぞれに制御します。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Gets or sets the current multiple-document interface (MDI) parent form of this form.</source>
          <target state="translated">対象となるフォームの現在のマルチ ドキュメント インターフェイス (MDI) 親フォームを取得または設定します。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the MDI parent form.</source>
          <target state="translated">MDI 親フォームを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">MDI 子フォームを作成するには、割り当て、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を MDI 親フォームとなる、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子フォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</source>
          <target state="translated">すべての子フォームが必要なグローバル情報を取得するか、すべての子フォームのアクションを実行するメソッドを呼び出すには、MDI 子フォームからこのプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">2 つを使用する必要がある場合<ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>設定、MDI 子フォーム上のコントロール<ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>に<ph id="ph3">`true`</ph>フォーム親の 1 つだけの内容と結合、<ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph>追加の子の内容をマージする<ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>MDI 親フォームのコントロールです。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The following code example demonstrates how to create child forms in an MDI application.</source>
          <target state="translated">次のコード例では、MDI アプリケーションで子フォームを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example code creates a form with unique text to identify the child form.</source>
          <target state="translated">コード例では、子フォームを識別する固有のテキストをフォームを作成します。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to specify that a form is a child form.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>フォームが子フォームであることを指定するプロパティです。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>This example requires that the code in the example is called from a form that has its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property set to <ph id="ph2">`true`</ph> and that the form has a private class level integer variable named <ph id="ph3">`childCount`</ph>.</source>
          <target state="translated">この例では、例のコードがあるフォームから呼び出されることが必要です、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>プロパティに設定<ph id="ph2">`true`</ph>こと、およびフォームがという名前のプライベート クラス レベルの整数変数<ph id="ph3">`childCount`</ph>です。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is not marked as an MDI container.</source>
          <target state="translated">このプロパティに割り当てられた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> が MDI コンテナーとしてマークされていません。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is both a child and an MDI container form.</source>
          <target state="translated">このプロパティに割り当てられた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> が子フォームと MDI コンテナー フォームの両方を表しています。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is located on a different thread.</source>
          <target state="translated">このプロパティに割り当てられた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> が別のスレッドにあります。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>for requesting a form.</source>
          <target state="translated">フォームを要求しています。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Menu">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that is displayed in the form.</source>
          <target state="translated">フォームに表示する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the menu to display in the form.</source>
          <target state="translated">フォームに表示するメニューを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can use this property to switch between complete menu sets at run time.</source>
          <target state="translated">このプロパティを使用して、実行時に完全なメニュー セット間で切り替えることができます。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>For example, you can define one <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to display when a child window is displayed.</source>
          <target state="translated">たとえば、いずれかを定義できます<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>ないアクティブな MDI 子フォームとは、マルチ ドキュメント インターフェイス (MDI) フォームにすると表示される<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>子ウィンドウが表示されるときに表示します。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can also use a different <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> when specific conditions exist in your application that require displaying a different menu set.</source>
          <target state="translated">使用することも、異なる<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>を別のメニュー設定を表示するを必要とするアプリケーションで特定の条件が存在する場合。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and binds it to a form.</source>
          <target state="translated">次のコード例を作成、 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>、2 つ割り当てます<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>され、フォームにバインドします。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">この例では、ある必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>作成されたという<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Occurs when the menu of a form loses focus.</source>
          <target state="translated">フォームのメニューがフォーカスを失ったときに発生します。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</source>
          <target state="translated">このイベントは、実行中のコマンドの結果であると、フォーカスがメニュー失われたメニューのメニュー項目をクリックすると発生します。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>You can use this event to perform tasks such as updating the text of a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control or enabling and disabling buttons on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>.</source>
          <target state="translated">このイベントを使用してテキストの更新などのタスクを実行することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>コントロールまたは有効化のボタンを無効にして、<ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Occurs when the menu of a form receives focus.</source>
          <target state="translated">フォームのメニューがフォーカスを受け取ると発生します。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This event is raised when any menu item in the menu is clicked by the user.</source>
          <target state="translated">このイベントは、メニューのメニュー項目が、ユーザーがクリックされたときに発生します。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</source>
          <target state="translated">このイベントを使用して、有効にして、メニューにアクセスしているときに、ユーザーがアクセスしないようにする、フォーム上のコントロールを無効化などのタスクを実行することができます。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>Gets the merged menu for the form.</source>
          <target state="translated">フォームのマージされたメニューを取得します。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the merged menu of the form.</source>
          <target state="translated">フォームのマージされたメニューを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 子フォームが親フォームのメニューとそのメニューにマージされるときに、このプロパティは使用、主にします。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</source>
          <target state="translated">このプロパティを使用すると、変更またはメニュー構造への追加を MDI アプリケーションでは、現在のメニュー構造を取得します。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>To obtain the nonmerged <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> assigned to a form, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> property.</source>
          <target state="translated">取得、nonmerged<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>をフォームに割り当てられているを使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">フォームのキャプション バーに <bpt id="p1">**</bpt>[最小化]<ept id="p1">**</ept> ボタンを表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示する、<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>; フォームのボタンをクリックします。 それ以外の場合、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>A <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button enables users to minimize a window to an icon.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>アイコンにウィンドウを最小化ボタンができます。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>To display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">表示する、<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>ボタンをクリックして、フォームの値<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティである必要があります<ph id="ph2">`true`</ph>既定値です。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">さらに、設定する必要ありますもフォームの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティを<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>、または<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Minimizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">実行時にフォームを最小限に抑えることが生成されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティは、ウィンドウの現在の状態を反映します。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Minimized`</ph>, the form is minimized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティを<ph id="ph2">`FormWindowState.Minimized`</ph>、どのような設定は、有効とは無関係に、フォームが最小化、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>、 <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>、および<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>Gets or sets the minimum size the form can be resized to.</source>
          <target state="translated">フォームのサイズを変更する場合の最小サイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the minimum size for the form.</source>
          <target state="translated">フォームの最小サイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>This property enables you to limit the size of a form to a specified minimum size.</source>
          <target state="translated">このプロパティでは、指定された最小サイズにフォームのサイズを制限することができます。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>You can use this feature to prevent a user from sizing a window to an undesirable size.</source>
          <target state="translated">ユーザーが不適切なサイズをウィンドウのサイズを変更することを防ぐには、この機能を使用することができます。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</source>
          <target state="translated">このプロパティ設定されている場合、 <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> 0 の高さと幅、フォームに 0 であるオブジェクトには、Windows によって設定された制限を超えるの最小サイズはありません。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> オブジェクト内の高さまたは幅の値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> property has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> プロパティの値が変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Modal">
          <source>Gets a value indicating whether this form is displayed modally.</source>
          <target state="translated">フォームをモーダルとして表示するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is displayed modally; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームをモーダルとして表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</source>
          <target state="translated">フォームはモーダルとして表示される場合 (キーボードまたはマウス クリック) の入力しか発生しません、モーダル フォーム上のオブジェクトにします。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</source>
          <target state="translated">プログラムを非表示にする必要がありますか、閉じる、モーダル形式 (通常はユーザーの操作に対する応答) で別の形式に入力する前にことができます。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>Forms that are displayed modally are typically used as dialog boxes in an application.</source>
          <target state="translated">モーダルとして表示されているフォームは、通常、アプリケーションのダイアログ ボックスとして使用します。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</source>
          <target state="translated">このプロパティを使用すると、メソッドまたはプロパティから取得したフォームがモーダルで表示されるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>To display a form modally use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method.</source>
          <target state="translated">表示するフォームをモーダルとして使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph>フォームがフォームをモーダルとして表示されるかどうかを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form a non-top-level form with a tool window border.</source>
          <target state="translated">ない場合は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>ツール ウィンドウの境界線の最上位レベルではないフォームをフォームにするプロパティが変更されます。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the data.</source>
          <target state="translated">データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>メソッドは .NET Framework version 2.0 で使用されていません。 使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph>メソッド代わりにします。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>メソッドを呼び出さないときに、<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されてアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">検証コードを実行する必要があるこれらのメソッドのいずれかである場合は、する必要がありますを呼び出した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出す前に個別に開いているフォーム、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> .</source>
          <target state="translated">次のコード例をオーバーライドする方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>から派生したクラスのメソッド<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>メソッドは .NET Framework version 2.0 で使用されていません。 使用して、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph>メソッド代わりにします。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>メソッドを呼び出さないときに、<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されてアプリケーションを終了します。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">検証コードを実行する必要があるこれらのメソッドのいずれかである場合は、する必要がありますを呼び出した場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出す前に個別に開いているフォーム、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">次のコード例では<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>場合にテスト内のテキスト、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>が変更されました。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">場合は、ユーザーが要求するファイルに変更を保存するかどうか。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph>派生クラスでは、基本クラスの呼び出しを必ず<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method removes the current form from the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> collection of the associated <ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph>メソッドは、現在のフォームから、削除、<ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>関連付けられているコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form was previously displayed.</source>
          <target state="translated">フォームが以前表示されていたディスプレイ デバイスの DPI 値。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form will be displayed.</source>
          <target state="translated">フォームが表示されるディスプレイ デバイスの DPI 値。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the new size of the form based on the new DPI value.</source>
          <target state="translated">新しい DPI 値に基づくフォームの新しいサイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>Raises the GetDpiScaledSize event.</source>
          <target state="translated">GetDpiScaledSize イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">成功した場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>場合、イベントを発生のみが、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>場合、イベントを発生のみが、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the current form or one of its parents is disposing of resources, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method will return without performing any action.</source>
          <target state="translated">現在のフォームまたはその親の 1 つは、リソースの破棄する場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph>メソッドは任意のアクションを実行せずに返します。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of the form has a value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, then the handles of the form and its child controls will be recreated through calls to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>フォームのプロパティの値を持つ<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>を呼び出すことで、フォームとその子コントロールのハンドルが再作成してから、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event occurs whenever the form is first shown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>イベント フォームが最初に表示されるたびに発生します。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">派生クラスでイベントを処理する場合は、この手法をお勧めします。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">派生クラスで <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> メソッドを呼び出してください。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Gets or sets the opacity level of the form.</source>
          <target state="translated">フォームの不透明度を取得または設定します。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The level of opacity for the form.</source>
          <target state="translated">フォームの不透明度。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The default is 1.00.</source>
          <target state="translated">既定値は 1.00 です。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property enables you to specify a level of transparency for the form and its controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>プロパティでは、フォームとそのコントロールの透明度のレベルを指定することができます。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</source>
          <target state="translated">このプロパティが 100% (1.00) よりも小さい値に設定されている場合、境界線を含むフォーム全体がより透明行われます。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</source>
          <target state="translated">このプロパティを 0% (0.00) の値に設定すると、フォームは完全に見えなくなります。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</source>
          <target state="translated">さまざまなレベルの透過性を提供するか、ビューの内外では、フォーム段階的に停止などの効果を提供するには、このプロパティを使用することができます。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For example, you can phase a form into view by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</source>
          <target state="translated">設定のビューにフォームをフェーズなど、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>プロパティを 0% (0.00) および 100% (1.00) に達するまでに、値を徐々 に増やすことの値にします。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> differs from the transparency provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> によって提供される、透過性とは異なります、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>フォームのみため、およびコントロール完全に透過的な場合に指定された値と同じ色が、<ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このプロパティはサポートされている場合に<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>は<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property depends on the Layered Windows API that was introduced with Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>プロパティがレイヤー Windows API に導入された Windows 2000 に依存します。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">詳細については、アプリケーションを表示"階層化 Windows:: A 新しい方法を使用して透明度と透過性効果で Windows"、プラットフォーム SDK のドキュメントで<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>です。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">次のコード例では、75% の不透明度で表示されるフォームを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">画面の中央に配置する新しいフォームを作成するコード例、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>フォームの不透明度のレベルを変更するプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">コード例でも設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>プロパティより大規模なフォームの既定のサイズよりもフォームのサイズします。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">このコード例は、そのイベント ハンドラーまたは他の方法で別のフォームからこの例で定義されたメソッドが呼び出されることを前提として記述されています。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects that represent all forms that are owned by this form.</source>
          <target state="translated">対象となるフォームによって所有されている全フォームを表す、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> オブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> array that represents the owned forms for this form.</source>
          <target state="translated">対象となるフォームによって所有されているフォームを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This property returns an array that contains all forms that are owned by this form.</source>
          <target state="translated">このプロパティは、このフォームによって所有されているすべてのフォームを含む配列を返します。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To make a form owned by another form, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method.</source>
          <target state="translated">別のフォームによって所有されているフォームをするためには、呼び出し、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The form assigned to the owner form will remain owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">所有者のフォームに割り当てられているフォームがまで所有されているまま、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">別の設定が所有するフォームを作成することも、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>その所有者のフォームへの参照を持つプロパティです。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">たとえば、という名前のフォーム<ph id="ph1">`Form2`</ph>という名前のフォームによって所有されている<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">場合<ph id="ph1">`Form1`</ph>が閉じられるか、最小化、<ph id="ph2">`Form2`</ph>も閉じられるか、非表示にします。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">所有されているフォームは、所有者のフォームの背後に表示もされません。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">所有されているフォームを使用して、検索などの windows 用と所有者フォームを選択すると、所有者のフォームの背後に表示されません必要のある windows の置換を行うことができます。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合は、このプロパティは現在含まれている MDI 子フォームを除く表示されているすべてのフォームを開くを返します。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">MDI 親フォームで開かれている MDI 子フォームを取得するを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property to modify all forms owned by the owner form.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph>所有者フォームによって所有されているすべてのフォームを変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The first method in the example adds forms to the array of owned forms associated with the owned form.</source>
          <target state="translated">最初のメソッドの例では、所有されている形式に関連付けられている、所有されているフォームの配列へのフォームを追加します。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The second method loops through all owned forms and changes the caption.</source>
          <target state="translated">2 番目のメソッドは、すべての所有されているフォームをループし、キャプションを変更します。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This example requires that both methods are called by an event or other method of a form.</source>
          <target state="translated">この例では、両方のメソッドがイベントまたはフォームの他のメソッドによって呼び出されることが必要です。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>Gets or sets the form that owns this form.</source>
          <target state="translated">対象のフォームを所有しているフォームを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form that is the owner of this form.</source>
          <target state="translated">対象のフォームを所有しているフォームを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To make a form owned by another form, assign its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property a reference to the form that will be the owner.</source>
          <target state="translated">別のフォームによって所有されているフォームをするためには、割り当てるその<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>所有者となるフォームへの参照のプロパティです。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">たとえば、という名前のフォーム<ph id="ph1">`Form2`</ph>という名前のフォームによって所有されている<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">場合<ph id="ph1">`Form1`</ph>が閉じられるか、最小化、<ph id="ph2">`Form2`</ph>も閉じられるか、非表示にします。所有されているフォームは、所有者のフォームの背後に表示もされません。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</source>
          <target state="translated">検索などの windows に所有されているフォームを使用し、windows で、所有者のフォームが選択されているときに解消されませんを置換できます。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To determine the forms that are owned by a parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property.</source>
          <target state="translated">親フォームによって所有されているフォームを確認するには<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>A top-level window cannot have an owner.</source>
          <target state="translated">トップレベル ウィンドウには所有側フォームがありません。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the Win32 message to process.</source>
          <target state="translated">処理する Win32 メッセージを表す、参照渡しされた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">処理するキーを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">コマンド キーを処理します。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">キーストロークがコントロールによって処理および使用された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。キーストロークをさらに処理できるようにする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph> method overrides the base</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph>メソッドは、ベース</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of main menu command keys and MDI accelerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> メイン メニュー コマンドのキーと MDI アクセラレータの追加の処理を提供する実装。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">トラップ キーストローク詳細については、「Visual c# を使用してコントロールでのキーボードをトラップする方法」を参照してください。 し、".NET でのキーボードをトラップする方法を制御 Visual Basic .NET を使用して、"Microsoft サポート技術情報で<ph id="ph1">http://support.microsoft.com</ph>です。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">処理対象の文字。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">ダイアログ文字を処理します。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">文字がコントロールによって処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">処理するキーを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog box key.</source>
          <target state="translated">ダイアログ ボックスのキーを処理します。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">キーストロークがコントロールによって処理および使用された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。キーストロークをさらに処理できるようにする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph> method overrides the base <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph>メソッドは、ベース<ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph> ダイアログ ボックス内の戻り値とエスケープのキーの追加の処理を提供する実装。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</source>
          <target state="translated">Alt キーまたはコントロールの修飾子を含むキーストローク処理は行われません。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">処理するウィンドウ メッセージを表す、参照渡しされた <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">キーボード メッセージをプレビューします。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メッセージがコントロールによって処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">処理対象の文字。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">ニーモニック文字を処理します。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">文字がコントロールによってニーモニックとして処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cycle forward through the controls in the ContainerControl; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ContainerControl 内のコントロールを循環して選択する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source>Selects the next available control and makes it the active control.</source>
          <target state="translated">次に使用できるコントロールを選択し、そのコントロールをアクティブにします。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control is selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールが選択された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> representing the form to remove from the list of owned forms for this form.</source>
          <target state="translated">対象となるフォームに所有されているフォームのリストから削除するフォームを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>Removes an owned form from this form.</source>
          <target state="translated">対象となるフォームから所有されているフォームを削除します。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">所有者のフォームに割り当てられたまままで所有されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>In addition to removing the owned form from the list of owned form, this method also sets the owner form to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">所有されているフォームを削除する、所有されているフォームの一覧から、だけでなく、このメソッドも設定所有者フォーム<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Occurs when a form enters resizing mode.</source>
          <target state="translated">フォームがサイズ変更モードになったときに発生します。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>クリックし、罫線またはフォームの右下隅にあるサイズ変更グリップの 1 つをドラッグして通常、フォームのサイズを変更するユーザーの開始時にイベントが発生します。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This action puts the form into a modal sizing loop until the resize operation is completed.</source>
          <target state="translated">この操作では、サイズ変更操作が完了するまでに、フォーム、サイズ変更のモーダル ループになります。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Typically, the following set of events occurs during a resize operation:</source>
          <target state="translated">通常、次のイベントのセットは、サイズ変更操作中に発生します。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event occurs as the form enters resizing mode.</source>
          <target state="translated">1 つ<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>フォームがサイズ変更モードになるようにイベントが発生します。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Zero or more pairs of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> events occur as the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> is modified.</source>
          <target state="translated">0 個以上のペアの<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>フォームのイベントが発生<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>を変更します。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event occurs as the form exits resizing mode.</source>
          <target state="translated">1 つ<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>フォームがサイズ変更モードを終了するようにイベントが発生します。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Just clicking without dragging on a border or resizing grip will generate the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> events without any intermediate <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event pairs.</source>
          <target state="translated">生成せずに罫線をドラッグするか、サイズ変更グリップをクリックするだけ、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>イベントをすべて中間<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>と<ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>イベントのペア。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>ユーザーが移動すると、フォームを通常をクリックし、キャプション バーにドラッグすることにも、一対のイベントが発生します。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>These events are not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">これらのイベントは生成されません、フォームのプログラムで操作することで例を変更して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Occurs when a form exits resizing mode.</source>
          <target state="translated">フォームがサイズ変更モードでなくなったときに発生します。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>イベント、ユーザーは、罫線またはフォームの右下隅にあるサイズ変更グリップの 1 つをドラッグしてから放すことによって通常、フォームのサイズ変更が終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about the resizing operation, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">サイズ変更操作の詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>移動した後、ユーザー、フォーム、通常をクリックし、キャプション バーにドラッグすることにも、イベントが生成されます。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This event is not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">このイベントは生成されません、フォームのプログラムで操作することで例を変更して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Gets the location and size of the form in its normal window state.</source>
          <target state="translated">通常のウィンドウ状態におけるフォームの位置とサイズを取得します。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that contains the location and size of the form in the normal window state.</source>
          <target state="translated">通常のウィンドウ状態におけるフォームの位置とサイズを含む <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Typically, you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property to track the user's window size and position preferences for the form in its normal window state.</source>
          <target state="translated">通常、使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>をユーザーのウィンドウのサイズを追跡して、通常のウィンドウ状態におけるフォームの環境設定を配置するプロパティです。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>You should track both the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> properties when tracking the user's window preferences.</source>
          <target state="translated">両方の値を追跡する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>プロパティ ウィンドウのユーザーの環境設定を追跡するときにします。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property is valid only when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class is not equal to <ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>プロパティが有効な場合にのみ、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>クラスは等しくありません<ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</source>
          <target state="translated">右から左方向の反転配置を有効にするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if right-to-left mirror placement is turned on; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> for standard child control placement.</source>
          <target state="translated">右から左方向の反転配置を有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。子コントロールを通常どおりに配置する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is primarily useful for developing world-ready forms for worldwide audiences.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>プロパティは、世界中のユーザーの国際対応フォームを開発するため、主に役立ちます。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</source>
          <target state="translated">多くの形式では、左から右へ方式でフォームにコントロールが配置されるよう設計されています。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>These forms are compatible with languages that follow this writing direction.</source>
          <target state="translated">これらの形式は、この方向で記述する言語に対応します。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</source>
          <target state="translated">ただし、右から左へ記述する言語のユーザーに同じフォームを表示する場合にお勧め多くの場合、フォーム上のコントロールの順序を逆にします。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If both the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties are <ph id="ph3">`true`</ph>, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</source>
          <target state="translated">場合は、両方の<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>プロパティは、 <ph id="ph3">`true`</ph>、ミラーリングがオンにする、フォームになり、コントロールの配置とテキスト フロー右から左。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Unlike <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> does not inherit.</source>
          <target state="translated">異なり<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>継承しません。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</source>
          <target state="translated">子コントロールを有効にする場合は、ミラー化する各子コントロールに設定する必要があります。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Owner draw is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph>.</source>
          <target state="translated">オーナー描画されていない場合にサポートされている<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>に設定されている<ph id="ph2">`Yes`</ph>です。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</source>
          <target state="translated">オーナー描画のイベントは行われますが、これらのイベントで作成したコードの動作が定義されていません。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, and the painting events are not supported.</source>
          <target state="translated">さらに、 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>、描画イベントはサポートされていません。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties cause the following Win32 API window styles to be set:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>プロパティを設定するのには、次の Win32 API ウィンドウ スタイルが発生します。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`true`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_LAYOUTRTL`</ph> window style, and removes the <ph id="ph6">`WS_EX_RIGHT`</ph> and <ph id="ph7">`WS_EX_RTLREADING`</ph> styles.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>に設定されている<ph id="ph2">`Yes`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>に設定されている<ph id="ph4">`true`</ph>、Windows フォームの設定、<ph id="ph5">`WS_EX_LAYOUTRTL`</ph>ウィンドウ スタイル、および削除、<ph id="ph6">`WS_EX_RIGHT`</ph>と<ph id="ph7">`WS_EX_RTLREADING`</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> but <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`No`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_RIGHT`</ph> and <ph id="ph6">`WS_EX_RTLREADING`</ph> window styles.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>に設定されている<ph id="ph2">`Yes`</ph>が<ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>に設定されている<ph id="ph4">`No`</ph>、Windows フォームの設定、<ph id="ph5">`WS_EX_RIGHT`</ph>と<ph id="ph6">`WS_EX_RTLREADING`</ph>ウィンドウ スタイル。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Changing the value of this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">このプロパティの値の変更を発生させる、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>For more information about globalization issues, see <bpt id="p1">[</bpt>Best Practices for Developing World-Ready Applications<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>.</source>
          <target state="translated">グローバリゼーションに関する問題の詳細については、次を参照してください。<bpt id="p1">[</bpt>国際対応アプリケーションを開発するためのベスト プラクティス<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Occurs after the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> プロパティの値が変更された後に発生します。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> properties are typically used in developing World-Ready applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>プロパティは通常、国際対応アプリケーションの開発に使用します。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control are scaled.</source>
          <target state="translated">コントロールの高さと幅のスケールを設定する際の係数。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales the location, size, padding, and margin of a control.</source>
          <target state="translated">コントロールの位置、サイズ、埋め込み、および余白のスケールを設定します。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form horizontally</source>
          <target state="translated">フォームを水平方向にスケーリングするための倍率。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form vertically</source>
          <target state="translated">フォームを垂直方向にスケーリングするための倍率。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Performs scaling of the form.</source>
          <target state="translated">フォームのスケーリングを実行します。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If set to true that the active control is changed</source>
          <target state="translated">true に設定すると、アクティブ コントロールが変更されます。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If directed is true, then this controls the direction in which focus is moved.</source>
          <target state="translated">directed が true の場合に、フォーカスを移動させる方向を制御します。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If this is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, then the next control is selected; otherwise, the previous control is selected.</source>
          <target state="translated">このパラメーターが <ph id="ph1">&lt;see langword="true" /&gt;</ph> の場合は次のコントロールが選択され、それ以外の場合は前のコントロールが選択されます。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Selects this form, and optionally selects the next or previous control.</source>
          <target state="translated">このフォームを選択し、オプションで次のコントロールまたは前のコントロールを選択します。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>For changing focus.</source>
          <target state="translated">フォーカスを変更します。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph> (関連する列挙体)</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">コントロールの新しい <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> プロパティ値。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">このコントロールの指定した境界を設定する作業を実行します。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested width of the client region.</source>
          <target state="translated">必要なクライアント領域の幅。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested height of the client region.</source>
          <target state="translated">必要なクライアント領域の高さ。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the client size of the form.</source>
          <target state="translated">フォームのクライアント サイズを設定します。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This will adjust the bounds of the form to make the client size the requested size.</source>
          <target state="translated">このメソッドは、クライアント サイズを指定されたサイズにするために、フォームの境界を調節します。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">フォームの位置の x 座標。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">フォームの位置の y 座標。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the form.</source>
          <target state="translated">フォームの幅。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the form.</source>
          <target state="translated">フォームの高さ。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the form in desktop coordinates.</source>
          <target state="translated">フォームの範囲をデスクトップ座標で設定します。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can use this method to set the position and size of your form on the desktop.</source>
          <target state="translated">このメソッドを使用して、デスクトップで、フォームのサイズと位置を設定することができます。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">デスクトップ座標は、フォームの作業領域に基づいている、ためにこのメソッドを使えば、フォームがデスクトップに完全に表示されていることを確認できます。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例では、使用方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To run this example, paste the following code in a form that contains a button named <ph id="ph1">`Button2`</ph>.</source>
          <target state="translated">この例を実行するには、という名前のボタンを含むフォームで、次のコードを貼り付けます<ph id="ph1">`Button2`</ph>です。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">フォームの位置の x 座標。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">フォームの位置の y 座標。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Sets the location of the form in desktop coordinates.</source>
          <target state="translated">フォームの位置をデスクトップ座標で設定します。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>You can use this method to position your form on the desktop.</source>
          <target state="translated">このメソッドは、デスクトップ上のフォームの位置を使用することができます。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">デスクトップ座標は、フォームの作業領域に基づいている、ためにこのメソッドを使えば、フォームがデスクトップに完全に表示されていることを確認できます。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>This method is intended to be used primarily for top-level forms; use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to position multiple-document interface (MDI) child forms.</source>
          <target state="translated">このメソッドは、最上位フォーム; に、主に使用するには使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph>マルチ ドキュメント インターフェイス (MDI) 子フォームを配置する方法です。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">次のコード例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>メンバー。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">例を実行するには、という名前のフォームで、次のコードを貼り付けます<ph id="ph1">`Form1`</ph>というボタンを含む<ph id="ph2">`Button1`</ph>と 2 つ<ph id="ph3">`Label`</ph>と呼ばれるコントロール<ph id="ph4">`Label1`</ph>と<ph id="ph5">`Label2`</ph>です。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コントロールを表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">コントロールを指定した表示状態に設定します。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> and represents the top-level window that will own this form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> を実装し、このフォームを所有するトップレベル ウィンドウを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Shows the form with the specified owner to the user.</source>
          <target state="translated">所有側フォームを指定してフォームをユーザーに表示します。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a non-modal form.</source>
          <target state="translated">このメソッドを使用して、非モーダル フォームを表示することができます。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>When you use this method, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form is set to <ph id="ph2">`owner`</ph>.</source>
          <target state="translated">このメソッドを使用する場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>フォームのプロパティに設定されて<ph id="ph2">`owner`</ph>です。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The non-modal form can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property to get information about the owning form.</source>
          <target state="translated">非モーダル フォームを使用できる、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>プロパティを所有している形式に関する情報を取得します。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Calling this method is identical to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the non-modal and then calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph> method.</source>
          <target state="translated">設定と同じでは、このメソッドを呼び出す、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>非モーダルのプロパティと呼び出すことで、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Showing the form is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">フォームを表示する設定と同じでは、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>メソッドが呼び出されると、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>プロパティの値を返します<ph id="ph3">`true`</ph>まで、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">表示しようとしているフォームが既に表示されています。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">表示しようとしているフォームが無効です。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">表示しようとしているフォームがトップレベル ウィンドウではありません。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph> のトピックを参照してください)。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">フォームをモーダル ダイアログ ボックスとして表示します。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">フォームをモーダル ダイアログ ボックスとして表示します。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">このメソッドを使用すると、アプリケーションでモーダル ダイアログ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">このメソッドが呼び出されると、ダイアログ ボックスが閉じられた後まで次に続くコードは実行されません。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The dialog box can be assigned one of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">値のいずれかのダイアログ ボックスを割り当てることのできる、<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>に割り当てることで列挙、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>フォームのかを設定して、<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>コード内のフォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This value is then returned by this method.</source>
          <target state="translated">この値は、このメソッドによって返されます。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">この戻り値を使用すると、ダイアログ ボックスで発生したアクションを処理するのに方法を決定します。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">たとえば、ダイアログ ボックスが閉じられ、返される場合、<ph id="ph1">`DialogResult.Cancel`</ph>値このメソッドを使用する呼び出しの後のコードを防ぐことが<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>からを実行します。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>設定するプロパティを<ph id="ph2">`DialogResult.Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Unlike non-modal forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">非モーダル フォームとは異なり、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>ユーザー ダイアログ ボックスのフォームを閉じるボタンをクリックするかの値を設定する場合、メソッドは、.NET Framework で呼び出されません、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">代わりにフォームを非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">終了の代わりに、ダイアログ ボックスが非表示として表示されるフォームを呼び出す必要がありますので、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method does not specify a form or control as its owner.</source>
          <target state="translated">このバージョンの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドが指定されていない、フォームやコントロールの所有者。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this version is called, the currently active window is made the owner of the dialog box.</source>
          <target state="translated">このバージョンが呼び出されると、現在アクティブなウィンドウには、ダイアログ ボックスの所有者が行われます。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>If you want to specify a specific owner, use the other version of this method.</source>
          <target state="translated">特定の所有者を指定する場合は、このメソッドの他のバージョンを使用します。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">次のコード例は、モーダル ダイアログ ボックスとしてフォームを表示しの値を読み取るかどうかを決定する前に、ダイアログ ボックスの戻り値を評価、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>  ダイアログ ボックスのフォーム上のコントロールです。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`testDialog`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`testDialog`</ph>が作成されるとそれに含まれる、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph4">`TextBox1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Furthermore, the example requires that code in this example is contained and called from a different <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> in order to display <ph id="ph2">`testDialog`</ph> as a modal dialog box.</source>
          <target state="translated">さらに、例では、する必要がありますこの例のコードが含まれているを異なると呼ばれる<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を表示するために<ph id="ph2">`testDialog`</ph>モーダル ダイアログ ボックスとして。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">例では、バージョンを使用して<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> ダイアログ ボックスの所有者を指定します。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is already visible.</source>
          <target state="translated">表示しようとしているフォームが既に表示されています。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is disabled.</source>
          <target state="translated">表示しようとしているフォームが無効です。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">表示しようとしているフォームがトップレベル ウィンドウではありません。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph> のトピックを参照してください)。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> that represents the top-level window that will own the modal dialog box.</source>
          <target state="translated">モーダル ダイアログ ボックスを所有するトップレベル ウィンドウを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> を実装しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Shows the form as a modal dialog box with the specified owner.</source>
          <target state="translated">指定した所有者を持つモーダル ダイアログ ボックスとしてフォームを表示します。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">このメソッドを使用すると、アプリケーションでモーダル ダイアログ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">このメソッドが呼び出されると、ダイアログ ボックスが閉じられた後まで次に続くコードは実行されません。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The dialog box can be assigned one of the values of <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">値のいずれかのダイアログ ボックスを割り当てることのできる<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>に割り当てることで、<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>フォームのかを設定して、<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>コード内のフォームのプロパティです。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This value is then returned by this method.</source>
          <target state="translated">この値は、このメソッドによって返されます。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">この戻り値を使用すると、ダイアログ ボックスで発生したアクションを処理するのに方法を決定します。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">たとえば、ダイアログ ボックスが閉じられ、返される場合、<ph id="ph1">`DialogResult.Cancel`</ph>値このメソッドを使用する呼び出しの後のコードを防ぐことが<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>からを実行します。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、<bpt id="p1">**</bpt>閉じる<ept id="p1">**</ept>ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>設定するプロパティを<ph id="ph2">`DialogResult.Cancel`</ph>です。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Unlike modeless forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">モードレスのフォームとは異なり、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>ユーザー ダイアログ ボックスのフォームを閉じるボタンをクリックするかの値を設定する場合、メソッドは、.NET Framework で呼び出されません、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">代わりにフォームを非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">終了の代わりに、ダイアログ ボックスが非表示として表示されるフォームを呼び出す必要がありますので、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method allows you to specify a specific form that will own the dialog box that is shown.</source>
          <target state="translated">このバージョンの<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドでは、特定のフォームに表示されるダイアログ ボックスを所有することを指定することができます。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">次のコード例は、モーダル ダイアログ ボックスとしてフォームを表示しの値を読み取るかどうかを決定する前に、ダイアログ ボックスの戻り値を評価、 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>  ダイアログ ボックスのフォーム上のコントロールです。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form2`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">この例では、する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form2`</ph>が作成されるとそれに含まれる、<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>という名前のコントロール<ph id="ph4">`TextBox1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">例では、バージョンを使用して<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> ダイアログ ボックスの所有者を指定します。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">表示しようとしているフォームが既に表示されています。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">表示しようとしているフォームが無効です。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">表示しようとしているフォームがトップレベル ウィンドウではありません。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph> のトピックを参照してください)。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</source>
          <target state="translated">フォームのキャプション バーにアイコンを表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays an icon in the caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームのキャプション バーにアイコンを表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph> is displayed in the caption bar of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph>プロパティが含まれています、<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>を示す値かどうか、フォームの<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph>フォームのキャプション バーに表示されます。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, both the icon and control box will be suppressed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>アイコンとコントロールの両方のボックスが表示されなくなります。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> is <ph id="ph2">`false`</ph> when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph>は<ph id="ph2">`false`</ph>アプリケーションのタスク バー ボタンに一般的なアイコンが表示されますプライマリ フォームが表示されるとします。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>This property has no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">このプロパティには効果がない場合は<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>に設定されている<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>In that case, the form does not display an icon.</source>
          <target state="translated">その場合は、フォームでは、アイコンは表示されません。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</source>
          <target state="translated">フォームを Windows タスクバーに表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form in the Windows taskbar at run time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">実行時にフォームを Windows タスク バーに表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</source>
          <target state="translated">フォームが別のフォーム内で親がある場合、親フォームは、Windows タスク バーに表示されません。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You can use this property to prevent users from selecting your form through the Windows taskbar.</source>
          <target state="translated">このプロパティを使用して、ユーザーが、Windows タスク バーを使用してフォームを選択することを防止することができます。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</source>
          <target state="translated">たとえば、アプリケーション内の検索と置換ツール ウィンドウを表示する可能性がある場合は、そのウィンドウが必要になるアプリケーションのメイン ウィンドウと検索を適切に処理するために表示される検索と置換ツール ウィンドウの両方に、Windows タスク バーから選択されていることを防止します。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You will often wish to use this property when creating a form with the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style.</source>
          <target state="translated">フォームを作成するときに、このプロパティを使用する多くの場合、<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph>スタイル。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style does not alone guarantee that a window will not appear in the taskbar.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph>スタイルは単独で保証されません、タスク バーで、ウィンドウが表示されないことです。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph> property to make a dialog box that is not displayed in the Windows taskbar.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph>ダイアログ ボックスのようにこのプロパティは、Windows タスク バーに表示されません。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Shown">
          <source>Occurs whenever the form is first displayed.</source>
          <target state="translated">フォームが初めて表示されるたびに発生します。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>イベントはフォームが表示される最初の時刻以外の場合は、後で最小限に抑えることを最大化、復元、非表示にする、または無効を示し、再描画する、このイベントは発生します。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about the order of events of a form, see <bpt id="p1">[</bpt>Order of Events in Windows Forms<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>.</source>
          <target state="translated">フォームのイベントの順序の詳細については、次を参照してください。 <bpt id="p1">[</bpt>Windows フォームにおけるイベントの順序<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">次のコード例では、このメンバーの使用方法を示します。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">例では、イベント ハンドラーは発生するときに報告、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>で<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>またはメッセージを複数行に追加する<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>という<ph id="ph2">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">イベント ハンドラーが関連付けられていることを確認してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Gets a value indicating whether the window will be activated when it is shown.</source>
          <target state="translated">ウィンドウが表示された時点でそれをアクティブにするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the window will not be activated when it is shown; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ウィンドウが表示された時点でウィンドウをアクティブにしない場合は <ph id="ph1">&lt;see langword="True" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</source>
          <target state="translated">トップレベル ウィンドウを表示するが、現在のウィンドウから入力フォーカスを取得することにより、ユーザーの作業を中断したくない場合は、このプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</source>
          <target state="translated">これには、情報のポップアップ ウィンドウまたはペイント アプリケーションでツール パレットなどのフローティング ウィンドウを指定できます。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Because this property is read-only, you can only change its value by overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph> in your own form, and programming it to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このプロパティが読み取り専用では、オーバーライドすることで値を変更することができますのみする<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph>フォーム、およびプログラミングを返す<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>If your non-activated window needs to use UI controls, you should consider using the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls, such as <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>.</source>
          <target state="translated">非アクティブ ウィンドウの UI コントロールを使用する場合、使用を検討する必要があります、<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>などのコントロール<ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>These controls are windowless, and will not cause a window to activate when they are selected.</source>
          <target state="translated">これらのコントロールはウィンドウレスとは、選択した場合にアクティブ化 ウィンドウは発生しません。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Size">
          <source>Gets or sets the size of the form.</source>
          <target state="translated">フォームのサイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form.</source>
          <target state="translated">フォームのサイズを表す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually.</source>
          <target state="translated">このプロパティでは、設定ではなく、同時に高さと幅 (ピクセル単位) の形式の両方を設定することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>プロパティ個別にします。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>If you want to set the size and location of a form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph> property to size and locate the form based on desktop coordinates or use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class to set the size and location of the form based on screen coordinates.</source>
          <target state="translated">フォームの位置とサイズを設定する場合は、使用、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph>のサイズし、フォームを検索するプロパティがデスクトップ座標または使用に基づく、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>画面座標に基づいて、フォームの位置とサイズを設定するクラス。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The maximum value of this property is limited by the resolution of the screen on which the form runs.</source>
          <target state="translated">このプロパティの最大値は、フォームが実行されている画面の解像度によって制限されます。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</source>
          <target state="translated">値は、各画面ディメンション (水平 + 12 と垂直 + 12) で 12 ピクセルを超えることはできません。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On Pocket PC devices, you can create a resizable window by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> to <ph id="ph2">`None`</ph> and removing any <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control.</source>
          <target state="translated">Pocket PC デバイスに設定してサイズを変更できるウィンドウを作成することができます<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>に<ph id="ph2">`None`</ph>も削除して<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On SmartPhone devices, you can never resize a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> - it will always fill the entire screen.</source>
          <target state="translated">SmartPhone デバイスにすることはありませんサイズを変更できる、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> -画面全体で常がいっぱいです。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">次のコード例では、75% の不透明度で表示されるフォームを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">コード例で画面の中央に位置している新しいフォームを作成する、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>フォームの不透明度のレベルを変更するプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">また、コード例、設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>プロパティより大きいサイズのフォームの既定のサイズよりもフォーム。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">この例では、イベント ハンドラーまたは他の方法で別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>Gets or sets the style of the size grip to display in the lower-right corner of the form.</source>
          <target state="translated">フォームの右下隅に表示するサイズ変更グリップのスタイルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph> that represents the style of the size grip to display.</source>
          <target state="translated">表示するサイズ変更グリップのスタイルを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph></source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>This property enables you to determine when the sizing grip is displayed on the form.</source>
          <target state="translated">このプロパティでは、フォームのサイズ変更グリップを表示する場合を判断することができます。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">サイズ変更グリップを表示したりの設定に基づいて自動的に表示されること、このプロパティを設定することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The following code example demonstrates how to hide the size grip for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is not resizable.</source>
          <target state="translated">次のコード例は、のサイズ変更グリップを非表示にする方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>ときに、<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>サイズは変更できません。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定された値が有効値の範囲内にありません。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>Gets or sets the starting position of the form at run time.</source>
          <target state="translated">実行時にフォームの開始位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph> that represents the starting position of the form.</source>
          <target state="translated">フォームの開始位置を表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property enables you to set the starting position of the form when it is displayed at run time.</source>
          <target state="translated">このプロパティでは、実行時に表示される場合に、フォームの開始位置を設定することができます。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The form’s position can be specified manually by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property or use the default location specified by Windows.</source>
          <target state="translated">フォームの位置を設定して手動で指定できます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>プロパティまたは Windows によって指定された既定の場所を使用します。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</source>
          <target state="translated">画面の中央またはマルチ ドキュメント インターフェイス (MDI) 子フォームなどのフォームは、親フォームの中央に表示するフォームを配置することもできます。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property should be set before the form is shown.</source>
          <target state="translated">フォームが表示される前に、このプロパティを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can set this property before you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method or in your form's constructor.</source>
          <target state="translated">呼び出す前に、このプロパティを設定することができます、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>メソッドまたはフォームのコンス トラクターでします。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">次のコード例は、の新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>を呼び出すと、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>  ダイアログ ボックスとしてフォームを表示するメソッド。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">例のセット、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">また、例では、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>メソッド、フォームの<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>2 を追加するコレクション<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">この例では、 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定された値が有効値の範囲内にありません。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">コンテナー内のコントロールのタブ オーダーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the index of the control within the set of controls within its container that is included in the tab order.</source>
          <target state="translated">タブ オーダーに含まれるコンテナー内のコントロールのセットにおけるコントロールのインデックスを含む <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Forms are not included in the tab order.</source>
          <target state="translated">フォームは、タブ オーダーにおけるは含まれません。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph> property does nothing.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph>プロパティは、何も行われません。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabIndexChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> プロパティの値が変更された場合に発生します。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">ユーザーが Tab キーを使用することによってこのコントロールにフォーカスを移すことができるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザーが Tab キーを使用してコントロールにフォーカスを移すことができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> プロパティが変更されたときに発生します。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">このコントロールに関連付けられているテキストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Text">
          <source>The text associated with this control.</source>
          <target state="translated">このコントロールに関連付けられたテキスト。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Gets or sets a value indicating whether to display the form as a top-level window.</source>
          <target state="translated">フォームをトップレベル ウィンドウとして表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a top-level window; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームをトップレベル ウィンドウとして表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A top-level form is a window that has no parent form, or whose parent form is the desktop window.</source>
          <target state="translated">トップレベルのフォームは、ウィンドウを親フォームがないか、その親フォームは、デスクトップ ウィンドウです。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Top-level windows are typically used as the main form in an application.</source>
          <target state="translated">最上位のウィンドウは、通常、アプリケーションのメイン フォームとして使用します。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The following code example use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">次のコード例を使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph>フォームがフォームをモーダルとして表示されるかどうかを決定するプロパティです。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form non-top-level form with a tool window border.</source>
          <target state="translated">ない場合は、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>ツール ウィンドウの境界線の最上位レベルではないフォームをフォームにプロパティが変更されます。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A Multiple-document interface (MDI) parent form must be a top-level window.</source>
          <target state="translated">マルチ ドキュメント インターフェイス (MDI) 親フォームはトップレベル ウィンドウにする必要があります。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Gets or sets a value indicating whether the form should be displayed as a topmost form.</source>
          <target state="translated">フォームを最上位フォームとして表示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a topmost form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォームを最上位フォームとして表示する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</source>
          <target state="translated">最上位フォームは、アクティブまたは前景フォームではない場合でも、その他のすべての (非最上位) フォームを重複するフォームです。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</source>
          <target state="translated">常に、最上位フォームは、デスクトップ上の windows の z オーダーの最上位に表示されます。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</source>
          <target state="translated">このプロパティを使用して、検索と置換ツール ウィンドウなど、アプリケーションに常に表示されるフォームを作成することができます。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The following code example demonstrates how to create a topmost form.</source>
          <target state="translated">次のコード例では、最上位フォームを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</source>
          <target state="translated">この例では、2 つの形式は、最大化、最上位フォームとして表示されるを作成します。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The first form, named <ph id="ph1">`bottomForm`</ph>, is displayed maximized, using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property, to better demonstrate the abilities of the topmost form.</source>
          <target state="translated">という名前の最初のフォーム<ph id="ph1">`bottomForm`</ph>、最大化を使用して表示される、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>最上位のフォームの機能を詳しく説明するためのプロパティです。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The second form, named <ph id="ph1">`topMostForm`</ph>, sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph> property to <ph id="ph3">`true`</ph> to display the form as a topmost form.</source>
          <target state="translated">2 番目の形式では、名前付き<ph id="ph1">`topMostForm`</ph>、設定、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph>プロパティを<ph id="ph3">`true`</ph>フォームを最上位フォームとして表示します。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</source>
          <target state="translated">このコードの実行時にフォームをクリックするとフォームの下に表示される最上位のフォームが発生しません。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example requires that the method defined in the example is called from another form.</source>
          <target state="translated">この例では、別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>Gets a string representing the current instance of the form.</source>
          <target state="translated">フォームの現在のインスタンスを表す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>A string consisting of the fully qualified name of the form object's class, with the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property of the form appended to the end.</source>
          <target state="translated">フォーム オブジェクトのクラスの完全修飾名で構成される文字列。フォームの <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> プロパティの値が末尾に追加されます。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>For example, if the form is derived from the class <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept> in the <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> namespace, and the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property is set to <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept>, this method will return <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">たとえば、フォームが <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> 名前空間の <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept> クラスから派生し、<ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> プロパティが <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept> に設定された場合、このメソッドは <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept> を返します。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Gets or sets the color that will represent transparent areas of the form.</source>
          <target state="translated">フォームの透明な領域を表す色を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color to display transparently on the form.</source>
          <target state="translated">フォーム上で透明色として表示される色を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is assigned a <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>, the areas of the form that have the same <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> will be displayed transparently.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>プロパティが割り当てられている、 <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>、同じであるフォームの領域<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>が透過的に表示されます。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</source>
          <target state="translated">マウス、任意の操作、マウスのクリックなど、フォームの透明な領域上で実行されるは、透明な領域の下のウィンドウに転送されます。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</source>
          <target state="translated">たとえば場合は、フォームのクライアント領域は透明には、その領域上にマウス ポインターをクリックするとは、イベント通知を送信のクリックの下にあるウィンドウにします。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>If the color assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is the same as any controls on the form, they also will be displayed transparently.</source>
          <target state="translated">色が割り当てられている場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>プロパティは、フォーム上の任意のコントロールと同じで、それらも表示されます透過的にします。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on a form that has its <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property set to <ph id="ph3">`SystemColors.Control`</ph>, the control will be displayed transparently unless the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is changed to a different color.</source>
          <target state="translated">ある場合など、<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>を持つフォームのコントロールをその<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>プロパティに設定<ph id="ph3">`SystemColors.Control`</ph>、しない限り、コントロールを透過的に表示されます、<ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>のプロパティ、<ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>コントロールは、それぞれ異なる色に変更します。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このプロパティはサポートされている場合に<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>は<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>The following code example creates a window that has a transparent client region regardless of background color of the form.</source>
          <target state="translated">次のコード例では、フォームの背景色に関係なく、透過的なクライアント領域のあるウィンドウを作成します。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This example requires that the example method is defined within a form class.</source>
          <target state="translated">この例では、メソッドの例が、フォーム クラス内で定義されている必要があります。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>Updates which button is the default button.</source>
          <target state="translated">既定のボタンを更新します。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph>メソッドでは、フォームにボタンが、次の優先順位に従って、ENTER を押すとクリック イベントを発生させますを決定します。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> interface, that control is the default button.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>プロパティを実装して、<ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>インターフェイスのコントロールが既定のボタンであります。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property is the default button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>プロパティは既定のボタンです。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Validates all selectable child controls in the form.</source>
          <target state="translated">フォームに含まれる選択可能な子コントロールすべてを検証します。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">すべての子の検証が正常に実行された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> イベント ハンドラーまたは <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> イベント ハンドラーから呼び出された場合、常に <ph id="ph3">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Places restrictions on which controls have their <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event raised.</source>
          <target state="translated">どのコントロールで <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> イベントを発生させるかについて制限を設定します。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">すべての子の検証が正常に実行された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> イベント ハンドラーまたは <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> イベント ハンドラーから呼び出された場合、常に <ph id="ph3">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Gets or sets a value that indicates whether form is minimized, maximized, or normal.</source>
          <target state="translated">フォームが最小化されているか、最大化されているか、通常の状態であるかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph> that represents whether form is minimized, maximized, or normal.</source>
          <target state="translated">フォームが最小化されているか、最大化されているか、通常の状態であるかを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The default is <ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Before a form is displayed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property is always set to <ph id="ph2">`FormWindowState.Normal`</ph>, regardless of its initial setting.</source>
          <target state="translated">フォームが表示される前に、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティは常に設定<ph id="ph2">`FormWindowState.Normal`</ph>初期設定に関係なく、します。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>This is reflected in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property settings.</source>
          <target state="translated">これに反映されて、 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>プロパティの設定。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property.</source>
          <target state="translated">これらのプロパティに加えられた変更に関係なく、フォームが再度表示されるまでに、以前の状態を反映フォームが表示された後に非表示の場合、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> to maximized.</source>
          <target state="translated">次のコード例は、設定する方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>を最大化します。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The code is called from the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event handler after the form has been created.</source>
          <target state="translated">コードを呼び出す、<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>フォームが作成された後のイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定された値が有効値の範囲内にありません。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">処理対象の Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows メッセージを処理します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>