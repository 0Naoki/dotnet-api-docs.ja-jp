<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12c313eae2579db0a857eb37773d36ad29a17ac2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a005-101">アプリケーションのユーザー インターフェイスを構成するウィンドウまたはダイアログ ボックスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a005-101">Represents a window or dialog box that makes up an application's user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-102">A<xref:System.Windows.Forms.Form>アプリケーションで表示される任意のウィンドウの表現です。</span><span class="sxs-lookup"><span data-stu-id="0a005-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="0a005-103"><xref:System.Windows.Forms.Form>クラスは、標準、ツール、ふちなし、フローティング ウィンドウを作成するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="0a005-104">使用することも、 <xref:System.Windows.Forms.Form>  ダイアログ ボックスなどのモーダル ウィンドウを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="0a005-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="0a005-105">フォームのマルチ ドキュメント インターフェイス (MDI) フォームの特殊なは、MDI 子フォームと呼ばれるその他のフォームを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="0a005-106">MDI フォームが設定して作成した、<xref:System.Windows.Forms.Form.IsMdiContainer%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="0a005-107">MDI 子フォームが設定して作成した、<xref:System.Windows.Forms.Form.MdiParent%2A>プロパティを子フォームを含む MDI 親フォームをします。</span><span class="sxs-lookup"><span data-stu-id="0a005-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="0a005-108">使用可能なプロパティを使用して、<xref:System.Windows.Forms.Form>クラスを作成するウィンドウまたはダイアログ ボックスの外観、サイズ、色、およびウィンドウの管理機能を決定できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="0a005-109"><xref:System.Windows.Forms.Control.Text%2A>プロパティでは、タイトル バーのウィンドウのキャプションを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="0a005-110"><xref:System.Windows.Forms.Form.Size%2A>と<xref:System.Windows.Forms.Form.DesktopLocation%2A>プロパティでは、表示しているときに、ウィンドウの位置とサイズを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="0a005-111">使用することができます、<xref:System.Windows.Forms.Control.ForeColor%2A>カラー プロパティのすべてのコントロールの既定前景色を変更するのには、フォームに配置します。</span><span class="sxs-lookup"><span data-stu-id="0a005-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="0a005-112"><xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、および<xref:System.Windows.Forms.Form.MaximizeBox%2A>プロパティを使用してコントロールをフォームできる最小化、最大化、または実行時にサイズを変更するかどうか。</span><span class="sxs-lookup"><span data-stu-id="0a005-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="0a005-113">プロパティに加えて、クラスのメソッドを使用してフォームを操作することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="0a005-114">たとえば、使用することができます、<xref:System.Windows.Forms.Form.ShowDialog%2A>モーダル ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="0a005-115">使用することができます、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>デストップにフォームを配置する方法です。</span><span class="sxs-lookup"><span data-stu-id="0a005-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="0a005-116">イベント、<xref:System.Windows.Forms.Form>クラスを使用すると、フォームに対して実行されるアクションに応答します。</span><span class="sxs-lookup"><span data-stu-id="0a005-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="0a005-117">使用することができます、<xref:System.Windows.Forms.Form.Activated>フォームがアクティブになったときに、フォームのコントロールに表示されるデータの更新などの操作を実行するイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="0a005-118">呼び出されるメソッドを配置することによって、アプリケーションでのクラスの開始点としてのフォームを使用することができます`Main`クラスです。</span><span class="sxs-lookup"><span data-stu-id="0a005-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="0a005-119">`Main`メソッドが作成し、フォームを表示するコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="0a005-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="0a005-120">追加する必要がありますも、`STAThread`属性を`Main`メソッドを実行するためにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="0a005-121">開始フォームが閉じられたときにも、アプリケーションが閉じられます。</span><span class="sxs-lookup"><span data-stu-id="0a005-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="0a005-122">設定した場合、<xref:System.Windows.Forms.Control.Enabled%2A>プロパティを`false`する前に、<xref:System.Windows.Forms.Form>が表示される (設定など、<xref:System.Windows.Forms.Control.Enabled%2A>を false に、[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]デザイナー) では、最小化、最大化、閉じるには、およびシステム ボタンが有効のままです。</span><span class="sxs-lookup"><span data-stu-id="0a005-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="0a005-123">設定した場合<xref:System.Windows.Forms.Control.Enabled%2A>に`false`後、<xref:System.Windows.Forms.Form>が (たとえば、読み込みイベントの発生時)、表示されるボタンは無効になります。</span><span class="sxs-lookup"><span data-stu-id="0a005-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-124">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-124">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-125">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-126">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-127">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-128">
            <see cref="T:System.Windows.Forms.Form" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-129">フォームの既定のサイズは 300 ピクセルの高さと幅 300 ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="0a005-129">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-130">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-130">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-131">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-131">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-132">また使用して、設定、 <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> 、フォームのメソッド<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-132">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-133">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-133">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-134">ユーザーが Enter キーを押したときにクリックされる、フォーム上のボタンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-135">フォームの [確定] ボタンとして使用するボタンを表す <see cref="T:System.Windows.Forms.IButtonControl" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-135">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-136">このプロパティでは、ユーザーが、アプリケーションで、ENTER キーを押したときに発生する既定のアクションを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-136">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="0a005-137">このプロパティに割り当てられているボタンである必要があります、<xref:System.Windows.Forms.IButtonControl>を現在のフォームでは、または現在のフォーム上のコンテナー内に存在します。</span><span class="sxs-lookup"><span data-stu-id="0a005-137">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="0a005-138">このプロパティを使用すると、ユーザーが手動で、マウスで確定 ボタンをクリックする代わりが完了したら、単に ENTER キーを押すようにして単純なフォームをすばやく移動できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-138">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="0a005-139">フォーム上の現在選択されているコントロールが ENTER キーをインターセプトし、それを処理した場合、確定 ボタンをアクティブ化いない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-139">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="0a005-140">たとえば、複数行テキスト ボックス コントロールは、コントロール内の改行文字を挿入することが選択されているときに押す ENTER キーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-140">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-141">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-141">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-142">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-142">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-143">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-143">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-144">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-144">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-145">フォームをアクティブにし、そのフォームにフォーカスを移します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-145">Activates the form and gives it focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-146">フォームをアクティブ化することを前面へ移動か、これは、アクティブなアプリケーションにない場合は、アクティブなアプリケーション ウィンドウのキャプションは点滅します。</span><span class="sxs-lookup"><span data-stu-id="0a005-146">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="0a005-147">フォームは、影響がないように、このメソッドの表示にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-147">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="0a005-148">アプリケーションのアクティブなフォームを確認する、<xref:System.Windows.Forms.Form.ActiveForm%2A>プロパティまたは<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>プロパティ フォームがマルチ ドキュメント インターフェイス (MDI) アプリケーション内にある場合。</span><span class="sxs-lookup"><span data-stu-id="0a005-148">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-149">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Load>と<xref:System.Windows.Forms.Form.Activate%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="0a005-149">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="0a005-150">例を実行するには、という名前のフォームで、次のコードを貼り付けます`Form1`というボタンを含む`Button1`と 2 つ`Label`と呼ばれるコントロール`Label1`と`Label2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-150">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="0a005-151">フォーカスを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-151">for changing focus.</span>
          </span>
          <span data-ttu-id="0a005-152">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-153">フォームがコード内またはユーザーの操作によってアクティブになると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-153">Occurs when the form is activated in code or by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0a005-154">アプリケーションが複数のフォームがアクティブであり、ときに入力フォーカスがあるフォームがアクティブです。</span><span class="sxs-lookup"><span data-stu-id="0a005-154">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="0a005-155">現在表示されていない形式には、アクティブなフォームをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a005-155">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="0a005-156">表示されているフォームをアクティブ化する最も簡単な方法は、これをクリックするか、適切なキーの組み合わせを使用してです。</span><span class="sxs-lookup"><span data-stu-id="0a005-156">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="0a005-157">実行時にコードを使用して、フォームをアクティブに呼び出して、<xref:System.Windows.Forms.Form.Activate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-157">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="0a005-158">このイベントを使用して、フォームがアクティブ化されていないときに、フォームのデータに加えられた変更に基づいて、フォームの内容を更新などのタスクのことができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-158">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="0a005-159">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-159">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-160">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、 <xref:System.Windows.Forms.Form.Closed>、 <xref:System.Windows.Forms.Form.Load>、 <xref:System.Windows.Forms.Form.Activated>、および<xref:System.Windows.Forms.Form.Activate%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="0a005-160">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="0a005-161">例を実行するには、Form1 を含むと呼ばれる形式で、次のコードを貼り付けます、<xref:System.Windows.Forms.Button>と呼ばれる`Button1`と 2 つ<xref:System.Windows.Forms.Label>と呼ばれるコントロール`Label1`と`Label2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-161">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="0a005-162">アクティブにする子フォーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-162">The child form to activate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-163">フォームの MDI 子フォームをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-163">Activates the MDI child of a form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-164">場合、`form`パラメーターは、アクティブな MDI 子フォームでは既に、<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>メソッドだけを返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-164">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="0a005-165">場合`form`は`null`、アクティブな MDI 子フォームに設定されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-165">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="0a005-166">かどうか、`form`パラメーターは`null`もそうでない<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>を生成、<xref:System.Windows.Forms.Form.MdiChildActivate>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-166">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-167">アプリケーションで現在アクティブなフォームを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-167">Gets the currently active form for this application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-168">現在アクティブなフォームを表す <see cref="T:System.Windows.Forms.Form" />。アクティブなフォームがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-168">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-169">このメソッドを使用すると、フォームまたはそのコントロールに対して操作を実行するのに現在アクティブなフォームへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a005-169">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="0a005-170">アプリケーションがマルチ ドキュメント インターフェイス (MDI) アプリケーションの場合を使用して、<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>現在アクティブな MDI 子フォームを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-170">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-171">次のコード例では、アクティブなフォームを取得し、フォーム上のすべてのコントロールを無効にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-171">The following code example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="0a005-172">この例では、<xref:System.Windows.Forms.Control.Controls%2A>フォーム上の各コントロールを反復処理し、コントロールを無効にするフォームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="0a005-172">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="0a005-173">フォームを要求しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-173">for requesting a form.</span>
          </span>
          <span data-ttu-id="0a005-174">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-174">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-175">現在アクティブなマルチ ドキュメント インターフェイス (MDI) 子ウィンドウを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-176">現在アクティブな MDI 子ウィンドウを表す <see cref="T:System.Windows.Forms.Form" /> を返します。現在子ウィンドウが存在しない場合は <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-176">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-177">このメソッドを使用すると、MDI アプリケーションで開いている MDI 子フォームがあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0a005-177">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="0a005-178">このメソッドを使用して、MDI 親フォームとは、アプリケーションに表示されている別の形式から、MDI 子ウィンドウの操作を実行することができますも。</span><span class="sxs-lookup"><span data-stu-id="0a005-178">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="0a005-179">使用することが現在アクティブなフォームが MDI 子フォームでない場合、<xref:System.Windows.Forms.Form.ActiveForm%2A>への参照を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-179">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-180">次のコード例は、アクティブな MDI 子フォームとすべてをループへの参照を取得<xref:System.Windows.Forms.TextBox>、フォーム上のコントロールをリセットする、<xref:System.Windows.Forms.TextBoxBase.Text%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-180">The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="0a005-181">この例では、MDI 親フォームが作成されていると、このメソッドの呼び出しを MDI 親フォームから行われていますが、必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-181">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="0a005-182">対象となるフォームがこれから所有する <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-183">対象となるフォームに、所有される側のフォームを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-183">Adds an owned form to this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-184">所有者のフォームに割り当てられたまままで所有されている、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-184">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="0a005-185">別の設定が所有するフォームを作成することも、<xref:System.Windows.Forms.Form.Owner%2A>その所有者のフォームへの参照を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-185">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="0a005-186">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-186">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="0a005-187">たとえば、という名前のフォーム`Form2`という名前のフォームによって所有されている`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-187">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="0a005-188">場合`Form1`が閉じられるか、最小化、`Form2`も閉じられるか、非表示にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-188">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="0a005-189">所有されているフォームは、所有者のフォームの背後に表示もされません。</span><span class="sxs-lookup"><span data-stu-id="0a005-189">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="0a005-190">所有されているフォームを使用して、検索などの windows 用と所有者フォームを選択すると、所有者のフォームの背後に表示されません必要のある windows の置換を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-190">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-191">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合は、このプロパティは、現在含まれている MDI 子フォームを除く表示されているすべてのフォームを開くを返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-191">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="0a005-192">MDI 親フォームで開かれている MDI 子フォームを取得するを使用して、<xref:System.Windows.Forms.Form.MdiChildren%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-192">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-193">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.Form.AddOwnedForm%2A>形式、所有されている別の形式としてフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-193">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="0a005-194">所有されているフォームが表示されると、その所有者のフォームを最小限に抑えることができ、それに所有されているフォームが最小化します。</span><span class="sxs-lookup"><span data-stu-id="0a005-194">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="0a005-195">この例では、例のコードが別のイベントまたはフォームのメソッドから呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-195">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars">
          <span data-ttu-id="0a005-196">スクロール バーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-196">
              <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-197">現在のコントロールの位置、および現在選択されているコントロールを基準として、コンテナー上のスクロール バーを調整します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-198">フォームの不透明度を調整できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-199">フォームの不透明度を変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-199">
              <see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-200">このプロパティに設定が自動的に`true`場合、`Opacity`を変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-200">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="0a005-201">使用して、フォームの不透明度を設定すると、`Opacity`プロパティ、フォーム上のオブジェクトがレイヤーします。</span><span class="sxs-lookup"><span data-stu-id="0a005-201">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="0a005-202">設定した場合、<xref:System.Windows.Forms.Form.AllowTransparency%2A>プロパティを`false`フォームは、フォームの表示のパフォーマンスを向上する階層化モードに存在しなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a005-202">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-203">
            <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> プロパティの現在の値、および現在のフォントのサイズに応じて、フォームのサイズを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-204">このメソッドの値を使用して、フォームのサイズを決定する、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>プロパティおよび<xref:System.Windows.Forms.Form.Size%2A>によって返される値、<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-204">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-205">フォームで使用されるフォントの高さに合わせてフォームのサイズを調整し、そのコントロールをスケールするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-206">現在フォームに割り当てられているフォントに合わせて、フォームとそのコントロールを自動的にスケールする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-206">
              <see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-207">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a005-208"><xref:System.Windows.Forms.Form.AutoScale%2A>は廃止されており旧バージョンとの互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="0a005-208">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="0a005-209">旧式でない代替手段は、<xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="0a005-209">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0a005-210">自動スケーリングの詳細については、次を参照してください。 [Windows フォームにおける自動スケーリング](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-210">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="0a005-211">このプロパティを使用するには、フォームを許可してフォントの変更に基づいて、そのコントロールを自動的に調整します。</span><span class="sxs-lookup"><span data-stu-id="0a005-211">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="0a005-212">これは、フォントが高まる可能性がありますアプリケーションや Windows で使用するために指定された言語に基づく低下で役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-212">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="0a005-213">フォームが自動的にサイズを使用する小数点以下桁数を取得する、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-213">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="0a005-214">サイズを決定する場合、フォームは自動スケールを使用して、特定のフォントに基づく、<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-214">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-215">フォームを自動スケールするときに使用する基本サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-215">Gets or sets the base size used for autoscaling of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-216">対象となるフォームを自動スケールするときに使用する基本サイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-216">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a005-217">このメンバーは旧バージョンとの互換性のため保持されています。</span><span class="sxs-lookup"><span data-stu-id="0a005-217">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="0a005-218">自動スケーリングの詳細については、次を参照してください。 [Windows フォームにおける自動スケーリング](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-218">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="0a005-219">値、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>プロパティは、フォームのスケール ファクターを計算するフォームの表示時に使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-219">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="0a005-220">自動スケーリングの基本サイズがフォームを基準としての使用、システムのフォント サイズを比較を自動スケールを使用する場合は、フォームを拡張する量を調べる。</span><span class="sxs-lookup"><span data-stu-id="0a005-220">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="0a005-221">サイズを決定する場合、フォームは自動スケールを使用して、特定のフォントに基づく、<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-221">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-222">このプロパティの値は、フォームが最初に作成されるときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-222">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="0a005-223">プロパティを設定すると、変更できません。</span><span class="sxs-lookup"><span data-stu-id="0a005-223">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-224">フォームで自動スクロールを有効にするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-225">フォームで自動スクロールを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-225">
              <see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-226">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-227">このプロパティ設定されている場合`true`、任意のコントロールがフォームのクライアント領域の外側にある場合、フォームのスクロール バーが表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-227">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="0a005-228">さらに、自動スクロールが on の場合は、フォームのクライアント領域を自動的に入力フォーカスを持つコントロールを表示するスクロールします。</span><span class="sxs-lookup"><span data-stu-id="0a005-228">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="0a005-229">このプロパティを使用して、ユーザーが、画面の解像度設定が低解像度に設定されているときにコントロールを表示する機能が失われることを防止することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-229">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-230">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.AutoScroll%2A> outsize フォームのクライアント領域のコントロールの表示を有効にするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-230">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="0a005-231">この例は、新しいフォームを作成し、追加、<xref:System.Windows.Forms.Button>をフォームにコントロールできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-231">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="0a005-232"><xref:System.Windows.Forms.Button>コントロールが配置されている outsize 新しいフォームのクライアント領域。</span><span class="sxs-lookup"><span data-stu-id="0a005-232">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="0a005-233"><xref:System.Windows.Forms.Form.AutoScroll%2A>プロパティが true に設定するユーザー コントロールにスクロールするために、フォーム上のスクロール バーを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-233">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="0a005-234">この例では、イベント ハンドラーまたは他の方法で別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-234">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-235">
            <see cref="P:System.Windows.Forms.Form.AutoSizeMode" /> の設定に従って、フォームのサイズを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-236">フォームのサイズが自動的に変更される場合は <see langword="true" />。手動でサイズを変更する必要がある場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-236">
              <see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-237">使用して<xref:System.Windows.Forms.Form.AutoSize%2A>内容に合わせてサイズを変更するためのフォームを強制的にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-237">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="0a005-238">フォームがの値に関係なく、Visual Studio のフォーム デザイナーで自動的にサイズ変更されない、<xref:System.Windows.Forms.Form.AutoSize%2A>と<xref:System.Windows.Forms.Form.AutoSizeMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-238">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="0a005-239">フォームでは、これら 2 つのプロパティの値に基づいて実行時に自体正しく変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-239">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="0a005-240">一方、カスタム<xref:System.Windows.Forms.UserControl>デザイン時および実行時の両方にそれ自体を自動的に調整します。</span><span class="sxs-lookup"><span data-stu-id="0a005-240">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="0a005-241">使用する場合<xref:System.Windows.Forms.Form.AutoSize%2A>、<xref:System.Windows.Forms.Control.MinimumSize%2A>と<xref:System.Windows.Forms.Control.MaximumSize%2A>の現在の値が、プロパティが守られて、<xref:System.Windows.Forms.Control.Size%2A>プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-241">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="0a005-242">使用して<xref:System.Windows.Forms.Form.AutoSize%2A>と<xref:System.Windows.Forms.Form.AutoSizeMode%2A>レンダリング、<xref:System.Windows.Forms.Form.AutoScroll%2A>プロパティ余分なようにビューからそのコンテナー内のコントロールを非表示にフォームを圧縮する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="0a005-242">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="0a005-243">参照してください、<xref:System.Windows.Forms.AutoSizeMode>については、フォームの動作時に列挙<xref:System.Windows.Forms.Form.AutoSize%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="0a005-243">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-244">次のコード例は、その内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示しています。</span><span class="sxs-lookup"><span data-stu-id="0a005-244">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="0a005-245">実行すると、フォームが表示されます、 <xref:System.Windows.Forms.Label>、 <xref:System.Windows.Forms.TextBox> 、URL を入力するため、<xref:System.Windows.Forms.Button>ユーザーの既定の Web ブラウザー内でその URL を表示するためです。</span><span class="sxs-lookup"><span data-stu-id="0a005-245">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="0a005-246">コード例では、<xref:System.Windows.Forms.FlowLayoutPanel>レイアウトは含まれている 1 つずつを制御します。</span><span class="sxs-lookup"><span data-stu-id="0a005-246">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="0a005-247">また、設定、<xref:System.Windows.Forms.Control.AutoSize%2A>と<xref:System.Windows.Forms.AutoSizeMode>は、フォームの内容に合わせて増減します。</span><span class="sxs-lookup"><span data-stu-id="0a005-247">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-248">
            <see cref="P:System.Windows.Forms.Form.AutoSize" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-249">フォームを自動的にサイズ変更するときに使用するモードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-250">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-250">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span>
          </span>
          <span data-ttu-id="0a005-251">既定値は、<see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-251">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-252">設定、<xref:System.Windows.Forms.Form.AutoSizeMode%2A>を新しい値にプロパティがもう一度配置するためのフォームをによりします。</span><span class="sxs-lookup"><span data-stu-id="0a005-252">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="0a005-253">フォームがの値に関係なく、Visual Studio のフォーム デザイナーで自動的にサイズ変更されない、<xref:System.Windows.Forms.Form.AutoSize%2A>と<xref:System.Windows.Forms.Form.AutoSizeMode%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-253">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="0a005-254">フォームでは、これら 2 つのプロパティの値に基づいて実行時に自体正しく変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-254">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="0a005-255">一方、カスタム<xref:System.Windows.Forms.UserControl>デザイン時および実行時の両方にそれ自体を自動的に調整します。</span><span class="sxs-lookup"><span data-stu-id="0a005-255">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-256">次のコード例は、その内容に合わせて自動的にサイズを変更するコードを使用して作成されたフォームを示しています。</span><span class="sxs-lookup"><span data-stu-id="0a005-256">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="0a005-257">実行すると、フォームを表示、 <xref:System.Windows.Forms.Label>、 <xref:System.Windows.Forms.TextBox> 、URL を入力するため、<xref:System.Windows.Forms.Button>ユーザーの既定の Web ブラウザー内でその URL を表示するためです。</span><span class="sxs-lookup"><span data-stu-id="0a005-257">When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="0a005-258">コード例では、<xref:System.Windows.Forms.FlowLayoutPanel>レイアウトは含まれている 1 つずつを制御します。</span><span class="sxs-lookup"><span data-stu-id="0a005-258">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="0a005-259">また、設定、<xref:System.Windows.Forms.Control.AutoSize%2A>と<xref:System.Windows.Forms.AutoSizeMode>は、フォームの内容に合わせて増減します。</span><span class="sxs-lookup"><span data-stu-id="0a005-259">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-260">値が有効な <see cref="T:System.Windows.Forms.AutoSizeMode" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-261">フォーカスが変更されたときに、このコンテナーのコントロールを自動的に検証するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-262">フォーカスが変更されたときに、格納されたコントロールを暗黙的に検証するかどうかを示す <see cref="T:System.Windows.Forms.AutoValidate" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-262">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span>
          </span>
          <span data-ttu-id="0a005-263">既定値は Inherit です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-263">The default is Inherit.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-264">
            <see cref="P:System.Windows.Forms.Form.AutoValidate" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-265">コントロールの背景色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-265">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-266">コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-266">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="0a005-267">既定値は <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> プロパティの値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-267">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-268">ユーザーが Esc キーを押したときにクリックされるボタン コントロールを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-269">フォームの [キャンセル] ボタンを表す <see cref="T:System.Windows.Forms.IButtonControl" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-269">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-270">フォームの [キャンセル] ボタンは、ユーザーが ESC キーを押すとクリックされるボタン コントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-270">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="0a005-271">このプロパティに割り当てられているボタンである必要があります、<xref:System.Windows.Forms.IButtonControl>を現在のフォームでは、または現在のフォーム上のコンテナー内に存在します。</span><span class="sxs-lookup"><span data-stu-id="0a005-271">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="0a005-272">このプロパティでは、ユーザーが、アプリケーションで、ESC キーを押したときに発生する既定のアクションを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-272">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="0a005-273">このプロパティを使用すると、ユーザーが単に、ESC キーを押して手動で、マウスで、[キャンセル] ボタンをクリックする代わりに変更をコミットせずにウィンドウを閉じるようにして単純なフォームをすばやく移動できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-273">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="0a005-274"><xref:System.Windows.Forms.Form.CancelButton%2A> フォーム上の別のコントロールは、ESC キーを途中受信している場合は機能しません。</span><span class="sxs-lookup"><span data-stu-id="0a005-274"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="0a005-275">ある場合など、 <xref:System.Windows.Forms.ComboBox> ESC がフォーム上で開く、閉じる、<xref:System.Windows.Forms.ComboBox>フォームを閉じる代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-275">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="0a005-276"><xref:System.Windows.Forms.IButtonControl>オブジェクトに割り当てられている<xref:System.Windows.Forms.Form.CancelButton%2A>ESC キーを押すか、または、フォームに表示する必要がありますキーには影響はありません。</span><span class="sxs-lookup"><span data-stu-id="0a005-276">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-277">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-277">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-278">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-278">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-279">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-279">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-280">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-280">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-281">フォームを親フォームの境界内の中央に配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-281">Centers the position of the form within the bounds of the parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-282">呼び出す必要はありません、<xref:System.Windows.Forms.Form.CenterToParent%2A>コードから直接メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-282">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="0a005-283">代わりに、設定、<xref:System.Windows.Forms.Form.StartPosition%2A>プロパティを<xref:System.Windows.Forms.FormStartPosition.CenterParent>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-283">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="0a005-284">フォームまたはダイアログは、最上位は場合<xref:System.Windows.Forms.Form.CenterToParent%2A>画面またはデスクトップに関してフォームを中央揃えです。</span><span class="sxs-lookup"><span data-stu-id="0a005-284">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-285">フォームを現在の画面の中央に配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-285">Centers the form on the current screen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-286">コードから直接はこの呼び出しできません。</span><span class="sxs-lookup"><span data-stu-id="0a005-286">Do not call this directly from your code.</span></span> <span data-ttu-id="0a005-287">代わりに、設定、<xref:System.Windows.Forms.Form.StartPosition%2A>プロパティを<xref:System.Windows.Forms.FormStartPosition.CenterScreen>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-287">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="0a005-288"><xref:System.Windows.Forms.Form.CenterToScreen%2A>メソッドでは、次の優先順位一覧を使用して、、フォームの中央に使用される画面を判定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-288">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="0a005-289"><xref:System.Windows.Forms.Form.Owner%2A>フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-289">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="0a005-290">フォームの HWND 所有者です。</span><span class="sxs-lookup"><span data-stu-id="0a005-290">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="0a005-291">現在、マウスのカーソルのある画面。</span><span class="sxs-lookup"><span data-stu-id="0a005-291">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-292">フォームのクライアント領域のサイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-292">Gets or sets the size of the client area of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-293">フォームのクライアント領域のサイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-293">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-294">フォームのクライアント領域のサイズは、境界線とタイトル バーを除く、フォームのサイズです。</span><span class="sxs-lookup"><span data-stu-id="0a005-294">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="0a005-295">フォームのクライアント領域は、コントロールの配置場所をフォーム領域です。</span><span class="sxs-lookup"><span data-stu-id="0a005-295">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="0a005-296">このプロパティを使用すると、グラフィックス操作を実行するとき、またはフォームにコントロールを配置してサイズ変更に適切なサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a005-296">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="0a005-297">フォーム全体のサイズを取得するを使用して、<xref:System.Windows.Forms.Form.Size%2A>プロパティか個々 のプロパティを使用して<xref:System.Windows.Forms.Control.Height%2A>と<xref:System.Windows.Forms.Control.Width%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-297">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-298">現在、アプリケーションの設定を使用してこのプロパティにバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a005-298">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="0a005-299">アプリケーション設定の詳細については、次を参照してください。[アプリケーション設定の概要](~/docs/framework/winforms/advanced/application-settings-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-299">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-300">次のコード例のイベント ハンドラーの作成、<xref:System.Windows.Forms.Control.Resize>フォームのイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-300">The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="0a005-301">イベント ハンドラーを使用して、<xref:System.Windows.Forms.Form.ClientSize%2A>ために、フォームのプロパティ、<xref:System.Windows.Forms.Button>という名前のコントロール`button1`フォームの全体のクライアント領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="0a005-301">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-302">フォームを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-302">Closes the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-303">フォームが閉じられたときに、オブジェクト内で作成されたすべてのリソースが終了し、フォームが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-303">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="0a005-304">処理することにより、実行時にフォームの終了を防ぐことができます、<xref:System.Windows.Forms.Form.Closing>イベントと設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>イベント ハンドラーにパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-304">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="0a005-305">フォームを閉じていますが、アプリケーションのスタートアップ フォームの場合は、アプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-305">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="0a005-306">2 つの条件条件、フォームが破棄されることと`Close`場合 (1) の一部では、マルチ ドキュメント インターフェイス (MDI) アプリケーションはありません。 および (2) が表示フォームを使用して<xref:System.Windows.Forms.Form.ShowDialog%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-306">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="0a005-307">このような場合を呼び出す必要がある<xref:System.Windows.Forms.Form.Dispose%2A>すべてのガベージ コレクションのフォームのコントロールをマークするには、手動でします。</span><span class="sxs-lookup"><span data-stu-id="0a005-307">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-308">ときに、<xref:System.Windows.Forms.Form.Close%2A>メソッドが、<xref:System.Windows.Forms.Form>モードレス ウィンドウとして表示される、呼び出すことができません、<xref:System.Windows.Forms.Control.Show%2A>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-308">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="0a005-309">フォームを非表示にし、その可視性、使用できるようにする、<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-309">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-310">前のバージョン、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 では、<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>と<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>イベントは、いつ発生するか、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>メソッドが呼び出されてアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-310">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="0a005-311">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>メソッドを呼び出す前に個別に開いているフォーム、<xref:System.Windows.Forms.Application.Exit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-311">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a005-312">ハンドルが作成されている間にフォームが閉じました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-312">The form was closed while a handle was being created.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a005-313">
            <see cref="E:System.Windows.Forms.Form.Activated" /> が <see cref="P:System.Windows.Forms.Form.WindowState" /> に設定されている場合、このメソッドを <see cref="F:System.Windows.Forms.FormWindowState.Maximized" /> イベントから呼び出すことはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-314">フォームが閉じたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-314">Occurs when the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-315"><xref:System.Windows.Forms.Form.Closed>イベントは、.NET Framework version 2.0 廃止されています。 使用して、<xref:System.Windows.Forms.Form.FormClosed>イベント代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-315">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="0a005-316">ユーザーまたはフォームが閉じられた後、このイベントが発生した、<xref:System.Windows.Forms.Form.Close%2A>フォームのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-316">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="0a005-317">フォーム閉じるを防ぐために、処理、<xref:System.Windows.Forms.Form.Closing>イベントとセット、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>にイベント ハンドラーに渡される`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-317">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="0a005-318">フォームによって使用されているリソースを解放するなどのタスクを実行して、フォームに入力した情報を保存する、または、親フォームを更新するには、このイベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-318">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-319"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>と<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>イベントは、いつ発生するか、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>メソッドが呼び出されてアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-319">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="0a005-320">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>メソッドを呼び出す前に個別に開いているフォーム、<xref:System.Windows.Forms.Application.Exit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-320">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="0a005-321">フォームが MDI 親フォームでは場合、 <xref:System.Windows.Forms.Form.Closing> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<xref:System.Windows.Forms.Form.Closing>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-321">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="0a005-322">さらに、<xref:System.Windows.Forms.Form.Closed>すべての MDI 子フォームのイベントが発生する前に、 <xref:System.Windows.Forms.Form.Closed> MDI 親フォームのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-322">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="0a005-323">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-323">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-324">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、 <xref:System.Windows.Forms.Form.Closed>、 <xref:System.Windows.Forms.Form.Load>、 <xref:System.Windows.Forms.Form.Activated>、および<xref:System.Windows.Forms.Form.Activate%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="0a005-324">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="0a005-325">例を実行するには、という名前のフォームで、次のコードを貼り付けます`Form1`を含む、<xref:System.Windows.Forms.Button>と呼ばれる`Button1`と 2 つ<xref:System.Windows.Forms.Label>と呼ばれるコントロール`Label1`と`Label2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-325">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-326">フォームが閉じている間に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-326">Occurs when the form is closing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-327"><xref:System.Windows.Forms.Form.Closing>イベントは、.NET Framework version 2.0 廃止されています。 使用して、<xref:System.Windows.Forms.Form.FormClosing>イベント代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-327">The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="0a005-328"><xref:System.Windows.Forms.Form.Closing>フォームが閉じられて、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-328">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="0a005-329">フォームが閉じられたときに、オブジェクト内で作成されたすべてのリソースを解放し、フォームが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-329">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="0a005-330">このイベントをキャンセルした場合、フォームは開いたままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a005-330">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="0a005-331">フォームのクロージャをキャンセルする、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>にイベント ハンドラーに渡される`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-331">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="0a005-332">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、**閉じる**ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<xref:System.Windows.Forms.Form.DialogResult%2A>設定するプロパティを`DialogResult.Cancel`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-332">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="0a005-333">割り当てられている値をオーバーライドすることができます、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティ、ユーザーがクリックしたときに、**閉じる** ボタンを設定して、<xref:System.Windows.Forms.Form.DialogResult%2A>のイベント ハンドラーのプロパティ、<xref:System.Windows.Forms.Form.Closing>フォームのイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-333">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-334">ときに、<xref:System.Windows.Forms.Form.Close%2A>メソッドが、<xref:System.Windows.Forms.Form>モードレス ウィンドウとして表示される、呼び出すことができません、<xref:System.Windows.Forms.Control.Show%2A>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-334">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="0a005-335">フォームを非表示にし、その可視性、使用できるようにする、<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-335">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-336"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>と<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>イベントは、いつ発生するか、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>メソッドが呼び出されてアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-336">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="0a005-337">検証コードを実行する必要があるこれらのイベントのいずれかである場合は、する必要がありますを呼び出した場合、<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>メソッドを呼び出す前に個別に開いているフォーム、<xref:System.Windows.Forms.Application.Exit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-337">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="0a005-338">フォームが MDI 親フォームでは場合、 <xref:System.Windows.Forms.Form.Closing> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<xref:System.Windows.Forms.Form.Closing>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-338">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="0a005-339">さらに、<xref:System.Windows.Forms.Form.Closed>すべての MDI 子フォームのイベントが発生する前に、 <xref:System.Windows.Forms.Form.Closed> MDI 親フォームのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-339">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="0a005-340">キャンセル、 <xref:System.Windows.Forms.Form.Closing> MDI 子フォームのイベントができない、 <xref:System.Windows.Forms.Form.Closing> MDI 親フォームから発生するイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-340">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="0a005-341">設定、イベントをキャンセルする`true`、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>親フォームにパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-341">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="0a005-342">すべての MDI 親と子フォームを閉じるには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`false`で MDI 親フォームです。</span><span class="sxs-lookup"><span data-stu-id="0a005-342">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="0a005-343">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-343">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-344">次のコード例では<xref:System.Windows.Forms.Form.Closing>場合にテスト内のテキスト、<xref:System.Windows.Forms.TextBox>が変更されました。</span><span class="sxs-lookup"><span data-stu-id="0a005-344">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="0a005-345">場合は、ユーザーが要求するファイルに変更を保存するかどうか。</span><span class="sxs-lookup"><span data-stu-id="0a005-345">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-346">フォームのキャプション バーにコントロール ボックスを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-347">
            <see langword="true" /> フォームの右上隅にコントロール ボックスを表示する場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-347">
              <see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-348">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-348">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-349">場合、<xref:System.Windows.Forms.Form.ControlBox%2A>プロパティに設定されている`true`、キャプション バーの右上隅にコントロール ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-349">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="0a005-350">コントロールのボックスに含めることができますを最小化、最大化、および閉じるボタンをクリックするボタンをさらにヘルプします。</span><span class="sxs-lookup"><span data-stu-id="0a005-350">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="0a005-351">`ControlBox`影響がないように、プロパティ、フォームを設定することも必要があります。<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティを<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-351">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a005-352">設定した場合<xref:System.Windows.Forms.Form.ControlBox%2A>に`false`も設定し、<xref:System.Windows.Forms.Form.Location%2A>プロパティ、<xref:System.Windows.Forms.Form.Size%2A>フォームのプロパティは、フォームの非クライアント領域を非表示にされたことを反映するように更新されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-352">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="0a005-353">この問題を解決するには、変更するコードを配置、<xref:System.Windows.Forms.Form.Location%2A>プロパティに、<xref:System.Windows.Forms.Control.HandleCreated>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="0a005-353">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-354">設定すると`false`、<xref:System.Windows.Forms.Form.ControlBox%2A>プロパティは作成時点の最大化されて表示されるマルチ ドキュメント インターフェイス (MDI) 子フォーム上の影響を与えません。</span><span class="sxs-lookup"><span data-stu-id="0a005-354">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-355">次のコード例では、 <xref:System.Windows.Forms.Form.ControlBox%2A>、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A>罫線またはキャプション ボックスがないフォームを作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-355">The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="0a005-356">この例で作成されたフォームは、アプリケーションのスプラッシュ スクリーンを作成するために可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-356">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="0a005-357">例には、例のメソッドがフォームのクラスで定義されているし、フォームが初期化されているときに呼び出されますことが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-357">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-358">コントロールのコントロール コレクションの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-358">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-359">コントロールに割り当てられた <see cref="T:System.Windows.Forms.Control.ControlCollection" /> の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-360">フォームのハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-360">Creates the handle for the form.</span>
          </span>
          <span data-ttu-id="0a005-361">派生クラスでこの機能をオーバーライドする場合は、基本の実装を呼び出す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-361">If a derived class overrides this function, it must call the base implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a005-362">この <see cref="T:System.Windows.Forms.Form" /> のハンドルが既に作成されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-363">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-363">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-364">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-364">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-365">フォームがフォーカスを失い、アクティブでなくなると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-365">Occurs when the form loses focus and is no longer the active form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-366">このイベントを使用して、アプリケーションの別のウィンドウを非アクティブ化された形式のデータで更新などのタスクを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-366">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="0a005-367">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-367">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-368">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-369">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.Deactivate>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="0a005-370">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-371">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-372">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-373">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.Deactivate>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-374">コントロールがサポートしている既定の IME (Input Method Editor) モードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-375">
            <see cref="T:System.Windows.Forms.ImeMode" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-375">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-376">入力方式エディター (IME) は、標準キーボードを使用して日本語の漢字などの記号と複雑な文字を入力できるプログラムです。</span><span class="sxs-lookup"><span data-stu-id="0a005-376">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="0a005-377">実装されている、<xref:System.Windows.Forms.Form>クラス、このプロパティは常に返します、<xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="0a005-377">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="0a005-378">このプロパティの値が割り当てられた、<xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-378">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-379">コントロールの既定のサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-379">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-380">コントロールの既定の <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-380">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="0a005-381">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-382">指定したメッセージを既定のウィンドウ プロシージャに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-382">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-383">Windows デスクトップ上のフォームのサイズと位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-384">デスクトップ座標を使用して、Windows デスクトップ上のフォームの範囲を表す <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-384">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-385">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="0a005-385">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="0a005-386">デスクトップの座標系では、ピクセル ベースです。</span><span class="sxs-lookup"><span data-stu-id="0a005-386">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="0a005-387">アプリケーションが複数のモニター システムで実行されている場合、フォームの座標は、結合されたデスクトップの座標です。</span><span class="sxs-lookup"><span data-stu-id="0a005-387">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="0a005-388">このプロパティは、サイズし、Windows デスクトップ上の他のフォームまたはアプリケーションに合わせてフォームの位置を使用できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-388">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-389">次のコード例は、フォームがデスクトップの最上位からデスクトップおよび 50 ピクセルの左端から 50 ピクセルの位置指定できるように、フォームの位置とサイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-389">The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="0a005-390">この例では、フォーム クラス内でメソッドが定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-390">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-391">Windows デスクトップ上のフォームの位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-391">Gets or sets the location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-392">デスクトップ上のフォームの位置を表す <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-392">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-393">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="0a005-393">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="0a005-394">デスクトップの座標系とは、ベース ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="0a005-394">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="0a005-395">アプリケーションがマルチ モニター システムで実行されている場合、フォームの座標は、結合されたデスクトップの座標です。</span><span class="sxs-lookup"><span data-stu-id="0a005-395">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="0a005-396">このプロパティを使用して、Windows デスクトップ上の他のフォームおよびアプリケーションと比較して、フォームに配置することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-396">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="0a005-397">呼び出す場合は、<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>メソッドを呼び出す前に、<xref:System.Windows.Forms.Form.Show%2A>メソッド、フォームには、オペレーティング システムによって決定される、既定の場所に配置されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-397">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="0a005-398">ウィンドウの配置の詳細については、MSDN ライブラリで「ウィンドウの機能」ドキュメントの「ウィンドウのサイズと位置」セクションを参照してhttp://msdn.microsoft.com/libraryです。</span><span class="sxs-lookup"><span data-stu-id="0a005-398">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="0a005-399">呼び出す場合<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>呼び出した後<xref:System.Windows.Forms.Form.Show%2A>フォームには、指定した場所に配置されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-399">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-400">次のコード例は、フォームがデスクトップの最上位からデスクトップ コンピューターと 100 ピクセルの左端から 100 ピクセルの位置指定できるように、フォームの位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-400">The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="0a005-401">この例では、メソッドをフォーム クラス内で定義されていることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-401">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-402">フォームのダイアログ結果を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-402">Gets or sets the dialog result for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-403">フォームがダイアログ ボックスとして使用された場合の結果を表す <see cref="T:System.Windows.Forms.DialogResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-403">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-404">フォームのダイアログの結果は、モーダル ダイアログ ボックスとして表示されるときに、フォームから返される値です。</span><span class="sxs-lookup"><span data-stu-id="0a005-404">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="0a005-405">フォームがダイアログ ボックスとして表示されている場合からの値では、このプロパティを設定、<xref:System.Windows.Forms.DialogResult>列挙体は、フォームのダイアログ ボックスの結果の値を設定、モーダル ダイアログ ボックスを非表示にし、呼び出し元のフォームにコントロールを返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-405">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="0a005-406">このプロパティは通常設定、<xref:System.Windows.Forms.Button.DialogResult%2A>のプロパティ、<xref:System.Windows.Forms.Button>フォーム上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-406">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="0a005-407">ユーザーがクリックしたとき、<xref:System.Windows.Forms.Button>に割り当てられた値を制御する、<xref:System.Windows.Forms.Button.DialogResult%2A>のプロパティ、<xref:System.Windows.Forms.Button>に割り当てられている、<xref:System.Windows.Forms.Form.DialogResult%2A>フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-407">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="0a005-408">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、**閉じる**ボタン (フォームの右上隅の X のボタン) がフォームを非表示にすると、および<xref:System.Windows.Forms.Form.DialogResult%2A>設定するプロパティを`DialogResult.Cancel`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-408">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="0a005-409"><xref:System.Windows.Forms.Form.Close%2A>メソッドは、ユーザーがクリックしたときに自動的に呼び出されません、**閉じる** ダイアログ ボックスのボタンの値を設定または、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-409">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="0a005-410">代わりに、フォームは、非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-410">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="0a005-411">この動作のために呼び出す必要があります、<xref:System.Windows.Forms.Control.Dispose%2A>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-411">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="0a005-412">このプロパティを使用して、ダイアログ ボックスで実行されるアクションを正しく処理するために、ダイアログ ボックスを終了する方法を確認することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-412">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-413">割り当てられている値をオーバーライドすることができます、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティ、ユーザーがクリックしたときに、**閉じる** ボタンを設定して、<xref:System.Windows.Forms.Form.DialogResult%2A>のイベント ハンドラーのプロパティ、<xref:System.Windows.Forms.Form.Closing>フォームのイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-413">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-414">場合、<xref:System.Windows.Forms.Form>モードレス ウィンドウは、によって返される値として表示される、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティには、フォームが閉じられたときに、フォームのリソースは自動的に解放されるため、フォームに割り当てられている値を返さない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-414">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-415">次のコード例はダイアログ ボックスとしてフォームを表示し、参照することによって、フォームの [ok] または [キャンセル] ボタンがクリックしてされたかどうかを示すメッセージ ボックスを表示、<xref:System.Windows.Forms.Form.DialogResult%2A>フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-415">The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-416">指定された値が有効値の範囲内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-416">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0a005-417">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-417">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-418">
            <see cref="T:System.Windows.Forms.Form" /> で使用されていたリソース (メモリを除く) を解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-419">このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-419">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0a005-420">`Dispose` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-420">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0a005-421"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-421"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0a005-422">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Windows.Forms.Form> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="0a005-422">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="0a005-423">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a005-423">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="0a005-424"><xref:System.Windows.Forms.Form.Dispose%2A> 使用して、フォームが表示される場合に自動的に呼び出される、<xref:System.Windows.Forms.Form.Show%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-424"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="0a005-425">場合など、別の方法<xref:System.Windows.Forms.Form.ShowDialog%2A>が使用またはフォームがまったく表示されませんが、呼び出す必要があります<xref:System.Windows.Forms.Form.Dispose%2A>アプリケーション内で自分でします。</span><span class="sxs-lookup"><span data-stu-id="0a005-425">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-426">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-426">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0a005-427">
              <see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-427">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0a005-428">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-428">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0a005-429">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-429">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-430">フォームが現在表示されているディスプレイ デバイスの DPI 設定が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-430">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-431">フォームの境界線スタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-431">Gets or sets the border style of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-432">表示するフォームの境界線スタイルを表す <see cref="T:System.Windows.Forms.FormBorderStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-432">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span>
          </span>
          <span data-ttu-id="0a005-433">既定値は、<see langword="FormBorderStyle.Sizable" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-433">The default is <see langword="FormBorderStyle.Sizable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-434">フォームの境界線のスタイルは、フォームの外側のエッジの表示方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-434">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="0a005-435">フォームの境界線の表示を変更するだけでなく特定の罫線のスタイルを防ぐフォーム サイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-435">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="0a005-436">たとえば、`FormBorderStyle.FixedDialog`罫線のスタイル ダイアログ ボックスのフォームの境界線を変更し、フォームがサイズ変更されることを防止します。</span><span class="sxs-lookup"><span data-stu-id="0a005-436">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="0a005-437">罫線のスタイルは、サイズまたはフォームのキャプション バーのセクションの可用性にも影響します。</span><span class="sxs-lookup"><span data-stu-id="0a005-437">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-438"><xref:System.Windows.Forms.FormBorderStyle.Sizable>スタイルは特定の最小値、下のウィンドウのサイズを変更する設定した場合でも<xref:System.Windows.Forms.Form.ControlBox%2A>に`false`に長さ 0 の文字列が割り当てられていると<xref:System.Windows.Forms.Form.Text%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-438">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="0a005-439">使用してこの対処を検討してください、<xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow>代わりにスタイルを設定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-439">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-440">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-440">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-441">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-441">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-442">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-442">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-443">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-443">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-444">指定された値が有効値の範囲内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-444">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-445">フォームが閉じた後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-445">Occurs after the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-446"><xref:System.Windows.Forms.Form.FormClosed>ユーザーまたはフォームが閉じられた後にイベントが発生した、<xref:System.Windows.Forms.Form.Close%2A>メソッドまたは<xref:System.Windows.Forms.Application.Exit%2A>のメソッド、<xref:System.Windows.Forms.Application>クラスです。</span><span class="sxs-lookup"><span data-stu-id="0a005-446">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="0a005-447">フォーム閉じるを防ぐために、処理、<xref:System.Windows.Forms.Form.FormClosing>イベントとセット、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.ComponentModel.CancelEventArgs>にイベント ハンドラーに渡される`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-447">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="0a005-448">フォームによって使用されているリソースを解放するなどのタスクを実行して、フォームに入力した情報を保存する、または、親フォームを更新するには、このイベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-448">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="0a005-449">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合、 <xref:System.Windows.Forms.Form.FormClosing> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<xref:System.Windows.Forms.Form.FormClosing>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-449">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="0a005-450">同様に、<xref:System.Windows.Forms.Form.FormClosed>すべての MDI 子フォームのイベントが発生する前に、 <xref:System.Windows.Forms.Form.FormClosed> MDI 親フォームのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-450">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="0a005-451">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-451">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-452">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-452">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-453">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.FormClosed>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-453">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="0a005-454">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-454">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-455">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-455">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-456">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-456">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-457">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.FormClosed>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-457">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-458">フォームが閉じる前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-458">Occurs before the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-459"><xref:System.Windows.Forms.Form.FormClosing>フォームが閉じられて、イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-459">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="0a005-460">フォームが閉じられたときに破棄されると、フォームに関連付けられているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="0a005-460">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="0a005-461">このイベントをキャンセルした場合、フォームは開いたままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a005-461">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="0a005-462">フォームのクロージャをキャンセルする、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Windows.Forms.FormClosingEventArgs>にイベント ハンドラーに渡される`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-462">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="0a005-463">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、**閉じる**ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<xref:System.Windows.Forms.Form.DialogResult%2A>設定するプロパティを`DialogResult.Cancel`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-463">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="0a005-464">割り当てられている値をオーバーライドすることができます、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティ、ユーザーがクリックしたときに、**閉じる** ボタンを設定して、<xref:System.Windows.Forms.Form.DialogResult%2A>のイベント ハンドラーのプロパティ、<xref:System.Windows.Forms.Form.FormClosing>フォームのイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-464">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-465">ときに、<xref:System.Windows.Forms.Form.Close%2A>メソッドが、<xref:System.Windows.Forms.Form>モードレス ウィンドウとして表示される、呼び出すことができません、<xref:System.Windows.Forms.Control.Show%2A>フォームのリソースは既にリリースされているため、フォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-465">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="0a005-466">フォームを非表示にし、その可視性、使用できるようにする、<xref:System.Windows.Forms.Control.Hide%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-466">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="0a005-467">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合、 <xref:System.Windows.Forms.Form.FormClosing> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<xref:System.Windows.Forms.Form.FormClosing>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-467">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="0a005-468">同様に、<xref:System.Windows.Forms.Form.FormClosed>すべての MDI 子フォームのイベントが発生する前に、 <xref:System.Windows.Forms.Form.FormClosed> MDI 親フォームのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-468">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="0a005-469">キャンセル、 <xref:System.Windows.Forms.Form.FormClosing> MDI 子フォームのイベントができない、 <xref:System.Windows.Forms.Form.FormClosing> MDI 親フォームから発生するイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-469">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="0a005-470">設定、イベントをキャンセルする`true`、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Windows.Forms.FormClosingEventArgs>親フォームにパラメーターとして渡されるクラスです。</span><span class="sxs-lookup"><span data-stu-id="0a005-470">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="0a005-471">すべての MDI 親と子フォームを閉じるには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`false`で MDI 親フォームです。</span><span class="sxs-lookup"><span data-stu-id="0a005-471">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="0a005-472">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-472">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-473">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-473">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-474">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.FormClosing>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-474">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="0a005-475">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-475">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-476">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-476">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-477">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-477">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-478">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.FormClosing>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-478">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">
          <span data-ttu-id="0a005-479">フォームを自動スケールした場合の基本サイズを決めるフォントを表す <see cref="T:System.Drawing.Font" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-479">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-480">指定したフォントに基づいてフォームを自動スケールした場合のサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-480">Gets the size when autoscaling the form based on a specified font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-481">フォームを自動スケールした後のサイズを表す <see cref="T:System.Drawing.SizeF" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-481">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0a005-482"><xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>メソッドは廃止 in.NET Framework バージョン 2.0。</span><span class="sxs-lookup"><span data-stu-id="0a005-482">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0.</span></span> <span data-ttu-id="0a005-483">このメンバーは旧バージョンとの互換性のため保持されています。</span><span class="sxs-lookup"><span data-stu-id="0a005-483">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="0a005-484">自動スケーリングの詳細については、次を参照してください。 [Windows フォームにおける自動スケーリング](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-484">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="0a005-485">このメソッドを使用すると、フォームをフォームにフォントを適用する前に、特定のフォントの自動スケールは、サイズを決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-485">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="0a005-486">サイズを決定する場合、フォームがスケールをフォームに現在割り当てられているフォントに基づくを使用して、<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-486">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="0a005-487">ディスプレイの範囲の取得条件となる領域を指定する <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-487">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="0a005-488">コントロールの境界の高さおよび幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-488">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="0a005-489">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> の値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-489">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-490">コントロールのスケールが設定される境界を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-490">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-491">コントロールのスケールが設定される境界を表す <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-491">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-492">フォームのキャプション ボックスに [ヘルプ] ボタンを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-492">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-493">フォームのキャプション バーにヘルプ ボタンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-493">
              <see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-494">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-494">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-495">このプロパティを設定すると`true`、キャプション バーの左側に疑問符 () の付いた小さなボタンが表示されます、**閉じる**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="0a005-495">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="0a005-496">このボタンを使用すると、アプリケーションのヘルプを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-496">You can use this button to display help for your application.</span></span> <span data-ttu-id="0a005-497">イベント ハンドラーを作成することができます、<xref:System.Windows.Forms.Control.HelpRequested>フォームの [ヘルプ] ボタンがクリックされたときに、ユーザーにヘルプ情報を表示するイベントです。</span><span class="sxs-lookup"><span data-stu-id="0a005-497">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="0a005-498">ヘルプ ボタンをフォームの値を表示する<xref:System.Windows.Forms.Form.ControlBox>プロパティである必要があります`true`既定値です。</span><span class="sxs-lookup"><span data-stu-id="0a005-498">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="0a005-499"><xref:System.Windows.Forms.Form.ControlBox>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-499">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="0a005-500">さらに、設定する必要ありますもフォームの<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティを<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-500">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="0a005-501">値、<xref:System.Windows.Forms.Form.HelpButton%2A>プロパティは、**最大化**または**最小化**ボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-501">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-502">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-502">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-503">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-503">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-504">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-504">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-505">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-505">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-506">**[ヘルプ]** ボタンがクリックされると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-506">Occurs when the **Help** button is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-507"><xref:System.Windows.Forms.Form.HelpButtonClicked>イベントが発生したときに、**ヘルプ**フォームのキャプション バーのボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="0a005-507">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="0a005-508">**ヘルプ**ボタンが表示されるときに、<xref:System.Windows.Forms.Form.HelpButton%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-508">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="0a005-509"><xref:System.Windows.Forms.Form.HelpButtonClicked> キャンセルできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-509"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="0a005-510">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-510">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-511">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-511">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-512">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.HelpButtonClicked>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-512">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="0a005-513">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-513">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-514">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-514">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-515">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-515">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-516">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.HelpButtonClicked>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-516">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-517">フォームのアイコンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-517">Gets or sets the icon for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-518">フォームのアイコンを表す <see cref="T:System.Drawing.Icon" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-518">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-519">フォームのアイコンは、フォームのコントロールのボックスに表示されるアイコンと同様に、タスク バーで、フォームを表す画像を指定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-519">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="0a005-520">このプロパティは効果がなく場合<xref:System.Windows.Forms.Form.FormBorderStyle%2A>に設定されている<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-520">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="0a005-521">その場合は、フォームには、アイコンは表示されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-521">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-522">フォームの入力言語が変更された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-522">Occurs after the input language of the form has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-523">このイベントを使用して、フォームの外観とフォームの入力言語に加えられた変更に基づいてテキストを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-523">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="0a005-524">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-524">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-525">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-525">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-526">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.InputLanguageChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-526">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="0a005-527">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-527">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-528">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-528">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-529">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-529">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-530">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.InputLanguageChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-530">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-531">ユーザーがフォームの入力言語を変更しようとすると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-531">Occurs when the user attempts to change the input language for the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-532">このイベントは、フォームの入力言語の変更が行われる前に発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-532">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="0a005-533">言語の変更をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Windows.Forms.InputLanguageChangingEventArgs>にイベント ハンドラーに渡される`false`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-533">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="0a005-534">イベントがキャンセルされた場合、入力言語は変更されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-534">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="0a005-535">このイベントを使用して、要求された入力言語の変更がアプリケーションに適切かどうかを決定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-535">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="0a005-536">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-536">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-537">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-537">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-538">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.InputLanguageChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-538">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="0a005-539">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-539">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-540">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-540">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-541">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-541">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-542">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.InputLanguageChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-542">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-543">フォームがマルチ ドキュメント インターフェイス (MDI) 子フォームかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-543">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-544">フォームが MDI 子フォームである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-544">
              <see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-545">実行時に、MDI 子フォームが MDI 親フォームのクライアント領域の内側に表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-545">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="0a005-546">MDI 子フォームの最大化、最小化、および MDI 親フォーム内で移動します。</span><span class="sxs-lookup"><span data-stu-id="0a005-546">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="0a005-547">MDI 子フォームを作成するには、割り当て、<xref:System.Windows.Forms.Form>を MDI 親フォームとなる、<xref:System.Windows.Forms.Form.MdiParent%2A>子フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-547">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="0a005-548">使用することができます、<xref:System.Windows.Forms.Form.IsMdiContainer%2A>親フォームのプロパティをフォームが MDI であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0a005-548">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="0a005-549">使用することができます、<xref:System.Windows.Forms.Form.IsMdiChild%2A>メソッドまたはプロパティによって返されるフォームが MDI 子フォームまたはダイアログ ボックスなど、アプリケーションでの標準形式かどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-549">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-550">すべての MDI 子フォームは、かなりの数の罫線、コントロール メニュー ボックスで、最小化があると**最大化**ボタンなどの設定に関係なく、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.ControlBox%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、および<xref:System.Windows.Forms.Form.MaximizeBox%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-550">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-551">フォームがマルチ ドキュメント インターフェイス (MDI: Multiple Document Interface) 子フォームのコンテナーかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-551">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-552">フォームが MDI 子フォームのコンテナーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-552">
              <see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-553">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-553">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-554">このプロパティは、MDI 親フォームを表示し、フォームの動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-554">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="0a005-555">このプロパティに設定するときに`true`フォーム、浮き出し罫線とくぼみのクライアント領域に表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-555">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="0a005-556">クライアント領域内では、親フォームに割り当てられているすべての MDI 子フォームが表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-556">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="0a005-557">MDI 親フォームが閉じられたときに、 <xref:System.Windows.Forms.Form.Closing> MDI 親フォームの前にすべての MDI 子フォームのイベントが発生<xref:System.Windows.Forms.Form.Closing>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-557">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="0a005-558">さらに、<xref:System.Windows.Forms.Form.Closed>すべての MDI 子フォームのイベントが発生する前に、 <xref:System.Windows.Forms.Form.Closed> MDI 親フォームのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-558">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-559">2 つを使用する必要がある場合<xref:System.Windows.Forms.MenuStrip>設定、MDI 子フォーム上のコントロール<xref:System.Windows.Forms.Form.IsMdiContainer%2A>に`true`フォーム親の 1 つだけの内容と結合、<xref:System.Windows.Forms.MenuStrip>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-559">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="0a005-560">使用して<xref:System.Windows.Forms.ToolStripManager.Merge%2A>追加の子の内容をマージする<xref:System.Windows.Forms.MenuStrip>MDI 親フォームのコントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-560">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-561">次のコード例では、使用方法を示します、<xref:System.Windows.Forms.Form.IsMdiContainer%2A>プロパティと同様の変更、 `BackColor` MDI フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-561">The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="0a005-562">この例を実行するには、新しい形式で、次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="0a005-562">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-563">フォームがすべてのウィンドウとユーザー入力イベントを制限なく使用できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-563">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-564">フォームに制限が課せられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-564">
              <see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-565">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-565">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-566"><xref:System.Windows.Forms.Form.IsRestrictedWindow%2A>プロパティを決定するかどうか、<xref:System.Security.Permissions.UIPermissionWindow.AllWindows>権限を許可します。</span><span class="sxs-lookup"><span data-stu-id="0a005-566">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="0a005-567">このプロパティは、フォームのコンス トラクターで実行時に設定され、フォームの有効期間は、キャッシュします。</span><span class="sxs-lookup"><span data-stu-id="0a005-567">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="0a005-568">共通言語ランタイムによって親コンス トラクターは常にという名前の部分的な信頼で、部分信頼で実行されている Windows フォーム アプリケーションでこのチェックを回避することはできません。</span><span class="sxs-lookup"><span data-stu-id="0a005-568">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-569">キー イベントがフォーカスを持つコントロールに渡される前に、フォームがそのイベントを受け取るかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-569">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-570">フォームがすべてのキー イベントを受け取る場合は <see langword="true" />。フォーム上で現在選択されているコントロールがキー イベントを受け取る場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-570">
              <see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span>
          </span>
          <span data-ttu-id="0a005-571">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-571">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-572">このプロパティを設定すると`true`、フォームがすべてを受け取る<xref:System.Windows.Forms.Control.KeyPress>、 <xref:System.Windows.Forms.Control.KeyDown>、および<xref:System.Windows.Forms.Control.KeyUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-572">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="0a005-573">フォームのイベント ハンドラーのキーストロークの処理が完了すると後、キーストロークがフォーカスを持つコントロールに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="0a005-573">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="0a005-574">たとえば場合、<xref:System.Windows.Forms.Form.KeyPreview%2A>プロパティに設定されている`true`、現在選択されているコントロールが、<xref:System.Windows.Forms.TextBox>キーストロークがフォームのイベント ハンドラーによって処理された後、<xref:System.Windows.Forms.TextBox>コントロールが押されたキーを受け取る。</span><span class="sxs-lookup"><span data-stu-id="0a005-574">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="0a005-575">フォーム レベルでのみキーボード イベントを処理し、キーボード イベントを受信するコントロールを許可しない、設定、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>フォームのプロパティ<xref:System.Windows.Forms.Control.KeyPress>イベント ハンドラーを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-575">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="0a005-576">アプリケーションにキーストロークを処理するほとんどのキーストロークを処理するか、キーストロークを処理する適切なコントロールを呼び出すには、このプロパティを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-576">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="0a005-577">たとえば、アプリケーションでは、ファンクション キーを使用するときに可能性があるキーストローク イベントを受け取る各コントロールのコードを記述するのではなく、フォーム レベルでのキーストロークを処理します。</span><span class="sxs-lookup"><span data-stu-id="0a005-577">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-578">フォームに表示するか有効になっているコントロールがされていない場合は、すべてのキーボード イベントが自動的に受け取ります。</span><span class="sxs-lookup"><span data-stu-id="0a005-578">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-579">フォーム上のコントロールは、受信キーストロークをキャンセルするようにプログラミング可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-579">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="0a005-580">コントロールをフォームにこれらのキーストロークを送信しません、ため、フォームには表示されないの設定に関係なく<xref:System.Windows.Forms.Form.KeyPreview%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-580">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-581">次のコード例では、フォームの設定を示します<xref:System.Windows.Forms.Form.KeyPreview%2A>プロパティを true とフォーム レベルで重要なイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="0a005-581">The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="0a005-582">例を実行するには、空白のフォームで、次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="0a005-582">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a005-583">MDI 子フォームのレイアウトを定義する <see cref="T:System.Windows.Forms.MdiLayout" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-583">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-584">マルチ ドキュメント インターフェイス (MDI) 親フォーム内に MDI 子フォームを配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-584">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-585">このメソッドを使用すると、ナビゲーションと MDI 子フォームの操作を簡単に許可するように、MDI 親フォームの MDI 子フォームを整列します。</span><span class="sxs-lookup"><span data-stu-id="0a005-585">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="0a005-586">MDI 子フォームに並べて表示できます水平方向および垂直方向にカスケード、または MDI 親フォーム内でのアイコンとして。</span><span class="sxs-lookup"><span data-stu-id="0a005-586">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-587">次のコード例では、親フォームの MDI アプリケーションのウィンドウ メニューのメニュー項目のイベント ハンドラーを示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-587">The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="0a005-588">各イベント ハンドラーへの呼び出し、<xref:System.Windows.Forms.Form.LayoutMdi%2A>を任意の子フォームを整列する方法は、アプリケーションで現在開いています。</span><span class="sxs-lookup"><span data-stu-id="0a005-588">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-589">フォームが初めて表示される直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-589">Occurs before a form is displayed for the first time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-590">このイベントを使用して、フォームで使用されるリソースの割り当てなどのタスクを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-590">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="0a005-591">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-591">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-592">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、 <xref:System.Windows.Forms.Form.Load>、 <xref:System.Windows.Forms.Form.Activated>、および<xref:System.Windows.Forms.Form.Activate%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="0a005-592">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="0a005-593">例を実行するには、という名前のフォームで、次のコードを貼り付けます`Form1`を含む、<xref:System.Windows.Forms.Button>と呼ばれる`Button1`と 2 つ<xref:System.Windows.Forms.Label>と呼ばれるコントロール`Label1`と`Label2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-593">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-594">画面座標における <see cref="T:System.Windows.Forms.Form" /> の左上隅を表す <see cref="T:System.Drawing.Point" /> を取得および設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-594">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-595">画面座標における <see cref="T:System.Windows.Forms.Form" /> の左上隅を表す <see cref="T:System.Drawing.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-595">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-596"><xref:System.Drawing.Point> 値型であることを意味構造体。</span><span class="sxs-lookup"><span data-stu-id="0a005-596"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="0a005-597">プロパティにアクセスする場合<xref:System.Drawing.Point>プロパティのコピーが返されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-597">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="0a005-598">そのため、変更、<xref:System.Drawing.Point.X%2A>または<xref:System.Drawing.Point.Y%2A>のプロパティ、<xref:System.Drawing.Point>から返される、<xref:System.Windows.Forms.Control.Location%2A>プロパティは無効になります、 <xref:System.Windows.Forms.Control.Left%2A>、 <xref:System.Windows.Forms.Control.Right%2A>、 <xref:System.Windows.Forms.Control.Top%2A>、または<xref:System.Windows.Forms.Control.Bottom%2A>プロパティの値を<xref:System.Windows.Forms.Form>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-598">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="0a005-599">これらのプロパティを調整するには、個別に、各プロパティ値を設定するか、設定、<xref:System.Windows.Forms.Form.Location%2A>を新しいプロパティ<xref:System.Drawing.Point>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-599">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="0a005-600"><xref:System.Windows.Forms.Form.Location%2A>プロパティを取得または設定、<xref:System.Windows.Forms.Control.Location%2A>のプロパティ、<xref:System.Windows.Forms.Control>基本クラス、およびセット、<xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-600">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-601">フォームの主要メニューのコンテナーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-601">Gets or sets the primary menu container for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-602">フォームのメニュー構造のコンテナーを表す <see cref="T:System.Windows.Forms.MenuStrip" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-602">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span>
          </span>
          <span data-ttu-id="0a005-603">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-603">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-604">設定に加えて、<xref:System.Windows.Forms.Form.MainMenuStrip%2A>プロパティ、する必要があります<xref:System.Windows.Forms.Control.ControlCollection.Add%2A>、<xref:System.Windows.Forms.MenuStrip>コントロールを<xref:System.Windows.Forms.Control.Controls%2A>フォームのコレクション。</span><span class="sxs-lookup"><span data-stu-id="0a005-604">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="0a005-605"><xref:System.Windows.Forms.MenuStrip>クラスに置き換えられる、<xref:System.Windows.Forms.MainMenu>以前のバージョンの .NET Framework クラスです。</span><span class="sxs-lookup"><span data-stu-id="0a005-605">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-606">コントロール間の空白を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-606">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-607">コントロール間の空白を表す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-607">A value that represents the space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-608">
            <see cref="P:System.Windows.Forms.Form.Margin" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-608">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-609">フォームのキャプション バーに **[最大化]** ボタンを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-609">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-610">
            <see langword="true" /> 表示する、**最大化**; フォームのボタンをクリックします。 それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-610">
              <see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-611">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-611">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="0a005-612">A**最大化** ボタンをウィンドウを全画面表示のサイズを拡大するユーザーを有効にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-612">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="0a005-613">表示する、**最大化**ボタンをクリックして、フォームの値<xref:System.Windows.Forms.Form.ControlBox>プロパティである必要があります`true`の既定値です。</span><span class="sxs-lookup"><span data-stu-id="0a005-613">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="0a005-614"><xref:System.Windows.Forms.Form.ControlBox>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-614">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="0a005-615">さらに、設定する必要ありますもフォームの<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティを<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-615">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a005-616">A**最大化**ボタンが自動的にウィンドウが最大化されたときに [復元] ボタンがなります。</span><span class="sxs-lookup"><span data-stu-id="0a005-616">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="0a005-617">[復元] ボタンを最小限にするか、ウィンドウを自動的に復元する変更に戻す、**最大化**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="0a005-617">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-618">実行時にフォームを最大化が生成されます、<xref:System.Windows.Forms.Control.Resize>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-618">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="0a005-619"><xref:System.Windows.Forms.Form.WindowState%2A>プロパティは、ウィンドウの現在の状態を反映します。</span><span class="sxs-lookup"><span data-stu-id="0a005-619">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="0a005-620">設定した場合、<xref:System.Windows.Forms.Form.WindowState%2A>プロパティを`FormWindowState.Maximized`、どのような設定は、有効とは無関係に、フォームが最大化、<xref:System.Windows.Forms.Form.MaximizeBox%2A>と<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-620">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-621">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-621">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-622">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-622">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-623">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-623">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-624">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-624">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-625">最大化された場合のフォームのサイズを取得および設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-625">Gets and sets the size of the form when it is maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-626">最大化された場合のフォームの範囲を表す <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-626">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a005-627">
            <see cref="P:System.Drawing.Rectangle.Top" /> プロパティの値がフォームの高さよりも大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-627">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          </span>
          <span data-ttu-id="0a005-628">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-628">-or-</span>
          </span>
          <span data-ttu-id="0a005-629">
            <see cref="P:System.Drawing.Rectangle.Left" /> プロパティの値がフォームの幅よりも大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-629">The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-630">継承するクラス<see cref="T:System.Windows.Forms.Form" />最大化されたときに、フォームの新しい境界を指定するには、このメソッドをオーバーライドできます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-630">Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized.</span>
            </span>
            <span data-ttu-id="0a005-631">クラスこのプロパティを内部的に設定すると、フォームの**最大化**ボタンをクリックします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-631">The class sets this property internally when the form's **Maximize** button is clicked.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-632">
            <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> プロパティの値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-632">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-633">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-633">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-634">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-634">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-635">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-635">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="0a005-636">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-636">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-637">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-637">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-638">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-638">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-639">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-639">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-640">フォームのサイズを変更する場合の最大サイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-640">Gets the maximum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-641">フォームの最大サイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-641">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-642">このプロパティでは、指定した最大サイズにフォームのサイズを制限することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-642">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="0a005-643">1 つのウィンドウに非表示にするのにには、他のウィンドウがないようにするのに、同時に複数のウィンドウを表示するときにこの機能を使用できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-643">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="0a005-644">このプロパティ設定されている場合、 <xref:System.Drawing.Size> 0 の高さと幅、フォームに 0 であるオブジェクトには、Windows によって設定された制限を超える最大サイズはありません。</span><span class="sxs-lookup"><span data-stu-id="0a005-644">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-645">次のコード例は、設定を示します、<xref:System.Windows.Forms.Form.MaximumSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-645">The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a005-646">
            <see cref="T:System.Drawing.Size" /> オブジェクト内の高さまたは幅の値が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-646">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-647">
            <see cref="P:System.Windows.Forms.Form.MaximumSize" /> プロパティの値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-647">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-648">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-648">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-649">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-649">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-650">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MaximumSizeChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-650">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="0a005-651">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-651">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-652">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-652">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-653">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-653">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-654">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MaximumSizeChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-654">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-655">マルチ ドキュメント インターフェイス (MDI) 子フォームが MDI アプリケーション内でアクティブになった場合、または閉じた場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-655">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-656">このイベントを使用して、MDI 子フォームの内容の更新などのタスクを実行することができます、メニュー オプションを変更する MDI 親フォームで使用できるに基づいてがアクティブ化する MDI 子フォームの状態。</span><span class="sxs-lookup"><span data-stu-id="0a005-656">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="0a005-657">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-657">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-658">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-658">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-659">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MdiChildActivate>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-659">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="0a005-660">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-660">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-661">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-661">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-662">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-662">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-663">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MdiChildActivate>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-663">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-664">対象のフォームが親フォームであるマルチ ドキュメント インターフェイス (MDI) 子フォームの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-664">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-665">
            <see cref="T:System.Windows.Forms.Form" /> オブジェクトの配列。各オブジェクトが、対象となるフォームの MDI 子フォームの 1 つを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-665">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-666">このプロパティでは、MDI 親フォームで現在開かれているすべての MDI 子フォームへの参照を取得することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-666">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="0a005-667">MDI 子フォームを作成するには、割り当て、<xref:System.Windows.Forms.Form>を MDI 親フォームとなる、<xref:System.Windows.Forms.Form.MdiParent%2A>子フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-667">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="0a005-668">このプロパティを使用して、すべての MDI 子フォームを MDI 親フォームを閉じるときにデータベースへのデータの保存などの操作を実行するか、アプリケーションで実行されるアクションに基づいて子フォームのフィールドを更新するをループすることができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-668">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-669">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.MdiChildren%2A> MDI 子フォームのリストを反復処理し、追加のプロパティ、<xref:System.Windows.Forms.Button>それぞれに制御します。</span><span class="sxs-lookup"><span data-stu-id="0a005-669">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-670">対象となるフォームの現在のマルチ ドキュメント インターフェイス (MDI) 親フォームを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-670">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-671">MDI 親フォームを表す <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-671">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-672">MDI 子フォームを作成するには、割り当て、<xref:System.Windows.Forms.Form>を MDI 親フォームとなる、<xref:System.Windows.Forms.Form.MdiParent%2A>子フォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-672">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="0a005-673">すべての子フォームが必要なグローバル情報を取得するか、すべての子フォームのアクションを実行するメソッドを呼び出すには、MDI 子フォームからこのプロパティを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-673">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-674">2 つを使用する必要がある場合<xref:System.Windows.Forms.MenuStrip>設定、MDI 子フォーム上のコントロール<xref:System.Windows.Forms.Form.IsMdiContainer%2A>に`true`フォーム親の 1 つだけの内容と結合、<xref:System.Windows.Forms.MenuStrip>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-674">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="0a005-675">使用して<xref:System.Windows.Forms.ToolStripManager.Merge%2A>追加の子の内容をマージする<xref:System.Windows.Forms.MenuStrip>MDI 親フォームのコントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-675">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-676">次のコード例では、MDI アプリケーションで子フォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-676">The following code example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="0a005-677">コード例では、子フォームを識別する固有のテキストをフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="0a005-677">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="0a005-678">この例では、<xref:System.Windows.Forms.Form.MdiParent%2A>フォームが子フォームであることを指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-678">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="0a005-679">この例では、例のコードがあるフォームから呼び出されることが必要です、<xref:System.Windows.Forms.Form.IsMdiContainer%2A>プロパティに設定`true`こと、およびフォームがという名前のプライベート クラス レベルの整数変数`childCount`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-679">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="0a005-680">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が MDI コンテナーとしてマークされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-680">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          </span>
          <span data-ttu-id="0a005-681">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-681">-or-</span>
          </span>
          <span data-ttu-id="0a005-682">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が子フォームと MDI コンテナー フォームの両方を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-682">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          </span>
          <span data-ttu-id="0a005-683">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-683">-or-</span>
          </span>
          <span data-ttu-id="0a005-684">このプロパティに割り当てられた <see cref="T:System.Windows.Forms.Form" /> が別のスレッドにあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-684">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="0a005-685">フォームを要求しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-685">for requesting a form.</span>
          </span>
          <span data-ttu-id="0a005-686">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-686">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-687">フォームに表示する <see cref="T:System.Windows.Forms.MainMenu" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-687">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-688">フォームに表示するメニューを表す <see cref="T:System.Windows.Forms.MainMenu" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-688">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-689">このプロパティを使用して、実行時に完全なメニュー セット間で切り替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-689">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="0a005-690">たとえば、いずれかを定義できます<xref:System.Windows.Forms.MainMenu>ないアクティブな MDI 子フォームとは、マルチ ドキュメント インターフェイス (MDI) フォームにすると表示される<xref:System.Windows.Forms.MainMenu>子ウィンドウが表示されるときに表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-690">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="0a005-691">使用することも、異なる<xref:System.Windows.Forms.MainMenu>を別のメニュー設定を表示するを必要とするアプリケーションで特定の条件が存在する場合。</span><span class="sxs-lookup"><span data-stu-id="0a005-691">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-692">次のコード例を作成、 <xref:System.Windows.Forms.MainMenu>、2 つ割り当てます<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.MainMenu>され、フォームにバインドします。</span><span class="sxs-lookup"><span data-stu-id="0a005-692">The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="0a005-693">この例では、ある必要があります、<xref:System.Windows.Forms.Form>作成されたという`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-693">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-694">フォームのメニューがフォーカスを失ったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-694">Occurs when the menu of a form loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-695">このイベントは、実行中のコマンドの結果であると、フォーカスがメニュー失われたメニューのメニュー項目をクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-695">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="0a005-696">このイベントを使用してテキストの更新などのタスクを実行することができます、<xref:System.Windows.Forms.StatusBar>コントロールまたは有効化のボタンを無効にして、<xref:System.Windows.Forms.ToolBar>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-696">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="0a005-697">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-697">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-698">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-698">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-699">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MenuComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-699">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="0a005-700">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-700">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-701">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-701">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-702">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-702">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-703">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MenuComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-703">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-704">フォームのメニューがフォーカスを受け取ると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-704">Occurs when the menu of a form receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-705">このイベントは、メニューのメニュー項目が、ユーザーがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-705">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="0a005-706">このイベントを使用して、有効にして、メニューにアクセスしているときに、ユーザーがアクセスしないようにする、フォーム上のコントロールを無効化などのタスクを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-706">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="0a005-707">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-707">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-708">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-708">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-709">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MenuStart>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-709">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="0a005-710">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-710">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-711">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-711">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-712">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-712">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-713">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MenuStart>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-713">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-714">フォームのマージされたメニューを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-714">Gets the merged menu for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-715">フォームのマージされたメニューを表す <see cref="T:System.Windows.Forms.MainMenu" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-715">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-716">フォームがマルチ ドキュメント インターフェイス (MDI) 子フォームが親フォームのメニューとそのメニューにマージされるときに、このプロパティは使用、主にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-716">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="0a005-717">このプロパティを使用すると、変更またはメニュー構造への追加を MDI アプリケーションでは、現在のメニュー構造を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a005-717">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="0a005-718">取得、nonmerged<xref:System.Windows.Forms.MainMenu>をフォームに割り当てられているを使用して、<xref:System.Windows.Forms.Form.Menu%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-718">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-719">フォームのキャプション バーに **[最小化]** ボタンを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-719">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-720">
            <see langword="true" /> 表示する、**最小化**; フォームのボタンをクリックします。 それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-720">
              <see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-721">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-721">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-722">A**最小化**アイコンにウィンドウを最小化ボタンができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-722">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="0a005-723">表示する、**最小化**ボタンをクリックして、フォームの値<xref:System.Windows.Forms.Form.ControlBox>プロパティである必要があります`true`既定値です。</span><span class="sxs-lookup"><span data-stu-id="0a005-723">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="0a005-724"><xref:System.Windows.Forms.Form.ControlBox>プロパティは、キャプション バーの右上隅が最大化ボタン、最小化ボタン、ヘルプ ボタン、および閉じるボタンなどのコントロールを含むかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-724">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="0a005-725">さらに、設定する必要ありますもフォームの<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティを<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>、 <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>、または<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-725">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-726">実行時にフォームを最小限に抑えることが生成されます、<xref:System.Windows.Forms.Control.Resize>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-726">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="0a005-727"><xref:System.Windows.Forms.Form.WindowState%2A>プロパティは、ウィンドウの現在の状態を反映します。</span><span class="sxs-lookup"><span data-stu-id="0a005-727">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="0a005-728">設定した場合、<xref:System.Windows.Forms.Form.WindowState%2A>プロパティを`FormWindowState.Minimized`、どのような設定は、有効とは無関係に、フォームが最小化、<xref:System.Windows.Forms.Form.MinimizeBox%2A>と<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-728">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-729">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-729">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-730">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、 <xref:System.Windows.Forms.Form.MinimizeBox%2A>、 <xref:System.Windows.Forms.Form.MaximizeBox%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-730">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-731">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-731">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-732">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-732">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-733">フォームのサイズを変更する場合の最小サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-733">Gets or sets the minimum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-734">フォームの最小サイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-734">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-735">このプロパティでは、指定された最小サイズにフォームのサイズを制限することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-735">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="0a005-736">ユーザーが不適切なサイズをウィンドウのサイズを変更することを防ぐには、この機能を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-736">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="0a005-737">このプロパティ設定されている場合、 <xref:System.Drawing.Size> 0 の高さと幅、フォームに 0 であるオブジェクトには、Windows によって設定された制限を超えるの最小サイズはありません。</span><span class="sxs-lookup"><span data-stu-id="0a005-737">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a005-738">
            <see cref="T:System.Drawing.Size" /> オブジェクト内の高さまたは幅の値が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-738">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-739">
            <see cref="P:System.Windows.Forms.Form.MinimumSize" /> プロパティの値が変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-739">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-740">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-740">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-741">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-741">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-742">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.MinimumSizeChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-742">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="0a005-743">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-743">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-744">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-744">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-745">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-745">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-746">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.MinimumSizeChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-746">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-747">フォームをモーダルとして表示するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-747">Gets a value indicating whether this form is displayed modally.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-748">フォームをモーダルとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-748">
              <see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-749">フォームはモーダルとして表示される場合 (キーボードまたはマウス クリック) の入力しか発生しません、モーダル フォーム上のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-749">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="0a005-750">プログラムを非表示にする必要がありますか、閉じる、モーダル形式 (通常はユーザーの操作に対する応答) で別の形式に入力する前にことができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-750">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="0a005-751">モーダルとして表示されているフォームは、通常、アプリケーションのダイアログ ボックスとして使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-751">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="0a005-752">このプロパティを使用すると、メソッドまたはプロパティから取得したフォームがモーダルで表示されるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0a005-752">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="0a005-753">表示するフォームをモーダルとして使用して、<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-753">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-754">次のコード例では、<xref:System.Windows.Forms.Form.Modal%2A>フォームがフォームをモーダルとして表示されるかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-754">The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="0a005-755">ない場合は、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>と<xref:System.Windows.Forms.Form.TopLevel%2A>ツール ウィンドウの境界線の最上位レベルではないフォームをフォームにするプロパティが変更されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-755">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-756">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-756">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-757">
            <see cref="E:System.Windows.Forms.Form.Activated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-757">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-758">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-758">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-759">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-759">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-760"><xref:System.Windows.Forms.Form.OnActivated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-760">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-761">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-761">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-762">派生クラスで <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-762">When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-763">データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-763">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-764">
            <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-765">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-766">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-766">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-767"><xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-767">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-768">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-768">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-769">派生クラスで <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-769">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-770">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-770">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-771">
            <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-771">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-772">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-772">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-773">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-773">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-774"><xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-774">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-775">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-775">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-776">派生クラスで <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-776">When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-777">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-777">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-778">
            <see cref="E:System.Windows.Forms.Form.Closed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-778">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-779"><xref:System.Windows.Forms.Form.OnClosed%2A>メソッドは .NET Framework version 2.0 で使用されていません。 使用して、<xref:System.Windows.Forms.Form.OnFormClosed%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-779">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="0a005-780">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-780">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-781">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-781">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-782"><xref:System.Windows.Forms.Form.OnFormClosed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-782">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-783">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-783">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-784"><xref:System.Windows.Forms.Form.OnClosed%2A>と<xref:System.Windows.Forms.Form.OnClosing%2A>メソッドを呼び出さないときに、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>メソッドが呼び出されてアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-784">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="0a005-785">検証コードを実行する必要があるこれらのメソッドのいずれかである場合は、する必要がありますを呼び出した場合、<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>メソッドを呼び出す前に個別に開いているフォーム、<xref:System.Windows.Forms.Application.Exit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-785">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-786">次のコード例をオーバーライドする方法を示しています、<xref:System.Windows.Forms.Form.OnClosed%2A>から派生したクラスのメソッド<xref:System.Windows.Forms.Form>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-786">The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-787">派生クラスで <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-787">When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-788">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-788">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-789">
            <see cref="E:System.Windows.Forms.Form.Closing" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-789">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-790"><xref:System.Windows.Forms.Form.OnClosing%2A>メソッドは .NET Framework version 2.0 で使用されていません。 使用して、<xref:System.Windows.Forms.Form.OnFormClosing%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-790">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="0a005-791">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-791">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-792">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-792">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-793"><xref:System.Windows.Forms.Form.OnClosing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-793">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-794">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-794">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a005-795"><xref:System.Windows.Forms.Form.OnClosed%2A>と<xref:System.Windows.Forms.Form.OnClosing%2A>メソッドを呼び出さないときに、<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>メソッドが呼び出されてアプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="0a005-795">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="0a005-796">検証コードを実行する必要があるこれらのメソッドのいずれかである場合は、する必要がありますを呼び出した場合、<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>メソッドを呼び出す前に個別に開いているフォーム、<xref:System.Windows.Forms.Application.Exit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-796">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-797">次のコード例では<xref:System.Windows.Forms.Form.Closing>場合にテスト内のテキスト、<xref:System.Windows.Forms.TextBox>が変更されました。</span><span class="sxs-lookup"><span data-stu-id="0a005-797">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="0a005-798">場合は、ユーザーが要求するファイルに変更を保存するかどうか。</span><span class="sxs-lookup"><span data-stu-id="0a005-798">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-799">派生クラスで <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-799">When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-800">
            <see langword="CreateControl" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-800">Raises the <see langword="CreateControl" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-801">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-801">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-802">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-802">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-803">オーバーライドする場合<see cref="M:System.Windows.Forms.Form.OnCreateControl" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.Form.OnCreateControl" />メソッドです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-803">When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-804">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-804">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-805">
            <see cref="E:System.Windows.Forms.Form.Deactivate" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-805">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-806">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-806">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-807">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-807">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-808"><xref:System.Windows.Forms.Form.OnDeactivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-808">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-809">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-809">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-810">派生クラスで <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-810">When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-811">イベント データを格納している <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-811">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-812">
            <see cref="E:System.Windows.Forms.Form.DpiChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-812">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-813">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-813">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-814">
            <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-814">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-815">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-816">
            <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-816">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-817">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-817">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-818">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-818">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-819"><xref:System.Windows.Forms.Form.OnEnter%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-819">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-820">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-820">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-821">派生クラスで <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-821">When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-822">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-822">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-823">
            <see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-823">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-824">イベント データを格納している <see cref="T:System.Windows.Forms.FormClosedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-824">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-825">
            <see cref="E:System.Windows.Forms.Form.FormClosed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-825">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-826"><xref:System.Windows.Forms.Form.OnFormClosing%2A>メソッドは、現在のフォームから、削除、<xref:System.Windows.Forms.Application.OpenForms%2A>関連付けられているコレクション<xref:System.Windows.Forms.Application>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-826">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="0a005-827">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-827">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-828">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-828">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-829"><xref:System.Windows.Forms.Form.OnFormClosed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-829">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-830">このメソッドのオーバーライドは、派生クラスでイベントを処理するための手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-830">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-831">派生クラスで <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-831">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-832">イベント データを格納している <see cref="T:System.Windows.Forms.FormClosingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-832">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-833">
            <see cref="E:System.Windows.Forms.Form.FormClosing" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-833">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-834">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-834">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-835">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-835">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-836"><xref:System.Windows.Forms.Form.OnFormClosing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-836">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-837">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-837">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-838">派生クラスで <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-838">When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="0a005-839">フォームが以前表示されていたディスプレイ デバイスの DPI 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-839">The DPI value for the display device where the form was previously displayed.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="0a005-840">フォームが表示されるディスプレイ デバイスの DPI 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-840">The DPI value for the display device where the form will be displayed.</span>
          </span>
        </param>
        <param name="desiredSize">
          <span data-ttu-id="0a005-841">新しい DPI 値に基づくフォームの新しいサイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-841">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-842">GetDpiScaledSize イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-842">Raises the GetDpiScaledSize event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-843">成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-843">
              <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-844">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-844">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-845">
            <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-845">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-846">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-846">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-847">
            <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-847">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-848">イベント データを格納している <see cref="T:System.ComponentModel.CancelEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-848">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-849">
            <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-849">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-850">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-850">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-851">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-851">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-852"><xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-852">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-853">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-853">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-854">派生クラスで <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-854">When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-855">イベント データを格納している <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-855">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-856">
            <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-857">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-857">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-858">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-858">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-859"><xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-859">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-860">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-860">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-861">派生クラスで <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-861">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-862">イベント データを格納している <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-862">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-863">
            <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-863">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-864">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-864">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-865">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-865">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-866"><xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-866">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-867">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-867">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-868">派生クラスで <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-868">When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="0a005-869">イベントのデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-869">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-870">
            <see cref="E:System.Windows.Forms.Control.Layout" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-870">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-871">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-871">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-872">
            <see cref="E:System.Windows.Forms.Form.Load" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-872">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-873">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-873">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-874">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-874">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-875"><xref:System.Windows.Forms.Form.OnLoad%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-875">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-876">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-876">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-877">派生クラスで <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-877">When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-878">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-879">
            <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-880">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-880">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-881">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-881">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-882"><xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-882">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-883">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-883">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-884">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-884">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-885">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-886">
            <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-886">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-887">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-887">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-888">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-888">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-889"><xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-889">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-890">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-890">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-891">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-891">When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-892">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-893">
            <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-893">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-894">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-894">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-895">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-895">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-896"><xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-896">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-897">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-897">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-898">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-898">When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-899">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-900">
            <see cref="E:System.Windows.Forms.Form.MenuComplete" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-901">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-901">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-902">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-902">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-903"><xref:System.Windows.Forms.Form.OnMenuComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-903">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-904">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-904">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-905">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-905">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-906">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-906">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-907">
            <see cref="E:System.Windows.Forms.Form.MenuStart" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-907">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-908">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-908">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-909">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-909">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-910"><xref:System.Windows.Forms.Form.OnMenuStart%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-910">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-911">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-911">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-912">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-912">When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-913">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-913">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-914">
            <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-914">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-915">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-915">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-916">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-916">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-917"><xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-917">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-918">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-918">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-919">派生クラスで <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-919">When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-920">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-920">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-921">
            <see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-921">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-922">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-922">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-923">
            <see cref="E:System.Windows.Forms.Control.Resize" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-923">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-924">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-924">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-925">
            <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-925">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-926"><xref:System.Windows.Forms.Form.ResizeBegin>場合、イベントを発生のみが、フォームの<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-926">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="0a005-927">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-928">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-928">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-929"><xref:System.Windows.Forms.Form.OnResizeBegin%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-929">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-930">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-930">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-931">派生クラスで <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-931">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-932">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-932">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-933">
            <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-933">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-934"><xref:System.Windows.Forms.Form.ResizeEnd>場合、イベントを発生のみが、フォームの<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-934">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="0a005-935">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-935">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-936">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-936">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-937"><xref:System.Windows.Forms.Form.OnResizeEnd%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-937">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-938">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-938">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-939">派生クラスで <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-939">When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-940">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-940">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-941">
            <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-941">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-942">現在のフォームまたはその親の 1 つは、リソースの破棄する場合、<xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A>メソッドは任意のアクションを実行せずに返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-942">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="0a005-943">場合、<xref:System.Windows.Forms.Control.RightToLeft%2A>フォームのプロパティの値を持つ<xref:System.Windows.Forms.RightToLeft.Yes>を呼び出すことで、フォームとその子コントロールのハンドルが再作成してから、<xref:System.Windows.Forms.Control.RecreateHandle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-943">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="0a005-944">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-944">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-945">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-945">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-946"><xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-946">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-947">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-947">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-948">派生クラスで <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-948">When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-949">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-949">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-950">
            <see cref="E:System.Windows.Forms.Form.Shown" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-950">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-951"><xref:System.Windows.Forms.Form.Shown>イベント フォームが最初に表示されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-951">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="0a005-952">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-952">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-953">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-953">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-954"><xref:System.Windows.Forms.Form.OnShown%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-954">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-955">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-955">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-956">派生クラスで <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-956">When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-957">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-957">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-958">
            <see cref="E:System.Windows.Forms.Control.StyleChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-958">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-959">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-959">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-960">
            <see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-960">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0a005-961">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-961">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-962">
            <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-962">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-963">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-963">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0a005-964">詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-964">For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
 <span data-ttu-id="0a005-965"><xref:System.Windows.Forms.Form.OnVisibleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-965">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="0a005-966">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0a005-966">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0a005-967">派生クラスで <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> メソッドを呼び出してください。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0a005-967">When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-968">フォームの不透明度を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-968">Gets or sets the opacity level of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-969">フォームの不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-969">The level of opacity for the form.</span>
          </span>
          <span data-ttu-id="0a005-970">既定値は 1.00 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-970">The default is 1.00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-971"><xref:System.Windows.Forms.Form.Opacity%2A>プロパティでは、フォームとそのコントロールの透明度のレベルを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-971">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="0a005-972">このプロパティが 100% (1.00) よりも小さい値に設定されている場合、境界線を含むフォーム全体がより透明行われます。</span><span class="sxs-lookup"><span data-stu-id="0a005-972">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="0a005-973">このプロパティを 0% (0.00) の値に設定すると、フォームは完全に見えなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a005-973">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="0a005-974">さまざまなレベルの透過性を提供するか、ビューの内外では、フォーム段階的に停止などの効果を提供するには、このプロパティを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-974">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="0a005-975">設定のビューにフォームをフェーズなど、<xref:System.Windows.Forms.Form.Opacity%2A>プロパティを 0% (0.00) および 100% (1.00) に達するまでに、値を徐々 に増やすことの値にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-975">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
 <span data-ttu-id="0a005-976"><xref:System.Windows.Forms.Form.Opacity%2A> によって提供される、透過性とは異なります、<xref:System.Windows.Forms.Form.TransparencyKey%2A>フォームのみため、およびコントロール完全に透過的な場合に指定された値と同じ色が、<xref:System.Windows.Forms.Form.TransparencyKey%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-976"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
 <span data-ttu-id="0a005-977">このプロパティはサポートされている場合に<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>は`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-977">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
 <span data-ttu-id="0a005-978"><xref:System.Windows.Forms.Form.Opacity%2A>プロパティがレイヤー Windows API に導入された Windows 2000 に依存します。</span><span class="sxs-lookup"><span data-stu-id="0a005-978">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000.</span></span> <span data-ttu-id="0a005-979">詳細については、アプリケーションを表示"階層化 Windows:: A 新しい方法を使用して透明度と透過性効果で Windows"、プラットフォーム SDK のドキュメントで[ http://msdn.microsoft.com](http://msdn.microsoft.com/)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-979">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-980">次のコード例では、75% の不透明度で表示されるフォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-980">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="0a005-981">画面の中央に配置する新しいフォームを作成するコード例、<xref:System.Windows.Forms.Form.Opacity%2A>フォームの不透明度のレベルを変更するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-981">The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="0a005-982">コード例でも設定、<xref:System.Windows.Forms.Form.Size%2A>プロパティより大規模なフォームの既定のサイズよりもフォームのサイズします。</span><span class="sxs-lookup"><span data-stu-id="0a005-982">The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="0a005-983">このコード例は、そのイベント ハンドラーまたは他の方法で別のフォームからこの例で定義されたメソッドが呼び出されることを前提として記述されています。</span><span class="sxs-lookup"><span data-stu-id="0a005-983">This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-984">対象となるフォームによって所有されている全フォームを表す、<see cref="T:System.Windows.Forms.Form" /> オブジェクトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-984">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-985">対象となるフォームによって所有されているフォームを表す <see cref="T:System.Windows.Forms.Form" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-985">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-986">このプロパティは、このフォームによって所有されているすべてのフォームを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-986">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="0a005-987">別のフォームによって所有されているフォームをするためには、呼び出し、<xref:System.Windows.Forms.Form.AddOwnedForm%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-987">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="0a005-988">所有者のフォームに割り当てられているフォームがまで所有されているまま、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-988">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="0a005-989">別の設定が所有するフォームを作成することも、<xref:System.Windows.Forms.Form.Owner%2A>その所有者のフォームへの参照を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-989">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="0a005-990">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-990">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="0a005-991">たとえば、という名前のフォーム`Form2`という名前のフォームによって所有されている`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-991">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="0a005-992">場合`Form1`が閉じられるか、最小化、`Form2`も閉じられるか、非表示にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-992">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="0a005-993">所有されているフォームは、所有者のフォームの背後に表示もされません。</span><span class="sxs-lookup"><span data-stu-id="0a005-993">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="0a005-994">所有されているフォームを使用して、検索などの windows 用と所有者フォームを選択すると、所有者のフォームの背後に表示されません必要のある windows の置換を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-994">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-995">フォームがマルチ ドキュメント インターフェイス (MDI) 親フォームの場合は、このプロパティは現在含まれている MDI 子フォームを除く表示されているすべてのフォームを開くを返します。</span><span class="sxs-lookup"><span data-stu-id="0a005-995">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="0a005-996">MDI 親フォームで開かれている MDI 子フォームを取得するを使用して、<xref:System.Windows.Forms.Form.MdiChildren%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-996">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-997">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.Form.OwnedForms%2A>所有者フォームによって所有されているすべてのフォームを変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-997">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="0a005-998">最初のメソッドの例では、所有されている形式に関連付けられている、所有されているフォームの配列へのフォームを追加します。</span><span class="sxs-lookup"><span data-stu-id="0a005-998">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="0a005-999">2 番目のメソッドは、すべての所有されているフォームをループし、キャプションを変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-999">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="0a005-1000">この例では、両方のメソッドがイベントまたはフォームの他のメソッドによって呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1000">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1001">対象のフォームを所有しているフォームを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1001">Gets or sets the form that owns this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1002">対象のフォームを所有しているフォームを表す <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1002">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1003">別のフォームによって所有されているフォームをするためには、割り当てるその<xref:System.Windows.Forms.Form.Owner%2A>所有者となるフォームへの参照のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1003">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="0a005-1004">フォームが別のフォームによって所有されている場合が閉じられるか、所有者のフォームで非表示にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1004">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="0a005-1005">たとえば、という名前のフォーム`Form2`という名前のフォームによって所有されている`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1005">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="0a005-1006">場合`Form1`が閉じられるか、最小化、`Form2`も閉じられるか、非表示にします。所有されているフォームは、所有者のフォームの背後に表示もされません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1006">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="0a005-1007">検索などの windows に所有されているフォームを使用し、windows で、所有者のフォームが選択されているときに解消されませんを置換できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1007">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="0a005-1008">親フォームによって所有されているフォームを確認するには<xref:System.Windows.Forms.Form.OwnedForms%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1008">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="0a005-1009">トップレベル ウィンドウには所有側フォームがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1009">A top-level window cannot have an owner.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="0a005-1010">処理する Win32 メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1010">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="0a005-1011">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1011">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1012">コマンド キーを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1012">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1013">キーストロークがコントロールによって処理および使用された場合は <see langword="true" />。キーストロークをさらに処理できるようにする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1013">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1014"><xref:System.Windows.Forms.Form.ProcessCmdKey%2A>メソッドは、ベース</span><span class="sxs-lookup"><span data-stu-id="0a005-1014">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base</span></span>  
  
 <span data-ttu-id="0a005-1015"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> メイン メニュー コマンドのキーと MDI アクセラレータの追加の処理を提供する実装。</span><span class="sxs-lookup"><span data-stu-id="0a005-1015"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="0a005-1016">トラップ キーストローク詳細については、「Visual c# を使用してコントロールでのキーボードをトラップする方法」を参照してください。 し、".NET でのキーボードをトラップする方法を制御 Visual Basic .NET を使用して、"Microsoft サポート技術情報でhttp://support.microsoft.comです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1016">For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="0a005-1017">処理対象の文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1017">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1018">ダイアログ文字を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1018">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1019">文字がコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1019">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="0a005-1020">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1020">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1021">ダイアログ ボックスのキーを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1021">Processes a dialog box key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1022">キーストロークがコントロールによって処理および使用された場合は <see langword="true" />。キーストロークをさらに処理できるようにする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1022">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1023"><xref:System.Windows.Forms.Form.ProcessDialogKey%2A>メソッドは、ベース<xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> ダイアログ ボックス内の戻り値とエスケープのキーの追加の処理を提供する実装。</span><span class="sxs-lookup"><span data-stu-id="0a005-1023">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="0a005-1024">Alt キーまたはコントロールの修飾子を含むキーストローク処理は行われません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1024">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="0a005-1025">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1025">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1026">キーボード メッセージをプレビューします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1026">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1027">メッセージがコントロールによって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1027">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="0a005-1028">処理対象の文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1028">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1029">ニーモニック文字を処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1029">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1030">文字がコントロールによってニーモニックとして処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1030">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">
          <span data-ttu-id="0a005-1031">ContainerControl 内のコントロールを循環して選択する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1031">
              <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1032">次に使用できるコントロールを選択し、そのコントロールをアクティブにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1032">Selects the next available control and makes it the active control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1033">コントロールが選択された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1033">
              <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="0a005-1034">対象となるフォームに所有されているフォームのリストから削除するフォームを表す <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1034">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1035">対象となるフォームから所有されているフォームを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1035">Removes an owned form from this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1036">所有者のフォームに割り当てられたまままで所有されている、<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1036">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="0a005-1037">所有されているフォームを削除する、所有されているフォームの一覧から、だけでなく、このメソッドも設定所有者フォーム`null`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1037">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1038">フォームがサイズ変更モードになったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1038">Occurs when a form enters resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1039"><xref:System.Windows.Forms.Form.ResizeBegin>クリックし、罫線またはフォームの右下隅にあるサイズ変更グリップの 1 つをドラッグして通常、フォームのサイズを変更するユーザーの開始時にイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1039">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="0a005-1040">この操作では、サイズ変更操作が完了するまでに、フォーム、サイズ変更のモーダル ループになります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1040">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="0a005-1041">通常、次のイベントのセットは、サイズ変更操作中に発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1041">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="0a005-1042">1 つ<xref:System.Windows.Forms.Form.ResizeBegin>フォームがサイズ変更モードになるようにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1042">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="0a005-1043">0 個以上のペアの<xref:System.Windows.Forms.Control.Resize>と<xref:System.Windows.Forms.Control.SizeChanged>フォームのイベントが発生<xref:System.Windows.Forms.Form.Size%2A>を変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1043">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="0a005-1044">1 つ<xref:System.Windows.Forms.Form.ResizeEnd>フォームがサイズ変更モードを終了するようにイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1044">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-1045">生成せずに罫線をドラッグするか、サイズ変更グリップをクリックするだけ、<xref:System.Windows.Forms.Form.ResizeBegin>と<xref:System.Windows.Forms.Form.ResizeEnd>イベントをすべて中間<xref:System.Windows.Forms.Control.Resize>と<xref:System.Windows.Forms.Control.SizeChanged>イベントのペア。</span><span class="sxs-lookup"><span data-stu-id="0a005-1045">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="0a005-1046"><xref:System.Windows.Forms.Form.ResizeBegin>と<xref:System.Windows.Forms.Form.ResizeEnd>ユーザーが移動すると、フォームを通常をクリックし、キャプション バーにドラッグすることにも、一対のイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1046">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="0a005-1047">これらのイベントは生成されません、フォームのプログラムで操作することで例を変更して、<xref:System.Windows.Forms.Form.Size%2A>または<xref:System.Windows.Forms.Control.Location%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1047">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="0a005-1048">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1048">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1049">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1049">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-1050">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.ResizeBegin>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1050">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="0a005-1051">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1051">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-1052">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1052">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-1053">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1053">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-1054">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.ResizeBegin>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1054">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1055">フォームがサイズ変更モードでなくなったときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1055">Occurs when a form exits resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1056"><xref:System.Windows.Forms.Form.ResizeEnd>イベント、ユーザーは、罫線またはフォームの右下隅にあるサイズ変更グリップの 1 つをドラッグしてから放すことによって通常、フォームのサイズ変更が終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1056">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="0a005-1057">サイズ変更操作の詳細については、次を参照してください。、<xref:System.Windows.Forms.Form.ResizeBegin>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1057">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="0a005-1058"><xref:System.Windows.Forms.Form.ResizeEnd>移動した後、ユーザー、フォーム、通常をクリックし、キャプション バーにドラッグすることにも、イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1058">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="0a005-1059">このイベントは生成されません、フォームのプログラムで操作することで例を変更して、<xref:System.Windows.Forms.Form.Size%2A>または<xref:System.Windows.Forms.Control.Location%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1059">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="0a005-1060">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1060">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1061">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1061">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-1062">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.ResizeEnd>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1062">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="0a005-1063">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1063">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-1064">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1064">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-1065">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1065">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-1066">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.ResizeEnd>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1066">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1067">通常のウィンドウ状態におけるフォームの位置とサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1067">Gets the location and size of the form in its normal window state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1068">通常のウィンドウ状態におけるフォームの位置とサイズを含む <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1068">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1069">通常、使用して、<xref:System.Windows.Forms.Form.RestoreBounds%2A>をユーザーのウィンドウのサイズを追跡して、通常のウィンドウ状態におけるフォームの環境設定を配置するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1069">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="0a005-1070">両方の値を追跡する必要があります、<xref:System.Windows.Forms.Form.WindowState%2A>と<xref:System.Windows.Forms.Form.RestoreBounds%2A>プロパティ ウィンドウのユーザーの環境設定を追跡するときにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1070">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-1071">値、<xref:System.Windows.Forms.Form.RestoreBounds%2A>プロパティが有効な場合にのみ、<xref:System.Windows.Forms.Form.WindowState%2A>のプロパティ、<xref:System.Windows.Forms.Form>クラスは等しくありません<xref:System.Windows.Forms.FormWindowState.Normal>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1071">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1072">右から左方向の反転配置を有効にするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1072">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1073">右から左方向の反転配置を有効にする場合は <see langword="true" />。子コントロールを通常どおりに配置する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1073">
              <see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span>
          </span>
          <span data-ttu-id="0a005-1074">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1074">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1075"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>プロパティは、世界中のユーザーの国際対応フォームを開発するため、主に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1075">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="0a005-1076">多くの形式では、左から右へ方式でフォームにコントロールが配置されるよう設計されています。</span><span class="sxs-lookup"><span data-stu-id="0a005-1076">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="0a005-1077">これらの形式は、この方向で記述する言語に対応します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1077">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="0a005-1078">ただし、右から左へ記述する言語のユーザーに同じフォームを表示する場合にお勧め多くの場合、フォーム上のコントロールの順序を逆にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1078">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="0a005-1079">場合は、両方の<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>と<xref:System.Windows.Forms.Control.RightToLeft%2A>プロパティは、 `true`、ミラーリングがオンにする、フォームになり、コントロールの配置とテキスト フロー右から左。</span><span class="sxs-lookup"><span data-stu-id="0a005-1079">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="0a005-1080">異なり<xref:System.Windows.Forms.Control.RightToLeft%2A>、<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>継承しません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1080">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="0a005-1081">子コントロールを有効にする場合は、ミラー化する各子コントロールに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1081">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="0a005-1082">オーナー描画されていない場合にサポートされている<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>に設定されている`Yes`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1082">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="0a005-1083">オーナー描画のイベントは行われますが、これらのイベントで作成したコードの動作が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1083">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="0a005-1084">さらに、 <xref:System.Windows.Forms.Control.BackgroundImage%2A>、 <xref:System.Windows.Forms.Form.Opacity%2A>、 <xref:System.Windows.Forms.Form.TransparencyKey%2A>、描画イベントはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1084">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="0a005-1085"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>と<xref:System.Windows.Forms.Control.RightToLeft%2A>プロパティを設定するのには、次の Win32 API ウィンドウ スタイルが発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1085">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:</span></span>  
  
-   <span data-ttu-id="0a005-1086">ときに<xref:System.Windows.Forms.Control.RightToLeft%2A>に設定されている`Yes`と<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>に設定されている`true`、Windows フォームの設定、`WS_EX_LAYOUTRTL`ウィンドウ スタイル、および削除、`WS_EX_RIGHT`と`WS_EX_RTLREADING`スタイル。</span><span class="sxs-lookup"><span data-stu-id="0a005-1086">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="0a005-1087">ときに<xref:System.Windows.Forms.Control.RightToLeft%2A>に設定されている`Yes`が<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>に設定されている`No`、Windows フォームの設定、`WS_EX_RIGHT`と`WS_EX_RTLREADING`ウィンドウ スタイル。</span><span class="sxs-lookup"><span data-stu-id="0a005-1087">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="0a005-1088">このプロパティの値の変更を発生させる、<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1088">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="0a005-1089">グローバリゼーションに関する問題の詳細については、次を参照してください。[国際対応アプリケーションを開発するためのベスト プラクティス](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1089">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1090">
            <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> プロパティの値が変更された後に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1090">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1091"><xref:System.Windows.Forms.Control.RightToLeft%2A>と<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>プロパティは通常、国際対応アプリケーションの開発に使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1091">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1092">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1092">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-1093">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1093">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="0a005-1094">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1094">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-1095">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1095">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-1096">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1096">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-1097">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1097">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="0a005-1098">コントロールの高さと幅のスケールを設定する際の係数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1098">The factor by which the height and width of the control are scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="0a005-1099">コントロールのサイズと位置を定義するときに使用するコントロールの境界を指定する <see cref="T:System.Windows.Forms.BoundsSpecified" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1099">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1100">コントロールの位置、サイズ、埋め込み、および余白のスケールを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1100">Scales the location, size, padding, and margin of a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0a005-1101">フォームを水平方向にスケーリングするための倍率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1101">Percentage to scale the form horizontally</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0a005-1102">フォームを垂直方向にスケーリングするための倍率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1102">Percentage to scale the form vertically</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1103">フォームのスケーリングを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1103">Performs scaling of the form.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="0a005-1104">true に設定すると、アクティブ コントロールが変更されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1104">If set to true that the active control is changed</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="0a005-1105">directed が true の場合に、フォーカスを移動させる方向を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1105">If directed is true, then this controls the direction in which focus is moved.</span>
          </span>
          <span data-ttu-id="0a005-1106">このパラメーターが <see langword="true" /> の場合は次のコントロールが選択され、それ以外の場合は前のコントロールが選択されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1106">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1107">このフォームを選択し、オプションで次のコントロールまたは前のコントロールを選択します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1107">Selects this form, and optionally selects the next or previous control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="0a005-1108">フォーカスを変更します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1108">For changing focus.</span>
          </span>
          <span data-ttu-id="0a005-1109">
            <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1109">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0a005-1110">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Left" /> プロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1110">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0a005-1111">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Top" /> プロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1111">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="0a005-1112">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Width" /> プロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1112">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="0a005-1113">コントロールの新しい <see cref="P:System.Windows.Forms.Control.Height" /> プロパティ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1113">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="0a005-1114">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1114">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1115">このコントロールの指定した境界を設定する作業を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1115">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0a005-1116">必要なクライアント領域の幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1116">Requested width of the client region.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0a005-1117">必要なクライアント領域の高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1117">Requested height of the client region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1118">フォームのクライアント サイズを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1118">Sets the client size of the form.</span>
          </span>
          <span data-ttu-id="0a005-1119">このメソッドは、クライアント サイズを指定されたサイズにするために、フォームの境界を調節します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1119">This will adjust the bounds of the form to make the client size the requested size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0a005-1120">フォームの位置の x 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1120">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0a005-1121">フォームの位置の y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1121">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="0a005-1122">フォームの幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1122">The width of the form.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="0a005-1123">フォームの高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1123">The height of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1124">フォームの範囲をデスクトップ座標で設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1124">Sets the bounds of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1125">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="0a005-1125">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="0a005-1126">このメソッドを使用して、デスクトップで、フォームのサイズと位置を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1126">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="0a005-1127">デスクトップ座標は、フォームの作業領域に基づいている、ためにこのメソッドを使えば、フォームがデスクトップに完全に表示されていることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1127">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1128">次のコード例では、使用方法を示します、<xref:System.Windows.Forms.Form.SetDesktopBounds%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1128">The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="0a005-1129">この例を実行するには、という名前のボタンを含むフォームで、次のコードを貼り付けます`Button2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1129">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="0a005-1130">すべてのイベントがイベント ハンドラーに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1130">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="0a005-1131">フォームの位置の x 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1131">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="0a005-1132">フォームの位置の y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1132">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1133">フォームの位置をデスクトップ座標で設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1133">Sets the location of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1134">デスクトップ座標は、タスク バーを除外すると、画面の作業領域に基づいています。</span><span class="sxs-lookup"><span data-stu-id="0a005-1134">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="0a005-1135">このメソッドは、デスクトップ上のフォームの位置を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1135">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="0a005-1136">デスクトップ座標は、フォームの作業領域に基づいている、ためにこのメソッドを使えば、フォームがデスクトップに完全に表示されていることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1136">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="0a005-1137">このメソッドは、最上位フォーム; に、主に使用するには使用して、<xref:System.Windows.Forms.Form.LayoutMdi%2A>マルチ ドキュメント インターフェイス (MDI) 子フォームを配置する方法です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1137">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1138">次のコード例を使用する方法を示しています、 <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>、<xref:System.Windows.Forms.Form.Load>と<xref:System.Windows.Forms.Form.Activate%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="0a005-1138">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="0a005-1139">例を実行するには、という名前のフォームで、次のコードを貼り付けます`Form1`というボタンを含む`Button1`と 2 つ`Label`と呼ばれるコントロール`Label1`と`Label2`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1139">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0a005-1140">コントロールを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1140">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1141">コントロールを指定した表示状態に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1141">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="0a005-1142">
            <see cref="T:System.Windows.Forms.IWin32Window" /> を実装し、このフォームを所有するトップレベル ウィンドウを表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1142">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1143">所有側フォームを指定してフォームをユーザーに表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1143">Shows the form with the specified owner to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1144">このメソッドを使用して、非モーダル フォームを表示することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1144">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="0a005-1145">このメソッドを使用する場合、<xref:System.Windows.Forms.Form.Owner%2A>フォームのプロパティに設定されて`owner`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1145">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="0a005-1146">非モーダル フォームを使用できる、<xref:System.Windows.Forms.Form.Owner%2A>プロパティを所有している形式に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1146">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="0a005-1147">設定と同じでは、このメソッドを呼び出す、<xref:System.Windows.Forms.Form.Owner%2A>非モーダルのプロパティと呼び出すことで、<xref:System.Windows.Forms.Control.Show>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1147">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="0a005-1148">フォームを表示する設定と同じでは、<xref:System.Windows.Forms.Control.Visible%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1148">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="0a005-1149">後に、<xref:System.Windows.Forms.Form.Show%2A>メソッドが呼び出されると、<xref:System.Windows.Forms.Control.Visible%2A>プロパティの値を返します`true`まで、<xref:System.Windows.Forms.Control.Hide%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1149">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a005-1150">表示しようとしているフォームが既に表示されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1150">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="0a005-1151">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1151">-or-</span>
          </span>
          <span data-ttu-id="0a005-1152">
            <paramref name="owner" /> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1152">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
          <span data-ttu-id="0a005-1153">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1153">-or-</span>
          </span>
          <span data-ttu-id="0a005-1154">表示しようとしているフォームが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1154">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="0a005-1155">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1155">-or-</span>
          </span>
          <span data-ttu-id="0a005-1156">表示しようとしているフォームがトップレベル ウィンドウではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1156">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="0a005-1157">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1157">-or-</span>
          </span>
          <span data-ttu-id="0a005-1158">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1158">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="0a005-1159">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1159">-or-</span>
          </span>
          <span data-ttu-id="0a005-1160">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1160">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1161">フォームをモーダル ダイアログ ボックスとして表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1161">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1162">フォームをモーダル ダイアログ ボックスとして表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1162">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1163">
            <see cref="T:System.Windows.Forms.DialogResult" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1163">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1164">このメソッドを使用すると、アプリケーションでモーダル ダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1164">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="0a005-1165">このメソッドが呼び出されると、ダイアログ ボックスが閉じられた後まで次に続くコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1165">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="0a005-1166">値のいずれかのダイアログ ボックスを割り当てることのできる、<xref:System.Windows.Forms.DialogResult>に割り当てることで列挙、<xref:System.Windows.Forms.Button.DialogResult%2A>のプロパティ、<xref:System.Windows.Forms.Button>フォームのかを設定して、<xref:System.Windows.Forms.Form.DialogResult%2A>コード内のフォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1166">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="0a005-1167">この値は、このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1167">This value is then returned by this method.</span></span> <span data-ttu-id="0a005-1168">この戻り値を使用すると、ダイアログ ボックスで発生したアクションを処理するのに方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1168">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="0a005-1169">たとえば、ダイアログ ボックスが閉じられ、返される場合、`DialogResult.Cancel`値このメソッドを使用する呼び出しの後のコードを防ぐことが<xref:System.Windows.Forms.Form.ShowDialog%2A>からを実行します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1169">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="0a005-1170">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、**閉じる**ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<xref:System.Windows.Forms.Form.DialogResult%2A>設定するプロパティを`DialogResult.Cancel`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1170">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="0a005-1171">非モーダル フォームとは異なり、<xref:System.Windows.Forms.Form.Close%2A>ユーザー ダイアログ ボックスのフォームを閉じるボタンをクリックするかの値を設定する場合、メソッドは、.NET Framework で呼び出されません、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1171">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="0a005-1172">代わりにフォームを非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1172">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="0a005-1173">終了の代わりに、ダイアログ ボックスが非表示として表示されるフォームを呼び出す必要がありますので、<xref:System.Windows.Forms.Control.Dispose%2A>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1173">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="0a005-1174">このバージョンの<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッドが指定されていない、フォームやコントロールの所有者。</span><span class="sxs-lookup"><span data-stu-id="0a005-1174">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="0a005-1175">このバージョンが呼び出されると、現在アクティブなウィンドウには、ダイアログ ボックスの所有者が行われます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1175">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="0a005-1176">特定の所有者を指定する場合は、このメソッドの他のバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1176">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1177">次のコード例は、モーダル ダイアログ ボックスとしてフォームを表示しの値を読み取るかどうかを決定する前に、ダイアログ ボックスの戻り値を評価、 <xref:System.Windows.Forms.TextBox>  ダイアログ ボックスのフォーム上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1177">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="0a005-1178">この例では、する必要があります、<xref:System.Windows.Forms.Form>という`testDialog`が作成されるとそれに含まれる、<xref:System.Windows.Forms.TextBox>という名前のコントロール`TextBox1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1178">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="0a005-1179">さらに、例では、する必要がありますこの例のコードが含まれているを異なると呼ばれる<xref:System.Windows.Forms.Form>を表示するために`testDialog`モーダル ダイアログ ボックスとして。</span><span class="sxs-lookup"><span data-stu-id="0a005-1179">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="0a005-1180">例では、バージョンを使用して<xref:System.Windows.Forms.Form.ShowDialog%2A> ダイアログ ボックスの所有者を指定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1180">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a005-1181">表示しようとしているフォームが既に表示されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1181">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="0a005-1182">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1182">-or-</span>
          </span>
          <span data-ttu-id="0a005-1183">表示しようとしているフォームが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1183">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="0a005-1184">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1184">-or-</span>
          </span>
          <span data-ttu-id="0a005-1185">表示しようとしているフォームがトップレベル ウィンドウではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1185">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="0a005-1186">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1186">-or-</span>
          </span>
          <span data-ttu-id="0a005-1187">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1187">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="0a005-1188">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1188">-or-</span>
          </span>
          <span data-ttu-id="0a005-1189">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1189">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="0a005-1190">モーダル ダイアログ ボックスを所有するトップレベル ウィンドウを表す <see cref="T:System.Windows.Forms.IWin32Window" /> を実装しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1190">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1191">指定した所有者を持つモーダル ダイアログ ボックスとしてフォームを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1191">Shows the form as a modal dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1192">
            <see cref="T:System.Windows.Forms.DialogResult" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1192">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1193">このメソッドを使用すると、アプリケーションでモーダル ダイアログ ボックスを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1193">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="0a005-1194">このメソッドが呼び出されると、ダイアログ ボックスが閉じられた後まで次に続くコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1194">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="0a005-1195">値のいずれかのダイアログ ボックスを割り当てることのできる<xref:System.Windows.Forms.DialogResult>に割り当てることで、<xref:System.Windows.Forms.Button.DialogResult%2A>のプロパティ、<xref:System.Windows.Forms.Button>フォームのかを設定して、<xref:System.Windows.Forms.Form.DialogResult%2A>コード内のフォームのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1195">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="0a005-1196">この値は、このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1196">This value is then returned by this method.</span></span> <span data-ttu-id="0a005-1197">この戻り値を使用すると、ダイアログ ボックスで発生したアクションを処理するのに方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1197">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="0a005-1198">たとえば、ダイアログ ボックスが閉じられ、返される場合、`DialogResult.Cancel`値このメソッドを使用する呼び出しの後のコードを防ぐことが<xref:System.Windows.Forms.Form.ShowDialog%2A>からを実行します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1198">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="0a005-1199">フォームはモーダル ダイアログ ボックスとして表示される場合にクリックすると、**閉じる**ボタン (フォームの右上隅の X の付いたボタン) がフォームを非表示にすると、および<xref:System.Windows.Forms.Form.DialogResult%2A>設定するプロパティを`DialogResult.Cancel`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1199">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="0a005-1200">モードレスのフォームとは異なり、<xref:System.Windows.Forms.Form.Close%2A>ユーザー ダイアログ ボックスのフォームを閉じるボタンをクリックするかの値を設定する場合、メソッドは、.NET Framework で呼び出されません、<xref:System.Windows.Forms.Form.DialogResult%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1200">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="0a005-1201">代わりにフォームを非表示にし、ダイアログ ボックスの新しいインスタンスを作成しなくても再表示できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1201">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="0a005-1202">終了の代わりに、ダイアログ ボックスが非表示として表示されるフォームを呼び出す必要がありますので、<xref:System.Windows.Forms.Control.Dispose%2A>フォームは、アプリケーションで不要になったときのフォームのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1202">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="0a005-1203">このバージョンの<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッドでは、特定のフォームに表示されるダイアログ ボックスを所有することを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1203">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1204">次のコード例は、モーダル ダイアログ ボックスとしてフォームを表示しの値を読み取るかどうかを決定する前に、ダイアログ ボックスの戻り値を評価、 <xref:System.Windows.Forms.TextBox>  ダイアログ ボックスのフォーム上のコントロールです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1204">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="0a005-1205">この例では、する必要があります、<xref:System.Windows.Forms.Form>という`Form2`が作成されるとそれに含まれる、<xref:System.Windows.Forms.TextBox>という名前のコントロール`TextBox1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1205">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="0a005-1206">例では、バージョンを使用して<xref:System.Windows.Forms.Form.ShowDialog%2A> ダイアログ ボックスの所有者を指定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1206">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a005-1207">
            <paramref name="owner" /> パラメーターで指定されたフォームが、表示しようとしているフォームと同じです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1207">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a005-1208">表示しようとしているフォームが既に表示されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1208">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="0a005-1209">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1209">-or-</span>
          </span>
          <span data-ttu-id="0a005-1210">表示しようとしているフォームが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1210">The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="0a005-1211">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1211">-or-</span>
          </span>
          <span data-ttu-id="0a005-1212">表示しようとしているフォームがトップレベル ウィンドウではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1212">The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="0a005-1213">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1213">-or-</span>
          </span>
          <span data-ttu-id="0a005-1214">ダイアログ ボックスとして表示しようとしているフォームが既にモーダル フォームです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1214">The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="0a005-1215">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1215">-or-</span>
          </span>
          <span data-ttu-id="0a005-1216">現在のプロセスがユーザー対話モードで実行されていません (詳細については、<see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> のトピックを参照してください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1216">The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1217">フォームのキャプション バーにアイコンを表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1217">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1218">フォームのキャプション バーにアイコンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1218">
              <see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1219">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1219">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1220"><xref:System.Windows.Forms.Form.ShowIcon%2A>プロパティが含まれています、<xref:System.Boolean>を示す値かどうか、フォームの<xref:System.Windows.Forms.Form.Icon%2A>フォームのキャプション バーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1220">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="0a005-1221">場合、<xref:System.Windows.Forms.Form.ControlBox%2A>プロパティは`false`アイコンとコントロールの両方のボックスが表示されなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1221">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="0a005-1222">場合<xref:System.Windows.Forms.Form.ShowIcon%2A>は`false`アプリケーションのタスク バー ボタンに一般的なアイコンが表示されますプライマリ フォームが表示されるとします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1222">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="0a005-1223">このプロパティには効果がない場合は<xref:System.Windows.Forms.Form.FormBorderStyle%2A>に設定されている<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1223">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="0a005-1224">その場合は、フォームでは、アイコンは表示されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1224">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1225">フォームを Windows タスクバーに表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1225">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1226">実行時にフォームを Windows タスク バーに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1226">
              <see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1227">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1227">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1228">フォームが別のフォーム内で親がある場合、親フォームは、Windows タスク バーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1228">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="0a005-1229">このプロパティを使用して、ユーザーが、Windows タスク バーを使用してフォームを選択することを防止することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1229">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="0a005-1230">たとえば、アプリケーション内の検索と置換ツール ウィンドウを表示する可能性がある場合は、そのウィンドウが必要になるアプリケーションのメイン ウィンドウと検索を適切に処理するために表示される検索と置換ツール ウィンドウの両方に、Windows タスク バーから選択されていることを防止します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1230">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="0a005-1231">フォームを作成するときに、このプロパティを使用する多くの場合、<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>スタイル。</span><span class="sxs-lookup"><span data-stu-id="0a005-1231">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="0a005-1232">設定、<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>スタイルは単独で保証されません、タスク バーで、ウィンドウが表示されないことです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1232">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1233">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.Form.ShowInTaskbar%2A>ダイアログ ボックスのようにこのプロパティは、Windows タスク バーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1233">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1234">フォームが初めて表示されるたびに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1234">Occurs whenever the form is first displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1235"><xref:System.Windows.Forms.Form.Shown>イベントはフォームが表示される最初の時刻以外の場合は、後で最小限に抑えることを最大化、復元、非表示にする、または無効を示し、再描画する、このイベントは発生します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1235">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="0a005-1236">フォームのイベントの順序の詳細については、次を参照してください。 [Windows フォームにおけるイベントの順序](~/docs/framework/winforms/order-of-events-in-windows-forms.md)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1236">For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="0a005-1237">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1237">For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1238">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1238">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0a005-1239">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Form.Shown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1239">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="0a005-1240">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1240">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0a005-1241">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1241">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0a005-1242">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Form>という`Form1`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1242">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="0a005-1243">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Form.Shown>イベント。</span><span class="sxs-lookup"><span data-stu-id="0a005-1243">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1244">ウィンドウが表示された時点でそれをアクティブにするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1244">Gets a value indicating whether the window will be activated when it is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1245">ウィンドウが表示された時点でウィンドウをアクティブにしない場合は <see langword="True" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1245">
              <see langword="True" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1246">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1246">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1247">トップレベル ウィンドウを表示するが、現在のウィンドウから入力フォーカスを取得することにより、ユーザーの作業を中断したくない場合は、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1247">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="0a005-1248">これには、情報のポップアップ ウィンドウまたはペイント アプリケーションでツール パレットなどのフローティング ウィンドウを指定できます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1248">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="0a005-1249">このプロパティが読み取り専用では、オーバーライドすることで値を変更することができますのみする<xref:System.Windows.Forms.Form.ShowWithoutActivation%2A>フォーム、およびプログラミングを返す`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1249">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="0a005-1250">非アクティブ ウィンドウの UI コントロールを使用する場合、使用を検討する必要があります、<xref:System.Windows.Forms.ToolStrip>などのコントロール<xref:System.Windows.Forms.ToolStripDropDown>です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1250">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="0a005-1251">これらのコントロールはウィンドウレスとは、選択した場合にアクティブ化 ウィンドウは発生しません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1251">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1252">フォームのサイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1252">Gets or sets the size of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1253">フォームのサイズを表す <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1253">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1254">このプロパティでは、設定ではなく、同時に高さと幅 (ピクセル単位) の形式の両方を設定することができます、<xref:System.Windows.Forms.Control.Height%2A>と<xref:System.Windows.Forms.Control.Width%2A>プロパティ個別にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1254">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="0a005-1255">フォームの位置とサイズを設定する場合は、使用、<xref:System.Windows.Forms.Form.DesktopBounds%2A>のサイズし、フォームを検索するプロパティがデスクトップ座標または使用に基づく、<xref:System.Windows.Forms.Control.Bounds%2A>のプロパティ、<xref:System.Windows.Forms.Control>画面座標に基づいて、フォームの位置とサイズを設定するクラス。</span><span class="sxs-lookup"><span data-stu-id="0a005-1255">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-1256">このプロパティの最大値は、フォームが実行されている画面の解像度によって制限されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1256">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="0a005-1257">値は、各画面ディメンション (水平 + 12 と垂直 + 12) で 12 ピクセルを超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1257">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a005-1258">Pocket PC デバイスに設定してサイズを変更できるウィンドウを作成することができます<xref:System.Windows.Forms.Form.FormBorderStyle%2A>に`None`も削除して<xref:System.Windows.Forms.MainMenu>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-1258">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="0a005-1259">SmartPhone デバイスにすることはありませんサイズを変更できる、 <xref:System.Windows.Forms.Form> -画面全体で常がいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1259">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1260">次のコード例では、75% の不透明度で表示されるフォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1260">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="0a005-1261">コード例で画面の中央に位置している新しいフォームを作成する、<xref:System.Windows.Forms.Form.Opacity%2A>フォームの不透明度のレベルを変更するプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1261">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="0a005-1262">また、コード例、設定、<xref:System.Windows.Forms.Form.Size%2A>プロパティより大きいサイズのフォームの既定のサイズよりもフォーム。</span><span class="sxs-lookup"><span data-stu-id="0a005-1262">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="0a005-1263">この例では、イベント ハンドラーまたは他の方法で別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1263">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1264">フォームの右下隅に表示するサイズ変更グリップのスタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1264">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1265">表示するサイズ変更グリップのスタイルを表す <see cref="T:System.Windows.Forms.SizeGripStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1265">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span>
          </span>
          <span data-ttu-id="0a005-1266">既定値は、<see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1266">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1267">このプロパティでは、フォームのサイズ変更グリップを表示する場合を判断することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1267">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="0a005-1268">サイズ変更グリップを表示したりの設定に基づいて自動的に表示されること、このプロパティを設定することができます、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1268">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1269">次のコード例は、のサイズ変更グリップを非表示にする方法を示します、<xref:System.Windows.Forms.Form>ときに、<xref:System.Windows.Forms.Form>サイズは変更できません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1269">The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-1270">指定された値が有効値の範囲内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1270">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1271">実行時にフォームの開始位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1271">Gets or sets the starting position of the form at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1272">フォームの開始位置を表す <see cref="T:System.Windows.Forms.FormStartPosition" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1272">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1273">このプロパティでは、実行時に表示される場合に、フォームの開始位置を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1273">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="0a005-1274">フォームの位置を設定して手動で指定できます、<xref:System.Windows.Forms.Form.Location%2A>プロパティまたは Windows によって指定された既定の場所を使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1274">The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="0a005-1275">画面の中央またはマルチ ドキュメント インターフェイス (MDI) 子フォームなどのフォームは、親フォームの中央に表示するフォームを配置することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1275">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="0a005-1276">フォームが表示される前に、このプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1276">This property should be set before the form is shown.</span></span>  <span data-ttu-id="0a005-1277">呼び出す前に、このプロパティを設定することができます、<xref:System.Windows.Forms.Form.Show%2A>または<xref:System.Windows.Forms.Form.ShowDialog%2A>メソッドまたはフォームのコンス トラクターでします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1277">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1278">次のコード例は、の新しいインスタンスを作成、<xref:System.Windows.Forms.Form>を呼び出すと、 <xref:System.Windows.Forms.Form.ShowDialog%2A>  ダイアログ ボックスとしてフォームを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0a005-1278">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="0a005-1279">例のセット、 <xref:System.Windows.Forms.Form.FormBorderStyle%2A>、 <xref:System.Windows.Forms.Form.AcceptButton%2A>、 <xref:System.Windows.Forms.Form.CancelButton%2A>、および<xref:System.Windows.Forms.Form.StartPosition%2A> ダイアログ ボックスに、フォームの機能と外観を変更するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1279">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="0a005-1280">また、例では、<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>メソッド、フォームの<xref:System.Windows.Forms.Control.Controls%2A>2 を追加するコレクション<xref:System.Windows.Forms.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="0a005-1280">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="0a005-1281">この例では、 <xref:System.Windows.Forms.Form.HelpButton%2A>  ダイアログ ボックスのキャプション バーに、ヘルプ ボタンを表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1281">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-1282">指定された値が有効値の範囲内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1282">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1283">コンテナー内のコントロールのタブ オーダーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1283">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1284">タブ オーダーに含まれるコンテナー内のコントロールのセットにおけるコントロールのインデックスを含む <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1284">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1285">フォームは、タブ オーダーにおけるは含まれません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1285">Forms are not included in the tab order.</span></span> <span data-ttu-id="0a005-1286">設定、<xref:System.Windows.Forms.Form.TabIndex%2A>プロパティは、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1286">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1287">
            <see cref="P:System.Windows.Forms.Form.TabIndex" /> プロパティの値が変更された場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1287">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1288">ユーザーが Tab キーを使用することによってこのコントロールにフォーカスを移すことができるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1288">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1289">ユーザーが Tab キーを使用してコントロールにフォーカスを移すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1289">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1290">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1290">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1291">
            <see cref="P:System.Windows.Forms.Form.TabStop" /> プロパティが変更されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1291">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1292">このコントロールに関連付けられているテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1292">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1293">このコントロールに関連付けられたテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1293">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1294">フォームをトップレベル ウィンドウとして表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1294">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1295">フォームをトップレベル ウィンドウとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1295">
              <see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1296">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1296">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1297">トップレベルのフォームは、ウィンドウを親フォームがないか、その親フォームは、デスクトップ ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1297">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="0a005-1298">最上位のウィンドウは、通常、アプリケーションのメイン フォームとして使用します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1298">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1299">次のコード例を使用して、<xref:System.Windows.Forms.Form.Modal%2A>フォームがフォームをモーダルとして表示されるかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1299">The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="0a005-1300">ない場合は、<xref:System.Windows.Forms.Form.FormBorderStyle%2A>と<xref:System.Windows.Forms.Form.TopLevel%2A>ツール ウィンドウの境界線の最上位レベルではないフォームをフォームにプロパティが変更されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1300">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="0a005-1301">マルチ ドキュメント インターフェイス (MDI) 親フォームはトップレベル ウィンドウにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1301">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1302">フォームを最上位フォームとして表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1302">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1303">フォームを最上位フォームとして表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1303">
              <see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1304">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1304">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1305">最上位フォームは、アクティブまたは前景フォームではない場合でも、その他のすべての (非最上位) フォームを重複するフォームです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1305">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="0a005-1306">常に、最上位フォームは、デスクトップ上の windows の z オーダーの最上位に表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1306">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="0a005-1307">このプロパティを使用して、検索と置換ツール ウィンドウなど、アプリケーションに常に表示されるフォームを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1307">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1308">次のコード例では、最上位フォームを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1308">The following code example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="0a005-1309">この例では、2 つの形式は、最大化、最上位フォームとして表示されるを作成します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1309">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="0a005-1310">という名前の最初のフォーム`bottomForm`、最大化を使用して表示される、<xref:System.Windows.Forms.Form.WindowState%2A>最上位のフォームの機能を詳しく説明するためのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1310">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="0a005-1311">2 番目の形式では、名前付き`topMostForm`、設定、<xref:System.Windows.Forms.Form.TopMost%2A>プロパティを`true`フォームを最上位フォームとして表示します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1311">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="0a005-1312">このコードの実行時にフォームをクリックするとフォームの下に表示される最上位のフォームが発生しません。</span><span class="sxs-lookup"><span data-stu-id="0a005-1312">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="0a005-1313">この例では、別の形式からこの例で定義されたメソッドが呼び出されることが必要です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1313">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1314">フォームの現在のインスタンスを表す文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1314">Gets a string representing the current instance of the form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1315">フォーム オブジェクトのクラスの完全修飾名で構成される文字列。フォームの <see cref="P:System.Windows.Forms.Form.Text" /> プロパティの値が末尾に追加されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1315">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          </span>
          <span data-ttu-id="0a005-1316">たとえば、フォームが <c>MyNamespace</c> 名前空間の <c>MyForm</c> クラスから派生し、<see cref="P:System.Windows.Forms.Form.Text" /> プロパティが <c>Hello, World</c> に設定された場合、このメソッドは <c>MyNamespace.MyForm, Text: Hello, World</c> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1316">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1317">フォームの透明な領域を表す色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1317">Gets or sets the color that will represent transparent areas of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1318">フォーム上で透明色として表示される色を表す <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1318">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1319">ときに、<xref:System.Windows.Forms.Form.TransparencyKey%2A>プロパティが割り当てられている、 <xref:System.Drawing.Color>、同じであるフォームの領域<xref:System.Windows.Forms.Control.BackColor%2A>が透過的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1319">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="0a005-1320">マウス、任意の操作、マウスのクリックなど、フォームの透明な領域上で実行されるは、透明な領域の下のウィンドウに転送されます。</span><span class="sxs-lookup"><span data-stu-id="0a005-1320">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="0a005-1321">たとえば場合は、フォームのクライアント領域は透明には、その領域上にマウス ポインターをクリックするとは、イベント通知を送信のクリックの下にあるウィンドウにします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1321">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="0a005-1322">色が割り当てられている場合、<xref:System.Windows.Forms.Form.TransparencyKey%2A>プロパティは、フォーム上の任意のコントロールと同じで、それらも表示されます透過的にします。</span><span class="sxs-lookup"><span data-stu-id="0a005-1322">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="0a005-1323">ある場合など、<xref:System.Windows.Forms.Button>を持つフォームのコントロールをその<xref:System.Windows.Forms.Form.TransparencyKey%2A>プロパティに設定`SystemColors.Control`、しない限り、コントロールを透過的に表示されます、<xref:System.Windows.Forms.Control.BackColor%2A>のプロパティ、<xref:System.Windows.Forms.Button>コントロールは、それぞれ異なる色に変更します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1323">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="0a005-1324">このプロパティはサポートされている場合に<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>は`true`です。</span><span class="sxs-lookup"><span data-stu-id="0a005-1324">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1325">次のコード例では、フォームの背景色に関係なく、透過的なクライアント領域のあるウィンドウを作成します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1325">The following code example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="0a005-1326">この例では、メソッドの例が、フォーム クラス内で定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1326">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1327">既定のボタンを更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1327">Updates which button is the default button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1328"><xref:System.Windows.Forms.Form.UpdateDefaultButton%2A>メソッドでは、フォームにボタンが、次の優先順位に従って、ENTER を押すとクリック イベントを発生させますを決定します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1328">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="0a005-1329">場合、<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>プロパティを実装して、<xref:System.Windows.Forms.IButtonControl>インターフェイスのコントロールが既定のボタンであります。</span><span class="sxs-lookup"><span data-stu-id="0a005-1329">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="0a005-1330"><xref:System.Windows.Forms.Form.AcceptButton%2A>プロパティは既定のボタンです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1330">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1331">フォームに含まれる選択可能な子コントロールすべてを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1331">Validates all selectable child controls in the form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1332">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1332">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1333">すべての子の検証が正常に実行された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1333">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1334">このメソッドは、<see cref="E:System.Windows.Forms.Control.Validating" /> イベント ハンドラーまたは <see cref="E:System.Windows.Forms.Control.Validated" /> イベント ハンドラーから呼び出された場合、常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1334">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" />
      </Parameters>
      <Docs>
        <param name="validationConstraints">
          <span data-ttu-id="0a005-1335">どのコントロールで <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させるかについて制限を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1335">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1336">検証をサポートするコントロールに含まれるすべての子コントロールでデータを検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1336">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a005-1337">すべての子の検証が正常に実行された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1337">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0a005-1338">このメソッドは、<see cref="E:System.Windows.Forms.Control.Validating" /> イベント ハンドラーまたは <see cref="E:System.Windows.Forms.Control.Validated" /> イベント ハンドラーから呼び出された場合、常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1338">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a005-1339">フォームが最小化されているか、最大化されているか、通常の状態であるかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1339">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a005-1340">フォームが最小化されているか、最大化されているか、通常の状態であるかを表す <see cref="T:System.Windows.Forms.FormWindowState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1340">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span>
          </span>
          <span data-ttu-id="0a005-1341">既定値は、<see langword="FormWindowState.Normal" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1341">The default is <see langword="FormWindowState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a005-1342">フォームが表示される前に、<xref:System.Windows.Forms.Form.WindowState%2A>プロパティは常に設定`FormWindowState.Normal`初期設定に関係なく、します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1342">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="0a005-1343">これに反映されて、 <xref:System.Windows.Forms.Control.Height%2A>、 <xref:System.Windows.Forms.Control.Left%2A>、 <xref:System.Windows.Forms.Control.Top%2A>、および<xref:System.Windows.Forms.Control.Width%2A>プロパティの設定。</span><span class="sxs-lookup"><span data-stu-id="0a005-1343">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="0a005-1344">これらのプロパティに加えられた変更に関係なく、フォームが再度表示されるまでに、以前の状態を反映フォームが表示された後に非表示の場合、<xref:System.Windows.Forms.Form.WindowState%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0a005-1344">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a005-1345">次のコード例は、設定する方法を示します、<xref:System.Windows.Forms.Form.WindowState%2A>を最大化します。</span><span class="sxs-lookup"><span data-stu-id="0a005-1345">The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="0a005-1346">コードを呼び出す、<xref:System.Windows.Forms.Form.Shown>フォームが作成された後のイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="0a005-1346">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="0a005-1347">指定された値が有効値の範囲内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1347">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="0a005-1348">処理対象の Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1348">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a005-1349">Windows メッセージを処理します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a005-1349">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>