<Type Name="DomainUpDown" FullName="System.Windows.Forms.DomainUpDown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a284b348033c02016079e5488931c0b5af98d8e0" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DomainUpDown : System.Windows.Forms.UpDownBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DomainUpDown extends System.Windows.Forms.UpDownBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class DomainUpDown&#xA;Inherits UpDownBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DomainUpDown : System::Windows::Forms::UpDownBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("SelectedItem")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedItemChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列値を表示する Windows スピン ボックス (アップダウン コントロール) を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.DomainUpDown>コントロールから選択されている 1 つの文字列値を表示する、<xref:System.Object>上矢印をクリックするか、下向きの矢印ボタン コントロールのコレクション。 入力できるテキスト コントロールでは、しない限り、<xref:System.Windows.Forms.UpDownBase.ReadOnly%2A>プロパティに設定されている`true`(で入力文字列は受け入れられるをコレクション内の項目を一致する必要があります)。 項目が選択されているときに、スピン ボックスに表示できるように、オブジェクトが文字列値に変換されます。  
  
 表示するオブジェクトのコレクションを作成する、<xref:System.Windows.Forms.DomainUpDown>コントロールを追加するかを使用して、アイテムを個別に削除、<xref:System.Collections.ArrayList.Add%2A>と<xref:System.Collections.ArrayList.Remove%2A>メソッドです。 これで呼び出すできます、イベント ハンドラーなど、<xref:System.Windows.Forms.Control.Click>ボタンのイベントです。 設定によってはオブジェクトのコレクションをアルファベット順に並べ替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティを`true`です。 ときに、<xref:System.Windows.Forms.DomainUpDown.Wrap%2A>プロパティに設定されている`true`過去の最後にスクロールするか、コレクション内の最初オブジェクト リストが最初と最後のオブジェクトにそれぞれ経由で起動し、継続的なリスト内のロールを表示する場合は、します。  
  
 ときに、<xref:System.Windows.Forms.DomainUpDown.UpButton%2A>または<xref:System.Windows.Forms.DomainUpDown.DownButton%2A>メソッドが呼び出されると、コードまたは上矢印または下矢印ボタンをクリックして<xref:System.Windows.Forms.DomainUpDown.UpdateEditText%2A>が呼び出され、新しい文字列で、コントロールを更新します。 場合<xref:System.Windows.Forms.UpDownBase.UserEdit%2A>に設定されている`true`コントロールのテキストの表示を更新する前に、コレクション内の値のいずれかに、文字列は一致します。  
  
 .NET Framework 4.6 以降で、<xref:System.Windows.Forms.DomainUpDown>コントロールは、app.config ファイルには、次のエントリが含まれている場合は、システム DPI 設定に基づいてサイズ変更されます。  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例を使用すると、一部のプロパティを設定し、スピン ボックスに表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.Windows.Forms.NumericUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DomainUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DomainUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例では、一部のプロパティを設定し、スピン ボックス (アップダウン コントロール) で表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールの新しいユーザー補助オブジェクトを作成します。</summary>
        <returns>コントロールの新しい <see cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 明示的に <xref:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance%2A> メソッドを呼び出さない場合は、<xref:System.Windows.Forms.Control.AccessibilityObject%2A> プロパティが参照されると呼び出されます。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.Control.AccessibilityObject%2A> プロパティを取得または設定するには、.NET Framework と一緒にインストールされているユーザー補助アセンブリへの参照を追加する必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" />派生クラスで呼び出す必要はありません、基本クラスの<see cref="M:System.Windows.Forms.DomainUpDown.CreateAccessibilityInstance" />メソッドです。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクト コレクションで次の項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内の項目のコレクションを移動すると、<xref:System.Windows.Forms.DomainUpDown>下矢印ボタンを使用して制御、最終的には、コレクション内の最後の項目に届きます。 続行する場合、および<xref:System.Windows.Forms.DomainUpDown.Wrap%2A>に設定されている`true`一覧は、コレクションの最初の項目を始めし、を継続として表示されます。 この動作は、印ボタンを使用して、コレクション内を移動するときにも発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DomainUpDown/DomainUpDownItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As DomainUpDown.DomainUpDownItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DomainUpDown::DomainUpDownItemCollection ^ Items { System::Windows::Forms::DomainUpDown::DomainUpDownItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スピン ボックス (アップダウン コントロール) に割り当てられているオブジェクトのコレクション。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" /> コレクションを含む <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Object>コレクションを構築およびからアクセスできる、 <xref:System.Windows.Forms.DomainUpDown> 2 つの方法で制御します。 使用してコレクションに項目を追加することができます、<xref:System.Collections.ArrayList.Add%2A>または<xref:System.Collections.ArrayList.Insert%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例を使用すると、一部のプロパティを設定し、スピン ボックスに表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
        <altmember cref="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected override void OnChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChanged (source As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChanged(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected void OnSelectedItemChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSelectedItemChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSelectedItemChanged (source As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSelectedItemChanged(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例では、一部のプロパティを設定し、スピン ボックス (アップダウン コントロール) で表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DomainUpDown.OnSelectedItemChanged(System.Object,System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
        <altmember cref="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Forms.UpDownBase.ReadOnly%2A>プロパティに設定されている`true`、<xref:System.Windows.Forms.DomainUpDown>コントロールは、文字で始まるリストの項目を選択します。 コレクション内の 1 つ以上の項目が、同じ文字で始まる場合、<xref:System.Windows.Forms.DomainUpDown>コントロールは、現在選択されている位置から、型指定された文字で始まる次の項目を選択します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Forms.DomainUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールの内容とコントロールの端の間隔を取得または設定します。</summary>
        <value>
          常に <see cref="F:System.Windows.Forms.Padding.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定した場合でも、<xref:System.Windows.Forms.DomainUpDown.Padding%2A>プロパティの値になります<xref:System.Windows.Forms.Padding.Empty>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DomainUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DomainUpDown.Padding" /> プロパティの値が変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された項目のインデックス値を取得または設定します。</summary>
        <value>選択された項目の 0 から始まるインデックス値。 既定値は -1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A>プロパティは、スピン ボックス (アップダウン コントロール) で現在選択されているコレクション内の項目のインデックス値を保持します。 場合、コレクション アイテムが再割り当てされた新しいインデックスの値を指定できます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>からプロパティが変更された`false`に`true`です。 コレクションが再度並べ替えられるアルファベット順と、アイテムには、新しいインデックス値が割り当てられます。  
  
> [!NOTE]
>  ユーザーがスピン ボックスで、項目を入力した場合、または項目が選択されていない場合、<xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A>値は既定値は-1 になります。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例を使用すると、一部のプロパティを設定し、スピン ボックスに表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">代入された値が既定値の -1 未満です。  
  
 - または -  
  
 代入された値が <see cref="P:System.Windows.Forms.DomainUpDown.Items" /> 数を超える値です。</exception>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内で選択された項目のインデックス値に基づいて、選択された項目を取得または設定します。</summary>
        <value>
          <see cref="P:System.Windows.Forms.DomainUpDown.SelectedIndex" /> 値に基づいて選択された項目。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値が、コレクション内の項目のいずれかに検証がこのプロパティを設定すると、および<xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A>プロパティが適切なインデックス値に設定します。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例では、一部のプロパティを設定し、スピン ボックス (アップダウン コントロール) で表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DomainUpDown.SelectedItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedItemChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" /> プロパティが変更されているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged>が発生するイベント、<xref:System.Windows.Forms.DomainUpDown.SelectedItem%2A>下向きの矢印ボタンまたは 新しい値を入力するか、コントロールの上をクリックすると、ユーザーが、コードでは、プロパティを変更できます。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用方法を示します。 例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged>イベント。 このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。 複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DomainUpDown>という`DomainUpDown1`です。 イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.DomainUpDown.SelectedItemChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#381](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#381)]
 [!code-vb[System.Windows.Forms.EventExamples#381](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#381)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.SelectedItem" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の項目が並べ替えられたかどうかを示す値を取得または設定します。</summary>
        <value>
          コレクション内の項目が並べ替えられている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>に設定されている`true`コレクションがアルファベット順に並べ替えられます。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例では、一部のプロパティを設定し、スピン ボックス (アップダウン コントロール) で表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DomainUpDown" /> コントロールを表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Windows.Forms.DomainUpDown" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値の文字列型の値を含む、<xref:System.Collections.ArrayList.Count%2A>と<xref:System.Windows.Forms.DomainUpDown.SelectedIndex%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションで 1 つ前の項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内の項目のコレクションを移動すると、<xref:System.Windows.Forms.DomainUpDown>印ボタンを使用して制御、最終的には、コレクションの最初の項目に届きます。 続行する場合、および<xref:System.Windows.Forms.DomainUpDown.Wrap%2A>に設定されている`true`一覧は、コレクション内の最後の項目を始めし、を継続として表示されます。 この動作は、下矢印ボタンを使用して、コレクション内を移動するときにも発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択された項目を表示するには、スピン ボックス (アップダウン コントロール) でテキストを更新します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.UpDownBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Wrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のコレクションのリストで、ユーザーがリストの末尾の項目を通過しても参照を続けた場合に、最初または最後の項目が引き続き表示されるかどうかを示す値を取得または設定します。</summary>
        <value>
          ユーザーがコレクションの先頭または末尾に到達したときに再びリストが表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DomainUpDown.Wrap%2A>プロパティに設定されている`true`コレクション内の最後の項目に到達し、続行には、一覧は、最初の項目を最初からやり直すを継続として表示されます。 この動作は、同様に逆の順序で動作します。  
  
   
  
## Examples  
 次のコード例は、作成し、初期化、<xref:System.Windows.Forms.DomainUpDown>コントロール。 この例では、一部のプロパティを設定し、スピン ボックス (アップダウン コントロール) で表示する文字列のコレクションを作成できます。 コードでは、 <xref:System.Windows.Forms.TextBox>、 <xref:System.Windows.Forms.CheckBox>、および<xref:System.Windows.Forms.Button>フォームでインスタンス化されました。 例がという名前の 32 ビット符号付き整数として宣言されたクラス レベルのメンバー変数があると想定も`myCounter`します。 テキスト ボックスに文字列を入力しに追加することができます、<xref:System.Windows.Forms.DomainUpDown.Items%2A>ボタンがクリックされたときのコレクション。 チェック ボックスをクリックし、切り替えることができます、<xref:System.Windows.Forms.DomainUpDown.Sorted%2A>プロパティをスピン ボックス アイテムのコレクション内の違いを観察します。  
  
 [!code-cpp[Classic DomainUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DownButton" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.UpButton" />
      </Docs>
    </Member>
  </Members>
</Type>