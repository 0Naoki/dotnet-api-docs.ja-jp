<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Screen.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c786ab97dcb90a33279b1106c45bbec1360961e9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c786ab97dcb90a33279b1106c45bbec1360961e9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Screen">
          <source>Represents a display device or multiple display devices on a single system.</source>
          <target state="translated">1 つのシステム上の 1 つ以上のディスプレイ デバイスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>The constructor for this object is not public, so you cannot explicitly create a <ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph> object.</source>
          <target state="translated">このオブジェクトのコンス トラクターがパブリックでないため、明示的に作成することはできません、<ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>The object is created when you call its public methods.</source>
          <target state="translated">オブジェクトは、そのパブリック メソッドを呼び出すときに作成されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>The following code example shows how to use various methods and properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph> class.</source>
          <target state="translated">次のコード例は、各種のメソッドとプロパティを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Screen.AllScreens%2A&gt;</ph> property to retrieve an array of all the screens connected to the system.</source>
          <target state="translated">呼び出しの例、<ph id="ph1">&lt;xref:System.Windows.Forms.Screen.AllScreens%2A&gt;</ph>システムに接続されているすべての画面の配列を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>For each returned <ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph>, the example adds the device name, bounds, type, working area, and primary screen to a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>.</source>
          <target state="translated">返される各<ph id="ph1">&lt;xref:System.Windows.Forms.Screen&gt;</ph>、例では、デバイス名、境界、種類、作業領域、および追加する画面をプライマリ、<ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Screen">
          <source>To use the example, add a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to a form, and then add a <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for the button.</source>
          <target state="translated">例を使用するのには、追加、<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>フォームにし、追加、<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph>ボタンのイベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.AllScreens">
          <source>Gets an array of all displays on the system.</source>
          <target state="translated">システム上のすべてのディスプレイの配列を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.AllScreens">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>, containing all displays on the system.</source>
          <target state="translated">システム上のすべてのディスプレイを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.BitsPerPixel">
          <source>Gets the number of bits of memory, associated with one pixel of data.</source>
          <target state="translated">1 ピクセルのデータに関連付けられているメモリのビット数を取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.BitsPerPixel">
          <source>The number of bits of memory, associated with one pixel of data</source>
          <target state="translated">1 ピクセルのデータに関連付けられているメモリのビット数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.BitsPerPixel">
          <source>Typically, the number of bits per pixel for a screen is useful when working with bitmaps.</source>
          <target state="translated">通常、画面のピクセルあたりのビット数は、ビットマップを操作するときに便利ですです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.BitsPerPixel">
          <source>For more information about bitmaps, see <bpt id="p1">[</bpt>Types of Bitmaps<ept id="p1">](~/docs/framework/winforms/advanced/types-of-bitmaps.md)</ept>.</source>
          <target state="translated">ビットマップの詳細については、次を参照してください。<bpt id="p1">[</bpt>型のビットマップ<ept id="p1">](~/docs/framework/winforms/advanced/types-of-bitmaps.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.Bounds">
          <source>Gets the bounds of the display.</source>
          <target state="translated">ディスプレイの範囲を取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.Bounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, representing the bounds of the display.</source>
          <target state="translated">ディスプレイの範囲を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.DeviceName">
          <source>Gets the device name associated with a display.</source>
          <target state="translated">ディスプレイに関連付けられているデバイス名を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.DeviceName">
          <source>The device name associated with a display.</source>
          <target state="translated">ディスプレイに関連付けられているデバイス名。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.DeviceName">
          <source>This string may contain non-printable characters.</source>
          <target state="translated">この文字列は、印刷不可能な文字を含めることがあります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.Equals(System.Object)">
          <source>The object to compare to this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> と比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.Equals(System.Object)">
          <source>Gets or sets a value indicating whether the specified object is equal to this <ph id="ph1">&lt;see langword="Screen" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトが、この <ph id="ph1">&lt;see langword="Screen" /&gt;</ph> と同じであるどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトがこの <ph id="ph1">&lt;see langword="true" /&gt;</ph> に等しい場合は <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> for which to retrieve a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> の取得条件となる <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest portion of the specified control.</source>
          <target state="translated">指定したコントロールの最大部分を保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest region of the specified control.</source>
          <target state="translated">指定したコントロールの最大領域を保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)">
          <source>In multiple display environments where no display contains the control, the display closest to the specified control is returned.</source>
          <target state="translated">コントロールを保持するディスプレイがない複数ディスプレイ環境では、指定したコントロールに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>The window handle for which to retrieve the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> の取得条件となるウィンドウ ハンドル。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest portion of the object referred to by the specified handle.</source>
          <target state="translated">指定したハンドルによって参照されているオブジェクトの最大領域を保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest region of the object.</source>
          <target state="translated">オブジェクトの最大領域を保持するディスプレイの <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>In multiple display environments where no display contains any portion of the specified window, the display closest to the object is returned.</source>
          <target state="translated">指定したウィンドウのどの部分を含むディスプレイもない複数ディスプレイ環境では、オブジェクトに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>to get an object from a Win32 handle.</source>
          <target state="translated">Win32 ハンドルからオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.FromHandle(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location for which to retrieve a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> の取得条件となる位置を指定する <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the specified point.</source>
          <target state="translated">指定したポイントを保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the point.</source>
          <target state="translated">ポイントを保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>In multiple display environments where no display contains the point, the display closest to the specified point is returned.</source>
          <target state="translated">ポイントを保持するディスプレイがない複数ディスプレイ環境では、指定したポイントに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Screen.FromPoint%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Screen.FromPoint%2A&gt;</ph> メソッドを使用するコード例を次に示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)">
          <source>This example creates a <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> referencing the <ph id="ph2">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> coordinates passed by a <ph id="ph4">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph>, and then uses the <ph id="ph5">&lt;xref:System.Windows.Forms.Screen.FromPoint%2A&gt;</ph> method to determine if the point clicked is on the primary screen.</source>
          <target state="translated">この例で作成、<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>を参照する、<ph id="ph2">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>によって渡された座標、 <ph id="ph4">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph>、しを使用して、<ph id="ph5">&lt;xref:System.Windows.Forms.Screen.FromPoint%2A&gt;</ph>がプライマリ画面上に、ポイントがクリックされたかどうかを決定するメソッド。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display.</source>
          <target state="translated">ディスプレイの取得条件となる領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest portion of the rectangle.</source>
          <target state="translated">四角形の最大部分を保持するディスプレイの <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph> for the display that contains the largest region of the specified rectangle.</source>
          <target state="translated">指定した四角形の最大領域を保持するディスプレイを表す <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Screen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)">
          <source>In multiple display environments where no display contains the rectangle, the display closest to the rectangle is returned.</source>
          <target state="translated">四角形を保持するディスプレイがない複数ディスプレイ環境では、四角形に最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Screen">
          <source>Retrieves the bounds of the display.</source>
          <target state="translated">ディスプレイの範囲を取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the coordinates for which to retrieve the display bounds.</source>
          <target state="translated">ディスプレイの範囲の取得条件となる座標を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)">
          <source>Retrieves the bounds of the display that contains the specified point.</source>
          <target state="translated">指定したポイントを保持するディスプレイの範囲を取得します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the bounds of the display that contains the specified point.</source>
          <target state="translated">指定したポイントを保持するディスプレイの範囲を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)">
          <source>In multiple display environments where no display contains the specified point, the display closest to the point is returned.</source>
          <target state="translated">指定したポイントを保持するディスプレイがない複数ディスプレイ環境では、そのポイントに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated">ディスプレイの範囲の取得条件となる領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)">
          <source>Retrieves the bounds of the display that contains the largest portion of the specified rectangle.</source>
          <target state="translated">指定した四角形の最大部分を保持するディスプレイの範囲を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the bounds of the display that contains the specified rectangle.</source>
          <target state="translated">指定した四角形を保持するディスプレイの範囲を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)">
          <source>In multiple display environments where no monitor contains the specified rectangle, the monitor closest to the rectangle is returned.</source>
          <target state="translated">指定した四角形を保持するディスプレイを持たないマルチ ディスプレイ環境の場合、その四角形に最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> for which to retrieve the display bounds.</source>
          <target state="translated">ディスプレイの範囲の取得条件となる <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)">
          <source>Retrieves the bounds of the display that contains the largest portion of the specified control.</source>
          <target state="translated">指定したコントロールの最大領域を保持するディスプレイの範囲を取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the bounds of the display that contains the specified control.</source>
          <target state="translated">指定したコントロールを保持するディスプレイの範囲を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)">
          <source>In multiple display environments where no display contains the specified control, the display closest to the control is returned.</source>
          <target state="translated">指定したコントロールを含むディスプレイがない複数ディスプレイ環境では、そのコントロールに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetHashCode">
          <source>Computes and retrieves a hash code for an object.</source>
          <target state="translated">オブジェクトのハッシュ コードを計算して取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetHashCode">
          <source>A hash code for an object.</source>
          <target state="translated">オブジェクトのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.GetHashCode">
          <source>This method implements the <ph id="ph1">&lt;xref:System.Object&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Screen">
          <source>Retrieves the working area of a display.</source>
          <target state="translated">ディスプレイの作業領域を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the coordinates for which to retrieve the working area.</source>
          <target state="translated">作業領域の取得条件となる座標を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>Retrieves the working area closest to the specified point.</source>
          <target state="translated">指定したポイントに最も近い作業領域を取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</source>
          <target state="translated">作業領域とは、ディスプレイのデスクトップ領域からタスクバー、ドッキングされたウィンドウ、およびドッキングされたツール バーを除いた部分です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the working area.</source>
          <target state="translated">作業領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>In multiple display environments where no display contains the specified point, the display closest to the point is returned.</source>
          <target state="translated">指定したポイントを保持するディスプレイがない複数ディスプレイ環境では、そのポイントに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Windows.Forms.Screen.PrimaryScreen%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Screen.GetWorkingArea%2A&gt;</ph> method.</source>
          <target state="translated">使用を次のコード例に示します<ph id="ph1">&lt;xref:System.Windows.Forms.Screen.PrimaryScreen%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Windows.Forms.Screen.GetWorkingArea%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)">
          <source>This method requires a form containing a button named <ph id="ph1">`Button1`</ph></source>
          <target state="translated">このメソッドには、という名前のボタンを含むフォームが必要です。 <ph id="ph1">`Button1`</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the working area.</source>
          <target state="translated">作業領域の取得条件となる領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)">
          <source>Retrieves the working area for the display that contains the largest portion of the specified rectangle.</source>
          <target state="translated">指定した四角形の最大部分を保持するディスプレイの作業領域を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)">
          <source>The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</source>
          <target state="translated">作業領域とは、ディスプレイのデスクトップ領域からタスクバー、ドッキングされたウィンドウ、およびドッキングされたツール バーを除いた部分です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the working area.</source>
          <target state="translated">作業領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)">
          <source>In multiple display environments where no display contains the specified rectangle, the display closest to the rectangle is returned.</source>
          <target state="translated">指定した四角形を保持するディスプレイがない複数ディスプレイ環境では、四角形に最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> for which to retrieve the working area.</source>
          <target state="translated">作業領域の取得条件となる <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)">
          <source>Retrieves the working area for the display that contains the largest region of the specified control.</source>
          <target state="translated">指定したコントロールの最大領域を保持するディスプレイの作業領域を取得します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)">
          <source>The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</source>
          <target state="translated">作業領域とは、ディスプレイのデスクトップ領域からタスクバー、ドッキングされたウィンドウ、およびドッキングされたツール バーを除いた部分です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the working area.</source>
          <target state="translated">作業領域を指定する <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)">
          <source>In multiple display environments where no display contains the specified control, the display closest to the control is returned.</source>
          <target state="translated">指定したコントロールを含むディスプレイがない複数ディスプレイ環境では、そのコントロールに最も近いディスプレイが返されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.Primary">
          <source>Gets a value indicating whether a particular display is the primary device.</source>
          <target state="translated">特定のディスプレイがプライマリ デバイスかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.Primary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this display is primary; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ディスプレイがプライマリ デバイスである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.PrimaryScreen">
          <source>Gets the primary display.</source>
          <target state="translated">プライマリ ディスプレイを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.PrimaryScreen">
          <source>The primary display.</source>
          <target state="translated">プライマリ ディスプレイ。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.PrimaryScreen">
          <source>For a single display system, the primary display is the only display.</source>
          <target state="translated">1 つのディスプレイ システムでは、プライマリ ディスプレイはディスプレイのみです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.PrimaryScreen">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Windows.Forms.Screen.PrimaryScreen%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Screen.GetWorkingArea%2A&gt;</ph> method.</source>
          <target state="translated">使用を次のコード例に示します<ph id="ph1">&lt;xref:System.Windows.Forms.Screen.PrimaryScreen%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Windows.Forms.Screen.GetWorkingArea%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.PrimaryScreen">
          <source>This method requires a form containing a button named <ph id="ph1">`Button1`</ph>.</source>
          <target state="translated">このメソッドには、という名前のボタンを含むフォームが必要です。<ph id="ph1">`Button1`</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.ToString">
          <source>Retrieves a string representing this object.</source>
          <target state="translated">このオブジェクトを表す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Screen.ToString">
          <source>A string representation of the object.</source>
          <target state="translated">オブジェクトの文字列形式。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.WorkingArea">
          <source>Gets the working area of the display.</source>
          <target state="translated">ディスプレイの作業領域を取得します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Screen.WorkingArea">
          <source>The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</source>
          <target state="translated">作業領域とは、ディスプレイのデスクトップ領域からタスクバー、ドッキングされたウィンドウ、およびドッキングされたツール バーを除いた部分です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.WorkingArea">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>, representing the working area of the display.</source>
          <target state="translated">ディスプレイの作業領域を表す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.WorkingArea">
          <source>The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</source>
          <target state="translated">作業領域とは、ディスプレイのデスクトップ領域からタスクバー、ドッキングされたウィンドウ、およびドッキングされたツール バーを除いた部分です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Screen.WorkingArea">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Screen.WorkingArea%2A&gt;</ph> will return the entire area of the screen if the Windows Taskbar is set to Auto-Hide, no matter whether the Taskbar is currently displayed or not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Screen.WorkingArea%2A&gt;</ph> Windows タスク バーかどうか、タスク バーは、現在表示されているかに関係なく自動的に隠すに設定されている場合、画面の領域全体を返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>