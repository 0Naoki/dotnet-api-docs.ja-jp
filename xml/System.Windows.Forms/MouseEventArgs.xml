<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="92abc-101"><see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" />、<see cref="E:System.Windows.Forms.Control.MouseMove" /> の各イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="92abc-101">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92abc-102"><xref:System.Windows.Forms.Control.MouseDown>イベントは、コントロールの上にポインターが、ユーザーがマウス ボタンを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="92abc-102">The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control.</span></span> <span data-ttu-id="92abc-103"><xref:System.Windows.Forms.Control.MouseUp>イベントは、ポインターがコントロール上でマウス ボタンを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="92abc-103">The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control.</span></span> <span data-ttu-id="92abc-104"><xref:System.Windows.Forms.Control.MouseMove>イベント、コントロールの上にマウス ポインターを動かしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="92abc-104">The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control.</span></span> <span data-ttu-id="92abc-105">A<xref:System.Windows.Forms.MouseEventArgs>どのマウス ボタンが押された、何回か、マウス ボタンが押され、リリースされると、マウスのボタンと、マウス ホイールを移動量の座標を指定します。</span><span class="sxs-lookup"><span data-stu-id="92abc-105">A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.</span></span>  
  
 <span data-ttu-id="92abc-106">受信することは、<xref:System.Windows.Forms.Control.MouseDown>のに、対応するイベント<xref:System.Windows.Forms.Control.MouseUp>ユーザーがマウス ボタンを解放する前に別のアプリケーションにフォーカスを切り替える場合。</span><span class="sxs-lookup"><span data-stu-id="92abc-106">It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.</span></span>  
  
 <span data-ttu-id="92abc-107">これら 3 つのイベントがの存在、 <xref:System.Windows.Forms.Control>、 <xref:System.Windows.Forms.AxHost>、および<xref:System.Windows.Forms.NotifyIcon>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92abc-107">These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.</span></span>  
  
 <span data-ttu-id="92abc-108">イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="92abc-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92abc-109">次のコード例のハンドル、<xref:System.Windows.Forms.Control.MouseDown>でイベントを<xref:System.Windows.Forms.TextBox>コントロールをコントロールのすべてのテキストを選択するマウスの右ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="92abc-109">The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="92abc-110">この例では、フォームが含まれていますがあることが必要です、<xref:System.Windows.Forms.TextBox>というコントロール`textBox1`です。</span><span class="sxs-lookup"><span data-stu-id="92abc-110">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 <span data-ttu-id="92abc-111">次のコード例では、`Location`を追跡するプロパティは、ユーザー入力への応答で一連の線分を描画して、マウスの左ボタンのクリックします。</span><span class="sxs-lookup"><span data-stu-id="92abc-111">The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="92abc-112">例では、再描画されない行は、フォームを非表示にすると、それを再表示します。このコードは、わかりやすくするために省略されています。</span><span class="sxs-lookup"><span data-stu-id="92abc-112">The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 <span data-ttu-id="92abc-113">次のコード例では、<xref:System.Windows.Forms.MouseEventArgs.X%2A>と<xref:System.Windows.Forms.MouseEventArgs.Y%2A>でマウス ポインターの現在の位置を表示するプロパティ、<xref:System.Windows.Forms.ToolTip>ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="92abc-113">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="92abc-114">どちらのマウス ボタンが押されたかを示す <see cref="T:System.Windows.Forms.MouseButtons" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="92abc-114">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed.</span></span></param>
        <param name="clicks"><span data-ttu-id="92abc-115">マウス ボタンが押された回数。</span><span class="sxs-lookup"><span data-stu-id="92abc-115">The number of times a mouse button was pressed.</span></span></param>
        <param name="x"><span data-ttu-id="92abc-116">マウスがクリックされた位置の x 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="92abc-116">The x-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="92abc-117">マウスがクリックされた位置の y 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="92abc-117">The y-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="delta"><span data-ttu-id="92abc-118">マウス ホイールの回転回数を表す符号付きの数値。</span><span class="sxs-lookup"><span data-stu-id="92abc-118">A signed count of the number of detents the wheel has rotated.</span></span></param>
        <summary><span data-ttu-id="92abc-119"><see cref="T:System.Windows.Forms.MouseEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="92abc-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.MouseEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-120">マウスのどのボタンが押されたかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-120">Gets which mouse button was pressed.</span></span></summary>
        <value><span data-ttu-id="92abc-121"><see cref="T:System.Windows.Forms.MouseButtons" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="92abc-121">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92abc-122">次のコード例のハンドル、<xref:System.Windows.Forms.Control.MouseDown>でイベントを<xref:System.Windows.Forms.TextBox>コントロールをコントロールのすべてのテキストを選択するマウスの右ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="92abc-122">The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="92abc-123">この例では、フォームが含まれていますがあることが必要です、<xref:System.Windows.Forms.TextBox>という名前のコントロール`textBox1`です。</span><span class="sxs-lookup"><span data-stu-id="92abc-123">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-124">マウス ボタンが押されて離された回数を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-124">Gets the number of times the mouse button was pressed and released.</span></span></summary>
        <value><span data-ttu-id="92abc-125">マウス ボタンが押されて離された回数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="92abc-125">An <see cref="T:System.Int32" /> that contains the number of times the mouse button was pressed and released.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92abc-126">Windows のインターフェイスを定義しますが、標準のマウス イベントのいずれかとしてシングル クリックまたはダブルクリックする、個々 のアプリケーションが単一のイベントとして多数の数回のクリックを解釈できます。</span><span class="sxs-lookup"><span data-stu-id="92abc-126">Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92abc-127">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="92abc-127">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="92abc-128">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="92abc-128">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="92abc-129">このレポートでは、イベントが発生してデバッグに役立つについて学びます。</span><span class="sxs-lookup"><span data-stu-id="92abc-129">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="92abc-130">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="92abc-130">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="92abc-131">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Control>、ように、<xref:System.Windows.Forms.Button>または<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="92abc-131">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="92abc-132">インスタンスを名前`Control1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="92abc-132">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-133">マウス ホイールの回転回数を表す符号付きの数値に定数 WHEEL_DELTA の値を乗算した値を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-133">Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span> <span data-ttu-id="92abc-134">マウス ホイールのノッチ 1 つ分が 1 移動量に相当します。</span><span class="sxs-lookup"><span data-stu-id="92abc-134">A detent is one notch of the mouse wheel.</span></span></summary>
        <value><span data-ttu-id="92abc-135">マウス ホイールの回転回数を表す符号付きの数値に定数 WHEEL_DELTA の値を乗算した値。</span><span class="sxs-lookup"><span data-stu-id="92abc-135">A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92abc-136">マウスのホイールでは、ホイールとマウスのボタンの機能を結合します。</span><span class="sxs-lookup"><span data-stu-id="92abc-136">The mouse wheel combines the features of a wheel and a mouse button.</span></span> <span data-ttu-id="92abc-137">ホイールには、discrete、等間隔のノッチがあります。</span><span class="sxs-lookup"><span data-stu-id="92abc-137">The wheel has discrete, evenly spaced notches.</span></span> <span data-ttu-id="92abc-138">ホイールを回転するとき 1 目盛りの検出とホイール メッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="92abc-138">When you rotate the wheel, a wheel message is sent as each notch is encountered.</span></span> <span data-ttu-id="92abc-139">1 つのホイールのノッチ、分は、120 である windows 定数 wheel_delta の値、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="92abc-139">One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120.</span></span> <span data-ttu-id="92abc-140">正の値は、ホイールを (ユーザー); 奥フォワード回転されたことを示します負の値は、ホイールが (ユーザー) に向かって後方回転されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="92abc-140">A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).</span></span>  
  
 <span data-ttu-id="92abc-141">現時点では、120 の値は、1 つ分の標準です。</span><span class="sxs-lookup"><span data-stu-id="92abc-141">Currently, a value of 120 is the standard for one detent.</span></span> <span data-ttu-id="92abc-142">高解像度マウスが導入されている wheel_delta の値の定義が小さくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="92abc-142">If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller.</span></span> <span data-ttu-id="92abc-143">集計合計ではなく、正または負の値のほとんどのアプリケーションを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="92abc-143">Most applications should check for a positive or negative value rather than an aggregate total.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92abc-144">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="92abc-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="92abc-145">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="92abc-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="92abc-146">このレポートでは、イベントが発生してデバッグに役立つについて学びます。</span><span class="sxs-lookup"><span data-stu-id="92abc-146">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="92abc-147">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="92abc-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="92abc-148">実行するには、コード例から継承する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.Control>、ように、<xref:System.Windows.Forms.Button>または<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="92abc-148">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="92abc-149">インスタンスを名前`Control1`にイベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType>イベント。</span><span class="sxs-lookup"><span data-stu-id="92abc-149">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-150">マウス イベント生成時のマウスの位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-150">Gets the location of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="92abc-151">フォームの左上隅を基準としたマウスの X 座標と Y 座標 (ピクセル単位) を格納する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="92abc-151">A <see cref="T:System.Drawing.Point" /> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92abc-152">次のコード例では、<xref:System.Windows.Forms.MouseEventArgs.Location%2A>プロパティをマウスの左クリックを追跡し、ユーザー入力への応答で一連の線分を描画します。</span><span class="sxs-lookup"><span data-stu-id="92abc-152">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.Location%2A> property to track left mouse clicks and draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="92abc-153">フォームを非表示にして、それを再表示する場合に、例で描画された行が保持されません。このコードは、わかりやすくするため省略されました。</span><span class="sxs-lookup"><span data-stu-id="92abc-153">The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-154">マウス イベント生成時のマウスの x 座標を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-154">Gets the x-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="92abc-155">マウスの x 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="92abc-155">The x-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92abc-156">マウスの座標は、発生するイベントによって異なります。</span><span class="sxs-lookup"><span data-stu-id="92abc-156">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="92abc-157">たとえば、ときに、<xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType>イベントが処理される、イベントを発生させたコントロールの座標に対する相対マウス座標の値は、します。</span><span class="sxs-lookup"><span data-stu-id="92abc-157">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="92abc-158">ドラッグ アンド ドロップ操作に関連するいくつかのイベントには、フォームの原点または画面の原点とする相対的なマウス座標の値が関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="92abc-158">Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92abc-159">次のコード例では、<xref:System.Windows.Forms.MouseEventArgs.X%2A>と<xref:System.Windows.Forms.MouseEventArgs.Y%2A>でマウス ポインターの現在の位置を表示するプロパティ、<xref:System.Windows.Forms.ToolTip>ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="92abc-159">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92abc-160">マウス イベント生成時のマウスの y 座標を取得します。</span><span class="sxs-lookup"><span data-stu-id="92abc-160">Gets the y-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="92abc-161">マウスの y 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="92abc-161">The y-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92abc-162">マウスの座標は、発生するイベントによって異なります。</span><span class="sxs-lookup"><span data-stu-id="92abc-162">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="92abc-163">たとえば、ときに、<xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType>イベントが処理される、イベントを発生させたコントロールの座標に対する相対マウス座標の値は、します。</span><span class="sxs-lookup"><span data-stu-id="92abc-163">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="92abc-164">ドラッグ アンド ドロップ操作に関連するいくつかのイベントには、フォームの原点または画面の原点に対する相対マウス座標の値が関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="92abc-164">Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92abc-165">次のコード例では、<xref:System.Windows.Forms.MouseEventArgs.X%2A>と<xref:System.Windows.Forms.MouseEventArgs.Y%2A>でマウス ポインターの現在の位置を表示するプロパティ、<xref:System.Windows.Forms.ToolTip>ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="92abc-165">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span> <span data-ttu-id="92abc-166">このコードを使用する呼び出し`TrackCoordinates`フォームのコンス トラクターからです。</span><span class="sxs-lookup"><span data-stu-id="92abc-166">To use this code, call `TrackCoordinates` from the form constructor.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>