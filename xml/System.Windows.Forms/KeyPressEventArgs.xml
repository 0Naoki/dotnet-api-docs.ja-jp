<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bc7f99ba57ff2de9832c8d191551ff34c44430a" /><Meta Name="ms.sourcegitcommit" Value="f55040f35c19a83c85beb55243330558f6e369be" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/10/2019" /><Meta Name="ms.locfileid" Value="66819206" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="121ce-101"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="121ce-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ce-102">A<xref:System.Windows.Forms.KeyPressEventArgs>ユーザーがキーを押すとで構成される文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="121ce-102">A <xref:System.Windows.Forms.KeyPressEventArgs> specifies the character that is composed when the user presses a key.</span></span> <span data-ttu-id="121ce-103">たとえば、ユーザーが押したとき shift キーを押しながら K、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>プロパティは、大文字の K を返します。</span><span class="sxs-lookup"><span data-stu-id="121ce-103">For example, when the user presses SHIFT + K, the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property returns an uppercase K.</span></span>  
  
 <span data-ttu-id="121ce-104">A<xref:System.Windows.Forms.Control.KeyPress>イベントは、ユーザーがキーを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="121ce-104">A <xref:System.Windows.Forms.Control.KeyPress> event occurs when the user presses a key.</span></span> <span data-ttu-id="121ce-105">密接に関連する 2 つのイベント、<xref:System.Windows.Forms.Control.KeyPress>イベント<xref:System.Windows.Forms.Control.KeyUp>と<xref:System.Windows.Forms.Control.KeyDown>します。</span><span class="sxs-lookup"><span data-stu-id="121ce-105">Two events that are closely related to the <xref:System.Windows.Forms.Control.KeyPress> event are <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="121ce-106"><xref:System.Windows.Forms.Control.KeyDown>イベントの前に各<xref:System.Windows.Forms.Control.KeyPress>、キーを押したときにイベントと<xref:System.Windows.Forms.Control.KeyUp>イベント キーを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="121ce-106">The <xref:System.Windows.Forms.Control.KeyDown> event precedes each <xref:System.Windows.Forms.Control.KeyPress> event when the user presses a key, and a <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases a key.</span></span> <span data-ttu-id="121ce-107">ユーザーは、キーを保持しているときに重複する<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyPress>イベント、文字が繰り返されるたびに発生します。</span><span class="sxs-lookup"><span data-stu-id="121ce-107">When the user holds down a key, duplicate <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyPress> events occur each time the character repeats.</span></span> <span data-ttu-id="121ce-108">1 つ<xref:System.Windows.Forms.Control.KeyUp>リリース時にイベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="121ce-108">One <xref:System.Windows.Forms.Control.KeyUp> event is generated upon release.</span></span>  
  
 <span data-ttu-id="121ce-109">各<xref:System.Windows.Forms.Control.KeyPress>、イベント、<xref:System.Windows.Forms.KeyPressEventArgs>が渡されます。</span><span class="sxs-lookup"><span data-stu-id="121ce-109">With each <xref:System.Windows.Forms.Control.KeyPress> event, a <xref:System.Windows.Forms.KeyPressEventArgs> is passed.</span></span> <span data-ttu-id="121ce-110">A<xref:System.Windows.Forms.KeyEventArgs>各に渡される<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyUp>イベント。</span><span class="sxs-lookup"><span data-stu-id="121ce-110">A <xref:System.Windows.Forms.KeyEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> event.</span></span> <span data-ttu-id="121ce-111">A<xref:System.Windows.Forms.KeyEventArgs>と共に別のキー (CTRL、shift キー、または alt キーを押し)、修飾子キーが押されたかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="121ce-111">A <xref:System.Windows.Forms.KeyEventArgs> specifies whether any modifier keys (CTRL, SHIFT, or ALT) were pressed along with another key.</span></span> <span data-ttu-id="121ce-112">(この修飾子の情報はでも取得できます、<xref:System.Windows.Forms.Control.ModifierKeys%2A>のプロパティ、<xref:System.Windows.Forms.Control>クラスです)。</span><span class="sxs-lookup"><span data-stu-id="121ce-112">(This modifier information can also be obtained through the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property of the <xref:System.Windows.Forms.Control> class.)</span></span>  
  
 <span data-ttu-id="121ce-113">設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>に`true`を取り消す、`KeyPress`イベント。</span><span class="sxs-lookup"><span data-stu-id="121ce-113">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span> <span data-ttu-id="121ce-114">これにより、コントロールがキーの押下を処理します。</span><span class="sxs-lookup"><span data-stu-id="121ce-114">This keeps the control from processing the key press.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="121ce-115">一部のコントロールが特定のキー ストロークで処理されます<xref:System.Windows.Forms.Control.KeyDown>します。</span><span class="sxs-lookup"><span data-stu-id="121ce-115">Some controls will process certain key strokes on <xref:System.Windows.Forms.Control.KeyDown>.</span></span> <span data-ttu-id="121ce-116">たとえば、<xref:System.Windows.Forms.RichTextBox>する前に Enter キーを処理<xref:System.Windows.Forms.Control.KeyPress>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="121ce-116">For example, <xref:System.Windows.Forms.RichTextBox> processes the Enter key before <xref:System.Windows.Forms.Control.KeyPress> is called.</span></span> <span data-ttu-id="121ce-117">このような場合は、取り消すことはできません、<xref:System.Windows.Forms.Control.KeyPress>イベントからキー ストロークを取り消す必要がありますと<xref:System.Windows.Forms.Control.KeyDown>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="121ce-117">In such cases, you cannot cancel the <xref:System.Windows.Forms.Control.KeyPress> event, and must cancel the key stroke from <xref:System.Windows.Forms.Control.KeyDown> instead.</span></span>  
  
 <span data-ttu-id="121ce-118">イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="121ce-118">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="121ce-119">次の例を使用して、<xref:System.Windows.Forms.KeyPressEventArgs>が押されているように、キーをカウントして、各キーを押す、結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="121ce-119">The following example illustrates using the <xref:System.Windows.Forms.KeyPressEventArgs> to count keys as they are pressed and to display the results after each key press.</span></span> <span data-ttu-id="121ce-120"><xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 次からさらに、オペレーティング システムを保持する場合は true に設定キーを処理します。</span><span class="sxs-lookup"><span data-stu-id="121ce-120"><xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key.</span></span> <span data-ttu-id="121ce-121">この例では使用して、フォーム、<xref:System.Windows.Forms.TextBox>配置します。</span><span class="sxs-lookup"><span data-stu-id="121ce-121">The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 <span data-ttu-id="121ce-122">このクラスの新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="121ce-122">You must create a new instance of this class.</span></span> <span data-ttu-id="121ce-123">また、イベント ハンドラーを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="121ce-123">You must also set the event handler.</span></span> <span data-ttu-id="121ce-124">この設定は、クラスのコンス トラクターで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="121ce-124">You can do this in the constructor for your class.</span></span>  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="121ce-125">コントロールの指定したイベントが発生した、ときに、接続されているメソッドが呼び出され、アプリケーションは、イベントに応答コードを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="121ce-125">When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar"><span data-ttu-id="121ce-126">ユーザーの押したキーに対応する ASCII 文字。</span><span class="sxs-lookup"><span data-stu-id="121ce-126">The ASCII character corresponding to the key the user pressed.</span></span></param>
        <summary><span data-ttu-id="121ce-127"><see cref="T:System.Windows.Forms.KeyPressEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="121ce-127">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ce-128">使用して、<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType>修飾子キーの現在の状態を取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="121ce-128">Use the <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> property to get the current state of the modifier keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="121ce-129">次の例では、SHIFT キーの現在の状態を示すメッセージ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="121ce-129">The following example displays a message box that shows the current state of the SHIFT key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="121ce-130"><see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントが処理されたかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="121ce-130">Gets or sets a value indicating whether the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event was handled.</span></span></summary>
        <value><span data-ttu-id="121ce-131">イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="121ce-131"><see langword="true" /> if the event is handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ce-132">イベントが処理されない場合は、既定の処理用のオペレーティング システムに送信されます。</span><span class="sxs-lookup"><span data-stu-id="121ce-132">If the event is not handled, it will be sent to the operating system for default processing.</span></span> <span data-ttu-id="121ce-133">設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>に`true`を取り消す、`KeyPress`イベント。</span><span class="sxs-lookup"><span data-stu-id="121ce-133">Set <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> to `true` to cancel the `KeyPress` event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="121ce-134">次の例では、作成、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="121ce-134">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="121ce-135">`keypressed`メソッドは、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> ENTER キーが押されたかどうかを確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="121ce-135">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed.</span></span> <span data-ttu-id="121ce-136">ENTER キーが押された場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>プロパティに設定されて`true`、処理は、イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="121ce-136">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="121ce-137">押されたキーに対応する文字を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="121ce-137">Gets or sets the character corresponding to the key pressed.</span></span></summary>
        <value><span data-ttu-id="121ce-138">作成される ASCII 文字。</span><span class="sxs-lookup"><span data-stu-id="121ce-138">The ASCII character that is composed.</span></span> <span data-ttu-id="121ce-139">たとえば、ユーザーが Shift キーを押しながら K キーを押した場合、このプロパティは大文字の K を返します。</span><span class="sxs-lookup"><span data-stu-id="121ce-139">For example, if the user presses SHIFT + K, this property returns an uppercase K.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="121ce-140">使用して、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>サンプル キーストロークを実行時と実行時の特殊な状況でのキーボード操作を変更するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="121ce-140">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to modify keystrokes under special run-time circumstances.</span></span> <span data-ttu-id="121ce-141">たとえば、使用することができます<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>ユーザーが郵便番号/ZIP code に入ったときに、数値以外のキープレスを無効にする、データ エントリのフィールドに大文字をすべてのアルファベット キープレスを変更またはキーボードまたは特定のキーの組み合わせの他の主要な入力デバイスを監視します。</span><span class="sxs-lookup"><span data-stu-id="121ce-141">For example, you can use <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> to disable non-numeric keypresses when the user enters a ZIP code, change all alphabetical keypresses to uppercase in a data entry field, or monitor the keyboard or other key input device for specific key combinations.</span></span>  
  
 <span data-ttu-id="121ce-142">次のキーを設定または取得できます。</span><span class="sxs-lookup"><span data-stu-id="121ce-142">You can get or set the following keys:</span></span>  
  
-   <span data-ttu-id="121ce-143">a ~ z、A ~ Z。</span><span class="sxs-lookup"><span data-stu-id="121ce-143">a-z, A-Z.</span></span>  
  
-   <span data-ttu-id="121ce-144">CTRL キー。</span><span class="sxs-lookup"><span data-stu-id="121ce-144">CTRL.</span></span>  
  
-   <span data-ttu-id="121ce-145">区切り記号。</span><span class="sxs-lookup"><span data-stu-id="121ce-145">Punctuation marks.</span></span>  
  
-   <span data-ttu-id="121ce-146">番号が両方と、キーボードのテンキーの一番上のキー。</span><span class="sxs-lookup"><span data-stu-id="121ce-146">Number keys, both across the top of the keyboard and on the numeric keypad.</span></span>  
  
-   <span data-ttu-id="121ce-147">入力します。</span><span class="sxs-lookup"><span data-stu-id="121ce-147">ENTER.</span></span>  
  
 <span data-ttu-id="121ce-148">取得するまたは、次のキーを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="121ce-148">You cannot get or set the following keys:</span></span>  
  
-   <span data-ttu-id="121ce-149">Tab キー。</span><span class="sxs-lookup"><span data-stu-id="121ce-149">The TAB key.</span></span>  
  
-   <span data-ttu-id="121ce-150">挿入および削除します。</span><span class="sxs-lookup"><span data-stu-id="121ce-150">INSERT and DELETE.</span></span>  
  
-   <span data-ttu-id="121ce-151">ホーム。</span><span class="sxs-lookup"><span data-stu-id="121ce-151">HOME.</span></span>  
  
-   <span data-ttu-id="121ce-152">終わり。</span><span class="sxs-lookup"><span data-stu-id="121ce-152">END.</span></span>  
  
-   <span data-ttu-id="121ce-153">PAGEUP、PAGEDOWN します。</span><span class="sxs-lookup"><span data-stu-id="121ce-153">PAGE UP and PAGE DOWN.</span></span>  
  
-   <span data-ttu-id="121ce-154">F1、F2 キー。</span><span class="sxs-lookup"><span data-stu-id="121ce-154">F1-F2.</span></span>  
  
-   <span data-ttu-id="121ce-155">ALT キー。</span><span class="sxs-lookup"><span data-stu-id="121ce-155">ALT.</span></span>  
  
-   <span data-ttu-id="121ce-156">方向キー</span><span class="sxs-lookup"><span data-stu-id="121ce-156">Arrow keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="121ce-157">上記以外の文字のキーのいずれかを検出する方法については、次を参照してください。、<xref:System.Windows.Forms.KeyEventArgs>クラス。</span><span class="sxs-lookup"><span data-stu-id="121ce-157">For information about how to detect any of the non-character keys mentioned above, see the <xref:System.Windows.Forms.KeyEventArgs> class.</span></span>  
  
## Examples  
 <span data-ttu-id="121ce-158">次の例では、作成、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="121ce-158">The following example creates a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="121ce-159">`keypressed`メソッドは、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> ENTER キーが押されたかどうかを確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="121ce-159">The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key pressed.</span></span> <span data-ttu-id="121ce-160">ENTER キーが押された場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>プロパティに設定されて`true`、処理は、イベントを示します。</span><span class="sxs-lookup"><span data-stu-id="121ce-160">If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.</span></span>  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>