<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="460402bad14b8a1747aa2e5918fdf42b98d773cc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39991237" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.KeyPressEventArgs>ユーザーがキーを押すとで構成される文字を指定します。 たとえば、ユーザーが押したとき shift キーを押しながら K、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>プロパティは、大文字の K を返します。  
  
 A<xref:System.Windows.Forms.Control.KeyPress>イベントは、ユーザーがキーを押したときに発生します。 密接に関連する 2 つのイベント、<xref:System.Windows.Forms.Control.KeyPress>イベント<xref:System.Windows.Forms.Control.KeyUp>と<xref:System.Windows.Forms.Control.KeyDown>します。 <xref:System.Windows.Forms.Control.KeyDown>イベントの前に各<xref:System.Windows.Forms.Control.KeyPress>、キーを押したときにイベントと<xref:System.Windows.Forms.Control.KeyUp>イベント キーを離したときに発生します。 ユーザーは、キーを保持しているときに重複する<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyPress>イベント、文字が繰り返されるたびに発生します。 1 つ<xref:System.Windows.Forms.Control.KeyUp>リリース時にイベントが生成されます。  
  
 各<xref:System.Windows.Forms.Control.KeyPress>、イベント、<xref:System.Windows.Forms.KeyPressEventArgs>が渡されます。 A<xref:System.Windows.Forms.KeyEventArgs>各に渡される<xref:System.Windows.Forms.Control.KeyDown>と<xref:System.Windows.Forms.Control.KeyUp>イベント。 A<xref:System.Windows.Forms.KeyEventArgs>と共に別のキー (CTRL、shift キー、または alt キーを押し)、修飾子キーが押されたかどうかを指定します。 (この修飾子の情報はでも取得できます、<xref:System.Windows.Forms.Control.ModifierKeys%2A>のプロパティ、<xref:System.Windows.Forms.Control>クラスです)。  
  
 設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>に`true`を取り消す、`KeyPress`イベント。 これにより、コントロールがキーの押下を処理します。  
  
> [!NOTE]
>  一部のコントロールが特定のキー ストロークで処理されます<xref:System.Windows.Forms.Control.KeyDown>します。 たとえば、<xref:System.Windows.Forms.RichTextBox>する前に Enter キーを処理<xref:System.Windows.Forms.Control.KeyPress>が呼び出されます。 このような場合は、取り消すことはできません、<xref:System.Windows.Forms.Control.KeyPress>イベントからキー ストロークを取り消す必要がありますと<xref:System.Windows.Forms.Control.KeyDown>代わりにします。  
  
 イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例を使用して、<xref:System.Windows.Forms.KeyPressEventArgs>が押されているように、キーをカウントして、各キーを押す、結果を表示します。 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 次からさらに、オペレーティング システムを保持する場合は true に設定キーを処理します。 この例では使用して、フォーム、<xref:System.Windows.Forms.TextBox>配置します。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 このクラスの新しいインスタンスを作成する必要があります。 また、イベント ハンドラーを設定する必要があります。 この設定は、クラスのコンス トラクターで行うことができます。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 コントロールの指定したイベントが発生した、ときに、接続されているメソッドが呼び出され、アプリケーションは、イベントに応答コードを実行することができます。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">ユーザーの押したキーに対応する ASCII 文字。</param>
        <summary>
          <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType>修飾子キーの現在の状態を取得するプロパティ。  
  
   
  
## Examples  
 次の例では、SHIFT キーの現在の状態を示すメッセージ ボックスが表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Forms.Control.KeyPress" /> イベントが処理されたかどうかを示す値を取得または設定します。</summary>
        <value>イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントが処理されない場合は、既定の処理用のオペレーティング システムに送信されます。 設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>に`true`を取り消す、`KeyPress`イベント。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Forms.TextBox>コントロール。 `keypressed`メソッドは、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> ENTER キーが押されたかどうかを確認するプロパティ。 ENTER キーが押された場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>プロパティに設定されて`true`、処理は、イベントを示します。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>押されたキーに対応する文字を取得または設定します。</summary>
        <value>作成される ASCII 文字。 たとえば、ユーザーが Shift キーを押しながら K キーを押した場合、このプロパティは大文字の K を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>サンプル キーストロークを実行時と実行時の特殊な状況でのキーボード操作を変更するプロパティ。 たとえば、使用することができます<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>ユーザーが郵便番号/ZIP code に入ったときに、数値以外のキープレスを無効にする、データ エントリのフィールドに大文字をすべてのアルファベット キープレスを変更またはキーボードまたは特定のキーの組み合わせの他の主要な入力デバイスを監視します。  
  
 次のキーを設定または取得できます。  
  
-   a ~ z、A ~ Z。  
  
-   CTRL キー。  
  
-   区切り記号。  
  
-   番号が両方と、キーボードのテンキーの一番上のキー。  
  
-   入力します。  
  
 取得するまたは、次のキーを設定することはできません。  
  
-   Tab キー。  
  
-   挿入および削除します。  
  
-   ホーム。  
  
-   終わり。  
  
-   PAGEUP、PAGEDOWN します。  
  
-   F1、F2 キー。  
  
-   ALT キー。  
  
-   方向キー  
  
> [!NOTE]
>  上記以外の文字のキーのいずれかを検出する方法については、次を参照してください。、<xref:System.Windows.Forms.KeyEventArgs>クラス。  
  
-  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Forms.TextBox>コントロール。 `keypressed`メソッドは、 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> ENTER キーが押されたかどうかを確認するプロパティ。 ENTER キーが押された場合、<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>プロパティに設定されて`true`、処理は、イベントを示します。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>