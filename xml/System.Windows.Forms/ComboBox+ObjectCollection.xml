<Type Name="ComboBox+ObjectCollection" FullName="System.Windows.Forms.ComboBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bc759759c10a1e2366c36bfdaf5c18cf1e58f9e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ObjectCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e34c5-101">
        <see cref="T:System.Windows.Forms.ComboBox" /> 内の項目のコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e34c5-101">Represents the collection of items in a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-102"><xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType>クラス内の項目をカプセル化、<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-102">The <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> class encapsulates the items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="e34c5-103">さまざまな種類の文字列、イメージ、およびカスタム ビジネス オブジェクトを含むオブジェクトを管理するコンボ ボックスのオブジェクトのコレクションを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-103">The object collection of a combo box can be used to manage many types of objects, including strings, images, and custom business objects.</span></span>  
  
 <span data-ttu-id="e34c5-104">いくつかの方法でコレクションに項目を追加することができます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-104">You can add items to the collection in several ways.</span></span> <span data-ttu-id="e34c5-105"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A>メソッドでは、1 つのオブジェクトをコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-105">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method adds one object to the collection.</span></span> <span data-ttu-id="e34c5-106">多数のオブジェクトをコレクションに追加するには項目の配列を作成してに割り当てる最適な<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-106">To add a number of objects to the collection, it is best to create an array of items and assign with the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="e34c5-107">コレクション内で特定の場所にオブジェクトを挿入するに使用することができます、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-107">To insert an object at a specific location within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method.</span></span> <span data-ttu-id="e34c5-108">コレクション内で既知のインデックス位置の項目を削除する、いずれかを使用できます、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A>メソッドまたは<xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-108">To remove items at a known index in the collection you can use either the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> method or the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span> <span data-ttu-id="e34c5-109"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A>メソッドがコレクションからすべての項目を削除します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-109">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> method removes all the items from the collection.</span></span>  
  
 <span data-ttu-id="e34c5-110">メソッドとプロパティを追加して、項目を削除するのに加え、<xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType>コレクション内の項目を検索するメソッドも提供します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-110">In addition to methods and properties for adding and removing items, the <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> also provides methods to find items within the collection.</span></span> <span data-ttu-id="e34c5-111"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A>メソッドを使用するオブジェクトがコレクションのメンバーかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-111">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="e34c5-112">使用することができます、項目がコレクション内にあることがわかれば、<xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A>項目がコレクション内に配置を決定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e34c5-112">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ComboBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ComboBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="e34c5-113">このオブジェクト コレクションを所有している <see cref="T:System.Windows.Forms.ComboBox" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-113">The <see cref="T:System.Windows.Forms.ComboBox" /> that owns this object collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-114">
            <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> の新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-114">Initializes a new instance of <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-115">指定せずにこのクラスのインスタンスを作成することはできません、<xref:System.Windows.Forms.ComboBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e34c5-115">An instance of this class cannot be created without associating it with a <xref:System.Windows.Forms.ComboBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e34c5-116">コレクションに追加する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-116">An object representing the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-117">
            <see cref="T:System.Windows.Forms.ComboBox" /> の項目のリストに項目を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-117">Adds an item to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e34c5-118">コレクション内の項目の 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-118">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-119">このメソッドは、コンボ ボックスに項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-119">This method adds an item to the combo box.</span></span> <span data-ttu-id="e34c5-120">場合、<xref:System.Windows.Forms.ComboBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ComboBox>に設定されている`true`一覧に項目がアルファベット順に挿入します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-120">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="e34c5-121">それ以外の場合、項目は、リストの末尾に挿入されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-121">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="e34c5-122">項目の視覚的表現は、コンボ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-122">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="e34c5-123">このコンテンツの表示がで指定された、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-123">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="e34c5-124">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティは`null`、アイテムの`ToString`コンボ ボックスに表示され、それ以外である文字列で指定された格納されているオブジェクトのプロパティを取得するメソッドが呼び出された、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-124">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's `ToString` method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="e34c5-125">A<xref:System.SystemException>新しい項目を格納できる十分な領域がある場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-125">A <xref:System.SystemException> occurs if there is insufficient space available to store the new item.</span></span> <span data-ttu-id="e34c5-126">使用することをお勧めコンボ ボックスに、一連の項目を追加する、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-126">To add a set of items to the combo box it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="e34c5-127">使用する場合、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A>をコンボ ボックスに、多くの項目を追加する方法、 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 、追加中に再描画を中断するメソッドと<xref:System.Windows.Forms.ComboBox.EndUpdate%2A>を再描画を再開するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e34c5-127">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a number of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="e34c5-128">使用することができます、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A>項目が追加されたリストの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-128">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="e34c5-129">オブジェクトが、このコレクションに追加されたときに、<xref:System.Windows.Forms.ComboBox>呼び出し、オブジェクトの<xref:System.Object.ToString%2A>一覧に表示する文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-129">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e34c5-130">
            <paramref name="item" /> パラメーターは <see langword="null" /> でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-130">The <paramref name="item" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="e34c5-131">リストに追加するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-131">An array of objects to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-132">
            <see cref="T:System.Windows.Forms.ComboBox" /> の項目のリストに、項目の配列を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-132">Adds an array of items to the list of items for a <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-133">場合、<xref:System.Windows.Forms.ComboBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ComboBox>に設定されている場合は true、項目がリストに挿入をアルファベット順にします。</span><span class="sxs-lookup"><span data-stu-id="e34c5-133">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to true, the items are inserted into the list alphabetically.</span></span> <span data-ttu-id="e34c5-134">それ以外の場合、項目は、配列内で発生した順序で挿入されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-134">Otherwise, the items are inserted in the order they occur within the array.</span></span> <span data-ttu-id="e34c5-135">このメソッドは通常の配列に渡されます<xref:System.String>オブジェクトではなく任意の型のオブジェクトの配列は、このメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-135">This method is typically passed an array of <xref:System.String> objects, but an array of any type of object can be passed to this method.</span></span> <span data-ttu-id="e34c5-136">オブジェクトをコレクションに追加すると、メソッド呼び出し、オブジェクトの<xref:System.Object.ToString%2A>一覧に表示する文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-136">When an object is added to the collection, the method calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span> <span data-ttu-id="e34c5-137">このメソッドを使用して、コレクションに項目を追加するを呼び出す必要はありません、<xref:System.Windows.Forms.ComboBox.BeginUpdate%2A>と<xref:System.Windows.Forms.ComboBox.EndUpdate%2A>パフォーマンスを最適化する方法です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-137">When using this method to add items to the collection, you do not need to call the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> methods to optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e34c5-138">次のコード例を初期化する方法を示しています、 <xref:System.Windows.Forms.ComboBox> text プロパティを設定し、使用してコントロール、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A>に挿入する方法、<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-138">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the text property and using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method to populate the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="e34c5-139">処理についても示します、<xref:System.Windows.Forms.ComboBox.DropDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="e34c5-139">It also demonstrates handling the <xref:System.Windows.Forms.ComboBox.DropDown> event.</span></span> <span data-ttu-id="e34c5-140">例を実行するには、フォームと呼び出しで、次のコードを貼り付けます、`InitializeComboBox`フォームのコンス トラクターからのメソッドまたは`Load`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-140">To run the example, paste the following code in a form and call the `InitializeComboBox` method from the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e34c5-141">
            <paramref name="items" /> パラメーターの項目が <see langword="null" /> でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-141">An item in the <paramref name="items" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-142">
            <see cref="T:System.Windows.Forms.ComboBox" /> からすべての項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-142">Removes all items from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-143">一覧から項目を削除するときに削除された項目についての情報は失われます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-143">When you remove items from the list, all information about the deleted items is lost.</span></span> <span data-ttu-id="e34c5-144">1 つの項目を削除する、<xref:System.Windows.Forms.ComboBox>を使用して、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A>または<xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-144">To remove a single item from the <xref:System.Windows.Forms.ComboBox>, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> or <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e34c5-145">コレクション内で検索する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-145">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-146">指定した項目がコレクション内にあるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-146">Determines if the specified item is located within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e34c5-147">項目がコレクション内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-147">
              <see langword="true" /> if the item is located within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-148"><xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A>メソッドを使用するオブジェクトがコレクションのメンバーかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-148">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method enables you to determine if an object is a member of the collection.</span></span> <span data-ttu-id="e34c5-149">使用することができます、項目がコレクション内にあることがわかれば、<xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A>項目がコレクション内に配置を決定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e34c5-149">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="e34c5-150">コレクションのコピー先のオブジェクト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-150">The object array to copy the collection to.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="e34c5-151">コレクションのコピー先の配列内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-151">The location in the destination array to copy the collection to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-152">既存のオブジェクト配列内の指定した位置にコレクション全体をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-152">Copies the entire collection into an existing array of objects at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-153">このメソッドは、単一の配列に複数のコレクションから項目を組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-153">You can use this method to combine the items from multiple collections into a single array.</span></span> <span data-ttu-id="e34c5-154">コンテンツの別の入力に、この配列を使用することができますし、<xref:System.Windows.Forms.ComboBox>制御を使用して、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A>のメソッド、<xref:System.Windows.Forms.ComboBox.ObjectCollection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-154">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ComboBox> control using the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ComboBox.ObjectCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-155">コレクション内の項目の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-155">Gets the number of items in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-156">コレクション内の項目数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-156">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-157">このプロパティでは、内の項目の数を決定することができます、<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-157">This property enables you to determine the number of items in the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="e34c5-158">コレクションの値をループする場合は、この値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-158">You can use this value when looping through the values of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-159">項目のコレクションを反復処理するために使用できる列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-159">Returns an enumerator that can be used to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e34c5-160">項目のコレクションを表す <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-160">An <see cref="T:System.Collections.IEnumerator" /> that represents the item collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e34c5-161">コレクション内で検索する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-161">An object representing the item to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-162">指定した項目のコレクション内にあるインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-162">Retrieves the index within the collection of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e34c5-163">項目がコレクション内に存在する場合は、その項目の 0 から始まるインデックス。それ以外の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-163">The zero-based index where the item is located within the collection; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-164"><xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A>メソッドでは、項目がコレクション内にある場所を確認することができます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-164">The <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> method enables you to determine where an item is located within the collection.</span></span> <span data-ttu-id="e34c5-165">調べるには、項目がこのメソッドを呼び出す前に、コレクション内にあるかどうかを使用して、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-165">To determine if an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e34c5-166">
            <paramref name="value" /> パラメーターは <see langword="null" /> でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-166">The <paramref name="value" /> parameter was <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e34c5-167">項目を挿入する、0 から始まるインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-167">The zero-based index location where the item is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="e34c5-168">挿入する項目を表示するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-168">An object representing the item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-169">コレクション内の指定したインデックスの位置に項目を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-169">Inserts an item into the collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-170">場合、<xref:System.Windows.Forms.ComboBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ComboBox>が true の場合、`index`パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-170">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is true, the `index` parameter is ignored.</span></span> <span data-ttu-id="e34c5-171">オブジェクトが、このコレクションに追加されたときに、<xref:System.Windows.Forms.ComboBox>呼び出し、オブジェクトの<xref:System.Object.ToString%2A>メソッドは、一覧に表示する文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-171">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method is to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e34c5-172">
            <paramref name="item" /> が <see langword="null" />でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-172">The <paramref name="item" /> was <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e34c5-173">
            <paramref name="index" /> が 0 未満でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-173">The <paramref name="index" /> was less than zero.</span>
          </span>
          <span data-ttu-id="e34c5-174">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-174">-or-</span>
          </span>
          <span data-ttu-id="e34c5-175">
            <paramref name="index" /> がコレクション内の項目数を超える値でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-175">The <paramref name="index" /> was greater than the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-176">このコレクションを変更できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-176">Gets a value indicating whether this collection can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-177">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-177">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e34c5-178">コレクション内の取得する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-178">The index of the item in the collection to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-179">コレクション内の指定したインデックスにある項目を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-179">Retrieves the item at the specified index within the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-180">コレクション内の指定したインデックスにある項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-180">An object representing the item located at the specified index within the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-181">このメソッドを使用すると、コレクション内の指定した位置に項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-181">You can use this method to obtain the item at the specified location within the collection.</span></span> <span data-ttu-id="e34c5-182">使用することができます<xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A>からの戻り値のインデックスを使用するか、アイテムの場所を検索する、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-182">You can use <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> to find the location of an item, or you can use the index return from the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e34c5-183">インデックスが 0 未満でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-183">The index was less than zero.</span>
          </span>
          <span data-ttu-id="e34c5-184">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-184">-or-</span>
          </span>
          <span data-ttu-id="e34c5-185">
            <paramref name="index" /> がコレクション内の項目の数以上の値でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-185">The <paramref name="index" /> was greater of equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e34c5-186">リストから削除する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-186">The <see cref="T:System.Object" /> to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-187">指定した項目を <see cref="T:System.Windows.Forms.ComboBox" /> から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-187">Removes the specified item from the <see cref="T:System.Windows.Forms.ComboBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-188">指定した項目が見つからない場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e34c5-188">No exception is thrown if the specified item is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="e34c5-189">削除する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-189">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-190">
            <see cref="T:System.Windows.Forms.ComboBox" /> 内の指定したインデックス位置の項目を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-190">Removes an item from the <see cref="T:System.Windows.Forms.ComboBox" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e34c5-191">次のコード例は、初期化する方法を示します、<xref:System.Windows.Forms.ComboBox>コントロールを設定して、<xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A>と<xref:System.Windows.Forms.ComboBox.DropDownStyle%2A>を使用してプロパティ、<xref:System.Windows.Forms.ComboBox.FindStringExact%2A>を検索する方法、<xref:System.Windows.Forms.ComboBox>と<xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A>項目を削除する方法<xref:System.Windows.Forms.ComboBox>です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-191">The following code example demonstrates how to initialize a <xref:System.Windows.Forms.ComboBox> control by setting the <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> and <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> properties, using the <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> methods to search the <xref:System.Windows.Forms.ComboBox> and the <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> method to remove an item from the <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="e34c5-192">処理も示しています、<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>イベント。</span><span class="sxs-lookup"><span data-stu-id="e34c5-192">It also shows handling the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e34c5-193">
            <paramref name="value" /> パラメーターが 0 未満でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-193">The <paramref name="value" /> parameter was less than zero.</span>
          </span>
          <span data-ttu-id="e34c5-194">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-194">-or-</span>
          </span>
          <span data-ttu-id="e34c5-195">
            <paramref name="value" /> パラメーターがコレクション内の項目数以上の値でした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-195">The <paramref name="value" /> parameter was greater than or equal to the count of items in the collection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="e34c5-196">コレクションから要素がコピーされる 1 次元配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-196">The one-dimensional array that is the destination of the elements copied from the collection.</span>
          </span>
          <span data-ttu-id="e34c5-197">配列には、0 から始まるインデックスが設定されている必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-197">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e34c5-198">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-198">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-199">このメンバーの詳細については、「<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-199">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-200">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-200">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e34c5-201">これは、<xref:System.Windows.Forms.ComboBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-201">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-202">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.IsSynchronized" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-202">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-203">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-203">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-204">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-204">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e34c5-205">これは、<xref:System.Windows.Forms.ComboBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-205">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-206">このメンバーの詳細については、「<see cref="P:System.Collections.ICollection.SyncRoot" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-206">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-207">
            <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-207">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-208">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e34c5-209">これは、<xref:System.Windows.Forms.ComboBox.ObjectCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-209">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="e34c5-210">コレクションに追加する項目を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-210">An object that represents the item to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e34c5-211">このメンバーの詳細については、「<see cref="M:System.Collections.IList.Add(System.Object)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-211">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e34c5-212">コレクション内の項目の 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-212">The zero-based index of the item in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-213">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e34c5-214">これは、<xref:System.Windows.Forms.ComboBox.ObjectCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-214">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="e34c5-215">このメソッドは、コンボ ボックスに項目を追加します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-215">This method adds an item to the combo box.</span></span> <span data-ttu-id="e34c5-216">場合、<xref:System.Windows.Forms.ComboBox.Sorted%2A>のプロパティ、<xref:System.Windows.Forms.ComboBox>に設定されている`true`一覧に項目がアルファベット順に挿入します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-216">If the <xref:System.Windows.Forms.ComboBox.Sorted%2A> property of the <xref:System.Windows.Forms.ComboBox> is set to `true`, the item is inserted into the list alphabetically.</span></span> <span data-ttu-id="e34c5-217">それ以外の場合、項目は、リストの末尾に挿入されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-217">Otherwise, the item is inserted at the end of the list.</span></span>  
  
 <span data-ttu-id="e34c5-218">項目の視覚的表現は、コンボ ボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-218">A visual representation of the item is displayed in the combo box.</span></span> <span data-ttu-id="e34c5-219">このコンテンツの表示がで指定された、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-219">This content representation is specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property.</span></span> <span data-ttu-id="e34c5-220">場合、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティは`null`、アイテムの<xref:System.Object.ToString%2A>コンボ ボックスに表示され、それ以外である文字列で指定された格納されているオブジェクトのプロパティを取得するメソッドが呼び出された、<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-220">If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is `null`, the item's <xref:System.Object.ToString%2A> method is called to obtain the string that is displayed in the combo box; otherwise, the property of the stored object as specified by the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is displayed.</span></span> <span data-ttu-id="e34c5-221">コンボ ボックスに、一連の項目を追加するにを使用して、<xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e34c5-221">To add a set of items to the combo box, it is best to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> method.</span></span> <span data-ttu-id="e34c5-222">使用する場合、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A>をコンボ ボックスに、一連の項目を追加する方法、 <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> 、追加中に再描画を中断するメソッドと<xref:System.Windows.Forms.ComboBox.EndUpdate%2A>を再描画を再開するメソッド。</span><span class="sxs-lookup"><span data-stu-id="e34c5-222">If you choose to use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> method to add a set of items to the combo box, use the <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> method to suspend repainting during your add and the <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> method to resume repainting.</span></span> <span data-ttu-id="e34c5-223">使用することができます、<xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A>項目が追加されたリストの場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-223">You can use the <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> method to specify the location in the list where an item is added.</span></span> <span data-ttu-id="e34c5-224">オブジェクトが、このコレクションに追加されたときに、<xref:System.Windows.Forms.ComboBox>呼び出し、オブジェクトの<xref:System.Object.ToString%2A>一覧に表示する文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="e34c5-224">When an object is added to the collection, the <xref:System.Windows.Forms.ComboBox> calls the object's <xref:System.Object.ToString%2A> method to obtain the string to display in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e34c5-225">
            <paramref name="item" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-225">The <paramref name="item" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="e34c5-226">新しい項目を格納するための領域が不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-226">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e34c5-227">このメンバーの詳細については、「<see cref="P:System.Collections.IList.IsFixedSize" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-227">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e34c5-228">常に <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e34c5-228">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e34c5-229">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e34c5-229">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e34c5-230">これは、<xref:System.Windows.Forms.ComboBox.ObjectCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e34c5-230">It can be used only when the <xref:System.Windows.Forms.ComboBox.ObjectCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>