<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8e71-101">ドラッグ操作中に発生する <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-101">Provides data for the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event, which occurs during a drag operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e71-102"><xref:System.Windows.Forms.Control.GiveFeedback>イベントは、ドラッグ操作中に発生します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-102">The <xref:System.Windows.Forms.Control.GiveFeedback> event occurs during a drag operation.</span></span> <span data-ttu-id="a8e71-103">これにより、ドラッグ アンド ドロップ操作中にユーザーに視覚的フィードバックを提供するためにマウス ポインターの外観を変更するドラッグ イベントのソースができます。</span><span class="sxs-lookup"><span data-stu-id="a8e71-103">It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="a8e71-104">A<xref:System.Windows.Forms.GiveFeedbackEventArgs>オブジェクトは、ドラッグ アンド ドロップ操作と既定のカーソルを使用するかどうかの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-104">A <xref:System.Windows.Forms.GiveFeedbackEventArgs> object specifies the type of drag-and-drop operation and whether default cursors are used.</span></span>  
  
 <span data-ttu-id="a8e71-105">イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8e71-106">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="a8e71-106">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="a8e71-107">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-107">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="a8e71-108">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-108">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="a8e71-109"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-109">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="a8e71-110">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-110">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="a8e71-111">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-111">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="a8e71-112">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="a8e71-112">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="a8e71-113">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-113">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-114">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="a8e71-114">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="a8e71-115">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-115">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="a8e71-116">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-116">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8e71-117">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-117">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="a8e71-118">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-118">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="a8e71-119">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-119">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-120">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-120">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="a8e71-121">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-121">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect"><span data-ttu-id="a8e71-122">ドラッグ アンド ドロップ操作の種類。</span><span class="sxs-lookup"><span data-stu-id="a8e71-122">The type of drag-and-drop operation.</span></span> <span data-ttu-id="a8e71-123">この値は、<see cref="T:System.Windows.Forms.DragDropEffects" /> で定義されている定数にビット単位の OR (|) 演算を適用した値になります。</span><span class="sxs-lookup"><span data-stu-id="a8e71-123">Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <see cref="T:System.Windows.Forms.DragDropEffects" />.</span></span></param>
        <param name="useDefaultCursors">
          <span data-ttu-id="a8e71-124">既定のポインターが使用される場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8e71-124"><see langword="true" /> if default pointers are used; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8e71-125"><see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8e71-126">表示されているドラッグ アンド ドロップ操作のフィードバックを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-126">Gets the drag-and-drop operation feedback that is displayed.</span></span></summary>
        <value><span data-ttu-id="a8e71-127"><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a8e71-127">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8e71-128">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="a8e71-128">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="a8e71-129">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-129">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="a8e71-130">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-130">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="a8e71-131"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-131">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="a8e71-132">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-132">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="a8e71-133">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-133">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="a8e71-134">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="a8e71-134">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="a8e71-135">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-135">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-136">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="a8e71-136">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="a8e71-137">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-137">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="a8e71-138">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-138">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8e71-139">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-139">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="a8e71-140">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-140">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="a8e71-141">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-141">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-142">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-142">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="a8e71-143">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-143">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8e71-144">ドラッグ操作において、ドラッグ アンド ドロップ効果に関連付けられている既定のカーソルを使用するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-144">Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</span></span></summary>
        <value>
          <span data-ttu-id="a8e71-145">既定のポインターが使用される場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8e71-145"><see langword="true" /> if the default pointers are used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e71-146">システムでは、移動またはコピーなどのさまざまなドラッグ アンド ドロップ操作に対する既定のドラッグ アンド ドロップ カーソルを提供します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-146">The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</span></span> <span data-ttu-id="a8e71-147">場合<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A>に設定されている`false`、適切なカーソルを設定するイベント ソースの役割です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-147">If <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> is set to `false`, it is the responsibility of the event source to set the appropriate cursor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8e71-148">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="a8e71-148">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="a8e71-149">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-149">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="a8e71-150">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-150">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="a8e71-151"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-151">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="a8e71-152">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="a8e71-152">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="a8e71-153">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="a8e71-153">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="a8e71-154">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="a8e71-154">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="a8e71-155">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-155">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-156">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="a8e71-156">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="a8e71-157">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="a8e71-157">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="a8e71-158">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-158">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8e71-159">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-159">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="a8e71-160">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="a8e71-160">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="a8e71-161">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="a8e71-161">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="a8e71-162">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-162">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventArgs> class.</span></span> <span data-ttu-id="a8e71-163">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a8e71-163">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>