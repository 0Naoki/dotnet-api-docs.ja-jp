<Type Name="GiveFeedbackEventArgs" FullName="System.Windows.Forms.GiveFeedbackEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dba2eda58366bd84b81407d145c3cc53a13c15b9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70520163" /></Metadata><TypeSignature Language="C#" Value="public class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GiveFeedbackEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GiveFeedbackEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GiveFeedbackEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ドラッグ操作中に発生する <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Windows.Forms.Control.GiveFeedback>は、ドラッグ操作中に発生します。 ドラッグイベントのソースでマウスポインターの外観を変更して、ドラッグアンドドロップ操作中にユーザーが視覚的にフィードバックできるようにします。 オブジェクト<xref:System.Windows.Forms.GiveFeedbackEventArgs>では、ドラッグアンドドロップ操作の種類と、既定のカーソルを使用するかどうかを指定します。  
  
 イベントモデルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。 この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。 マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。 メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。 この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。 がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。 カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。  
  
 キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。 ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。 削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。 最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。  
  
 右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。 ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。  
  
 このコード抜粋では、 <xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスの使用方法を示します。 完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GiveFeedbackEventArgs (System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.DragDropEffects effect, bool useDefaultCursors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (effect As DragDropEffects, useDefaultCursors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GiveFeedbackEventArgs(System::Windows::Forms::DragDropEffects effect, bool useDefaultCursors);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.GiveFeedbackEventArgs : System.Windows.Forms.DragDropEffects * bool -&gt; System.Windows.Forms.GiveFeedbackEventArgs" Usage="new System.Windows.Forms.GiveFeedbackEventArgs (effect, useDefaultCursors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="useDefaultCursors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="effect">ドラッグ アンド ドロップ操作の種類。 この値は、<see cref="T:System.Windows.Forms.DragDropEffects" /> で定義されている定数にビット単位の OR (|) 演算を適用した値になります。</param>
        <param name="useDefaultCursors">既定のポインターが使用される場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.GiveFeedbackEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されているドラッグ アンド ドロップ操作のフィードバックを取得します。</summary>
        <value><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。 この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。 マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。 メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。 この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。 がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。 カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。  
  
 キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。 ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。 削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。 最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。  
  
 右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。 ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。  
  
 このコード抜粋では、 <xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスの使用方法を示します。 完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCursors">
      <MemberSignature Language="C#" Value="public bool UseDefaultCursors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCursors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCursors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCursors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCursors : bool with get, set" Usage="System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドラッグ操作において、ドラッグ アンド ドロップ効果に関連付けられている既定のカーソルを使用するかどうかを取得または設定します。</summary>
        <value>既定のポインターが使用される場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 システムは、移動やコピーなどのさまざまなドラッグアンドドロップ操作に対して、既定のドラッグアンドドロップカーソルを提供します。 が<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A> に `false` 設定されている場合、適切なカーソルを設定するのはイベントソースの役割です。  
  
   
  
## Examples  
 次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。 この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。 マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。 メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>  
  
 この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。 この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。 がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。 カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。  
  
 キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。 ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。 削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。 最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。  
  
 右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。 ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。  
  
 このコード抜粋では、 <xref:System.Windows.Forms.GiveFeedbackEventArgs>クラスの使用方法を示します。 完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
