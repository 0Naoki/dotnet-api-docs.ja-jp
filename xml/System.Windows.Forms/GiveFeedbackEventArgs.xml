<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GiveFeedbackEventArgs.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512f265db3dd1cb80acb417f31b0359c3e40d85c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f265db3dd1cb80acb417f31b0359c3e40d85c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> event, which occurs during a drag operation.</source>
          <target state="translated">ドラッグ操作中に発生する <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GiveFeedback" /&gt;</ph> イベントのデータを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event occurs during a drag operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>イベントは、ドラッグ操作中に発生します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>It allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
          <target state="translated">これにより、ドラッグ アンド ドロップ操作中にユーザーに視覚的フィードバックを提供するためにマウス ポインターの外観を変更するドラッグ イベントのソースができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> object specifies the type of drag-and-drop operation and whether default cursors are used.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph>オブジェクトは、ドラッグ アンド ドロップ操作と既定のカーソルを使用するかどうかの種類を指定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベント モデルについては、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">次の例では、2 つの間でドラッグ アンド ドロップ操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">呼び出しの例、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>メソッド ドラッグ操作の開始時にします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">ドラッグ操作の開始、マウスを移動した場合より多く<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>中にマウスの位置から、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>メソッドを使用中にドラッグする項目のインデックスを確認して、<ph id="ph2">`MouseDown`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">この例では 2 つカーソル ファイル<ph id="ph1">`3dwarro.cur`</ph>と<ph id="ph2">`3dwno.cur`</ph>、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">場合に使用されるカスタムのカーソル、 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>がオンになっています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">カスタムのカーソルが設定されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">キーボードの状態が評価されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>右のイベント ハンドラーを<ph id="ph2">`ListBox`</ph>ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">内の場所、<ph id="ph1">`ListBox`</ph>中にも決定されます、ドロップが発生すると、<ph id="ph2">`DragOver`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">ドロップするデータがない場合、 <ph id="ph1">`String`</ph>、続いて、<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">削除の状態を表示する最後に、 <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">右側にドロップするデータ<ph id="ph1">`ListBox`</ph>で決定されます、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>イベント ハンドラーと<ph id="ph3">`String`</ph>の適切な場所にある値を追加、<ph id="ph4">`ListBox`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">このコードの抜粋では、使用方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.GiveFeedbackEventArgs">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完全なコード例のメソッドです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>The type of drag-and-drop operation.</source>
          <target state="translated">ドラッグ アンド ドロップ操作の種類。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>Possible values are obtained by applying the bitwise OR (|) operation to the constants defined in the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph>.</source>
          <target state="translated">この値は、<ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> で定義されている定数にビット単位の OR (|) 演算を適用した値になります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if default pointers are used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定のポインターが使用される場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.GiveFeedbackEventArgs.#ctor(System.Windows.Forms.DragDropEffects,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>Gets the drag-and-drop operation feedback that is displayed.</source>
          <target state="translated">表示されているドラッグ アンド ドロップ操作のフィードバックを取得します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DragDropEffects" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">次の例では、2 つの間でドラッグ アンド ドロップ操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">呼び出しの例、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>メソッド ドラッグ操作の開始時にします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">ドラッグ操作の開始、マウスを移動した場合より多く<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>中にマウスの位置から、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>メソッドを使用中にドラッグする項目のインデックスを確認して、<ph id="ph2">`MouseDown`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">この例では 2 つカーソル ファイル<ph id="ph1">`3dwarro.cur`</ph>と<ph id="ph2">`3dwno.cur`</ph>、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">場合に使用されるカスタムのカーソル、 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>がオンになっています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">カスタムのカーソルが設定されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">キーボードの状態が評価されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>右のイベント ハンドラーを<ph id="ph2">`ListBox`</ph>ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">内の場所、<ph id="ph1">`ListBox`</ph>中にも決定されます、ドロップが発生すると、<ph id="ph2">`DragOver`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">ドロップするデータがない場合、 <ph id="ph1">`String`</ph>、続いて、<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">削除の状態を表示する最後に、 <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">右側にドロップするデータ<ph id="ph1">`ListBox`</ph>で決定されます、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>イベント ハンドラーと<ph id="ph3">`String`</ph>の適切な場所にある値を追加、<ph id="ph4">`ListBox`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">このコードの抜粋では、使用方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.Effect">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完全なコード例のメソッドです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>Gets or sets whether drag operation should use the default cursors that are associated with drag-drop effects.</source>
          <target state="translated">ドラッグ操作において、ドラッグ アンド ドロップ効果に関連付けられている既定のカーソルを使用するかどうかを取得または設定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the default pointers are used; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定のポインターが使用される場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は、<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The system provides default drag-drop cursors for different drag-drop operations such as move or copy.</source>
          <target state="translated">システムでは、移動またはコピーなどのさまざまなドラッグ アンド ドロップ操作に対する既定のドラッグ アンド ドロップ カーソルを提供します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, it is the responsibility of the event source to set the appropriate cursor.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>、適切なカーソルを設定するイベント ソースの役割です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The following example demonstrates a drag-and-drop operation between two <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> controls.</source>
          <target state="translated">次の例では、2 つの間でドラッグ アンド ドロップ操作<ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method when the drag action starts.</source>
          <target state="translated">呼び出しの例、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>メソッド ドラッグ操作の開始時にします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The drag action starts if the mouse has moved more than <ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph> from the mouse location during the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event.</source>
          <target state="translated">ドラッグ操作の開始、マウスを移動した場合より多く<ph id="ph1">&lt;xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType&gt;</ph>中にマウスの位置から、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph> method is used to determine the index of the item to drag during the <ph id="ph2">`MouseDown`</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ListBox.IndexFromPoint%2A&gt;</ph>メソッドを使用中にドラッグする項目のインデックスを確認して、<ph id="ph2">`MouseDown`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example also demonstrates using custom cursors for the drag-and-drop operation.</source>
          <target state="translated">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The example assumes that two cursor files, <ph id="ph1">`3dwarro.cur`</ph> and <ph id="ph2">`3dwno.cur`</ph>, exist in the application directory, for the custom drag and no-drop cursors, respectively.</source>
          <target state="translated">この例では 2 つカーソル ファイル<ph id="ph1">`3dwarro.cur`</ph>と<ph id="ph2">`3dwno.cur`</ph>、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The custom cursors will be used if the <ph id="ph1">`UseCustomCursorsCheck`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> is checked.</source>
          <target state="translated">場合に使用されるカスタムのカーソル、 <ph id="ph1">`UseCustomCursorsCheck`</ph> <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>がオンになっています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The custom cursors are set in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event handler.</source>
          <target state="translated">カスタムのカーソルが設定されている、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The keyboard state is evaluated in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph> event handler for the right <ph id="ph2">`ListBox`</ph>, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</source>
          <target state="translated">キーボードの状態が評価されます、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragOver&gt;</ph>右のイベント ハンドラーを<ph id="ph2">`ListBox`</ph>ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The location in the <ph id="ph1">`ListBox`</ph> where the drop would occur is also determined during the <ph id="ph2">`DragOver`</ph> event.</source>
          <target state="translated">内の場所、<ph id="ph1">`ListBox`</ph>中にも決定されます、ドロップが発生すると、<ph id="ph2">`DragOver`</ph>イベント。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If the data to drop is not a <ph id="ph1">`String`</ph>, then the <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">ドロップするデータがない場合、 <ph id="ph1">`String`</ph>、続いて、<ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType&gt;</ph>に設定されている<ph id="ph3">&lt;xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>Finally, the status of the drop is displayed in the <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>.</source>
          <target state="translated">削除の状態を表示する最後に、 <ph id="ph1">`DropLocationLabel`</ph><ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>The data to drop for the right <ph id="ph1">`ListBox`</ph> is determined in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph> event handler and the <ph id="ph3">`String`</ph> value is added at the appropriate place in the <ph id="ph4">`ListBox`</ph>.</source>
          <target state="translated">右側にドロップするデータ<ph id="ph1">`ListBox`</ph>で決定されます、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragDrop&gt;</ph>イベント ハンドラーと<ph id="ph3">`String`</ph>の適切な場所にある値を追加、<ph id="ph4">`ListBox`</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph> event handler.</source>
          <target state="translated">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.QueryContinueDrag&gt;</ph>イベント ハンドラー。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>This code excerpt demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph> class.</source>
          <target state="translated">このコードの抜粋では、使用方法を示します、<ph id="ph1">&lt;xref:System.Windows.Forms.GiveFeedbackEventArgs&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph> method for the complete code example.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A&gt;</ph>完全なコード例のメソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>