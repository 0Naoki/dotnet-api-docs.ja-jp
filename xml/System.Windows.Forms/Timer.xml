<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edf81ff72ec14a0a499608d1879749fafd6f668b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edf81ff72ec14a0a499608d1879749fafd6f668b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">ユーザー定義の間隔でイベントを発生させるタイマーを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">このタイマーは、Windows フォーム アプリケーションで使用できるように最適化されていて、ウィンドウで使用する必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is used to raise an event at user-defined intervals.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>ユーザー定義の間隔でイベントを発生させるために使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">この Windows タイマーは、処理を実行する UI スレッドが使用されているシングル スレッドの環境に適しています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">これには、ユーザー コードが使用可能な UI メッセージ ポンプと常に、同じスレッドから動作かいるを別のスレッドの呼び出しをマーシャ リングが必要です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When you use this timer, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">このタイマーを使用してを使用して、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>ポーリング操作を実行する場合、または一定の時間のスプラッシュ画面を表示するイベントです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property is greater than zero, the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event is raised at intervals based on the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property setting.</source>
          <target state="translated">たびに、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>と<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>プロパティは、ゼロより大きく、<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>に基づいた間隔でイベントが発生、<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>プロパティの設定。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">このクラスは、間隔を設定および開始し、タイマーを停止するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">Windows フォームの Timer コンポーネントはシングル スレッドおよび 55 ミリ秒の精度に制限されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>If you require a multithreaded timer with greater accuracy, use the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Timers&gt;</ph> namespace.</source>
          <target state="translated">精度の向上でマルチ スレッド タイマーを必要とする場合を使用して、<ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph>クラス内で、<ph id="ph2">&lt;xref:System.Timers&gt;</ph>名前空間。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次の例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始されを実行するタイマーを続行するかどうかについてユーザー要求の回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">新しいタイマーの作成時に無効です。つまり、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">タイマーを有効にするを呼び出して、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>メソッドまたはセット<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">場合は、タイマーが無効になり、タイマーがスコープ外には、ガベージ コレクションが発生すると、タイマーが破棄されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">タイマーが有効な場合、スコープ外である場合でも、これはガベージ コレクションの対象とします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that represents the container for the timer.</source>
          <target state="translated">タイマーのコンテナーを表す <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class together with the specified container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> クラスの新しいインスタンスと、指定したコンテナーを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> constructor enables you to associate a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with any <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>コンス トラクターは、関連付けることができます、<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>いずれかを持つ<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>By associating the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> like this, you hand over control of the lifetime of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">関連付けることにより、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>の有効期間の制御を渡す、次のように、<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>を<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">これはする、アプリケーションでは多くのコンポーネントを使用していて、それらのすべてを同時に破棄する場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>For example, if you associate a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with a <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>, calling <ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> on the <ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph> will force disposal of all of these components as well.</source>
          <target state="translated">関連付ける場合など、 <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>、および<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>で、 <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>、呼び出し元<ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>上、<ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph>もこれらのコンポーネントのすべての処理が強制されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">新しいタイマーの作成時に無効です。つまり、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">タイマーを有効にするを呼び出して、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>メソッドまたはセット<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">このインスタンスは、そのコンテナーがガベージ コレクションを解放するまでは存在します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to release only the unmanaged resources.</source>
          <target state="translated">アンマネージ リソースのみを解放する場合は <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">タイマーによって使用されていたリソース (メモリを除く) を破棄します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> when you are finished using the timer.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>タイマーの使用が終了したときにします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> method leaves the timer in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>メソッドを使用できない状態で、タイマーのままにします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>After you call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>が使用していたメモリをガベージ コレクションによって再要求できるように、このタイマーへのすべての参照を解放する必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> before you release your last reference to the timer.</source>
          <target state="translated">常に呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>このタイマーへの最後の参照を解放する前にします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">それ以外の場合、ガベージ コレクションが、タイマー オブジェクトのデストラクターを呼び出すまで、タイマーが使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">タイマーが実行されているかどうかを取得または設定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is currently enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">タイマーが現在有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">タイマーがガベージ コレクションの対象と値が<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>メソッドは、設定と同じ<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Likewise, calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">同様に、呼び出し、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>メソッドは、設定と同じ<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>に<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次の例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始され、タイマー実行を継続するかどうかを求める回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Interval">
          <source>Gets or sets the time, in milliseconds, before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> イベントが発生してから次の <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> イベントが発生するまでの時間 (ミリ秒単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> specifying the number of milliseconds before the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> イベントが発生してから次の <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> イベントが発生するまでの時間 (ミリ秒単位) を指定する <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The value cannot be less than one.</source>
          <target state="translated">値は 1 未満には設定できません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">間隔の秒数を取得するには、1,000 でこの数値を除算します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次のコード例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始され、タイマー実行を継続するかどうかを求める回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This is always <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>.</source>
          <target state="translated">これは常に <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This method is called for each timer tick.</source>
          <target state="translated">このメソッドは、タイマー刻みごとに呼び出されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>It calls any methods that are added through <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>.</source>
          <target state="translated">によって追加されたすべてのメソッドを呼び出して<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>If you are inheriting from <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, you can override this method.</source>
          <target state="translated">継承している場合<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> in a derived class, make sure that you call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>派生クラスで、基本クラスを呼び出すことを確認します<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Start">
          <source>Starts the timer.</source>
          <target state="translated">タイマーを起動します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>You can also start the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">設定して、タイマーを開始することもできます、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次のコード例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始され、タイマー実行を継続するかどうかを求める回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Stops the timer.</source>
          <target state="translated">タイマーを停止します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>You can also stop the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">設定して、タイマーを停止することも、<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>オブジェクトを有効になっているし、同じアプリケーションのセッション内で複数回無効になっている可能性があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> after you have disabled a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to restart the interrupted interval.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>を無効にした後、<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>を呼び出して<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>により、<ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph>中断の間隔を再起動します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is set for a 5000-millisecond interval, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> at around 3000 milliseconds, calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to wait 5000 milliseconds before raising the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event.</source>
          <target state="translated">場合、 <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> 5000 ミリ秒に設定されているを呼び出す<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>約 3000 (ミリ秒単位) の呼び出しで<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph>により、 <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> 5000 ミリ秒を発生させる前に待機する、<ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling Stop on any <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> within a Windows Forms application can cause messages from other <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components in the application to be processed immediately, because all <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components operate on the main application thread.</source>
          <target state="translated">いずれかで Stop を呼び出す<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>Windows フォーム内でアプリケーションを与えるメッセージを他の<ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph>ので、すぐに処理するアプリケーションのコンポーネントすべて<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>コンポーネントがメイン アプリケーション スレッドで動作します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If you have two <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> on the first <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, your application may receive an event callback for the second component first.</source>
          <target state="translated">2 つある<ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>コンポーネント、700 ミリ秒、500 (ミリ秒単位) を 1 つのセットを 1 つ設定および呼び出す<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph>を最初に<ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>アプリケーションが最初の 2 番目のコンポーネントのイベント コールバックを受信する可能性があります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If this proves problematic, consider using the <ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Threading&gt;</ph> namespace instead.</source>
          <target state="translated">問題があることを証明している場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph>クラス内で、<ph id="ph2">&lt;xref:System.Threading&gt;</ph>名前空間代わりにします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次のコード例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始され、タイマー実行を継続するかどうかを求める回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Tag">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">なんらかの種類のユーザー状態を表す任意の文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Tag">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">なんらかの種類のユーザー状態を表す任意の文字列。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">指定したタイマーの間隔が経過し、タイマーが有効である場合に発生します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> class from within the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event repeatedly.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>内からのクラス、<ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>イベントが想定どおりに動作しない可能性があります、アサーションのダイアログを表示するボックスさせる Windows が発生する可能性があります、<ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>イベント繰り返しです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>We recommend that you refrain from testing assertions within this event, and use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph> methods instead.</source>
          <target state="translated">このイベントの中でアサーションをテストしないようにして、使用することをお勧め、 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>、または<ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>メソッド代わりにします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">次のコード例では、5 秒ごとにアラームを発生させる簡単な期間タイマーを実装します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">アラームが発生すると、<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph>アラームが開始され、タイマー実行を継続するかどうかを求める回数のカウントを表示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> を表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> を表す文字列。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph> method returns a string that includes the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph>メソッドの値を含む文字列を返します、<ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph>プロパティです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>