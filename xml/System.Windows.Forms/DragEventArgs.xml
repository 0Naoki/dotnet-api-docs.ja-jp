<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89a871da45924275e9a60693bb8e800093cf6409" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7e4ed-101">
        <see cref="E:System.Windows.Forms.Control.DragDrop" /> イベント、<see cref="E:System.Windows.Forms.Control.DragEnter" /> イベント、または <see cref="E:System.Windows.Forms.Control.DragOver" /> イベントのデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e4ed-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4ed-102"><xref:System.Windows.Forms.Control.DragDrop>イベント、ユーザーがコントロール上でオブジェクトをドラッグして、マウス ボタンを離すコントロールにドロップして、ドラッグ アンド ドロップ操作を完了するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="7e4ed-103"><xref:System.Windows.Forms.Control.DragEnter>イベント、ユーザーがマウスを使用してオブジェクトをドラッグするときに、コントロール上にマウス ポインターを移動するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="7e4ed-104"><xref:System.Windows.Forms.Control.DragOver>イベント、ユーザー コントロール上でマウスを使用してオブジェクトをドラッグするときにマウス ポインターを移動するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="7e4ed-105">A<xref:System.Windows.Forms.DragEventArgs>オブジェクトは、このイベントに関連付けられたデータ以外の場合は、shift キーを押し、CTRL、ALT キーの現在の状態以外の場合は、マウス ポインターの場所を指定し、ソースとドラッグ イベントのターゲットで許可されているドラッグ アンド ドロップ効果。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="7e4ed-106">イベント モデルについては、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e4ed-107">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-108">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-109">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-110"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-111">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-112">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-113">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-114">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-115">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-116">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-117">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-118">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-119">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-120">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-121">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-122">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="7e4ed-123">次の例を示して 方法<xref:System.Windows.Forms.DragEventArgs>ソースとターゲットのドラッグ アンド ドロップ操作の間で渡されます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-124">この例では、<xref:System.Windows.Forms.ListBox>コントロールは、データのソースと<xref:System.Windows.Forms.RichTextBox>コントロールがターゲットです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="7e4ed-125">例では、<xref:System.Windows.Forms.ListBox>コントロールが有効なファイル名の一覧が設定されています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="7e4ed-126">ユーザーがから表示されているファイル名のいずれかをドラッグしたときに、<xref:System.Windows.Forms.ListBox>コントロールを<xref:System.Windows.Forms.RichTextBox>コントロール、ファイル名で参照されているファイルが開かれます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="7e4ed-127">操作が開始される、<xref:System.Windows.Forms.ListBox>コントロールの MouseDown イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="7e4ed-128"><xref:System.Windows.Forms.RichTextBox.DragEnter>イベント ハンドラーでは、この例では、<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>データ形式であることを確認するメソッドを<xref:System.Windows.Forms.RichTextBox>コントロールを表示でき、設定、<xref:System.Windows.Forms.DragDropEffects>ソース管理からそのデータを指定するプロパティをコピーする必要がありますターゲット コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="7e4ed-129">最後に、<xref:System.Windows.Forms.RichTextBox>コントロールのドラッグ アンド ドロップのイベント ハンドラーを使用して、<xref:System.Windows.Forms.IDataObject.GetData%2A>を開くには、ファイル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="7e4ed-130">このイベントと関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-130">The data associated with this event.</span>
          </span>
        </param>
        <param name="keyState">
          <span data-ttu-id="7e4ed-131">Shift、Ctrl、Alt の各キーの現在の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-131">The current state of the SHIFT, CTRL, and ALT keys.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="7e4ed-132">マウス カーソルの x 座標 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-132">The x-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="7e4ed-133">マウス カーソルの y 座標 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-133">The y-coordinate of the mouse cursor in pixels.</span>
          </span>
        </param>
        <param name="allowedEffect">
          <span data-ttu-id="7e4ed-134">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <param name="effect">
          <span data-ttu-id="7e4ed-135">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e4ed-136">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-137">ドラッグ イベントの元の場所 (またはソース) で実行できるドラッグ アンド ドロップ操作を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-138">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4ed-139">呼び出して、コントロールがドラッグ アンド ドロップ操作を開始するときに、<xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>メソッド、許容される操作の効果を指定します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="7e4ed-140">たとえば、ファイルが読み取り専用である場合に、ソースからファイルをドラッグすると (または、CD など読み取り専用のストレージ メディアから)、ソースはファイルのコピーが、ターゲットに転送されるのではないことを示されます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="7e4ed-141">ドラッグされたデータに対して操作を実行する前に、この操作が許可されていることを確認するには、このプロパティを調べる必要があります。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e4ed-142">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-143">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-144">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-145"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-146">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-147">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-148">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-149">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-150">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-151">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-152">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-153">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-154">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-155">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-156">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-157">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-158">このイベントに関連付けられているデータを含む <see cref="T:System.Windows.Forms.IDataObject" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-159">このイベントと関連付けられたデータ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-159">The data associated with this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4ed-160">イベント ハンドラーの本体で使用できます、<xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>データがデータをドラッグ先となるコントロールの形式の要件と一致するかどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="7e4ed-161">形式の要件を満たすデータを変換しようとするかどうかをも指定できます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="7e4ed-162">ドラッグしたデータが、形式の要件を満たさない場合を使用して、<xref:System.Windows.Forms.IDataObject.GetData%2A>データを取得します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e4ed-163">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-164">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-165">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-166"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-167">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-168">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-169">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-170">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-171">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-172">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-173">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-174">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-175">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-176">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-177">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-178">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-179">ドラッグ アンド ドロップ操作のターゲットのドロップ効果を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-179">Gets or sets the target drop effect in a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-180">
            <see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4ed-181">既定では、適用の効果はドラッグ アンド ドロップ操作の対象のマウス カーソルを決定します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-182">これを実行する操作についてユーザーにフィードバックを提供すると便利です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="7e4ed-183">たとえば場合は、元のファイルをドラッグすると、CTRL キーを押すと、指定<xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType>を示す、ターゲットは、コピー操作を実行しようとしています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="7e4ed-184">ドラッグ操作をカスタム カーソルを使用するのを参照してください。<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e4ed-185">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-186">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-187">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-188"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-189">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-190">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-191">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-192">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-193">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-194">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-195">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-196">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-197">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-198">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-199">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-200">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-201">マウス ボタンの状態と同様に、Shift、Ctrl、Alt の各キーの現在の状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-202">Shift、Ctrl、Alt の各キー、およびマウス ボタンの現在の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e4ed-203">特定のキーの状態に依存するドラッグ アンド ドロップ操作の効果を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="7e4ed-204">たとえば、コピーまたはドラッグ アンド ドロップ操作中に、ctrl キーまたは SHIFT キーが押されたかどうかに応じて、データを移動することができます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="7e4ed-205">設定されているビット、<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>プロパティがキーか、操作中に押されたマウス ボタンを識別します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="7e4ed-206">たとえば、マウスの左ボタンが押された場合、最初のビット、<xref:System.Windows.Forms.DragEventArgs.KeyState%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="7e4ed-207">ビットごとの AND 演算子を使用して、指定したキーの状態をテストすることができます。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="7e4ed-208">次の表に、指定したイベントに使用される値を示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="7e4ed-209">[値]</span><span class="sxs-lookup"><span data-stu-id="7e4ed-209">Value</span></span>|<span data-ttu-id="7e4ed-210">キー</span><span class="sxs-lookup"><span data-stu-id="7e4ed-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="7e4ed-211">1 (ビット 0)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-211">1 (bit 0)</span></span>|<span data-ttu-id="7e4ed-212">マウスの左ボタン</span><span class="sxs-lookup"><span data-stu-id="7e4ed-212">The left mouse button.</span></span>|  
|<span data-ttu-id="7e4ed-213">2 ビット 1)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-213">2 (bit 1)</span></span>|<span data-ttu-id="7e4ed-214">マウスの右ボタン</span><span class="sxs-lookup"><span data-stu-id="7e4ed-214">The right mouse button.</span></span>|  
|<span data-ttu-id="7e4ed-215">4 (ビット 2)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-215">4 (bit 2)</span></span>|<span data-ttu-id="7e4ed-216">Shift キー</span><span class="sxs-lookup"><span data-stu-id="7e4ed-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="7e4ed-217">8 (ビット 3)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-217">8 (bit 3)</span></span>|<span data-ttu-id="7e4ed-218">CTRL キー</span><span class="sxs-lookup"><span data-stu-id="7e4ed-218">The CTRL key.</span></span>|  
|<span data-ttu-id="7e4ed-219">16 (4 ビット)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-219">16 (bit 4)</span></span>|<span data-ttu-id="7e4ed-220">マウスの中央ボタン</span><span class="sxs-lookup"><span data-stu-id="7e4ed-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="7e4ed-221">32 (ビット 5)</span><span class="sxs-lookup"><span data-stu-id="7e4ed-221">32 (bit 5)</span></span>|<span data-ttu-id="7e4ed-222">Alt キー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e4ed-223">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-224">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-225">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-226"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-227">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-228">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-229">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-230">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-231">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-232">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-233">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-234">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-235">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-236">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-237">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-238">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-239">マウス ポインターの x 座標 (画面座標) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-240">マウス ポインターの x 座標 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-240">The x-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e4ed-241">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-242">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-243">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-244"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-245">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-246">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-247">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-248">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-249">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-250">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-251">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-252">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-253">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-254">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-255">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-256">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e4ed-257">マウス ポインターの y 座標 (画面座標) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e4ed-258">マウス ポインターの y 座標 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e4ed-258">The y-coordinate of the mouse pointer in pixels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7e4ed-259">次の例では、2 つの間でドラッグ アンド ドロップ操作<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="7e4ed-260">呼び出しの例、<xref:System.Windows.Forms.Control.DoDragDrop%2A>メソッド ドラッグ操作の開始時にします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="7e4ed-261">ドラッグ操作の開始、マウスを移動した場合より多く<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType>中にマウスの位置から、<xref:System.Windows.Forms.Control.MouseDown>イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="7e4ed-262"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A>メソッドを使用中にドラッグする項目のインデックスを確認して、`MouseDown`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="7e4ed-263">例では、ドラッグ アンド ドロップ操作のカスタムのカーソルを使用しても示します。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="7e4ed-264">この例では 2 つカーソル ファイル`3dwarro.cur`と`3dwno.cur`、カスタムのドラッグをアプリケーション ディレクトリ内に存在および非ドロップ カーソルの場合、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="7e4ed-265">場合に使用されるカスタムのカーソル、 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>がオンになっています。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="7e4ed-266">カスタムのカーソルが設定されている、<xref:System.Windows.Forms.Control.GiveFeedback>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-267">キーボードの状態が評価されます、<xref:System.Windows.Forms.Control.DragOver>右のイベント ハンドラーを`ListBox`ドラッグ操作を決定するには、shift キーを押し、CTRL、alt キーを押し、または CTRL キーと ALT キーの状態に基づいて。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="7e4ed-268">内の場所、`ListBox`中にも決定されます、ドロップが発生すると、`DragOver`イベント。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="7e4ed-269">ドロップするデータがない場合、 `String`、続いて、<xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>に設定されている<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7e4ed-270">削除の状態を表示する最後に、 `DropLocationLabel`<xref:System.Windows.Forms.Label>です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="7e4ed-271">右側にドロップするデータ`ListBox`で決定されます、<xref:System.Windows.Forms.Control.DragDrop>イベント ハンドラーと`String`の適切な場所にある値を追加、`ListBox`です。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="7e4ed-272">ドラッグ操作が、フォームの境界の外側に移動しで、ドラッグ アンド ドロップ操作が取り消されたかどうか、<xref:System.Windows.Forms.Control.QueryContinueDrag>イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="7e4ed-273">このコードの抜粋では、使用方法を示します、<xref:System.Windows.Forms.DragEventArgs>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="7e4ed-274">参照してください、<xref:System.Windows.Forms.Control.DoDragDrop%2A>完全なコード例のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7e4ed-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>