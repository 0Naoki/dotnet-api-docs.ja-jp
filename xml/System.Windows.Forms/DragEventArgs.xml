<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fdb1590bb2a538ce927d45c5f0c2a1e2e5ece9a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69189665" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe0bf-101"><see cref="E:System.Windows.Forms.Control.DragDrop" /> イベント、<see cref="E:System.Windows.Forms.Control.DragEnter" /> イベント、または <see cref="E:System.Windows.Forms.Control.DragOver" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0bf-102">イベント<xref:System.Windows.Forms.Control.DragDrop>は、ユーザーがドラッグアンドドロップ操作を完了したときに発生します。この操作を行うには、コントロール上でオブジェクトをドラッグし、マウスボタンを離してコントロールにドロップします。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="fe0bf-103">イベント<xref:System.Windows.Forms.Control.DragEnter>は、マウスでオブジェクトをドラッグしているときに、ユーザーがマウスポインターをコントロール上に移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="fe0bf-104">イベント<xref:System.Windows.Forms.Control.DragOver>は、マウスでオブジェクトをドラッグしているときに、ユーザーがマウスポインターをコントロールの上に移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="fe0bf-105">オブジェクト<xref:System.Windows.Forms.DragEventArgs>は、このイベントに関連付けられているすべてのデータ (SHIFT、CTRL、ALT キーの現在の状態、マウスポインターの位置、およびドラッグイベントのソースとターゲットで許可されるドラッグアンドドロップ効果) を指定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="fe0bf-106">イベントモデルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0bf-107">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-108">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-109">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-110">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-111">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-112">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-113">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-114">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-115">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-116">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-117">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-118">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-119">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-120">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-121">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-122">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="fe0bf-123">次の例は、 <xref:System.Windows.Forms.DragEventArgs>ドラッグアンドドロップ操作のソースとターゲットの間でがどのように渡されるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-124">この例<xref:System.Windows.Forms.ListBox>では、コントロールがデータ<xref:System.Windows.Forms.RichTextBox>のソースであり、コントロールがターゲットです。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="fe0bf-125">この例では、 <xref:System.Windows.Forms.ListBox>有効なファイル名の一覧がコントロールに設定されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="fe0bf-126">ユーザーが表示されているファイル名のいずれ<xref:System.Windows.Forms.ListBox>かをコントロール<xref:System.Windows.Forms.RichTextBox>からコントロールにドラッグすると、ファイル名で参照されているファイルが開かれます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="fe0bf-127">操作は、 <xref:System.Windows.Forms.ListBox>コントロールの MouseDown イベントで開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="fe0bf-128">イベントハンドラーでは、 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>メソッドを使用して、データが<xref:System.Windows.Forms.RichTextBox>コントロールに表示できる形式であることを確認し、 <xref:System.Windows.Forms.DragDropEffects>プロパティを設定して、ソース管理からデータをコピーするように指定します。 <xref:System.Windows.Forms.RichTextBox.DragEnter>ターゲットコントロールにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="fe0bf-129">最後に、 <xref:System.Windows.Forms.RichTextBox>コントロールの system.windows.dragdrop.drop> イベントハンドラーは、 <xref:System.Windows.Forms.IDataObject.GetData%2A>メソッドを使用して、開くファイル名を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="fe0bf-130">このイベントと関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-130">The data associated with this event.</span></span></param>
        <param name="keyState"><span data-ttu-id="fe0bf-131">Shift、Ctrl、Alt の各キーの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-131">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="x"><span data-ttu-id="fe0bf-132">マウス カーソルの x 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-132">The x-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="fe0bf-133">マウス カーソルの y 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-133">The y-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="allowedEffect"><span data-ttu-id="fe0bf-134"><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <param name="effect"><span data-ttu-id="fe0bf-135"><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="fe0bf-136"><see cref="T:System.Windows.Forms.DragEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-137">ドラッグ イベントの元の場所 (またはソース) で実行できるドラッグ アンド ドロップ操作を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span></span></summary>
        <value><span data-ttu-id="fe0bf-138"><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0bf-139">コントロールが<xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>メソッドを呼び出すことによってドラッグアンドドロップ操作を開始すると、操作の許容される効果が指定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="fe0bf-140">たとえば、ソースからファイルをドラッグするときに、ファイルが読み取り専用の場合 (または、CD などの読み取り専用ストレージメディアから)、ソースは、ファイルをターゲットにコピーすることはできますが、転送はできないことを示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="fe0bf-141">ドラッグしたデータに対して操作を実行する前に、このプロパティを調べて、操作が許可されていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0bf-142">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-143">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-144">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-145">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-146">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-147">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-148">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-149">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-150">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-151">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-152">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-153">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-154">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-155">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-156">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-157">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-158">このイベントに関連付けられているデータを含む <see cref="T:System.Windows.Forms.IDataObject" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span></span></summary>
        <value><span data-ttu-id="fe0bf-159">このイベントと関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-159">The data associated with this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0bf-160">イベントハンドラーの本体では、 <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>メソッドを使用して、データがドラッグされているコントロールの形式要件と一致するかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="fe0bf-161">また、形式の要件を満たすようにデータを変換するかどうかを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="fe0bf-162">ドラッグしたデータが書式要件を満たしている<xref:System.Windows.Forms.IDataObject.GetData%2A>場合は、メソッドを使用してデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0bf-163">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-164">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-165">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-166">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-167">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-168">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-169">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-170">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-171">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-172">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-173">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-174">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-175">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-176">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-177">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-178">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-179">ドラッグ アンド ドロップ操作のターゲットのドロップ効果を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-179">Gets or sets the target drop effect in a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="fe0bf-180"><see cref="T:System.Windows.Forms.DragDropEffects" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0bf-181">既定では、適用される効果によって、ドラッグアンドドロップ操作の対象となるマウスカーソルが決まります。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-182">これは、実行される操作についてユーザーにフィードバックを提供する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="fe0bf-183">たとえば、ソースからファイルをドラッグしたときに CTRL キーを押した場合、ターゲット<xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType>がコピー操作を実行しようとすることを示すには、を指定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="fe0bf-184">ドラッグ操作にカスタムカーソルを使用する方法に<xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>ついては、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0bf-185">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-186">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-187">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-188">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-189">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-190">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-191">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-192">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-193">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-194">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-195">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-196">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-197">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-198">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-199">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-200">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-201">マウス ボタンの状態と同様に、Shift、Ctrl、Alt の各キーの現在の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span></span></summary>
        <value><span data-ttu-id="fe0bf-202">Shift、Ctrl、Alt の各キー、およびマウス ボタンの現在の状態。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0bf-203">ドラッグアンドドロップ操作の効果を、特定のキーの状態に依存させることができます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="fe0bf-204">たとえば、ドラッグアンドドロップ操作中に CTRL キーまたは SHIFT キーが押されたかどうかに応じて、データをコピーまたは移動することができます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="fe0bf-205"><xref:System.Windows.Forms.DragEventArgs.KeyState%2A>プロパティで設定されているビットは、操作中に押されたキーまたはマウスボタンを識別します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="fe0bf-206">たとえば、マウスの左ボタンが押されている場合、 <xref:System.Windows.Forms.DragEventArgs.KeyState%2A>プロパティの最初のビットが設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="fe0bf-207">ビットごとの AND 演算子を使用すると、特定のキー状態を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="fe0bf-208">次の表に、指定したイベントで使用される値を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="fe0bf-209">[値]</span><span class="sxs-lookup"><span data-stu-id="fe0bf-209">Value</span></span>|<span data-ttu-id="fe0bf-210">キー</span><span class="sxs-lookup"><span data-stu-id="fe0bf-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="fe0bf-211">1 (ビット 0)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-211">1 (bit 0)</span></span>|<span data-ttu-id="fe0bf-212">マウスの左ボタン</span><span class="sxs-lookup"><span data-stu-id="fe0bf-212">The left mouse button.</span></span>|  
|<span data-ttu-id="fe0bf-213">2 (ビット 1)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-213">2 (bit 1)</span></span>|<span data-ttu-id="fe0bf-214">マウスの右ボタン</span><span class="sxs-lookup"><span data-stu-id="fe0bf-214">The right mouse button.</span></span>|  
|<span data-ttu-id="fe0bf-215">4 (ビット 2)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-215">4 (bit 2)</span></span>|<span data-ttu-id="fe0bf-216">Shift キー</span><span class="sxs-lookup"><span data-stu-id="fe0bf-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="fe0bf-217">8 (ビット 3)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-217">8 (bit 3)</span></span>|<span data-ttu-id="fe0bf-218">CTRL キー</span><span class="sxs-lookup"><span data-stu-id="fe0bf-218">The CTRL key.</span></span>|  
|<span data-ttu-id="fe0bf-219">16 (ビット 4)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-219">16 (bit 4)</span></span>|<span data-ttu-id="fe0bf-220">マウスの中央ボタン</span><span class="sxs-lookup"><span data-stu-id="fe0bf-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="fe0bf-221">32 (ビット 5)</span><span class="sxs-lookup"><span data-stu-id="fe0bf-221">32 (bit 5)</span></span>|<span data-ttu-id="fe0bf-222">Alt キー。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fe0bf-223">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-224">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-225">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-226">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-227">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-228">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-229">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-230">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-231">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-232">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-233">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-234">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-235">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-236">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-237">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-238">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-239">マウス ポインターの x 座標 (画面座標) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="fe0bf-240">マウス ポインターの x 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-240">The x-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe0bf-241">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-242">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-243">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-244">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-245">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-246">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-247">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-248">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-249">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-250">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-251">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-252">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-253">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-254">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-255">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-256">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0bf-257">マウス ポインターの y 座標 (画面座標) を取得します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="fe0bf-258">マウス ポインターの y 座標 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-258">The y-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe0bf-259">次の例は、2つ<xref:System.Windows.Forms.ListBox>のコントロール間のドラッグアンドドロップ操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="fe0bf-260">この例では<xref:System.Windows.Forms.Control.DoDragDrop%2A> 、ドラッグ操作が開始されたときにメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="fe0bf-261">マウスが<xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>イベント中にマウスの位置から移動した場合、ドラッグ操作が開始されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="fe0bf-262">メソッドは、 `MouseDown`イベント中にドラッグする項目のインデックスを決定するために使用されます。 <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A></span><span class="sxs-lookup"><span data-stu-id="fe0bf-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="fe0bf-263">この例では、ドラッグアンドドロップ操作にカスタムカーソルを使用する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="fe0bf-264">この例では、 `3dwarro.cur`とと`3dwno.cur`いう2つのカーソルファイルがアプリケーションディレクトリに存在することを前提としています。これは、それぞれカスタムドラッグアンドドロップカーソルに対して行われます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="fe0bf-265">がオンになって`UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox>いる場合は、カスタムカーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="fe0bf-266">カスタムカーソルは、 <xref:System.Windows.Forms.Control.GiveFeedback>イベントハンドラーで設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-267">キーボードの状態は、右<xref:System.Windows.Forms.Control.DragOver> `ListBox`のイベントハンドラーで評価され、SHIFT、ctrl、alt、ctrl + alt の各キーの状態に基づいてドラッグ操作がどのように行われるかを決定します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="fe0bf-268">ドロップが発生する`ListBox`内の場所は、 `DragOver`イベント中にも決定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="fe0bf-269">削除するデータがではない`String` <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType>場合、はに<xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>設定されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fe0bf-270">最後に、ドロップの状態がに`DropLocationLabel` <xref:System.Windows.Forms.Label>表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="fe0bf-271">右側`ListBox`にドロップするデータは<xref:System.Windows.Forms.Control.DragDrop>イベントハンドラー `String`で決定され、の適切な場所に値`ListBox`が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="fe0bf-272">ドラッグ操作がフォームの境界の外側に移動すると、 <xref:System.Windows.Forms.Control.QueryContinueDrag>イベントハンドラーでドラッグアンドドロップ操作が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="fe0bf-273">このコード抜粋では、 <xref:System.Windows.Forms.DragEventArgs>クラスの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="fe0bf-274">完全な<xref:System.Windows.Forms.Control.DoDragDrop%2A>コード例については、メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe0bf-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>
