<Type Name="TextFormatFlags" FullName="System.Windows.Forms.TextFormatFlags">
  <TypeSignature Language="C#" Value="public enum TextFormatFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TextFormatFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextFormatFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TextFormatFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TextFormatFlags" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d4c6-101">文字列の表示情報およびレイアウト情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-101">Specifies the display and layout information for text strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d4c6-102"><xref:System.Windows.Forms.TextFormatFlags>列挙型を使用して、<xref:System.Windows.Forms.TextRenderer>の描画とテキストを測定します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-102">The <xref:System.Windows.Forms.TextFormatFlags> enumeration is used by the <xref:System.Windows.Forms.TextRenderer> when drawing and measuring text.</span></span> <span data-ttu-id="2d4c6-103"><xref:System.Windows.Forms.TextRenderer> ExpandTabs フラグを使用して既存のタブを展開することができますが、描画するテキストへのタブ位置の追加をサポートしないを停止しません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-103">The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the ExpandTabs flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d4c6-104">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.TextFormatFlags.ExpandTabs>列挙します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-104">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> enumeration.</span></span> <span data-ttu-id="2d4c6-105">この例を実行するには、Windows フォームに次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-105">To run this example, paste the following code into a Windows Form.</span></span> <span data-ttu-id="2d4c6-106">呼び出す`RenderText6`フォームから<xref:System.Windows.Forms.Control.Paint>イベント ハンドラーを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-106">Call `RenderText6` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="Bottom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Bottom = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Bottom" />
      <MemberSignature Language="VB.NET" Value="Bottom" />
      <MemberSignature Language="C++ CLI" Value="Bottom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-107">外接する四角形の下部に揃えてテキストを配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-107">Aligns the text on the bottom of the bounding rectangle.</span></span> <span data-ttu-id="2d4c6-108">テキストが 1 行の場合にだけ適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-108">Applied only when the text is a single line.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-109">既定の書式 (左寄せ) を適用します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-109">Applies the default formatting, which is left-aligned.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EndEllipsis">
      <MemberSignature Language="C#" Value="EndEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags EndEllipsis = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" />
      <MemberSignature Language="VB.NET" Value="EndEllipsis" />
      <MemberSignature Language="C++ CLI" Value="EndEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-110">トリムされる行の末尾を削除し、省略記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-110">Removes the end of trimmed lines, and replaces them with an ellipsis.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExpandTabs">
      <MemberSignature Language="C#" Value="ExpandTabs" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ExpandTabs = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />
      <MemberSignature Language="VB.NET" Value="ExpandTabs" />
      <MemberSignature Language="C++ CLI" Value="ExpandTabs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-111">タブ文字を拡張します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-111">Expands tab characters.</span></span> <span data-ttu-id="2d4c6-112">タブごとの既定の文字数は 8 文字です。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-112">The default number of characters per tab is eight.</span></span> <span data-ttu-id="2d4c6-113"><see cref="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />、<see cref="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />、および <see cref="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" /> の各値は、<see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" /> では使用できません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-113">The <see cref="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />, <see cref="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />, and <see cref="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" /> values cannot be used with <see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExternalLeading">
      <MemberSignature Language="C#" Value="ExternalLeading" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ExternalLeading = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ExternalLeading" />
      <MemberSignature Language="VB.NET" Value="ExternalLeading" />
      <MemberSignature Language="C++ CLI" Value="ExternalLeading" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-114">行の高さにフォントの外部レディングを含めます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-114">Includes the font external leading in line height.</span></span> <span data-ttu-id="2d4c6-115">通常、外部レディングは、テキストの行の高さに含まれません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-115">Typically, external leading is not included in the height of a line of text.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GlyphOverhangPadding">
      <MemberSignature Language="C#" Value="GlyphOverhangPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags GlyphOverhangPadding = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.GlyphOverhangPadding" />
      <MemberSignature Language="VB.NET" Value="GlyphOverhangPadding" />
      <MemberSignature Language="C++ CLI" Value="GlyphOverhangPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-116">グリフの突出部が収まるように、外接する四角形にパディングを追加します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-116">Adds padding to the bounding rectangle to accommodate overhanging glyphs.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="HidePrefix">
      <MemberSignature Language="C#" Value="HidePrefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags HidePrefix = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.HidePrefix" />
      <MemberSignature Language="VB.NET" Value="HidePrefix" />
      <MemberSignature Language="C++ CLI" Value="HidePrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-117">Windows 2000 および Windows XP だけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-117">Applies to Windows 2000 and Windows XP only:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d4c6-118">テキストにアンパサンド (&) プレフィックス文字を無視します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-118">Ignores the ampersand (&) prefix character in the text.</span></span> <span data-ttu-id="2d4c6-119">これに続く文字に下線が、その他のニーモニック プレフィックス文字は処理されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-119">The letter that follows will not be underlined, but other mnemonic-prefix characters are still processed.</span></span> <span data-ttu-id="2d4c6-120">たとえば、入力文字列の"(&) ビジネス継続性 (& a) d &"適用 HidePrefix での"Abc & d"の出力になります。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-120">For example, an input string of "A&bc&&d" with HidePrefix applied would result in output of "Abc&d".</span></span>  
  
 <span data-ttu-id="2d4c6-121">NoPrefix と PrefixOnly と比較します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-121">Compare with NoPrefix and PrefixOnly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalCenter">
      <MemberSignature Language="C#" Value="HorizontalCenter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags HorizontalCenter = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.HorizontalCenter" />
      <MemberSignature Language="VB.NET" Value="HorizontalCenter" />
      <MemberSignature Language="C++ CLI" Value="HorizontalCenter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-122">外接する四角形内に、テキストを横方向に中央揃えで配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-122">Centers the text horizontally within the bounding rectangle.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Internal">
      <MemberSignature Language="C#" Value="Internal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Internal = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Internal" />
      <MemberSignature Language="VB.NET" Value="Internal" />
      <MemberSignature Language="C++ CLI" Value="Internal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-123">システム フォントを使用して、テキスト メトリックを計算します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-123">Uses the system font to calculate text metrics.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="Left" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Left = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Left" />
      <MemberSignature Language="VB.NET" Value="Left" />
      <MemberSignature Language="C++ CLI" Value="Left" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-124">テキストをクリッピング領域の左側に揃えて配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-124">Aligns the text on the left side of the clipping area.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="LeftAndRightPadding">
      <MemberSignature Language="C#" Value="LeftAndRightPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags LeftAndRightPadding = int32(536870912)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding" />
      <MemberSignature Language="VB.NET" Value="LeftAndRightPadding" />
      <MemberSignature Language="C++ CLI" Value="LeftAndRightPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>536870912</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-125">外接する四角形の両側にパディングを追加します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-125">Adds padding to both sides of the bounding rectangle.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ModifyString">
      <MemberSignature Language="C#" Value="ModifyString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags ModifyString = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.ModifyString" />
      <MemberSignature Language="VB.NET" Value="ModifyString" />
      <MemberSignature Language="C++ CLI" Value="ModifyString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-126">描画するテキストに影響はありません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-126">Has no effect on the drawn text.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoClipping">
      <MemberSignature Language="C#" Value="NoClipping" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoClipping = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoClipping" />
      <MemberSignature Language="VB.NET" Value="NoClipping" />
      <MemberSignature Language="C++ CLI" Value="NoClipping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-127">グリフの突出部と書式指定用の四角形からはみ出すラップされていないテキストを表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-127">Allows the overhanging parts of glyphs and unwrapped text reaching outside the formatting rectangle to show.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoFullWidthCharacterBreak">
      <MemberSignature Language="C#" Value="NoFullWidthCharacterBreak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoFullWidthCharacterBreak = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoFullWidthCharacterBreak" />
      <MemberSignature Language="VB.NET" Value="NoFullWidthCharacterBreak" />
      <MemberSignature Language="C++ CLI" Value="NoFullWidthCharacterBreak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-128">Windows 98、Windows Me、Windows 2000、または Windows XP だけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-128">Applies to Windows 98, Windows Me, Windows 2000, or Windows XP only:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d4c6-129">改行ルールが単一ワイド文字の文字列と同じになるように 2 ワイド文字列で改行をしないようにします。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-129">Prevents a line break at a double-wide character string, so that the line-breaking rule is equivalent to single-wide character strings.</span></span> <span data-ttu-id="2d4c6-130">たとえば、NoFullWidthCharacterBreak は韓国語の windows でアイコンのラベルの読みやすさが向上します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-130">For example, NoFullWidthCharacterBreak increases the readability of icon labels in Korean windows.</span></span> <span data-ttu-id="2d4c6-131">WordBreak も指定しない場合は、この値を指定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-131">This value has no effect unless WordBreak is also specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoPadding">
      <MemberSignature Language="C#" Value="NoPadding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoPadding = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoPadding" />
      <MemberSignature Language="VB.NET" Value="NoPadding" />
      <MemberSignature Language="C++ CLI" Value="NoPadding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-132">外接する四角形にパディングを追加しません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-132">Does not add padding to the bounding rectangle.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoPrefix">
      <MemberSignature Language="C#" Value="NoPrefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags NoPrefix = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />
      <MemberSignature Language="VB.NET" Value="NoPrefix" />
      <MemberSignature Language="C++ CLI" Value="NoPrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-133">先頭文字の処理を無効にします。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-133">Turns off processing of prefix characters.</span></span> <span data-ttu-id="2d4c6-134">通常、ニーモニックのプレフィックス文字であるアンパサンド (&amp;) は、これに続く文字に下線を引くディレクティブと解釈されます。また、ニーモニックのプレフィックス文字である二重アンパサンド (&amp;&amp;) は、単一のアンパサンドを印刷するディレクティブと解釈されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-134">Typically, the ampersand (&amp;) mnemonic-prefix character is interpreted as a directive to underscore the character that follows, and the double-ampersand (&amp;&amp;) mnemonic-prefix characters as a directive to print a single ampersand.</span></span> <span data-ttu-id="2d4c6-135"><see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> を指定すると、この処理が無効になります。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-135">By specifying <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />, this processing is turned off.</span></span> <span data-ttu-id="2d4c6-136">たとえば、"A&amp;bc&amp;&amp;d" の入力文字列に <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> が適用されると、"A&amp;bc&amp;&amp;d" が出力されることになります。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-136">For example, an input string of "A&amp;bc&amp;&amp;d" with <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> applied would result in output of "A&amp;bc&amp;&amp;d".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d4c6-137">HidePrefix と PrefixOnly と比較します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-137">Compare with HidePrefix and PrefixOnly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathEllipsis">
      <MemberSignature Language="C#" Value="PathEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PathEllipsis = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />
      <MemberSignature Language="VB.NET" Value="PathEllipsis" />
      <MemberSignature Language="C++ CLI" Value="PathEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-138">トリムされる行の中央を削除し、省略記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-138">Removes the center of trimmed lines and replaces it with an ellipsis.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixOnly">
      <MemberSignature Language="C#" Value="PrefixOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PrefixOnly = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PrefixOnly" />
      <MemberSignature Language="VB.NET" Value="PrefixOnly" />
      <MemberSignature Language="C++ CLI" Value="PrefixOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-139">Windows 2000 または Windows XP だけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-139">Applies to Windows 2000 or Windows XP only:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d4c6-140">アンパサンド (&) プレフィックス文字を次の文字の位置にある下線のみを描画します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-140">Draws only an underline at the position of the character following the ampersand (&) prefix character.</span></span> <span data-ttu-id="2d4c6-141">文字列の他の文字で囲みません。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-141">Does not draw any other characters in the string.</span></span> <span data-ttu-id="2d4c6-142">たとえば、入力文字列の"A & bc (& a) d &"「_」の出力になります。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-142">For example, an input string of "A&bc&&d" would result in output of " _   ".</span></span>  
  
 <span data-ttu-id="2d4c6-143">HidePrefix と NoPrefix と比較します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-143">Compare with HidePrefix and NoPrefix.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveGraphicsClipping">
      <MemberSignature Language="C#" Value="PreserveGraphicsClipping" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PreserveGraphicsClipping = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PreserveGraphicsClipping" />
      <MemberSignature Language="VB.NET" Value="PreserveGraphicsClipping" />
      <MemberSignature Language="C++ CLI" Value="PreserveGraphicsClipping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-144"><see cref="T:System.Drawing.Graphics" /> オブジェクトで指定されたクリッピングを維持します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-144">Preserves the clipping specified by a <see cref="T:System.Drawing.Graphics" /> object.</span></span> <span data-ttu-id="2d4c6-145"><see cref="T:System.Drawing.IDeviceContext" /> である <see cref="T:System.Drawing.Graphics" /> を受信するメソッドだけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-145">Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveGraphicsTranslateTransform">
      <MemberSignature Language="C#" Value="PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags PreserveGraphicsTranslateTransform = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="VB.NET" Value="PreserveGraphicsTranslateTransform" />
      <MemberSignature Language="C++ CLI" Value="PreserveGraphicsTranslateTransform" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-146"><see cref="T:System.Drawing.Graphics" /> で指定された変換を維持します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-146">Preserves the transformation specified by a <see cref="T:System.Drawing.Graphics" />.</span></span> <span data-ttu-id="2d4c6-147"><see cref="T:System.Drawing.IDeviceContext" /> である <see cref="T:System.Drawing.Graphics" /> を受信するメソッドだけに適用されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-147">Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="Right" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Right = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Right" />
      <MemberSignature Language="VB.NET" Value="Right" />
      <MemberSignature Language="C++ CLI" Value="Right" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-148">テキストをクリッピング領域の右側に揃えて配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-148">Aligns the text on the right side of the clipping area.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags RightToLeft = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="RightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-149">テキストを右から左へ表示します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-149">Displays the text from right to left.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SingleLine">
      <MemberSignature Language="C#" Value="SingleLine" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags SingleLine = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.SingleLine" />
      <MemberSignature Language="VB.NET" Value="SingleLine" />
      <MemberSignature Language="C++ CLI" Value="SingleLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-150">テキストを 1 行で表示します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-150">Displays the text in a single line.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TextBoxControl">
      <MemberSignature Language="C#" Value="TextBoxControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags TextBoxControl = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.TextBoxControl" />
      <MemberSignature Language="VB.NET" Value="TextBoxControl" />
      <MemberSignature Language="C++ CLI" Value="TextBoxControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-151">テキストを <see cref="T:System.Windows.Forms.TextBox" /> コントロールに表示するために書式設定する必要があることを指定します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-151">Specifies the text should be formatted for display on a <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="Top" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags Top = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.Top" />
      <MemberSignature Language="VB.NET" Value="Top" />
      <MemberSignature Language="C++ CLI" Value="Top" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-152">外接する四角形の上部に揃えてテキストを配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-152">Aligns the text on the top of the bounding rectangle.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="VerticalCenter">
      <MemberSignature Language="C#" Value="VerticalCenter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags VerticalCenter = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.VerticalCenter" />
      <MemberSignature Language="VB.NET" Value="VerticalCenter" />
      <MemberSignature Language="C++ CLI" Value="VerticalCenter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-153">外接する四角形内に、テキストを縦方向に中央揃えで配置します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-153">Centers the text vertically, within the bounding rectangle.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WordBreak">
      <MemberSignature Language="C#" Value="WordBreak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags WordBreak = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.WordBreak" />
      <MemberSignature Language="VB.NET" Value="WordBreak" />
      <MemberSignature Language="C++ CLI" Value="WordBreak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-154">単語の末尾でテキストを改行します。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-154">Breaks the text at the end of a word.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WordEllipsis">
      <MemberSignature Language="C#" Value="WordEllipsis" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.TextFormatFlags WordEllipsis = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />
      <MemberSignature Language="VB.NET" Value="WordEllipsis" />
      <MemberSignature Language="C++ CLI" Value="WordEllipsis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d4c6-155">行を最も近い単語までトリムします。トリムされた行の末尾には、省略記号が配置されます。</span><span class="sxs-lookup"><span data-stu-id="2d4c6-155">Trims the line to the nearest word and an ellipsis is placed at the end of a trimmed line.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>