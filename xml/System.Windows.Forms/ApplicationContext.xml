<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="170527b2b9bd8d0b547499e1581bacb86fb5c8bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="96f16-101">アプリケーション スレッドに関するコンテキスト情報を指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="96f16-101">Specifies the contextual information about an application thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-102">使用することができます、<xref:System.Windows.Forms.ApplicationContext>を終了するメッセージ ループが発生する状況を再定義するクラス。</span><span class="sxs-lookup"><span data-stu-id="96f16-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="96f16-103">既定では、<xref:System.Windows.Forms.ApplicationContext>がリッスンする、<xref:System.Windows.Forms.Form.Closed>のアプリケーションにイベントのメイン<xref:System.Windows.Forms.Form>スレッドのメッセージ ループを終了します。</span><span class="sxs-lookup"><span data-stu-id="96f16-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96f16-104">次のコード例では、次の 2 つのフォームを表示し、両方のフォームが閉じられたときに、アプリケーションを終了します。</span><span class="sxs-lookup"><span data-stu-id="96f16-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="96f16-105">アプリケーションを起動し、終了、各フォームの位置が記憶されます。</span><span class="sxs-lookup"><span data-stu-id="96f16-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="96f16-106">この例で使用する方法、 <xref:System.Windows.Forms.ApplicationContext>、と共に、`Application.Run(context)`メソッドは、アプリケーションの起動時に、複数のフォームを表示します。</span><span class="sxs-lookup"><span data-stu-id="96f16-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="96f16-107">クラス`MyApplicationContext`から継承<xref:System.Windows.Forms.ApplicationContext>し、各フォームは閉じられ、両者は、するときに、現在のスレッドを終了するときは常に追跡します。</span><span class="sxs-lookup"><span data-stu-id="96f16-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="96f16-108">クラスは、ユーザーの各フォームの位置を格納します。</span><span class="sxs-lookup"><span data-stu-id="96f16-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="96f16-109">フォームの位置データはというファイルに格納`Appdata.txt`によって決まります場所に作成される<xref:System.Windows.Forms.Application.UserAppDataPath%2A>です。</span><span class="sxs-lookup"><span data-stu-id="96f16-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="96f16-110">`Main`メソッド呼び出し`Application.Run(context)`アプリケーションを起動、指定された、<xref:System.Windows.Forms.ApplicationContext>です。</span><span class="sxs-lookup"><span data-stu-id="96f16-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="96f16-111">
            <see cref="T:System.Windows.Forms.ApplicationContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96f16-112">コンテキストを指定せずに <see cref="T:System.Windows.Forms.ApplicationContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm">
          <span data-ttu-id="96f16-113">コンテキストとして使用する、アプリケーションのメイン <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96f16-114">指定した <see cref="T:System.Windows.Forms.ApplicationContext" /> を使用して、<see cref="T:System.Windows.Forms.Form" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-115">場合<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>がオーバーライドされていないスレッドのメッセージ ループと終了<xref:System.Windows.Forms.ApplicationContext.MainForm%2A>が閉じられます。</span><span class="sxs-lookup"><span data-stu-id="96f16-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="96f16-116">
            <see cref="T:System.Windows.Forms.ApplicationContext" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96f16-117">
            <see cref="T:System.Windows.Forms.ApplicationContext" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-118"><xref:System.Windows.Forms.ApplicationContext.Dispose> を使い終わったら <xref:System.Windows.Forms.ApplicationContext> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="96f16-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="96f16-119"><xref:System.Windows.Forms.ApplicationContext.Dispose> メソッドによって、<xref:System.Windows.Forms.ApplicationContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="96f16-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="96f16-120">呼び出した後<xref:System.Windows.Forms.ApplicationContext.Dispose>へのすべての参照を解放する必要があります、<xref:System.Windows.Forms.ApplicationContext>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Windows.Forms.ApplicationContext>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="96f16-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="96f16-121">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="96f16-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96f16-122"><xref:System.Windows.Forms.ApplicationContext.Dispose> への最後の参照を解放する前に、必ず <xref:System.Windows.Forms.ApplicationContext> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="96f16-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="96f16-123">そうしないと、ガベージ コレクターが <xref:System.Windows.Forms.ApplicationContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="96f16-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="96f16-124">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-124">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96f16-125">
            <see cref="T:System.Windows.Forms.ApplicationContext" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-126">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="96f16-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="96f16-127">`Dispose()` プロテクト呼び出します<xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29>メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="96f16-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="96f16-128"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="96f16-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="96f16-129">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Windows.Forms.ApplicationContext>参照します。</span><span class="sxs-lookup"><span data-stu-id="96f16-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="96f16-130">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="96f16-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="96f16-131">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="96f16-131">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="96f16-132">
              <see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="96f16-132">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="96f16-133">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="96f16-133">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="96f16-134">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="96f16-134">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96f16-135">スレッドのメッセージ ループを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-135">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-136">このメソッドは <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="96f16-136">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96f16-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> および<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>スレッドが終了する原因と実際にを実行します。</span><span class="sxs-lookup"><span data-stu-id="96f16-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="96f16-138">これらのメソッドを発生させる、<xref:System.Windows.Forms.Application.ThreadExit>イベントの<xref:System.Windows.Forms.Application>オブジェクトの受信を待機します。</span><span class="sxs-lookup"><span data-stu-id="96f16-138">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="96f16-139"><xref:System.Windows.Forms.Application>オブジェクトは、その後、スレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="96f16-139">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96f16-140">次のコード例は例からの抜粋、<xref:System.Windows.Forms.ApplicationContext>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="96f16-140">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="96f16-141">この例では、開いているフォームの追跡し、すべてのフォームが閉じられたときに、現在のスレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="96f16-141">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="96f16-142">`OnFormClosed`メソッドは、イベント ハンドラーを<xref:System.Windows.Forms.Form.Closed>イベント。</span><span class="sxs-lookup"><span data-stu-id="96f16-142">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="96f16-143">開いているフォームの数が 0 に等しい場合は、現在のスレッドが呼び出すことによって終了、<xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="96f16-143">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="96f16-144">フォームの数がインクリメントによって追跡される、`formCount`フォームが表示されると、変数およびデクリメント、フォームが閉じられるときにします。</span><span class="sxs-lookup"><span data-stu-id="96f16-144">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="96f16-145">一部のコードは、簡潔さを優先するためには表示されません。</span><span class="sxs-lookup"><span data-stu-id="96f16-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="96f16-146">参照してください<xref:System.Windows.Forms.ApplicationContext>コード全体をします。</span><span class="sxs-lookup"><span data-stu-id="96f16-146">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96f16-147">スレッドのメッセージ ループを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-147">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-148">このメソッドを呼び出した<xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>です。</span><span class="sxs-lookup"><span data-stu-id="96f16-148">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96f16-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> および<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>スレッドが終了する原因と実際にを実行します。</span><span class="sxs-lookup"><span data-stu-id="96f16-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="96f16-150">これらのメソッドを発生させる、<xref:System.Windows.Forms.Application.ThreadExit>イベントの<xref:System.Windows.Forms.Application>オブジェクトの受信を待機します。</span><span class="sxs-lookup"><span data-stu-id="96f16-150">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="96f16-151"><xref:System.Windows.Forms.Application>オブジェクトは、その後、スレッドを終了します。</span><span class="sxs-lookup"><span data-stu-id="96f16-151">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96f16-152">アプリケーション コンテキストがガベージ コレクションにより収集される前に、リソースの解放などのクリーンアップ操作を実行しようとします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-152">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-153">このメソッドは<xref:System.Object.Finalize%2A?displayProperty=nameWithType>を呼び出してリソースをクリーンアップし、`Dispose(false)`です。</span><span class="sxs-lookup"><span data-stu-id="96f16-153">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="96f16-154">`Dispose(Boolean)` をオーバーライドしてクリーンアップをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="96f16-154">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="96f16-155">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="96f16-155">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="96f16-156">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="96f16-156">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96f16-157">コンテキストとして使用する <see cref="T:System.Windows.Forms.Form" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-157">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96f16-158">コンテキストとして使用する <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-158">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-159">このプロパティによって決まりますメイン<xref:System.Windows.Forms.Form>このコンテキストでします。</span><span class="sxs-lookup"><span data-stu-id="96f16-159">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="96f16-160">このプロパティは、いつでも変更できます。</span><span class="sxs-lookup"><span data-stu-id="96f16-160">This property can change at any time.</span></span> <span data-ttu-id="96f16-161">場合<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>がオーバーライドされていないスレッドのメッセージ ループと終了、`mainForm`パラメーターを閉じます。</span><span class="sxs-lookup"><span data-stu-id="96f16-161">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="96f16-162">イベントを発生させたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-162">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="96f16-163">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-163">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96f16-164">
            <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /> イベントを発生させる <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> を呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-164">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-165">このメソッドの既定の実装を呼び出す<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="96f16-165">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96f16-166">コントロールに関するデータを格納するオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-166">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96f16-167">コントロールに関するデータを格納している <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-167">An <see cref="T:System.Object" /> that contains data about the control.</span>
          </span>
          <span data-ttu-id="96f16-168">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96f16-169">派生した任意の型、<xref:System.Object>クラスは、このプロパティに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="96f16-169">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="96f16-170">場合、<xref:System.Windows.Forms.ApplicationContext.Tag%2A>プロパティは、Windows フォーム デザイナーによる設定、テキストのみを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="96f16-170">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="96f16-171">一般的な用途、<xref:System.Windows.Forms.ApplicationContext.Tag%2A>プロパティは、コントロールに密接に関連付けられているデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="96f16-171">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="96f16-172">たとえば、顧客に関する情報を表示するコントロールを使用していれば、保存する、<xref:System.Data.DataSet>を制御するので、顧客の注文履歴を格納している<xref:System.Windows.Forms.ApplicationContext.Tag%2A>プロパティ データにすばやくアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="96f16-172">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96f16-173">
            <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /> を呼び出したことにより、スレッドのメッセージ ループが終了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="96f16-173">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96f16-174">次のコード例では、このメンバーの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="96f16-174">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="96f16-175">例では、イベント ハンドラーは発生するときに報告、<xref:System.Windows.Forms.ApplicationContext.ThreadExit>イベント。</span><span class="sxs-lookup"><span data-stu-id="96f16-175">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="96f16-176">このレポートでは、イベントが発生し、デバッグに役立つを学習するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="96f16-176">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="96f16-177">複数のイベントまたは頻繁に発生するイベントを報告するための交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加する<xref:System.Windows.Forms.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="96f16-177">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="96f16-178">コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.ApplicationContext>という`ApplicationContext1`です。</span><span class="sxs-lookup"><span data-stu-id="96f16-178">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="96f16-179">イベント ハンドラーが関連付けられていることを確認してください、<xref:System.Windows.Forms.ApplicationContext.ThreadExit>イベント。</span><span class="sxs-lookup"><span data-stu-id="96f16-179">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>