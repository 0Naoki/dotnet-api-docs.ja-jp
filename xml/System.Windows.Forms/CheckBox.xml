<Type Name="CheckBox" FullName="System.Windows.Forms.CheckBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a1f2afaa71b421320ad755b03fa77a3775ea20a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69195394" /></Metadata><TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CheckBox extends System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Forms::ButtonBase" />
  <TypeSignature Language="F#" Value="type CheckBox = class&#xA;    inherit ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("CheckState")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckedChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Checked")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a7185-101">Windows <see cref="T:System.Windows.Forms.CheckBox" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="a7185-101">Represents a Windows <see cref="T:System.Windows.Forms.CheckBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-102">True/ <xref:System.Windows.Forms.CheckBox> false や yes/no などのオプションをユーザーに付与するには、を使用します。</span><span class="sxs-lookup"><span data-stu-id="a7185-102">Use a <xref:System.Windows.Forms.CheckBox> to give the user an option, such as true/false or yes/no.</span></span> <span data-ttu-id="a7185-103">コントロール<xref:System.Windows.Forms.CheckBox>は、イメージまたはテキストまたはその両方を表示できます。</span><span class="sxs-lookup"><span data-stu-id="a7185-103">The <xref:System.Windows.Forms.CheckBox> control can display an image or text or both.</span></span>  
  
 <span data-ttu-id="a7185-104"><xref:System.Windows.Forms.CheckBox>と<xref:System.Windows.Forms.RadioButton>のコントロールには、オプションの一覧からユーザーが選択できるようにする関数が似ています。</span><span class="sxs-lookup"><span data-stu-id="a7185-104"><xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls have a similar function: they allow the user to choose from a list of options.</span></span> <span data-ttu-id="a7185-105"><xref:System.Windows.Forms.CheckBox>コントロールは、ユーザーがオプションの組み合わせを選択できるようにします。</span><span class="sxs-lookup"><span data-stu-id="a7185-105"><xref:System.Windows.Forms.CheckBox> controls let the user pick a combination of options.</span></span> <span data-ttu-id="a7185-106">これに対し<xref:System.Windows.Forms.RadioButton>て、コントロールを使用すると、ユーザーは相互に排他的なオプションから選択できます。</span><span class="sxs-lookup"><span data-stu-id="a7185-106">In contrast, <xref:System.Windows.Forms.RadioButton> controls allow a user to choose from mutually exclusive options.</span></span>  
  
 <span data-ttu-id="a7185-107">プロパティ<xref:System.Windows.Forms.CheckBox.Appearance%2A>は、が<xref:System.Windows.Forms.CheckBox>通常<xref:System.Windows.Forms.CheckBox>のボタンまたはボタンとして表示されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-107">The <xref:System.Windows.Forms.CheckBox.Appearance%2A> property determines whether the <xref:System.Windows.Forms.CheckBox> appears as a typical <xref:System.Windows.Forms.CheckBox> or as a button.</span></span>  
  
 <span data-ttu-id="a7185-108">プロパティ<xref:System.Windows.Forms.CheckBox.ThreeState%2A>は、コントロールが2つまたは3つの状態をサポートするかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-108">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property determines whether the control supports two or three states.</span></span> <span data-ttu-id="a7185-109">プロパティを使用して、2つの状態<xref:System.Windows.Forms.CheckBox>のコントロールの値を取得または<xref:System.Windows.Forms.CheckBox.CheckState%2A>設定し、プロパティを使用して、3つの<xref:System.Windows.Forms.CheckBox>状態のコントロールの値を取得または設定します。 <xref:System.Windows.Forms.CheckBox.Checked%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-109">Use the <xref:System.Windows.Forms.CheckBox.Checked%2A> property to get or set the value of a two-state <xref:System.Windows.Forms.CheckBox> control and use the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property to get or set the value of a three-state <xref:System.Windows.Forms.CheckBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7185-110">プロパティがに`true`設定されている<xref:System.Windows.Forms.CheckBox.Checked%2A>場合、プロパティ`true`は checked または未確定のいずれかの状態に対してを返します。 <xref:System.Windows.Forms.CheckBox.ThreeState%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-110">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, the <xref:System.Windows.Forms.CheckBox.Checked%2A> property will return `true` for either a checked or indeterminate state.</span></span>  
  
 <span data-ttu-id="a7185-111">プロパティ<xref:System.Windows.Forms.ButtonBase.FlatStyle%2A>は、コントロールのスタイルと外観を決定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-111">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control.</span></span> <span data-ttu-id="a7185-112">プロパティがに<xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>設定されている場合、ユーザーのオペレーティングシステムによってコントロールの外観が決まります。 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-112">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the user's operating system determines the appearance of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7185-113"><xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType>プロパティがに設定されている場合、プロパティは無視され、または<xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType>の配置を使用してコントロールが表示されます。 <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-113">When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is ignored and the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> or <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment.</span></span> <span data-ttu-id="a7185-114">プロパティが適切な<xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType>配置のいずれかに設定されている場合、コントロールは配置を使用して表示されます<xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> 。それ以外の場合は、配置を使用して表示されます。 <xref:System.Windows.Forms.CheckBox.CheckAlign%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-114">If the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> property is set to one of the right alignments, the control is displayed using the <xref:System.Drawing.ContentAlignment.MiddleRight?displayProperty=nameWithType> alignment; otherwise, it is displayed using the <xref:System.Drawing.ContentAlignment.MiddleLeft?displayProperty=nameWithType> alignment.</span></span>  
  
 <span data-ttu-id="a7185-115">次の例では、不確定な状態について説明します。で選択し<xref:System.Windows.Forms.CheckBox>たテキストが太字かどうかを判断するがあります。<xref:System.Windows.Forms.RichTextBox></span><span class="sxs-lookup"><span data-stu-id="a7185-115">The following describes an indeterminate state: You have a <xref:System.Windows.Forms.CheckBox> that determines if the selected text in a <xref:System.Windows.Forms.RichTextBox> is bold.</span></span> <span data-ttu-id="a7185-116">テキストを選択すると、 <xref:System.Windows.Forms.CheckBox>をクリックして選択範囲を太字にすることができます。</span><span class="sxs-lookup"><span data-stu-id="a7185-116">When you select text you can click the <xref:System.Windows.Forms.CheckBox> to bold the selection.</span></span> <span data-ttu-id="a7185-117">同様に、一部のテキスト<xref:System.Windows.Forms.CheckBox>を選択すると、選択したテキストが太字かどうかが表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-117">Likewise, when you select some text, the <xref:System.Windows.Forms.CheckBox> displays whether the selected text is bold.</span></span> <span data-ttu-id="a7185-118">選択したテキストに太字と標準のテキストが含まれ<xref:System.Windows.Forms.CheckBox>ている場合、は中間状態になります。</span><span class="sxs-lookup"><span data-stu-id="a7185-118">If your selected text contains text that is bold and normal, the <xref:System.Windows.Forms.CheckBox> will have an indeterminate state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-119">次のコード例では、を<xref:System.Windows.Forms.CheckBox>作成して初期化し、トグルボタンの外観、 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A>を`false`に設定して、に<xref:System.Windows.Forms.Form>追加します。</span><span class="sxs-lookup"><span data-stu-id="a7185-119">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/0719d798-c307-40d3-9040-72a62679c227"><span data-ttu-id="a7185-120">CheckBox コントロール (Windows フォーム)</span><span class="sxs-lookup"><span data-stu-id="a7185-120">CheckBox Control (Windows Forms)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7185-121"><see cref="T:System.Windows.Forms.CheckBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a7185-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.CheckBox" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-122">既定で<xref:System.Windows.Forms.CheckBox>は、新しいが<xref:System.Windows.Forms.CheckBox.AutoCheck%2A>インスタンス化されると、 `true`が<xref:System.Windows.Forms.CheckBox.Checked%2A> `false`に設定され、 <xref:System.Windows.Forms.CheckBox.Appearance%2A>がに設定<xref:System.Windows.Forms.Appearance.Normal>され、がに設定されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-122">By default, when a new <xref:System.Windows.Forms.CheckBox> is instantiated, <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to `true`, <xref:System.Windows.Forms.CheckBox.Checked%2A> is set to `false`, and <xref:System.Windows.Forms.CheckBox.Appearance%2A> is set to <xref:System.Windows.Forms.Appearance.Normal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-123">次のコード例では、を<xref:System.Windows.Forms.CheckBox>作成して初期化し、トグルボタンの外観、 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A>を`false`に設定して、に<xref:System.Windows.Forms.Form>追加します。</span><span class="sxs-lookup"><span data-stu-id="a7185-123">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Appearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Appearance Appearance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Appearance Appearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Appearance" />
      <MemberSignature Language="VB.NET" Value="Public Property Appearance As Appearance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Appearance Appearance { System::Windows::Forms::Appearance get(); void set(System::Windows::Forms::Appearance value); };" />
      <MemberSignature Language="F#" Value="member this.Appearance : System.Windows.Forms.Appearance with get, set" Usage="System.Windows.Forms.CheckBox.Appearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Appearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-124"><see cref="T:System.Windows.Forms.CheckBox" /> コントロールの外観を決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-124">Gets or sets the value that determines the appearance of a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <value><span data-ttu-id="a7185-125"><see cref="T:System.Windows.Forms.Appearance" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a7185-125">One of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span></span> <span data-ttu-id="a7185-126">既定値は <see cref="F:System.Windows.Forms.Appearance.Normal" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-126">The default value is <see cref="F:System.Windows.Forms.Appearance.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-127">Value <xref:System.Windows.Forms.CheckBox.Appearance%2A>がに<xref:System.Windows.Forms.Appearance.Normal>設定されて<xref:System.Windows.Forms.CheckBox>いる場合、は標準的な外観になります。</span><span class="sxs-lookup"><span data-stu-id="a7185-127">If <xref:System.Windows.Forms.CheckBox.Appearance%2A> value is set to <xref:System.Windows.Forms.Appearance.Normal>, the <xref:System.Windows.Forms.CheckBox> has a typical appearance.</span></span> <span data-ttu-id="a7185-128">値がに`Button`設定されている<xref:System.Windows.Forms.CheckBox>場合、はトグルボタンのように表示され、上下の状態に切り替えることができます。</span><span class="sxs-lookup"><span data-stu-id="a7185-128">If the value is set to `Button`, the <xref:System.Windows.Forms.CheckBox> appears like a toggle button, which can be toggled to an up or down state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-129">次のコード例では、を<xref:System.Windows.Forms.CheckBox>作成して初期化し、トグルボタンの外観、 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A>を`false`に設定して、に<xref:System.Windows.Forms.Form>追加します。</span><span class="sxs-lookup"><span data-stu-id="a7185-129">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="a7185-130">代入された値が、<see cref="T:System.Windows.Forms.Appearance" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a7185-130">The value assigned is not one of the <see cref="T:System.Windows.Forms.Appearance" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AppearanceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppearanceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AppearanceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppearanceChanged;" />
      <MemberSignature Language="F#" Value="member this.AppearanceChanged : EventHandler " Usage="member this.AppearanceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-131"><see cref="P:System.Windows.Forms.CheckBox.Appearance" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-131">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-132">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-132">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-133">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="a7185-134">この例では、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.AppearanceChanged>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="a7185-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span> <span data-ttu-id="a7185-135">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a7185-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="a7185-136">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="a7185-137">コード例を実行するには、という名前<xref:System.Windows.Forms.CheckBox> `CheckBox1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="a7185-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="a7185-138">次に、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.AppearanceChanged>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7185-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.AppearanceChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#139)]
 [!code-vb[System.Windows.Forms.EventExamples#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#139)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Appearance" />
      </Docs>
    </Member>
    <Member MemberName="AutoCheck">
      <MemberSignature Language="C#" Value="public bool AutoCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoCheck : bool with get, set" Usage="System.Windows.Forms.CheckBox.AutoCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-139"><see cref="P:System.Windows.Forms.CheckBox.Checked" /> がクリックされたときに、<see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 値または <see cref="T:System.Windows.Forms.CheckBox" /> 値、および <see cref="T:System.Windows.Forms.CheckBox" /> の外観を自動的に変更するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-139">Gets or set a value indicating whether the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> values and the <see cref="T:System.Windows.Forms.CheckBox" />'s appearance are automatically changed when the <see cref="T:System.Windows.Forms.CheckBox" /> is clicked.</span></span></summary>
        <value><span data-ttu-id="a7185-140"><see cref="P:System.Windows.Forms.CheckBox.Checked" /> 値または <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> 値、およびコントロールの外観が <see cref="E:System.Windows.Forms.Control.Click" /> イベントの発生時に自動的に変更される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-140"><see langword="true" /> if the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> value or <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> value and the appearance of the control are automatically changed on the <see cref="E:System.Windows.Forms.Control.Click" /> event; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a7185-141">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-141">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-142">が<xref:System.Windows.Forms.CheckBox.AutoCheck%2A> false に設定されている場合は、 <xref:System.Windows.Forms.Control.Click>イベントハンドラーの値<xref:System.Windows.Forms.CheckBox.Checked%2A>また<xref:System.Windows.Forms.CheckBox.CheckState%2A>は値を更新するコードを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-142">If <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> is set to false, you will need to add code to update the <xref:System.Windows.Forms.CheckBox.Checked%2A> or <xref:System.Windows.Forms.CheckBox.CheckState%2A> values in the <xref:System.Windows.Forms.Control.Click> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-143">次のコード例では、を<xref:System.Windows.Forms.CheckBox>作成して初期化し、トグルボタンの外観、 <xref:System.Windows.Forms.CheckBox.AutoCheck%2A>を`false`に設定して、に<xref:System.Windows.Forms.Form>追加します。</span><span class="sxs-lookup"><span data-stu-id="a7185-143">The following code example creates and initializes a <xref:System.Windows.Forms.CheckBox>, gives it the appearance of a toggle button, sets <xref:System.Windows.Forms.CheckBox.AutoCheck%2A> to `false`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment CheckAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment CheckAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment CheckAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.CheckAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.CheckBox.CheckAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-144"><see cref="T:System.Windows.Forms.CheckBox" /> コントロールにおけるチェック マークの水平および垂直の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-144">Gets or sets the horizontal and vertical alignment of the check mark on a <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <value><span data-ttu-id="a7185-145"><see cref="T:System.Drawing.ContentAlignment" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="a7185-145">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span> <span data-ttu-id="a7185-146">既定値は <see langword="MiddleLeft" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-146">The default value is <see langword="MiddleLeft" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7185-147">次のコード例では、ラベルの3つのプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-147">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="a7185-148">プロパティ<xref:System.Windows.Forms.CheckBox.ThreeState%2A>は、と`true` `MiddleRight` `MiddleLeft` <xref:System.Drawing.ContentAlignment>の間で、コントロール<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>を交互にクリックし、との値との値を交互に交互に切り替えます。 `false`</span><span class="sxs-lookup"><span data-stu-id="a7185-148">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment>.</span></span> <span data-ttu-id="a7185-149">この例では、プロパティが<xref:System.Windows.Forms.CheckBox.ThreeState%2A>変更され、コントロールがチェックされると、プロパティ値がどのように変化するかを示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-149">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="a7185-150">この<xref:System.Windows.Forms.CheckBox>例では、、 <xref:System.Windows.Forms.Label> 、および<xref:System.Windows.Forms.Button>がすべてフォーム上でインスタンス化されていること、およびラベルが3行のテキスト<xref:System.Drawing?displayProperty=nameWithType>を表示するのに十分な大きさであること、および名前空間への参照が必要であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a7185-150">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="a7185-151">このコードは、コントロールの<xref:System.Windows.Forms.Control.Click>イベントハンドラーで呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-151">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="a7185-152">代入された値が、<see cref="T:System.Drawing.ContentAlignment" /> 列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a7185-152">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> enumeration values.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.CheckBox.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-153"><see cref="T:System.Windows.Forms.CheckBox" /> がチェックされた状態であるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-153">Gets or set a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state.</span></span></summary>
        <value><span data-ttu-id="a7185-154"><see cref="T:System.Windows.Forms.CheckBox" /> がチェックされた状態である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-154"><see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is in the checked state; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a7185-155">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-155">The default value is <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="a7185-156"><see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> プロパティが <see langword="true" /> に設定されている場合、<see cref="P:System.Windows.Forms.CheckBox.Checked" /> プロパティは、<see langword="true" /> または <see langword="Checked" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" /> の場合に <see langword="Indeterminate" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a7185-156">If the <see cref="P:System.Windows.Forms.CheckBox.ThreeState" /> property is set to <see langword="true" />, the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property will return <see langword="true" /> for either a <see langword="Checked" /> or <see langword="Indeterminate" /><see cref="P:System.Windows.Forms.CheckBox.CheckState" />.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-157">値が`true`の場合、コントロール<xref:System.Windows.Forms.CheckBox>の部分にはチェックマークが表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-157">When the value is `true`, the <xref:System.Windows.Forms.CheckBox> portion of the control displays a check mark.</span></span> <span data-ttu-id="a7185-158">`Button` <xref:System.Windows.Forms.CheckBox.Checked%2A> `true`プロパティがに設定されている場合`false`は、がのときにコントロールがくぼんで表示され、標準のボタンのようにが発生します。 <xref:System.Windows.Forms.CheckBox.Appearance%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-158">If the <xref:System.Windows.Forms.CheckBox.Appearance%2A> property is set to `Button`, the control will appear sunken when <xref:System.Windows.Forms.CheckBox.Checked%2A> is `true` and raised like a standard button when `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-159">次のコード例では、ラベルの3つのプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-159">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="a7185-160">プロパティ<xref:System.Windows.Forms.CheckBox.ThreeState%2A>は、と`true` <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> <xref:System.Drawing.ContentAlignment> `MiddleRight`の間でコントロールを交互にクリックし、との`MiddleLeft`値を交互に交互に使用します。 `false`</span><span class="sxs-lookup"><span data-stu-id="a7185-160">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between a <xref:System.Drawing.ContentAlignment> value of `MiddleRight` and `MiddleLeft`.</span></span> <span data-ttu-id="a7185-161">この例では、プロパティが<xref:System.Windows.Forms.CheckBox.ThreeState%2A>変更され、コントロールがチェックされると、プロパティ値がどのように変化するかを示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-161">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="a7185-162">この<xref:System.Windows.Forms.CheckBox>例では、、 <xref:System.Windows.Forms.Label> 、および<xref:System.Windows.Forms.Button>がすべてフォーム上でインスタンス化されていること、およびラベルが3行のテキスト<xref:System.Drawing?displayProperty=nameWithType>を表示するのに十分な大きさであること、および名前空間への参照が必要であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a7185-162">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="a7185-163">このコードは、コントロールの<xref:System.Windows.Forms.Control.Click>イベントハンドラーで呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-163">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CheckedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckedChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckedChanged : EventHandler " Usage="member this.CheckedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-164"><see cref="P:System.Windows.Forms.CheckBox.Checked" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-164">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-165">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-165">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-166">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-166">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="a7185-167">この例では、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.CheckedChanged>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="a7185-167">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span> <span data-ttu-id="a7185-168">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a7185-168">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="a7185-169">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-169">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="a7185-170">コード例を実行するには、という名前<xref:System.Windows.Forms.CheckBox> `CheckBox1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="a7185-170">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="a7185-171">次に、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.CheckedChanged>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7185-171">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#140)]
 [!code-vb[System.Windows.Forms.EventExamples#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#140)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CheckState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CheckState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CheckState" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckState As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CheckState { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.CheckState : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.CheckBox.CheckState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-172"><see cref="T:System.Windows.Forms.CheckBox" /> の状態を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-172">Gets or sets the state of the <see cref="T:System.Windows.Forms.CheckBox" />.</span></span></summary>
        <value><span data-ttu-id="a7185-173"><see cref="T:System.Windows.Forms.CheckState" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="a7185-173">One of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span></span> <span data-ttu-id="a7185-174">既定値は <see langword="Unchecked" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-174">The default value is <see langword="Unchecked" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-175">プロパティがに`false`設定されている<xref:System.Windows.Forms.CheckBox.CheckState%2A>場合、プロパティ値は、ユーザー `CheckState.Indeterminate`の操作ではなく、コード内でのみに設定できます。 <xref:System.Windows.Forms.CheckBox.ThreeState%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-175">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to `CheckState.Indeterminate` in code and not by user interaction.</span></span>  
  
 <span data-ttu-id="a7185-176">次の表では<xref:System.Windows.Forms.Appearance?displayProperty=nameWithType> 、 <xref:System.Windows.Forms.CheckBox>コントロールの`Normal`と`Button`スタイルコントロール<xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>のさまざまな状態について説明します。</span><span class="sxs-lookup"><span data-stu-id="a7185-176">The following table describes the <xref:System.Windows.Forms.Appearance?displayProperty=nameWithType> of the <xref:System.Windows.Forms.CheckBox> control in its different states for the `Normal` and `Button` style control <xref:System.Windows.Forms.CheckBox.Appearance%2A?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="a7185-177">CheckState</span><span class="sxs-lookup"><span data-stu-id="a7185-177">CheckState</span></span>|<span data-ttu-id="a7185-178">外観。標準</span><span class="sxs-lookup"><span data-stu-id="a7185-178">Appearance.Normal</span></span>|<span data-ttu-id="a7185-179">[外観] ボタン</span><span class="sxs-lookup"><span data-stu-id="a7185-179">Appearance.Button</span></span>|  
|----------------|-----------------------|-----------------------|  
|`Checked`|<span data-ttu-id="a7185-180">に<xref:System.Windows.Forms.CheckBox>チェックマークが表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-180">The <xref:System.Windows.Forms.CheckBox> displays a check mark.</span></span>|<span data-ttu-id="a7185-181">コントロールがくぼんで表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-181">The control appears sunken.</span></span>|  
|`Unchecked`|<span data-ttu-id="a7185-182"><xref:System.Windows.Forms.CheckBox> が空です。</span><span class="sxs-lookup"><span data-stu-id="a7185-182">The <xref:System.Windows.Forms.CheckBox> is empty.</span></span>|<span data-ttu-id="a7185-183">コントロールが発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-183">The control appears raised.</span></span>|  
|`Indeterminate`|<span data-ttu-id="a7185-184">に<xref:System.Windows.Forms.CheckBox>チェックマークが表示され、網掛けされます。</span><span class="sxs-lookup"><span data-stu-id="a7185-184">The <xref:System.Windows.Forms.CheckBox> displays a check mark and is shaded.</span></span>|<span data-ttu-id="a7185-185">コントロールがフラットに表示されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-185">The control appears flat.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a7185-186">次のコード例では、ラベルの3つのプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-186">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="a7185-187">プロパティ<xref:System.Windows.Forms.CheckBox.ThreeState%2A>は、と`true` `MiddleRight` `MiddleLeft` <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>の間で、コントロール<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>を交互にクリックし、との値との値を交互に交互に切り替えます。 `false`</span><span class="sxs-lookup"><span data-stu-id="a7185-187">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a7185-188">この例では、プロパティが<xref:System.Windows.Forms.CheckBox.ThreeState%2A>変更され、コントロールがチェックされると、プロパティ値がどのように変化するかを示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-188">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="a7185-189">この<xref:System.Windows.Forms.CheckBox>例では、、 <xref:System.Windows.Forms.Label> 、および<xref:System.Windows.Forms.Button>がすべてフォーム上でインスタンス化されていること、およびラベルが3行のテキスト<xref:System.Drawing?displayProperty=nameWithType>を表示するのに十分な大きさであること、および名前空間への参照が必要であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a7185-189">This example requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="a7185-190">このコードは、コントロールの<xref:System.Windows.Forms.Control.Click>イベントハンドラーで呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-190">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="a7185-191">代入された値が、<see cref="T:System.Windows.Forms.CheckState" /> 列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a7185-191">The value assigned is not one of the <see cref="T:System.Windows.Forms.CheckState" /> enumeration values.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.CheckBox.Checked" />
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="CheckStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CheckStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CheckStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CheckStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckStateChanged : EventHandler " Usage="member this.CheckStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-192"><see cref="P:System.Windows.Forms.CheckBox.CheckState" /> プロパティの値が変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-192">Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-193">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-194">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="a7185-195">この例では、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.CheckStateChanged>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="a7185-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span> <span data-ttu-id="a7185-196">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a7185-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="a7185-197">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="a7185-198">コード例を実行するには、という名前<xref:System.Windows.Forms.CheckBox> `CheckBox1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="a7185-198">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckBox> named `CheckBox1`.</span></span> <span data-ttu-id="a7185-199">次に、イベントハンドラーが<xref:System.Windows.Forms.CheckBox.CheckStateChanged>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="a7185-199">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckBox.CheckStateChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#141)]
 [!code-vb[System.Windows.Forms.EventExamples#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#141)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="checkBox.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7185-200"><see cref="T:System.Windows.Forms.CheckBox" /> コントロールの新しいユーザー補助オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="a7185-200">Creates a new accessibility object for the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <returns><span data-ttu-id="a7185-201">コントロールの新しい <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-201">A new <see cref="T:System.Windows.Forms.CheckBox.CheckBoxAccessibleObject" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-202">明示的に <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> メソッドを呼び出さない場合は、<xref:System.Windows.Forms.Control.AccessibilityObject%2A> プロパティが参照されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-202">If you do not explicitly call the <xref:System.Windows.Forms.CheckBox.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7185-203"><xref:System.Windows.Forms.Control.AccessibilityObject%2A>プロパティを取得または設定するには、.NET Framework と共に`Accessibility`インストールされたアセンブリへの参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-203">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a7185-204">派生クラス<see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />でをオーバーライドする場合は、基底クラスの<see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" />メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="a7185-204">When overriding <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> in a derived class, you should not call the base class's <see cref="M:System.Windows.Forms.CheckBox.CreateAccessibilityInstance" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.CheckBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-205">コントロール ハンドルが作成されるときに必要な作成パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7185-205">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="a7185-206">コントロールを識別するハンドルを作成するときに必要な作成パラメーターを格納している <see cref="T:System.Windows.Forms.CreateParams" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-206">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7185-207">派生<xref:System.Windows.Forms.Button>クラスのプロパティを<xref:System.Windows.Forms.Control.CreateParams%2A>拡張するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-207">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="a7185-208">プロパティが変更されると、ボタンはで<xref:System.Drawing.Icon>はなく<xref:System.Drawing.Image>を表示します。 <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a7185-208">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="a7185-209">この例では、 <xref:System.Windows.Forms.Button>クラスを継承するクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="a7185-209">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a7185-210">アンマネージコードを操作するために使用します。</span><span class="sxs-lookup"><span data-stu-id="a7185-210">for operating with unmanaged code.</span></span> <span data-ttu-id="a7185-211">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="a7185-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.CheckBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-212">コントロールの既定のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="a7185-212">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="a7185-213">既定のサイズ。</span><span class="sxs-lookup"><span data-stu-id="a7185-213">The default size.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-214">ユーザーが <see cref="T:System.Windows.Forms.CheckBox" /> コントロールをダブルクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-214">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-215">既定<xref:System.Windows.Forms.ControlStyles.StandardClick>では、 <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> <xref:System.Windows.Forms.CheckBox> コントロール<xref:System.Windows.Forms.CheckBox.DoubleClick>ではとの列挙が false に設定され、イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="a7185-215">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick> enumerations are set to false for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="a7185-216">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="a7185-216">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckBox.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-217">ユーザーが <see cref="T:System.Windows.Forms.CheckBox" /> コントロールをダブルクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="a7185-217">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-218">既定<xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType>では、 <xref:System.Windows.Forms.CheckBox>コントロール<xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> では`false`とのスタイルビットがに設定され、イベントは発生しません。<xref:System.Windows.Forms.CheckBox.MouseDoubleClick></span><span class="sxs-lookup"><span data-stu-id="a7185-218">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.CheckBox> control, and the <xref:System.Windows.Forms.CheckBox.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="a7185-219">このクラスでは、このイベントは使用されません。</span><span class="sxs-lookup"><span data-stu-id="a7185-219">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearanceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearanceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearanceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAppearanceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAppearanceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAppearanceChanged : EventArgs -&gt; unit&#xA;override this.OnAppearanceChanged : EventArgs -&gt; unit" Usage="checkBox.OnAppearanceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-220">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-220">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-221"><see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-221">Raises the <see cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-222">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-222">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7185-223">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="a7185-223">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7185-224"><xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7185-224">The <xref:System.Windows.Forms.CheckBox.OnAppearanceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7185-225">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a7185-225">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a7185-226">派生クラスで <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-226">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnAppearanceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CheckBox.AppearanceChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCheckedChanged : EventArgs -&gt; unit&#xA;override this.OnCheckedChanged : EventArgs -&gt; unit" Usage="checkBox.OnCheckedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-227">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-228"><see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-228">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-229">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-229">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7185-230">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="a7185-230">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7185-231"><xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7185-231">The <xref:System.Windows.Forms.CheckBox.OnCheckedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7185-232">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a7185-232">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a7185-233">派生クラスで <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-233">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCheckStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCheckStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCheckStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCheckStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCheckStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCheckStateChanged : EventArgs -&gt; unit&#xA;override this.OnCheckStateChanged : EventArgs -&gt; unit" Usage="checkBox.OnCheckStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-234">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-234">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-235"><see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-235">Raises the <see cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-236">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-236">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7185-237">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="a7185-237">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7185-238"><xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7185-238">The <xref:System.Windows.Forms.CheckBox.OnCheckStateChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7185-239">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a7185-239">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a7185-240">派生クラスで <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="a7185-240">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CheckBox.OnCheckStateChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CheckBox.CheckStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnClick : EventArgs -&gt; unit" Usage="checkBox.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-241">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-241">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-242"><see cref="E:System.Windows.Forms.Control.Click" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-242">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-243">メソッド<xref:System.Windows.Forms.CheckBox.OnClick%2A>は、プロパティ<xref:System.Windows.Forms.CheckBox.CheckState%2A>を変更します。</span><span class="sxs-lookup"><span data-stu-id="a7185-243">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method changes the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property.</span></span> <span data-ttu-id="a7185-244">`true` <xref:System.Windows.Forms.CheckBox> <xref:System.Windows.Forms.CheckBox.OnClick%2A>プロパティがに設定されている場合、後続のをクリックすると、 <xref:System.Windows.Forms.CheckBox.CheckState%2A>列挙体のすべての値が循環します。 <xref:System.Windows.Forms.CheckBox.ThreeState%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-244">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `true`, subsequent clicks of the <xref:System.Windows.Forms.CheckBox> will result in <xref:System.Windows.Forms.CheckBox.OnClick%2A> cycling through all the values of the <xref:System.Windows.Forms.CheckBox.CheckState%2A> enumeration.</span></span> <span data-ttu-id="a7185-245">それ以外<xref:System.Windows.Forms.CheckBox.OnClick%2A>の場合<xref:System.Windows.Forms.CheckState.Checked>は<xref:System.Windows.Forms.CheckState.Unchecked>、との間を切り替えます。</span><span class="sxs-lookup"><span data-stu-id="a7185-245">Otherwise, <xref:System.Windows.Forms.CheckBox.OnClick%2A> switches between <xref:System.Windows.Forms.CheckState.Checked> and <xref:System.Windows.Forms.CheckState.Unchecked>.</span></span>  
  
 <span data-ttu-id="a7185-246">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-246">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7185-247">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="a7185-247">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7185-248"><xref:System.Windows.Forms.CheckBox.OnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="a7185-248">The <xref:System.Windows.Forms.CheckBox.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7185-249">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a7185-249">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a7185-250">派生クラス<see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />でをオーバーライドする場合は、登録されているデリゲート<see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" />がイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-250">When overriding <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="checkBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-251">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-251">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-252"><see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-252">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="checkBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a7185-253">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.KeyEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="a7185-253">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-254"><see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-254">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="checkBox.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="a7185-255">イベント データを格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-255">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a7185-256">OnMouseUp イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="a7185-256">Raises the OnMouseUp event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="checkBox.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="a7185-257">処理対象の文字。</span><span class="sxs-lookup"><span data-stu-id="a7185-257">The character to process.</span></span></param>
        <summary><span data-ttu-id="a7185-258">ニーモニック文字を処理します。</span><span class="sxs-lookup"><span data-stu-id="a7185-258">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="a7185-259">文字がコントロールによってニーモニックとして処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-259"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-260">このメソッドは、ニーモニック文字を処理する機会をコントロールに与えるために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a7185-260">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="a7185-261">メソッドは、コントロールがニーモニックを処理する状態であるかどうか、および指定された文字がニーモニックを表すかどうかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-261">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="a7185-262">その場合、メソッドはニーモニックに関連付けられたアクションを実行`true`し、を返します。</span><span class="sxs-lookup"><span data-stu-id="a7185-262">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="a7185-263">それ以外の場合、メソッドは`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a7185-263">If not, the method should return `false`.</span></span> <span data-ttu-id="a7185-264">このメソッドの実装では、 <xref:System.Windows.Forms.Control.IsMnemonic%2A>多くの場合、メソッドを使用して、指定された文字がコントロールのテキスト内のニーモニックと一致するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a7185-264">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="a7185-265">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-265">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
    // Perform action associated with mnemonic.  
    }  
```  
  
 <span data-ttu-id="a7185-266">この<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>メソッドの既定の実装は、 `false`コントロールにニーモニックがないことを示すために単にを返します。</span><span class="sxs-lookup"><span data-stu-id="a7185-266">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-267">次のコード例は、カスタム動作を示すために<xref:System.Windows.Forms.Control.ProcessMnemonic%2A>メソッドをオーバーライドする button クラスの拡張を示しています。</span><span class="sxs-lookup"><span data-stu-id="a7185-267">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="a7185-268">この例では、プロパティ<xref:System.Windows.Forms.Control.CanSelect%2A>と<xref:System.Windows.Forms.Control.IsMnemonic%2A>プロパティの使用方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="a7185-268">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="a7185-269">この例を実行するには、同じファイル内のフォームクラスの後に次のコードを貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="a7185-269">To run this example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="a7185-270">型`MnemonicButton`のボタンをフォームに追加します。</span><span class="sxs-lookup"><span data-stu-id="a7185-270">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected override void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="checkBox.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="a7185-271">変更前の DPI 値。</span><span class="sxs-lookup"><span data-stu-id="a7185-271">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="a7185-272">変更後の DPI 値。</span><span class="sxs-lookup"><span data-stu-id="a7185-272">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="a7185-273">DPI の変更が発生したときに、<see cref="T:System.Windows.Forms.CheckBox" /> コントロールの再スケーリングの定数を提供します。</span><span class="sxs-lookup"><span data-stu-id="a7185-273">Provides constants for rescaling the <see cref="T:System.Windows.Forms.CheckBox" /> control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public override System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.CheckBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-274"><see cref="T:System.Windows.Forms.CheckBox" /> コントロールのテキストの配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-274">Gets or sets the alignment of the text on the <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <value><span data-ttu-id="a7185-275"><see cref="T:System.Drawing.ContentAlignment" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="a7185-275">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span> <span data-ttu-id="a7185-276">既定値は、<see cref="F:System.Drawing.ContentAlignment.MiddleLeft" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-276">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckBox.ThreeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeState : bool with get, set" Usage="System.Windows.Forms.CheckBox.ThreeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7185-277"><see cref="T:System.Windows.Forms.CheckBox" /> で 2 つではなく 3 つのチェックの状態が表示できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a7185-277">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.CheckBox" /> will allow three check states rather than two.</span></span></summary>
        <value><span data-ttu-id="a7185-278"><see cref="T:System.Windows.Forms.CheckBox" /> が 3 つのチェックの状態を表示できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a7185-278"><see langword="true" /> if the <see cref="T:System.Windows.Forms.CheckBox" /> is able to display three check states; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a7185-279">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a7185-279">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7185-280">`false` <xref:System.Windows.Forms.CheckBox.CheckState%2A> `Indeterminate`プロパティがに設定されている場合、プロパティ値は、ユーザーの操作で<xref:System.Windows.Forms.CheckState?displayProperty=nameWithType>はなく、コード内のの値にのみ設定できます。 <xref:System.Windows.Forms.CheckBox.ThreeState%2A></span><span class="sxs-lookup"><span data-stu-id="a7185-280">If the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property is set to `false`, the <xref:System.Windows.Forms.CheckBox.CheckState%2A> property value can only be set to the `Indeterminate` value of <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> in code and not by user interaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7185-281">次のコード例では、ラベルの3つのプロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-281">The following code example displays the values of three properties in a label.</span></span> <span data-ttu-id="a7185-282">プロパティ<xref:System.Windows.Forms.CheckBox.ThreeState%2A>は、と`true` `MiddleRight` `MiddleLeft` <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>の間で、コントロール<xref:System.Windows.Forms.CheckBox.CheckAlign%2A>を交互にクリックし、との値との値を交互に交互に切り替えます。 `false`</span><span class="sxs-lookup"><span data-stu-id="a7185-282">The <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property alternates between `true` and `false` with alternating clicks of the control and the <xref:System.Windows.Forms.CheckBox.CheckAlign%2A> alternates between the `MiddleRight` and `MiddleLeft` values of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a7185-283">この例では、プロパティが<xref:System.Windows.Forms.CheckBox.ThreeState%2A>変更され、コントロールがチェックされると、プロパティ値がどのように変化するかを示します。</span><span class="sxs-lookup"><span data-stu-id="a7185-283">This example shows how the property values change as the <xref:System.Windows.Forms.CheckBox.ThreeState%2A> property changes and the control is checked.</span></span> <span data-ttu-id="a7185-284">この<xref:System.Windows.Forms.CheckBox>コードでは、、 <xref:System.Windows.Forms.Label> 、および<xref:System.Windows.Forms.Button>がすべてフォーム上でインスタンス化されていること、およびラベルが3行のテキスト<xref:System.Drawing?displayProperty=nameWithType>を表示するのに十分な大きさであること、および名前空間への参照が必要であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a7185-284">This code requires that a <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.Label> and <xref:System.Windows.Forms.Button> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="a7185-285">このコードは、コントロールの<xref:System.Windows.Forms.Control.Click>イベントハンドラーで呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7185-285">This code should be called in the <xref:System.Windows.Forms.Control.Click> event handler of the control.</span></span>  
  
 [!code-cpp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/CS/source.cs#1)]
 [!code-vb[Classic CheckBox.CheckAlign Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckBox.CheckAlign Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="checkBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7185-286">現在の <see cref="T:System.Windows.Forms.CheckBox" /> コントロールを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="a7185-286">Returns a string that represents the current <see cref="T:System.Windows.Forms.CheckBox" /> control.</span></span></summary>
        <returns><span data-ttu-id="a7185-287">コントロールの型、および <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> プロパティの状態を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="a7185-287">A string that states the control type and the state of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
