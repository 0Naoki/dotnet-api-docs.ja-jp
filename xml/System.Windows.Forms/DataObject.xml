<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d40ac79022a4270ada0de6d8d85815e5c8933ac6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69190221" /></Metadata><TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99aad-101">基本データ転送機構を実装します。</span><span class="sxs-lookup"><span data-stu-id="99aad-101">Implements a basic data transfer mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-102"><xref:System.Windows.Forms.DataObject><xref:System.Windows.Forms.IDataObject>インターフェイスを実装します。メソッドは、データ転送の形式に依存しない機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="99aad-102"><xref:System.Windows.Forms.DataObject> implements the <xref:System.Windows.Forms.IDataObject> interface, whose methods provide a format-independent mechanism for data transfer.</span></span>  
  
 <span data-ttu-id="99aad-103">は、通常、ドラッグアンド<xref:System.Windows.Forms.Clipboard>ドロップ操作でおよびと共に使用されます。 <xref:System.Windows.Forms.DataObject></span><span class="sxs-lookup"><span data-stu-id="99aad-103">A <xref:System.Windows.Forms.DataObject> is typically used with the <xref:System.Windows.Forms.Clipboard> and in drag-and-drop operations.</span></span> <span data-ttu-id="99aad-104">クラス<xref:System.Windows.Forms.DataObject>には、 <xref:System.Windows.Forms.IDataObject>インターフェイスの推奨される実装が用意されています。</span><span class="sxs-lookup"><span data-stu-id="99aad-104">The <xref:System.Windows.Forms.DataObject> class provides the recommended implementation of the <xref:System.Windows.Forms.IDataObject> interface.</span></span> <span data-ttu-id="99aad-105">自分で実装<xref:System.Windows.Forms.IDataObject>するのでは<xref:System.Windows.Forms.DataObject>なく、クラスを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="99aad-105">It is suggested that you use the <xref:System.Windows.Forms.DataObject> class rather than implementing <xref:System.Windows.Forms.IDataObject> yourself.</span></span>  
  
 <span data-ttu-id="99aad-106">異なる形式のデータの複数の部分をに格納<xref:System.Windows.Forms.DataObject>することができます。</span><span class="sxs-lookup"><span data-stu-id="99aad-106">Multiple pieces of data in different formats can be stored in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-107">データは、 <xref:System.Windows.Forms.DataObject>関連付けられた形式によってから取得されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-107">Data is retrieved from a <xref:System.Windows.Forms.DataObject> by its associated format.</span></span> <span data-ttu-id="99aad-108">ターゲットアプリケーションが不明な場合があるため、データ<xref:System.Windows.Forms.DataObject>をに複数の形式で配置することで、データがアプリケーションに適した形式になる可能性を高めることができます。</span><span class="sxs-lookup"><span data-stu-id="99aad-108">Because the target application might not be known, you can increase the likelihood that the data will be in the appropriate format for an application by placing the data in a <xref:System.Windows.Forms.DataObject> in multiple formats.</span></span> <span data-ttu-id="99aad-109">定義<xref:System.Windows.Forms.DataFormats>済みの形式については、を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-109">See <xref:System.Windows.Forms.DataFormats> for the predefined formats.</span></span> <span data-ttu-id="99aad-110"><xref:System.Windows.Forms.DataFormats.Format>クラスのインスタンスを作成することによって、独自の形式を実装できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-110">You can implement your own format by creating an instance of the <xref:System.Windows.Forms.DataFormats.Format> class.</span></span>  
  
 <span data-ttu-id="99aad-111">に<xref:System.Windows.Forms.DataObject>データを格納するには、データをコンストラクターに渡すか<xref:System.Windows.Forms.DataObject.SetData%2A>、を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-111">To store data in a <xref:System.Windows.Forms.DataObject>, pass the data to the constructor or call <xref:System.Windows.Forms.DataObject.SetData%2A>.</span></span> <span data-ttu-id="99aad-112">複数の形式のデータを同じ<xref:System.Windows.Forms.DataObject>に追加することができます。</span><span class="sxs-lookup"><span data-stu-id="99aad-112">You can add data in multiple formats to the same <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-113">追加するデータをネイティブ形式でのみ取得する場合は、 <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> `autoConvert`パラメーターをに`false`設定してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-113">If you want the data you add to be retrieved in its native format only, call <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> with the `autoConvert` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="99aad-114">データは、 <xref:System.Windows.Forms.DataObject>と<xref:System.Windows.Forms.DataObject.GetData%2A>互換性のある任意の形式でから取得できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-114">Data can be retrieved from a <xref:System.Windows.Forms.DataObject> in any format which is compatible with <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-115">たとえば、テキストを Unicode に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-115">For example, text can be converted to Unicode.</span></span> <span data-ttu-id="99aad-116">格納された形式でデータを取得するには、 <xref:System.Windows.Forms.DataObject.GetData%2A> `autoConvert`パラメーターをに`false`設定してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-116">To retrieve data in the format in which it was stored, call <xref:System.Windows.Forms.DataObject.GetData%2A> with the `autoConvert` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="99aad-117">データが格納されている形式を確認する<xref:System.Windows.Forms.DataObject.GetFormats%2A>には、を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-117">To determine what formats the data is stored in, call <xref:System.Windows.Forms.DataObject.GetFormats%2A>.</span></span> <span data-ttu-id="99aad-118">形式が使用可能かどうかを判断<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>するには、目的の形式でを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-118">To determine if a format is available, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> with the desired format.</span></span>  
  
 <span data-ttu-id="99aad-119">で[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]は<xref:System.Windows.Forms.DataObject> 、一般的な形式のデータを簡単に操作できるようにするための追加のメソッドがクラスに用意されています。</span><span class="sxs-lookup"><span data-stu-id="99aad-119">In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the <xref:System.Windows.Forms.DataObject> class provides additional methods that make it easier to work with data in common formats.</span></span> <span data-ttu-id="99aad-120"><xref:System.Windows.Forms.DataObject>特定の形式のデータをに追加するには、など`Set`の適切な*書式指定*メソッド<xref:System.Windows.Forms.DataObject.SetText%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-120">To add data of a particular format to the <xref:System.Windows.Forms.DataObject>, use the appropriate `Set`*Format* method, such as <xref:System.Windows.Forms.DataObject.SetText%2A>.</span></span> <span data-ttu-id="99aad-121">から<xref:System.Windows.Forms.DataObject>特定の形式のデータを取得するには、まず適切`Contains`な*書式*指定メソッド ( <xref:System.Windows.Forms.DataObject.ContainsText%2A>など) を呼び出して<xref:System.Windows.Forms.DataObject> 、にその形式のデータが含まれているかどうかを判断し、適切なを呼び出します。`Get`<xref:System.Windows.Forms.DataObject.GetText%2A>にデータ<xref:System.Windows.Forms.DataObject>が含まれている場合は、*書式指定*メソッド (など) を取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-121">To retrieve data of a particular format from the <xref:System.Windows.Forms.DataObject>, first call the appropriate `Contains`*Format* method (such as <xref:System.Windows.Forms.DataObject.ContainsText%2A>) to determine whether the <xref:System.Windows.Forms.DataObject> contains data in that format, then call the appropriate `Get`*Format* method (such as <xref:System.Windows.Forms.DataObject.GetText%2A>) to retrieve the data if the <xref:System.Windows.Forms.DataObject> contains it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-122">メタファイル形式をクリップボードと共に使用する場合は、特別な考慮事項が必要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="99aad-122">Special considerations may be necessary when using the metafile format with the Clipboard.</span></span> <span data-ttu-id="99aad-123"><xref:System.Windows.Forms.DataObject>クラスの現在の実装の制限により、.NET Framework によって使用されるメタファイル形式は、古いメタファイル形式を使用するアプリケーションで認識されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-123">Due to a limitation in the current implementation of the <xref:System.Windows.Forms.DataObject> class, the metafile format used by the .NET Framework may not be recognized by applications that use an older metafile format.</span></span> <span data-ttu-id="99aad-124">この場合は、Win32 クリップボードアプリケーションプログラミングインターフェイス (Api) と相互運用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-124">In this case, you must interoperate with the Win32 Clipboard application programming interfaces (APIs).</span></span>
>   
>  <span data-ttu-id="99aad-125">オブジェクトをクリップボードに格納するには、オブジェクトをシリアル化できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-125">An object must be serializable for it to be put on the Clipboard.</span></span> <span data-ttu-id="99aad-126">シリアル<xref:System.Runtime.Serialization>化の詳細については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-126">See <xref:System.Runtime.Serialization> for more information on serialization.</span></span> <span data-ttu-id="99aad-127">ターゲットアプリケーションが非常に特殊なデータ形式を必要とする場合は、シリアル化プロセスでデータに追加されたヘッダーによって、アプリケーションがデータを認識できなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="99aad-127">If your target application requires a very specific data format, the headers added to the data in the serialization process may prevent the application from recognizing your data.</span></span> <span data-ttu-id="99aad-128">データ形式を保持するには、データ<xref:System.Byte>を配列<xref:System.IO.MemoryStream>としてに追加<xref:System.Windows.Forms.DataObject.SetData%2A>し<xref:System.IO.MemoryStream> 、をメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="99aad-128">To preserve your data format, add your data as a <xref:System.Byte> array to a <xref:System.IO.MemoryStream> and pass the <xref:System.IO.MemoryStream> to the <xref:System.Windows.Forms.DataObject.SetData%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-129">次のコード例では、 <xref:System.Windows.Forms.DataObject>にデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-129">The following code example adds data in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-130">まず、新しい<xref:System.Windows.Forms.DataObject>が作成され、コンポーネントが格納されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-130">First, a new <xref:System.Windows.Forms.DataObject> is created and a component is stored in it.</span></span> <span data-ttu-id="99aad-131">次に、適切な型のデータがに存在<xref:System.Windows.Forms.DataObject>するかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-131">Then, it checks to see if data in the appropriate type exists in the <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-132">結果がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-132">The result is displayed in a text box.</span></span> <span data-ttu-id="99aad-133">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-133">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 <span data-ttu-id="99aad-134">次の例では、に<xref:System.Windows.Forms.DataObject>格納されているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-134">The next example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-135">最初に、テキスト<xref:System.Windows.Forms.DataObject>データを使用して新しいが作成されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-135">First, a new <xref:System.Windows.Forms.DataObject> is created with text data.</span></span> <span data-ttu-id="99aad-136">次に、データが取得され、その形式が文字列として指定され、テキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-136">Then, the data is retrieved, specifying its format as a string, and displayed in a text box.</span></span> <span data-ttu-id="99aad-137">データ形式は、テキストから文字列に自動的に変換されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-137">The data format is automatically converted from text to string.</span></span> <span data-ttu-id="99aad-138">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-138">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-139"><see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="99aad-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataObject" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-140"><see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="99aad-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataObject" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99aad-141">次のコード例では<xref:System.Windows.Forms.DataObject> 、を作成し、そこにデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-141">The following code example creates a <xref:System.Windows.Forms.DataObject> and adds data to it.</span></span> <span data-ttu-id="99aad-142">この例では、データを取得して表示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-142">The example then retrieves and displays the data.</span></span> <span data-ttu-id="99aad-143">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-143">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="99aad-144">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-144">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-145"><see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化し、指定したオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-145">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataObject" /> class and adds the specified object to it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-146">このコンストラクターを使用すると、任意の<xref:System.Windows.Forms.DataObject>形式のデータをに追加できます。また、データ<xref:System.Windows.Forms.IDataObject>をとして追加して、一度に複数の形式を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="99aad-146">You can add data in any format to the <xref:System.Windows.Forms.DataObject> when you use this constructor, or you can add data as an <xref:System.Windows.Forms.IDataObject> to provide multiple formats at once.</span></span> <span data-ttu-id="99aad-147">Com プログラミングに慣れている場合は、com `IDataObject`インターフェイスを実装するデータオブジェクトを追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="99aad-147">If you are familiar with COM programming, you can also add a data object that implements the COM `IDataObject` interface.</span></span> <span data-ttu-id="99aad-148">詳細については`IDataObject` 、MSDN http://msdn.microsoft.com/libraryライブラリ () の「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-148">For more information, see `IDataObject` in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-149">次のコード例では<xref:System.Windows.Forms.DataObject> 、文字列を含むを作成します。</span><span class="sxs-lookup"><span data-stu-id="99aad-149">The following code example creates a <xref:System.Windows.Forms.DataObject> that contains a string.</span></span> <span data-ttu-id="99aad-150">データは、データ形式を使用して取得されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-150">The data is retrieved using its data format.</span></span> <span data-ttu-id="99aad-151">結果はテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-151">The results are displayed in a text box.</span></span> <span data-ttu-id="99aad-152">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-152">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=150123"><span data-ttu-id="99aad-153">IDataObject</span><span class="sxs-lookup"><span data-stu-id="99aad-153">IDataObject</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-154">指定したデータの形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-154">The format of the specified data.</span></span> <span data-ttu-id="99aad-155">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-155">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="99aad-156">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-156">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-157"><see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化し、指定したオブジェクトを指定した形式で追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-157">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataObject" /> class and adds the specified object in the specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="99aad-158">文字列型として指定<xref:System.Windows.Forms.DataObject>された文字列を使用してクラスを作成するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-158">The following code example creates a <xref:System.Windows.Forms.DataObject> class using a string that is specified as the string type.</span></span> <span data-ttu-id="99aad-159">データは、 <xref:System.Windows.Forms.DataObject>形式をテキストとして指定することによってから取得されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-159">The data is retrieved from the <xref:System.Windows.Forms.DataObject> by specifying its format as text.</span></span> <span data-ttu-id="99aad-160">結果はテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-160">The results are displayed in a text box.</span></span> <span data-ttu-id="99aad-161">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-161">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-162">データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式のデータが含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-162">Indicates whether the data object contains data in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</span></span></summary>
        <returns><span data-ttu-id="99aad-163">データ オブジェクトにオーディオ データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-163"><see langword="true" /> if the data object contains audio data; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-164">このメソッドは<xref:System.Windows.Forms.DataObject.GetAudioStream%2A> 、メソッドを使用して取得する前に、データオブジェクトにオーディオデータが含まれているかどうかを判断するために使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-164">Use this method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-165">データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式のデータか、その形式に変換できるデータが含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-165">Indicates whether the data object contains data that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</span></span></summary>
        <returns><span data-ttu-id="99aad-166">データ オブジェクトにファイル ドロップ リストが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-166"><see langword="true" /> if the data object contains a file drop list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-167">ファイルドロップリストは、ファイルのパス情報を含む文字列のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="99aad-167">A file drop list is a collection of strings containing path information for files.</span></span>  
  
 <span data-ttu-id="99aad-168"><xref:System.Windows.Forms.DataObject.GetFileDropList%2A>メソッドを使用して取得する前に、データオブジェクトにファイルドロップリストが含まれているかどうかを判断するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-168">Use this method to determine whether the data object contains a file drop list before retrieving it with the <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-169">データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 形式のデータか、その形式に変換できるデータが含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-169">Indicates whether the data object contains data that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</span></span></summary>
        <returns><span data-ttu-id="99aad-170">データ オブジェクトにイメージ データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-170"><see langword="true" /> if the data object contains image data; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-171"><xref:System.Windows.Forms.DataObject.GetImage%2A>メソッドを使用して取得する前に、データオブジェクトにイメージデータが含まれているかどうかを判断するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-171">Use this method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetImage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-172">データ オブジェクトにテキスト データが含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-172">Indicates whether the data object contains text data.</span></span></summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-173">データ オブジェクトに <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式のデータが含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-173">Indicates whether the data object contains data in the <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</span></span></summary>
        <returns><span data-ttu-id="99aad-174">データ オブジェクトにテキスト データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-174"><see langword="true" /> if the data object contains text data; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-175"><xref:System.Windows.Forms.DataObject.GetText%2A>メソッドを使用して取得する前に、データオブジェクトにテキストデータが含まれているかどうかを判断するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-175">Use this method to determine whether the data object contains text data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-176"><see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="99aad-176">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</span></span></param>
        <summary><span data-ttu-id="99aad-177">指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式のテキスト データが、データ オブジェクトに含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="99aad-177">Indicates whether the data object contains text data in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></summary>
        <returns><span data-ttu-id="99aad-178">指定した形式のテキスト データがデータ オブジェクトに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-178"><see langword="true" /> if the data object contains text data in the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-179"><xref:System.Windows.Forms.DataObject.GetText%2A>メソッドを使用して取得する前に、データオブジェクトにテキストデータが含まれているかどうかを判断するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-179">Use this method to determine whether the data object contains text data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="99aad-180"><paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="99aad-180"><paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-181">データ オブジェクトからオーディオ ストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-181">Retrieves an audio stream from the data object.</span></span></summary>
        <returns><span data-ttu-id="99aad-182">オーディオ データを含んだ <see cref="T:System.IO.Stream" />。<see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式のデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-182">A <see cref="T:System.IO.Stream" /> containing audio data or <see langword="null" /> if the data object does not contain any data in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-183"><xref:System.Windows.Forms.DataObject.ContainsAudio%2A>メソッドを使用して、このメソッドを使用して取得する前に、データオブジェクトにオーディオデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-183">Use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with this method.</span></span>  
  
 <span data-ttu-id="99aad-184">データオブジェクト<xref:System.Windows.Forms.DataObject.SetAudio%2A>にオーディオデータを追加するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-184">Use the <xref:System.Windows.Forms.DataObject.SetAudio%2A> method to add audio data to the data object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-185">指定したデータ形式に関連付けられたデータを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-185">Returns the data associated with the specified data format.</span></span></summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-186">取得するデータの形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-186">The format of the data to retrieve.</span></span> <span data-ttu-id="99aad-187">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-187">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="99aad-188">指定したデータ形式に関連付けられたデータを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-188">Returns the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="99aad-189">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-189">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-190">このメソッドは、指定された形式でデータを見つけることができない場合、データの形式への変換を試みます。</span><span class="sxs-lookup"><span data-stu-id="99aad-190">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="99aad-191">データを指定した形式に変換できない場合、またはに`false`自動変換が設定された状態でデータが格納された場合、このメソッドはを返し`null`ます。</span><span class="sxs-lookup"><span data-stu-id="99aad-191">If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="99aad-192">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.DataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-192">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-193"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>に格納されているデータの有効な形式の一覧を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-193">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-194">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-194">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-195">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-195">For example, data stored as Unicode can be converted to text.</span></span>  
>   
>  <span data-ttu-id="99aad-196">`format` が<xref:System.Windows.Forms.DataFormats.Html>の場合、このメソッドは .net 4.5 以降を対象とするアプリケーションで、utf-8 でエンコードされた文字列を返します。また、.net 4.0 以下を対象とするアプリケーションでは、ANSI でエンコードされた文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-196">When `format` is <xref:System.Windows.Forms.DataFormats.Html>, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-197">次のコード例では、に<xref:System.Windows.Forms.DataObject>格納されているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-197">The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-198">最初に、テキスト<xref:System.Windows.Forms.DataObject>データを使用して新しいが作成されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-198">First, a new <xref:System.Windows.Forms.DataObject> is created with text data.</span></span> <span data-ttu-id="99aad-199">次に、データが取得され、その形式が文字列として指定され、テキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-199">Then, the data is retrieved, specifying its format as a string, and displayed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-200">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-200">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-201">取得するデータの形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-201">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span></param>
        <summary><span data-ttu-id="99aad-202">指定したクラス型形式に関連付けられたデータを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-202">Returns the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="99aad-203">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-203">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-204">このメソッドは、指定された形式でデータを見つけることができない場合、データの形式への変換を試みます。</span><span class="sxs-lookup"><span data-stu-id="99aad-204">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="99aad-205">データを指定した形式に変換できない場合、またはに`false`自動変換が設定された状態でデータが格納された場合、このメソッドはを返し`null`ます。</span><span class="sxs-lookup"><span data-stu-id="99aad-205">If the data cannot be converted to the specified format, or if the data was stored with automatic conversion set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="99aad-206">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.DataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-206">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-207"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>に格納されているデータの有効な形式の一覧を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-207">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-208">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-208">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-209">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-209">For example, data stored as Unicode can be converted to text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-210">次のコード例では、に<xref:System.Windows.Forms.DataObject>格納されているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-210">The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-211">まず、コンポーネントを<xref:System.Windows.Forms.DataObject>使用して新しいが作成されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-211">First, a new <xref:System.Windows.Forms.DataObject> is created with a component.</span></span> <span data-ttu-id="99aad-212">次に、データを取得し、その型を指定します。</span><span class="sxs-lookup"><span data-stu-id="99aad-212">Then, the data is retrieved, specifying its type.</span></span> <span data-ttu-id="99aad-213">取得したデータの型がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-213">The type of the retrieved data is displayed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-214">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-214">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-215">取得するデータの形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-215">The format of the data to retrieve.</span></span> <span data-ttu-id="99aad-216">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-216">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="99aad-217">データを指定した形式に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-217"><see langword="true" /> to the convert data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="99aad-218">データを指定形式に変換するかどうかを判断するための自動変換パラメーターを使用して、指定したデータ形式に関連付けられているデータを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-218">Returns the data associated with the specified data format, using an automated conversion parameter to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="99aad-219">指定した形式に関連付けられているデータ、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-219">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-220">パラメーターがであり`true` 、このメソッドが指定された形式でデータを見つけることができない場合は、データを形式に変換しようとします。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="99aad-220">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="99aad-221">データを指定した形式に変換できない場合、またはに`false`自動変換が設定された状態でデータが格納された場合、このメソッドはを返し`null`ます。</span><span class="sxs-lookup"><span data-stu-id="99aad-221">If the data cannot be converted to the specified format, or if the data was stored with the automatic conversion set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="99aad-222">パラメーターが`false`の場合、このメソッドは指定された形式でデータ`null`を返します。この形式のデータが見つからない場合はを返します。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="99aad-222">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="99aad-223">データがに関連付けられているか、形式に変換できるかどうか<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>を判断<xref:System.Windows.Forms.DataObject.GetData%2A>するには、を呼び出す前にを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-223">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-224"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>に格納されているデータの有効な形式の一覧を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-224">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for a list of valid formats for the data stored in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-225">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-225">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-226">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-226">For example, data stored as Unicode can be converted to text.</span></span>  
>   
>  <span data-ttu-id="99aad-227">`format` が<xref:System.Windows.Forms.DataFormats.Html>の場合、このメソッドは .net 4.5 以降を対象とするアプリケーションで、utf-8 でエンコードされた文字列を返します。また、.net 4.0 以下を対象とするアプリケーションでは、ANSI でエンコードされた文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-227">When `format` is <xref:System.Windows.Forms.DataFormats.Html>, this method returns a UTF-8 encoded string in applications that target .NET 4.5 or higher, and an ANSI encoded string in applications that target .NET 4.0 or lower.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-228">次のコード例では、 <xref:System.Windows.Forms.DataObject> `autoConvert`パラメーターを使用してデータ形式を変換するかどうかを指定し、に格納されているデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-228">The following code example retrieves the data stored in a <xref:System.Windows.Forms.DataObject>, using the `autoConvert` parameter to specify whether to convert the data format.</span></span>  
  
 <span data-ttu-id="99aad-229">最初に、テキスト<xref:System.Windows.Forms.DataObject>データを使用して新しいが作成されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-229">First, a new <xref:System.Windows.Forms.DataObject> is created with text data.</span></span> <span data-ttu-id="99aad-230">次に、この例では、データを取得し、書式を文字列として指定し、書式変換`autoConvert`を行わ`false`ないようにします。つまり、パラメーターはです。</span><span class="sxs-lookup"><span data-stu-id="99aad-230">Then the example tries to retrieve the data, specifying its format as a string and no format conversion, that is, the `autoConvert` parameter is `false`.</span></span> <span data-ttu-id="99aad-231">に文字列データがないため、 <xref:System.Windows.Forms.DataObject>この操作は失敗します。</span><span class="sxs-lookup"><span data-stu-id="99aad-231">This operation fails because there is no string data in the <xref:System.Windows.Forms.DataObject>.</span></span>  
  
 <span data-ttu-id="99aad-232">次に、この例では、 `autoConvert`パラメーターをに`true`設定して、データを再度取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="99aad-232">Next, the example tries to retrieve the data again, with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="99aad-233">この操作は成功し、結果はに<xref:System.Windows.Forms.MessageBox>表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-233">This operation succeeds and the results are displayed in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 <span data-ttu-id="99aad-234">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-234">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-235">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式に関連付けられているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-235">Determines whether data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with the specified format.</span></span></summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-236">チェック対象となる形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-236">The format to check for.</span></span> <span data-ttu-id="99aad-237">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-237">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="99aad-238">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-238">Determines whether data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="99aad-239">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-239"><see langword="true" /> if data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-240">を呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>前に形式が存在するかどうかを確認するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-240">Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-241"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>で使用可能な形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-241">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-242">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-242">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-243">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-243">For example, data stored as Unicode can be converted to text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-244">データを取得できない場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="99aad-244">If no data can be retrieved, no exception will be thrown.</span></span> <span data-ttu-id="99aad-245">`false`代わりにが返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-245">Instead, `false` will be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-246">次のコード例では、この<xref:System.Windows.Forms.DataObject>に現在格納されているデータが、指定した形式に関連付けられているか、または指定した形式に変換できるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="99aad-246">The following code example determines whether data currently stored in this <xref:System.Windows.Forms.DataObject> is associated with, or can be converted to, a specified format.</span></span> <span data-ttu-id="99aad-247">新しい<xref:System.Windows.Forms.DataObject>は、文字列とそれに関連付けられた形式でテキストとして初期化されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-247">A new <xref:System.Windows.Forms.DataObject> is initialized with a string and its associated format specified as text.</span></span>  
  
 <span data-ttu-id="99aad-248">この例では、 <xref:System.Windows.Forms.DataObject>テキストデータがに存在するかどうかを出力します。</span><span class="sxs-lookup"><span data-stu-id="99aad-248">Then the examples prints whether text data exists in the <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-249">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-249">This code requires that `textBox1` has been created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-250">チェック対象となる形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-250">A <see cref="T:System.Type" /> representing the format to check for.</span></span></param>
        <summary><span data-ttu-id="99aad-251">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-251">Determines whether data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="99aad-252">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-252"><see langword="true" /> if data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-253">を呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>前に形式が存在するかどうかを確認するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-253">Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-254"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>で使用可能な形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-254">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-255">変換が許可されているかどうか、および要求された形式が格納されている形式と互換性があるかどうかを指定するようにデータを格納している場合は、別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-255">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-256">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-256">For example, data stored as Unicode can be converted to text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-257">データを取得できない場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="99aad-257">If no data can be retrieved, no exception will be thrown.</span></span> <span data-ttu-id="99aad-258">`false`代わりにが返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-258">Instead, `false` will be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-259">次のコード例では、指定した型のデータが<xref:System.Windows.Forms.DataObject>に存在するかどうか、またはデータを指定した型に変換できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="99aad-259">The following code example determines whether data of the specified type exists in a <xref:System.Windows.Forms.DataObject>, or whether the data can be converted to the specified type.</span></span> <span data-ttu-id="99aad-260">結果がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-260">The result is displayed in a text box.</span></span> <span data-ttu-id="99aad-261">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-261">The code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-262">チェック対象となる形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-262">The format to check for.</span></span> <span data-ttu-id="99aad-263">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-263">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="99aad-264">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータを指定した形式に変換できるかどうかを確認する場合は <see langword="true" />。データが指定した形式かどうかを確認する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-264"><see langword="true" /> to determine whether data stored in this <see cref="T:System.Windows.Forms.DataObject" /> can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="99aad-265">指定した形式のデータがこの <see cref="T:System.Windows.Forms.DataObject" /> に含まれているかどうかを確認し、オプションで、指定した形式に変換できるデータが含まれているかどうかも確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-265">Determines whether this <see cref="T:System.Windows.Forms.DataObject" /> contains data in the specified format or, optionally, contains data that can be converted to the specified format.</span></span></summary>
        <returns><span data-ttu-id="99aad-266">データが指定した形式である場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-266"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-267">を呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>前に形式が存在するかどうかを確認するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-267">Call this method to determine whether a format exists before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-268"><xref:System.Windows.Forms.DataObject.GetFormats%2A> この<xref:System.Windows.Forms.DataObject>で使用可能な形式に対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99aad-268">Call <xref:System.Windows.Forms.DataObject.GetFormats%2A> for the formats that are available in this <xref:System.Windows.Forms.DataObject>.</span></span>  
  
 <span data-ttu-id="99aad-269">このメソッドは`true` 、次の場合にを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-269">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="99aad-270">`autoConvert`パラメーターが`true`で、データが適切な形式に変換できる形式です。</span><span class="sxs-lookup"><span data-stu-id="99aad-270">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="99aad-271">`autoConvert`パラメーターが`false`で、データが適切な形式である。</span><span class="sxs-lookup"><span data-stu-id="99aad-271">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="99aad-272">このメソッドは`false` 、次の場合にを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-272">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="99aad-273">パラメーターが`true`で、このメソッドは指定された形式でデータを見つけることができません。また、データを指定された形式に変換でき`false`ません。または、に自動変換が設定された状態でデータが格納されています。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="99aad-273">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with automatic conversion set to `false`.</span></span>  
  
-   <span data-ttu-id="99aad-274">パラメーターが`false`で、指定された形式で<xref:System.Windows.Forms.DataObject>データがこの内に存在しません。 `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="99aad-274">The `autoConvert` parameter is `false` and data does not exist in this <xref:System.Windows.Forms.DataObject> in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-275">変換が許可されていて、要求された形式が格納された形式と互換性がある場合は、データを別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-275">Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-276">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-276">For example, data stored as Unicode can be converted to text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-277">データを取得できない場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="99aad-277">If no data can be retrieved, no exception will be thrown.</span></span> <span data-ttu-id="99aad-278">`false`代わりにが返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-278">Instead, `false` will be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-279">次のコード例では、に現在格納さ<xref:System.Windows.Forms.DataObject>れているデータが、指定した形式に関連付けられているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="99aad-279">The following code example determines whether data currently stored in the <xref:System.Windows.Forms.DataObject> is associated with a specified format.</span></span> <span data-ttu-id="99aad-280">まず、新しい<xref:System.Windows.Forms.DataObject>が文字列で初期化され、その形式がテキストとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-280">First, a new <xref:System.Windows.Forms.DataObject> is initialized with a string, specifying its format as text.</span></span>  
  
 <span data-ttu-id="99aad-281">次に<xref:System.Windows.Forms.DataObject> 、 `autoConvert`パラメーターをとして`false`指定して、テキスト形式に関連付けられているデータに対してを照会します。</span><span class="sxs-lookup"><span data-stu-id="99aad-281">Then the <xref:System.Windows.Forms.DataObject> is queried for data associated with the text format, specifying the `autoConvert` parameter as `false`.</span></span> <span data-ttu-id="99aad-282">このクエリの結果は、テキストボックスに出力されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-282">The result of this query is printed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-283">次に<xref:System.Windows.Forms.DataObject> 、 `autoConvert`パラメーターをとして`true`指定して、文字列形式に関連付けられているデータを照会します。</span><span class="sxs-lookup"><span data-stu-id="99aad-283">Then the <xref:System.Windows.Forms.DataObject> is queried for data associated with string format, specifying the `autoConvert` parameter as `true`.</span></span> <span data-ttu-id="99aad-284">結果はテキストボックスに出力されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-284">The results are printed in the text box.</span></span> <span data-ttu-id="99aad-285">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-285">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-286">ファイル名のコレクションをデータ オブジェクトから取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-286">Retrieves a collection of file names from the data object.</span></span></summary>
        <returns><span data-ttu-id="99aad-287">ファイル名を含んだ <see cref="T:System.Collections.Specialized.StringCollection" />。<see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式のデータ、またはその形式に変換できるデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-287">A <see cref="T:System.Collections.Specialized.StringCollection" /> containing file names or <see langword="null" /> if the data object does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format or can be converted to that format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-288">ファイルドロップリストは、ファイルのパス情報を含む文字列のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="99aad-288">A file drop list is a collection of strings containing path information for files.</span></span>  
  
 <span data-ttu-id="99aad-289">ファイルドロップリストは、 <xref:System.String>配列としてデータオブジェクトに格納されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-289">A file drop list is stored in a data object as a <xref:System.String> array.</span></span> <span data-ttu-id="99aad-290">このメソッドは、 <xref:System.Collections.Specialized.StringCollection>この配列をに変換し、コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-290">This method converts this array to a <xref:System.Collections.Specialized.StringCollection> and returns the collection.</span></span>  
  
 <span data-ttu-id="99aad-291"><xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>メソッドを使用して、このメソッドを使用して取得する前に、データオブジェクトにファイルドロップリストが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-291">Use the <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> method to determine whether the data object contains a file drop list before retrieving it with this method.</span></span>  
  
 <span data-ttu-id="99aad-292">データオブジェクト<xref:System.Windows.Forms.DataObject.SetFileDropList%2A>にファイルドロップリストを追加するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-292">Use the <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> method to add a file drop list to the data object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-293">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-293">Returns a list of all formats that data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-294">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-294">Returns a list of all formats that data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="99aad-295"><see cref="T:System.String" /> 型の配列。このオブジェクトに格納されているデータがサポートするすべての形式のリストが含まれます。</span><span class="sxs-lookup"><span data-stu-id="99aad-295">An array of type <see cref="T:System.String" />, containing a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-296">を呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>前に、このメソッドを呼び出して、サポートされているデータ形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-296">Call this method to get the supported data formats before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-297">定義<xref:System.Windows.Forms.DataFormats>済みの形式については、を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-297">See <xref:System.Windows.Forms.DataFormats> for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-298">変換が許可されていて、要求された形式が格納された形式と互換性がある場合は、データを別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-298">Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-299">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-299">For example, data stored as Unicode can be converted to text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-300">次のコード例では<xref:System.Windows.Forms.DataObject> 、データに関連付けられている形式と、データの変換先となる形式をに対してクエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="99aad-300">The following code example queries a <xref:System.Windows.Forms.DataObject> for the formats associated with its data, and the formats that the data can be converted to.</span></span> <span data-ttu-id="99aad-301">結果の一覧がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-301">The resulting list is displayed in a text box.</span></span> <span data-ttu-id="99aad-302">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-302">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="99aad-303">この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータが関連付けられている形式、またはそのデータを変換できる形式をすべて取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-303"><see langword="true" /> to retrieve all formats that data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with, or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="99aad-304">自動変換パラメーターを使用して、ネイティブのデータ形式だけを取得するのか、またはデータを変換することができるすべての形式を取得するのかを決定し、この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータに関連付けられている形式、あるいは変換できるすべての形式のリストを返します。</span><span class="sxs-lookup"><span data-stu-id="99aad-304">Returns a list of all formats that data stored in this <see cref="T:System.Windows.Forms.DataObject" /> is associated with or can be converted to, using an automatic conversion parameter to determine whether to retrieve only native data formats or all formats that the data can be converted to.</span></span></summary>
        <returns><span data-ttu-id="99aad-305"><see cref="T:System.String" /> 型の配列。このオブジェクトに格納されているデータがサポートするすべての形式のリストが含まれます。</span><span class="sxs-lookup"><span data-stu-id="99aad-305">An array of type <see cref="T:System.String" />, containing a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-306">を呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>前に、このメソッドを呼び出して、サポートされているデータ形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-306">Call this method to get the supported data formats before calling <xref:System.Windows.Forms.DataObject.GetData%2A>.</span></span> <span data-ttu-id="99aad-307">定義<xref:System.Windows.Forms.DataFormats>済みの形式については、を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-307">See <xref:System.Windows.Forms.DataFormats> for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99aad-308">変換が許可されていて、要求された形式が格納された形式と互換性がある場合は、データを別の形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-308">Data can be converted to another format if it was stored specifying that conversion is allowed and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="99aad-309">たとえば、Unicode として格納されているデータをテキストに変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-309">For example, data stored as Unicode can be converted to text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-310">次のコード例では<xref:System.Windows.Forms.DataObject> 、データに関連付けられている形式に対してをクエリします。</span><span class="sxs-lookup"><span data-stu-id="99aad-310">The following code example queries a <xref:System.Windows.Forms.DataObject> for the formats associated with its data.</span></span> <span data-ttu-id="99aad-311">最初のクエリでは`autoConvert` 、パラメーター `false`をとして指定します。そのため、データのネイティブ形式のみが返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-311">The first query specifies the `autoConvert` parameter as `false`, so only the native format of the data is returned.</span></span> <span data-ttu-id="99aad-312">2番目のクエリ`autoConvert`では`true`、パラメーターをとして指定します。そのため、形式の一覧には、データを変換できる形式が含まれています。</span><span class="sxs-lookup"><span data-stu-id="99aad-312">The second query specifies the `autoConvert` parameter as `true`, so the list of formats includes the formats that the data can be converted to.</span></span>  
  
 <span data-ttu-id="99aad-313">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-313">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-314">データ オブジェクトからイメージを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-314">Retrieves an image from the data object.</span></span></summary>
        <returns><span data-ttu-id="99aad-315">データ オブジェクト内のイメージ データを表す <see cref="T:System.Drawing.Image" />。<see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 形式のデータ、またはその形式に変換できるデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-315">An <see cref="T:System.Drawing.Image" /> representing the image data in the data object or <see langword="null" /> if the data object does not contain any data that is in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format or can be converted to that format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-316"><xref:System.Windows.Forms.DataObject.ContainsImage%2A>メソッドを使用して、このメソッドを使用して取得する前に、データオブジェクトにイメージデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-316">Use the <xref:System.Windows.Forms.DataObject.ContainsImage%2A> method to determine whether the data object contains image data before retrieving it with this method.</span></span>  
  
 <span data-ttu-id="99aad-317">データオブジェクト<xref:System.Windows.Forms.DataObject.SetImage%2A>にイメージデータを追加するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-317">Use the <xref:System.Windows.Forms.DataObject.SetImage%2A> method to add image data to the data object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-318">データ オブジェクトからテキスト データを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-318">Retrieves text data from the data object.</span></span></summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99aad-319">データ オブジェクトから <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式でテキスト データを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-319">Retrieves text data from the data object in the <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</span></span></summary>
        <returns><span data-ttu-id="99aad-320">データ オブジェクト内のテキスト データ。データ オブジェクトに <see cref="F:System.String.Empty" /> 形式のデータが含まれていない場合は <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-320">The text data in the data object or <see cref="F:System.String.Empty" /> if the data object does not contain data in the <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-321"><xref:System.Windows.Forms.DataObject.ContainsText%2A>メソッドを使用して、このメソッドを使用して取得する前に、データオブジェクトにテキストデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-321">Use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains text data before retrieving it with this method.</span></span>  
  
 <span data-ttu-id="99aad-322">データオブジェクト<xref:System.Windows.Forms.DataObject.SetText%2A>にテキストデータを追加するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-322">Use the <xref:System.Windows.Forms.DataObject.SetText%2A> method to add text data to the data object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-323"><see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="99aad-323">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</span></span></param>
        <summary><span data-ttu-id="99aad-324">データ オブジェクトから、指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式でテキスト データを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-324">Retrieves text data from the data object in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></summary>
        <returns><span data-ttu-id="99aad-325">データ オブジェクト内のテキスト データ。指定した形式のデータがデータ オブジェクトに含まれていない場合は <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-325">The text data in the data object or <see cref="F:System.String.Empty" /> if the data object does not contain data in the specified format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-326"><xref:System.Windows.Forms.DataObject.ContainsText%2A>メソッドを使用して、このメソッドを使用して取得する前に、データオブジェクトにテキストデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-326">Use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains text data before retrieving it with this method.</span></span>  
  
 <span data-ttu-id="99aad-327">データオブジェクト<xref:System.Windows.Forms.DataObject.SetText%2A>にテキストデータを追加するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-327">Use the <xref:System.Windows.Forms.DataObject.SetText%2A> method to add text data to the data object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="99aad-328"><paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="99aad-328"><paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-329">データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式でデータを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-329">Adds data to the data object in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</span></span></summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes"><span data-ttu-id="99aad-330">オーディオ データを含んだ <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="99aad-330">A <see cref="T:System.Byte" /> array containing the audio data.</span></span></param>
        <summary><span data-ttu-id="99aad-331"><see cref="T:System.Byte" /> 配列を <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> に変換してから、<see cref="T:System.IO.Stream" /> 形式でデータ オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-331">Adds a <see cref="T:System.Byte" /> array to the data object in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format after converting it to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-332">データオブジェクトからオーディオデータを取得するには、最初<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>にメソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetAudioStream%2A>メソッドを使用して取得する前に、データオブジェクトにオーディオデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-332">To retrieve audio data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-333"><paramref name="audioBytes" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="99aad-333"><paramref name="audioBytes" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream"><span data-ttu-id="99aad-334">オーディオ データを含んだ <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-334">A <see cref="T:System.IO.Stream" /> containing the audio data.</span></span></param>
        <summary><span data-ttu-id="99aad-335">データ オブジェクトに <see cref="T:System.IO.Stream" /> 形式で <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-335">Adds a <see cref="T:System.IO.Stream" /> to the data object in the <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-336">データオブジェクトからオーディオデータを取得するには、最初<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>にメソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetAudioStream%2A>メソッドを使用して取得する前に、データオブジェクトにオーディオデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-336">To retrieve audio data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> method to determine whether the data object contains audio data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-337"><paramref name="audioStream" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="99aad-337"><paramref name="audioStream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-338">オブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-338">Adds an object to the <see cref="T:System.Windows.Forms.DataObject" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="99aad-339">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-339">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-340">オブジェクト型をデータ形式として使用して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-340">Adds the specified object to the <see cref="T:System.Windows.Forms.DataObject" /> using the object type as the data format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="99aad-341">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-341">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span> <span data-ttu-id="99aad-342">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-342">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="99aad-343">オーバーロード<xref:System.Windows.Forms.DataObject.SetData%28System.Object%29>は、 <xref:System.Object.GetType%2A?displayProperty=nameWithType>メソッド`data`を呼び出すことによって決定される形式で値を格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-343">The <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> overload stores the `data` value in a format that it determines by calling the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="99aad-344">が`data` <xref:System.Runtime.Serialization.ISerializable>インターフェイスを実装している場合、このオーバーロードは値<xref:System.Windows.DataFormats.Serializable>も形式で格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-344">If `data` implements the <xref:System.Runtime.Serialization.ISerializable> interface, this overload also stores the value in the <xref:System.Windows.DataFormats.Serializable> format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-345">次のコード例では、 <xref:System.Windows.Forms.DataObject>にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-345">The following code example stores data in a <xref:System.Windows.Forms.DataObject>.</span></span> <span data-ttu-id="99aad-346">まず、新しい<xref:System.Windows.Forms.DataObject>が作成され、コンポーネントが格納されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-346">First, a new <xref:System.Windows.Forms.DataObject> is created and a component is stored in it.</span></span> <span data-ttu-id="99aad-347">次に、クラスを指定してデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-347">Then, the data is retrieved by specifying the class.</span></span> <span data-ttu-id="99aad-348">結果がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-348">The result is displayed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-349">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-349">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-350">データに関連付けられている形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-350">The format associated with the data.</span></span> <span data-ttu-id="99aad-351">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-351">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="99aad-352">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-352">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-353">形式を指定して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-353">Adds the specified object to the <see cref="T:System.Windows.Forms.DataObject" /> using the specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="99aad-354">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-354">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="99aad-355">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-355">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-356">次のコード例では<xref:System.Windows.Forms.DataObject>、データをに格納し、その形式を Unicode として指定しています。</span><span class="sxs-lookup"><span data-stu-id="99aad-356">The following code example stores data in a <xref:System.Windows.Forms.DataObject>, specifying its format as Unicode.</span></span>  
  
 <span data-ttu-id="99aad-357">次に、テキスト形式を指定してデータを取得します。これは、既定では、最終的な形式に互換性がある場合にデータを変換するためです。</span><span class="sxs-lookup"><span data-stu-id="99aad-357">Then the data is retrieved by specifying the text format, since the default is to convert the data when the final format is compatible.</span></span> <span data-ttu-id="99aad-358">結果がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-358">The result is displayed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-359">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-359">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-360">データに関連付けられている形式を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-360">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span></param>
        <param name="data"><span data-ttu-id="99aad-361">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-361">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-362">指定した型を形式として使用して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-362">Adds the specified object to the <see cref="T:System.Windows.Forms.DataObject" /> using the specified type as the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="99aad-363">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-363">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="99aad-364">このメソッドを使用して格納されたデータは、取得時に互換性のある形式に変換できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-364">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-365">次のコード例では、 <xref:System.Windows.Forms.DataObject> <xref:System.Type>データ形式としてを使用して、にデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-365">The following code example stores data in a <xref:System.Windows.Forms.DataObject> using a <xref:System.Type> as the data format.</span></span> <span data-ttu-id="99aad-366">データは、 <xref:System.Type>を使用して<xref:System.Windows.Forms.DataObject.GetData%2A>データ形式を指定してを呼び出すことによって取得されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-366">The data is then retrieved by calling <xref:System.Windows.Forms.DataObject.GetData%2A> using the <xref:System.Type> to specify the data format.</span></span> <span data-ttu-id="99aad-367">結果がテキストボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-367">The result is displayed in a text box.</span></span>  
  
 <span data-ttu-id="99aad-368">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-368">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="99aad-369">データに関連付けられている形式。</span><span class="sxs-lookup"><span data-stu-id="99aad-369">The format associated with the data.</span></span> <span data-ttu-id="99aad-370">定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="99aad-370">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="99aad-371">データを別の形式に変換できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-371"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="99aad-372">格納するデータ。</span><span class="sxs-lookup"><span data-stu-id="99aad-372">The data to store.</span></span></param>
        <summary><span data-ttu-id="99aad-373">形式を指定し、データを別形式に変換できるかどうかを指定して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-373">Adds the specified object to the <see cref="T:System.Windows.Forms.DataObject" /> using the specified format and indicating whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="99aad-374">対象アプリケーションの形式がわからない場合は、この方法を使用してデータを複数の形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-374">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99aad-375">次のコード例では、 <xref:System.Windows.Forms.DataObject>データをに格納し、データをネイティブ形式でのみ取得できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="99aad-375">The following code example stores data in a <xref:System.Windows.Forms.DataObject> and specifies that the data can only be retrieved in its native format.</span></span>  
  
 <span data-ttu-id="99aad-376">まず、新しい<xref:System.Windows.Forms.DataObject>が作成されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-376">First, a new <xref:System.Windows.Forms.DataObject> is created.</span></span> <span data-ttu-id="99aad-377">Unicode 形式のデータは、 <xref:System.Windows.Forms.DataObject> `autoConvert`がに`false`設定されたに格納されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-377">Data in the Unicode format is stored in the <xref:System.Windows.Forms.DataObject>, with `autoConvert` set to `false`.</span></span>  
  
 <span data-ttu-id="99aad-378">次に、 <xref:System.Windows.Forms.DataObject>使用可能なデータ形式の一覧を照会します。</span><span class="sxs-lookup"><span data-stu-id="99aad-378">Then, the <xref:System.Windows.Forms.DataObject> is queried for the list of available data formats.</span></span> <span data-ttu-id="99aad-379">Unicode データはテキストやその他の形式に変換できますが、Unicode 形式のみが返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-379">Only the Unicode format is returned, although Unicode data can be converted to text and other formats.</span></span>  
  
 <span data-ttu-id="99aad-380">このコードでは`textBox1` 、が作成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-380">This code requires that `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths"><span data-ttu-id="99aad-381">ファイル名を含んだ <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-381">A <see cref="T:System.Collections.Specialized.StringCollection" /> containing the file names.</span></span></param>
        <summary><span data-ttu-id="99aad-382">データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式でファイル名のコレクションを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-382">Adds a collection of file names to the data object in the <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-383">ファイルドロップリストは、ファイルのパス情報を含む文字列のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="99aad-383">A file drop list is a collection of strings containing path information for files.</span></span>  
  
 <span data-ttu-id="99aad-384">ファイルドロップリストは、 <xref:System.String>配列としてデータオブジェクトに格納されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-384">A file drop list is stored in a data object as a <xref:System.String> array.</span></span> <span data-ttu-id="99aad-385">このメソッドは`filePaths` 、を<xref:System.String>データオブジェクトに追加する前に、配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="99aad-385">This method converts `filePaths` to a <xref:System.String> array before adding it to the data object.</span></span>  
  
 <span data-ttu-id="99aad-386">データオブジェクトからファイルドロップリストを取得するには、最初に<xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>メソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetFileDropList%2A>メソッドを使用して取得する前に、データオブジェクトにその形式のデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-386">To retrieve a file drop list from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> method to determine whether the data object contains data in that format before retrieving it with the <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-387"><paramref name="filePaths" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="99aad-387"><paramref name="filePaths" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="99aad-388">データ オブジェクトに追加する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="99aad-388">The <see cref="T:System.Drawing.Image" /> to add to the data object.</span></span></param>
        <summary><span data-ttu-id="99aad-389">データ オブジェクトに <see cref="T:System.Drawing.Image" /> 形式で <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> を追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-389">Adds an <see cref="T:System.Drawing.Image" /> to the data object in the <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-390">データオブジェクトからイメージデータを取得するには、最初<xref:System.Windows.Forms.DataObject.ContainsImage%2A>にメソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetImage%2A>メソッドを使用して取得する前に、データオブジェクトにイメージデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-390">To retrieve image data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsImage%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetImage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-391"><paramref name="image" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="99aad-391"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99aad-392">データ オブジェクトにテキスト データを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-392">Adds text data to the data object.</span></span></summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="99aad-393">データ オブジェクトに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="99aad-393">The text to add to the data object.</span></span></param>
        <summary><span data-ttu-id="99aad-394">データ オブジェクトに <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式でテキスト データを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-394">Adds text data to the data object in the <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-395">データオブジェクトからテキストデータを取得するには、最初<xref:System.Windows.Forms.DataObject.ContainsText%2A>にメソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetText%2A>メソッドを使用して取得する前に、データオブジェクトにイメージデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-395">To retrieve text data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-396"><paramref name="textData" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="99aad-396"><paramref name="textData" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="99aad-397">データ オブジェクトに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="99aad-397">The text to add to the data object.</span></span></param>
        <param name="format"><span data-ttu-id="99aad-398"><see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="99aad-398">One of the <see cref="T:System.Windows.Forms.TextDataFormat" /> values.</span></span></param>
        <summary><span data-ttu-id="99aad-399">データ オブジェクトに、指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式でテキスト データを追加します。</span><span class="sxs-lookup"><span data-stu-id="99aad-399">Adds text data to the data object in the format indicated by the specified <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-400">データオブジェクトからテキストデータを取得するには、最初<xref:System.Windows.Forms.DataObject.ContainsText%2A>にメソッドを使用して、 <xref:System.Windows.Forms.DataObject.GetText%2A>メソッドを使用して取得する前に、データオブジェクトにイメージデータが含まれているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-400">To retrieve text data from the data object, first use the <xref:System.Windows.Forms.DataObject.ContainsText%2A> method to determine whether the data object contains image data before retrieving it with the <xref:System.Windows.Forms.DataObject.GetText%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99aad-401"><paramref name="textData" /> が <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="99aad-401"><paramref name="textData" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="99aad-402"><paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="99aad-402"><paramref name="format" /> is not a valid <see cref="T:System.Windows.Forms.TextDataFormat" /> value.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetc"><span data-ttu-id="99aad-403">今後の通知のために使用される形式、対象デバイス、特性、およびメディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体 (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-403">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.</span></span></param>
        <param name="advf"><span data-ttu-id="99aad-404">アドバイザリ コネクションの制御用フラグのグループを指定する <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="99aad-404">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> values that specifies a group of flags for controlling the advisory connection.</span></span></param>
        <param name="pAdvSink"><span data-ttu-id="99aad-405">変更通知を受信するアドバイズ シンク上の <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> インターフェイスへのポインター。</span><span class="sxs-lookup"><span data-stu-id="99aad-405">A pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> interface on the advisory sink that will receive the change notification.</span></span></param>
        <param name="pdwConnection"><span data-ttu-id="99aad-406">このメソッドから制御が戻るときに、この接続を識別する DWORD トークンへのポインターを格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-406">When this method returns, contains a pointer to a DWORD token that identifies this connection.</span></span> <span data-ttu-id="99aad-407">このトークンを後で <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" /> に渡して、アドバイザリ コネクションを削除できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-407">You can use this token later to delete the advisory connection by passing it to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />.</span></span> <span data-ttu-id="99aad-408">この値が 0 の場合、接続は確立されていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-408">If this value is zero, the connection was not established.</span></span> <span data-ttu-id="99aad-409">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-409">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="99aad-410">データ オブジェクトとアドバイズ シンク間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="99aad-410">Creates a connection between a data object and an advisory sink.</span></span> <span data-ttu-id="99aad-411">このメソッドは、アドバイズ シンクをサポートするオブジェクトによって呼び出され、オブジェクトのデータの変更をアドバイズ シンクに通知できるようにします。</span><span class="sxs-lookup"><span data-stu-id="99aad-411">This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.</span></span></summary>
        <returns><span data-ttu-id="99aad-412">このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="99aad-412">This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="99aad-413">[値]</span><span class="sxs-lookup"><span data-stu-id="99aad-413">Value</span></span> 
 </term><description> <span data-ttu-id="99aad-414">説明</span><span class="sxs-lookup"><span data-stu-id="99aad-414">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="99aad-415">S_OK</span><span class="sxs-lookup"><span data-stu-id="99aad-415">S_OK</span></span> 
 </term><description> <span data-ttu-id="99aad-416">アドバイザリ コネクションが作成されました。</span><span class="sxs-lookup"><span data-stu-id="99aad-416">The advisory connection was created.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-417">E_NOTIMPL</span><span class="sxs-lookup"><span data-stu-id="99aad-417">E_NOTIMPL</span></span> 
 </term><description> <span data-ttu-id="99aad-418">このメソッドは、データ オブジェクトには実装されていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-418">This method is not implemented on the data object.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-419">DV_E_LINDEX</span><span class="sxs-lookup"><span data-stu-id="99aad-419">DV_E_LINDEX</span></span> 
 </term><description> <span data-ttu-id="99aad-420"><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> に無効な値があります。現在は -1 だけがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="99aad-420">There is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-421">DV_E_FORMATETC</span><span class="sxs-lookup"><span data-stu-id="99aad-421">DV_E_FORMATETC</span></span> 
 </term><description> <span data-ttu-id="99aad-422"><paramref name="pFormatetc" /> パラメーターに無効な値があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-422">There is an invalid value for the <paramref name="pFormatetc" /> parameter.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-423">OLE_E_ADVISENOTSUPPORTED</span><span class="sxs-lookup"><span data-stu-id="99aad-423">OLE_E_ADVISENOTSUPPORTED</span></span> 
 </term><description> <span data-ttu-id="99aad-424">データ オブジェクトは、変更通知をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-424">The data object does not support change notification.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-425">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-426"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-426">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-427">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-427">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-428">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-428">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwConnection"><span data-ttu-id="99aad-429">削除する接続を指定する DWORD トークン。</span><span class="sxs-lookup"><span data-stu-id="99aad-429">A DWORD token that specifies the connection to remove.</span></span> <span data-ttu-id="99aad-430">接続が最初に確立されたときに、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> から返された値を使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-430">Use the value returned by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> when the connection was originally established.</span></span></param>
        <summary><span data-ttu-id="99aad-431">以前に確立されていた通知の接続を破棄します。</span><span class="sxs-lookup"><span data-stu-id="99aad-431">Destroys a notification connection that had been previously established.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-432">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-432">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-433"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-433">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-434">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-434">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-435">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-435">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumAdvise"><span data-ttu-id="99aad-436">このメソッドから制御が戻るときに、新しい列挙子オブジェクトへのインターフェイス ポインターを受け取る <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-436">When this method returns, contains an <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> that receives the interface pointer to the new enumerator object.</span></span> <span data-ttu-id="99aad-437">実装によって <paramref name="enumAdvise" /> が <see langword="null" /> に設定される場合、現時点ではアドバイズ シンクへの接続はありません。</span><span class="sxs-lookup"><span data-stu-id="99aad-437">If the implementation sets <paramref name="enumAdvise" /> to <see langword="null" />, there are no connections to advisory sinks at this time.</span></span> <span data-ttu-id="99aad-438">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-438">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="99aad-439">現在のアドバイザリ コネクションを列挙するために使用できるオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="99aad-439">Creates an object that can be used to enumerate the current advisory connections.</span></span></summary>
        <returns><span data-ttu-id="99aad-440">このメソッドは、標準の戻り値である E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="99aad-440">This method supports the standard return value E_OUTOFMEMORY, as well as the following:</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="99aad-441">[値]</span><span class="sxs-lookup"><span data-stu-id="99aad-441">Value</span></span>  
  
 </term><description> <span data-ttu-id="99aad-442">説明</span><span class="sxs-lookup"><span data-stu-id="99aad-442">Description</span></span>  
  
 </description></listheader><item><term> <span data-ttu-id="99aad-443">S_OK</span><span class="sxs-lookup"><span data-stu-id="99aad-443">S_OK</span></span>  
  
 </term><description> <span data-ttu-id="99aad-444">列挙子オブジェクトが正常にインスタンス化されたか、接続がありません。</span><span class="sxs-lookup"><span data-stu-id="99aad-444">The enumerator object is successfully instantiated or there are no connections.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-445">OLE_E_ADVISENOTSUPPORTED</span><span class="sxs-lookup"><span data-stu-id="99aad-445">OLE_E_ADVISENOTSUPPORTED</span></span>  
  
 </term><description> <span data-ttu-id="99aad-446">このオブジェクトは、アドバイザリの通知をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-446">This object does not support advisory notifications.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-447">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-448"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-448">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-449">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-449">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-450">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-450">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwDirection"><span data-ttu-id="99aad-451">データの方向を指定する <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="99aad-451">One of the <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> values that specifies the direction of the data.</span></span></param>
        <summary><span data-ttu-id="99aad-452">データ オブジェクトの <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体を列挙するためのオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="99aad-452">Creates an object for enumerating the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures for a data object.</span></span> <span data-ttu-id="99aad-453">これらの構造体は、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> または <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> の呼び出しで使用されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-453">These structures are used in calls to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> or <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</span></span></summary>
        <returns><span data-ttu-id="99aad-454">このメソッドは、標準の戻り値である E_INVALIDARG および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="99aad-454">This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="99aad-455">[値]</span><span class="sxs-lookup"><span data-stu-id="99aad-455">Value</span></span> 
 </term><description> <span data-ttu-id="99aad-456">説明</span><span class="sxs-lookup"><span data-stu-id="99aad-456">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="99aad-457">S_OK</span><span class="sxs-lookup"><span data-stu-id="99aad-457">S_OK</span></span> 
 </term><description> <span data-ttu-id="99aad-458">列挙子オブジェクトが正常に作成されました。</span><span class="sxs-lookup"><span data-stu-id="99aad-458">The enumerator object was successfully created.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-459">E_NOTIMPL</span><span class="sxs-lookup"><span data-stu-id="99aad-459">E_NOTIMPL</span></span> 
 </term><description> <span data-ttu-id="99aad-460"><paramref name="direction" /> パラメーターで指定された方向はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-460">The direction specified by the <paramref name="direction" /> parameter is not supported.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-461">OLE_S_USEREG</span><span class="sxs-lookup"><span data-stu-id="99aad-461">OLE_S_USEREG</span></span> 
 </term><description> <span data-ttu-id="99aad-462">OLE がレジストリから形式を列挙するように要求します。</span><span class="sxs-lookup"><span data-stu-id="99aad-462">Requests that OLE enumerate the formats from the registry.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-463">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-464"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-464">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-465">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-465">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-466">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-466">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn"><span data-ttu-id="99aad-467"><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> などの後続の呼び出しで、呼び出し元がデータを取得するために使用する必要がある、形式、メディア、および対象デバイスを定義する <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 構造体へのポインター (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-467">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</span></span> <span data-ttu-id="99aad-468"><see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、この場合には重要ではないため、無視する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-468">The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored.</span></span></param>
        <param name="pformatetcOut"><span data-ttu-id="99aad-469">このメソッドから制御が戻るときに、特定の表示で最も一般的な情報を格納している <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインターを格納し、<c>formatetcIn</c> と規準的等価にします。</span><span class="sxs-lookup"><span data-stu-id="99aad-469">When this method returns, contains a pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <c>formatetcIn</c>.</span></span> <span data-ttu-id="99aad-470">呼び出し元でこの構造体を割り当て、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> メソッドでデータを格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-470">The caller must allocate this structure and the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> method must fill in the data.</span></span> <span data-ttu-id="99aad-471"><see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> などの後続の呼び出しでデータを取得するには、指定された値が <see langword="null" /> の場合を除き、呼び出し元は <c>formatOut</c> に指定された値を使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-471">To retrieve data in a subsequent call such as <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, the caller uses the supplied value of <c>formatOut</c>, unless the value supplied is <see langword="null" />.</span></span> <span data-ttu-id="99aad-472">このメソッドが <see langword="null" /> を返す場合、この値は <see langword="DATA_S_SAMEFORMATETC" /> です。</span><span class="sxs-lookup"><span data-stu-id="99aad-472">This value is <see langword="null" /> if the method returns <see langword="DATA_S_SAMEFORMATETC" />.</span></span> <span data-ttu-id="99aad-473"><see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、この場合には重要ではないため、無視する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-473">The <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> member is not significant in this case and should be ignored.</span></span> <span data-ttu-id="99aad-474">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-474">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="99aad-475">より複雑な構造体と論理的に等価な、標準の <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体を提供します。</span><span class="sxs-lookup"><span data-stu-id="99aad-475">Provides a standard <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure that is logically equivalent to a more complex structure.</span></span> <span data-ttu-id="99aad-476">このメソッドを使用して、2 つの異なる <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体が同一のデータを返すかどうかを確認し、表示を二重化する必要をなくします。</span><span class="sxs-lookup"><span data-stu-id="99aad-476">Use this method to determine whether two different <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures would return the same data, removing the need for duplicate rendering.</span></span></summary>
        <returns><span data-ttu-id="99aad-477">このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="99aad-477">This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="99aad-478">[値]</span><span class="sxs-lookup"><span data-stu-id="99aad-478">Value</span></span> 
 </term><description> <span data-ttu-id="99aad-479">説明</span><span class="sxs-lookup"><span data-stu-id="99aad-479">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="99aad-480">S_OK</span><span class="sxs-lookup"><span data-stu-id="99aad-480">S_OK</span></span> 
 </term><description> <span data-ttu-id="99aad-481">返される <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体は、渡された構造体とは異なります。</span><span class="sxs-lookup"><span data-stu-id="99aad-481">The returned <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure is different from the one that was passed.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-482">DATA_S_SAMEFORMATETC</span><span class="sxs-lookup"><span data-stu-id="99aad-482">DATA_S_SAMEFORMATETC</span></span> 
 </term><description> <span data-ttu-id="99aad-483">複数の <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体が同一で、<paramref name="formatOut" /> パラメーターに <see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-483">The <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structures are the same and <see langword="null" /> is returned in the <paramref name="formatOut" /> parameter.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-484">DV_E_LINDEX</span><span class="sxs-lookup"><span data-stu-id="99aad-484">DV_E_LINDEX</span></span> 
 </term><description> <span data-ttu-id="99aad-485"><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> に無効な値があります。現在は -1 だけがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="99aad-485">There is an invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-486">DV_E_FORMATETC</span><span class="sxs-lookup"><span data-stu-id="99aad-486">DV_E_FORMATETC</span></span> 
 </term><description> <span data-ttu-id="99aad-487"><paramref name="pFormatetc" /> パラメーターに無効な値があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-487">There is an invalid value for the <paramref name="pFormatetc" /> parameter.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-488">OLE_E_NOTRUNNING</span><span class="sxs-lookup"><span data-stu-id="99aad-488">OLE_E_NOTRUNNING</span></span> 
 </term><description> <span data-ttu-id="99aad-489">アプリケーションが実行されていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-489">The application is not running.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-490">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-490">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-491"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-491">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-492">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-492">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-493">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-493">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc"><span data-ttu-id="99aad-494">データを渡すときに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-494">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</span></span> <span data-ttu-id="99aad-495">ブール型の OR 演算子を使用して複数のメディアを指定し、メソッドがそれらの指定の中から最良のメディアを選択できるようにします。</span><span class="sxs-lookup"><span data-stu-id="99aad-495">It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.</span></span></param>
        <param name="medium"><span data-ttu-id="99aad-496">このメソッドから制御が戻るときに、<see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> メンバーを通じて返されたデータを格納しているストレージ メディアと、その <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> メンバーの値を通じてメディアを解放する必要性を示す <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 構造体へのポインターを格納します。</span><span class="sxs-lookup"><span data-stu-id="99aad-496">When this method returns, contains a pointer to the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that indicates the storage medium containing the returned data through its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> member, and the responsibility for releasing the medium through the value of its <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member.</span></span> <span data-ttu-id="99aad-497"><see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> が <see langword="null" /> の場合は、メディアを受け取ったら、そのメディアを解放する必要があります。それ以外の場合は、<see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> が適切なオブジェクトの <see langword="IUnknown" /> インターフェイスを指すため、その <see langword="Release" /> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="99aad-497">If <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> is <see langword="null" />, the receiver of the medium is responsible for releasing it; otherwise, <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> points to the <see langword="IUnknown" /> interface on the appropriate object so its <see langword="Release" /> method can be called.</span></span> <span data-ttu-id="99aad-498">メディアは、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> で割り当て、情報を格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-498">The medium must be allocated and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</span></span> <span data-ttu-id="99aad-499">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-499">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="99aad-500">ソース データ オブジェクトからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-500">Obtains data from a source data object.</span></span> <span data-ttu-id="99aad-501"><see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> メソッドは、データ コンシューマーによって呼び出され、指定された <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体に記述されているデータを表示し、指定された <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体を使用してそのデータを転送します。</span><span class="sxs-lookup"><span data-stu-id="99aad-501">The <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method, which is called by a data consumer, renders the data described in the specified <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure and transfers it through the specified <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure.</span></span> <span data-ttu-id="99aad-502">呼び出し元は、その後で <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-502">The caller then assumes responsibility for releasing the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-503">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-503">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-504"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-504">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="99aad-505">メモリが不足しているため、この操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="99aad-505">There is not enough memory to perform this operation.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-506">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-506">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-507">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-507">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc"><span data-ttu-id="99aad-508">データを渡すときに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-508">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</span></span> <span data-ttu-id="99aad-509"><see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> に指定できるのは 1 つのメディアだけです。また、有効な <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 値は、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />、または <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" /> だけです。</span><span class="sxs-lookup"><span data-stu-id="99aad-509">Only one medium can be specified in <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, and only the following <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> values are valid: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, or <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</span></span></param>
        <param name="medium"><span data-ttu-id="99aad-510">転送されるデータを格納しているストレージ メディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-510">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, passed by reference, that defines the storage medium containing the data being transferred.</span></span> <span data-ttu-id="99aad-511">メディアは、呼び出し元で割り当て、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> で情報を格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-511">The medium must be allocated by the caller and filled in by <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />.</span></span> <span data-ttu-id="99aad-512">呼び出し元は、メディアを解放する必要もあります。</span><span class="sxs-lookup"><span data-stu-id="99aad-512">The caller must also free the medium.</span></span> <span data-ttu-id="99aad-513">このメソッドの実装では、常に、このパラメーターが指している <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 構造体の<see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> メンバーに <see langword="null" /> 値を与える必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-513">The implementation of this method must always supply a value of <see langword="null" /> for the <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> member of the <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure that this parameter points to.</span></span></param>
        <summary><span data-ttu-id="99aad-514">ソース データ オブジェクトからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99aad-514">Obtains data from a source data object.</span></span> <span data-ttu-id="99aad-515">このメソッドはデータ コンシューマーによって呼び出され、呼び出し元が、指定したストレージ メディアを割り当て、解放する必要があるという点で <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="99aad-515">This method, which is called by a data consumer, differs from the <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> method in that the caller must allocate and free the specified storage medium.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-516">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-516">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-517"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-517">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-518">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-518">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-519">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-519">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc"><span data-ttu-id="99aad-520">問い合わせに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-520">A pointer to a <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format, medium, and target device to use for the query.</span></span></param>
        <summary><span data-ttu-id="99aad-521">データ オブジェクトが、<see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体で記述されているデータを表示できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="99aad-521">Determines whether the data object is capable of rendering the data described in the <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure.</span></span> <span data-ttu-id="99aad-522">貼り付け操作またはドロップ操作をしようとしているオブジェクトは、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> を呼び出す前にこのメソッドを呼び出して、操作が正常に実行できるかどうかを示す値を取得できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-522">Objects attempting a paste or drop operation can call this method before calling <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> to get an indication of whether the operation may be successful.</span></span></summary>
        <returns><span data-ttu-id="99aad-523">このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。</span><span class="sxs-lookup"><span data-stu-id="99aad-523">This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="99aad-524">[値]</span><span class="sxs-lookup"><span data-stu-id="99aad-524">Value</span></span> 
 </term><description> <span data-ttu-id="99aad-525">説明</span><span class="sxs-lookup"><span data-stu-id="99aad-525">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="99aad-526">S_OK</span><span class="sxs-lookup"><span data-stu-id="99aad-526">S_OK</span></span> 
 </term><description> <span data-ttu-id="99aad-527">後続の <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> の呼び出しは、正常に実行されないこともあります。</span><span class="sxs-lookup"><span data-stu-id="99aad-527">A subsequent call to <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> would probably be successful.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-528">DV_E_LINDEX</span><span class="sxs-lookup"><span data-stu-id="99aad-528">DV_E_LINDEX</span></span> 
 </term><description> <span data-ttu-id="99aad-529"><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> の無効な値。現在は -1 だけがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="99aad-529">An invalid value for <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; currently, only -1 is supported.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-530">DV_E_FORMATETC</span><span class="sxs-lookup"><span data-stu-id="99aad-530">DV_E_FORMATETC</span></span> 
 </term><description> <span data-ttu-id="99aad-531"><paramref name="pFormatetc" /> パラメーターの無効な値。</span><span class="sxs-lookup"><span data-stu-id="99aad-531">An invalid value for the <paramref name="pFormatetc" /> parameter.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-532">DV_E_TYMED</span><span class="sxs-lookup"><span data-stu-id="99aad-532">DV_E_TYMED</span></span> 
 </term><description> <span data-ttu-id="99aad-533">正しくない <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> 値。</span><span class="sxs-lookup"><span data-stu-id="99aad-533">An invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> value.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-534">DV_E_DVASPECT</span><span class="sxs-lookup"><span data-stu-id="99aad-534">DV_E_DVASPECT</span></span> 
 </term><description> <span data-ttu-id="99aad-535">正しくない <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> 値。</span><span class="sxs-lookup"><span data-stu-id="99aad-535">An invalid <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> value.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="99aad-536">OLE_E_NOTRUNNING</span><span class="sxs-lookup"><span data-stu-id="99aad-536">OLE_E_NOTRUNNING</span></span> 
 </term><description> <span data-ttu-id="99aad-537">アプリケーションが実行されていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-537">The application is not running.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-538">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-538">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-539"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-539">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-540">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-540">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-541">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-541">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fRelease" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn"><span data-ttu-id="99aad-542">ストレージ メディアに格納されているデータを解釈するときに、データ オブジェクトによって使用される形式を定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体 (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-542">A <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.</span></span></param>
        <param name="pmedium"><span data-ttu-id="99aad-543">データが渡されるストレージ メディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体 (参照渡し)。</span><span class="sxs-lookup"><span data-stu-id="99aad-543">A <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> structure, passed by reference, that defines the storage medium in which the data is being passed.</span></span></param>
        <param name="fRelease"><span data-ttu-id="99aad-544"><see langword="true" /> を指定すると、呼び出しから制御が戻った後、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> を実装する呼び出されるデータ オブジェクトがストレージ メディアを所有します。</span><span class="sxs-lookup"><span data-stu-id="99aad-544"><see langword="true" /> to specify that the data object called, which implements <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, owns the storage medium after the call returns.</span></span> <span data-ttu-id="99aad-545">つまり、データ オブジェクトは、<see langword="ReleaseStgMedium" /> 関数の呼び出しによって使用された後に、メディアを解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99aad-545">This means that the data object must free the medium after it has been used by calling the <see langword="ReleaseStgMedium" /> function.</span></span> <span data-ttu-id="99aad-546"><see langword="false" /> を指定すると、呼び出し元がストレージ メディアの所有権を保持し、呼び出されるデータ オブジェクトは呼び出しの期間だけストレージ メディアを使用します。</span><span class="sxs-lookup"><span data-stu-id="99aad-546"><see langword="false" /> to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.</span></span></param>
        <summary><span data-ttu-id="99aad-547">このメソッドを実装するオブジェクトにデータを転送します。</span><span class="sxs-lookup"><span data-stu-id="99aad-547">Transfers data to the object that implements this method.</span></span> <span data-ttu-id="99aad-548">このメソッドは、データ ソースを格納しているオブジェクトから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="99aad-548">This method is called by an object that contains a data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99aad-549">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="99aad-549">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99aad-550"><xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="99aad-550">It can be used only when the <xref:System.Windows.Forms.DataObject> is cast to an <xref:System.Runtime.InteropServices.ComTypes.IDataObject> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="99aad-551">このメソッドは、基になるデータ オブジェクトの型をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="99aad-551">This method does not support the type of the underlying data object.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99aad-552">アンマネージコードを呼び出すための。</span><span class="sxs-lookup"><span data-stu-id="99aad-552">for calling unmanaged code.</span></span> <span data-ttu-id="99aad-553">関連付けられた列挙型:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99aad-553">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
