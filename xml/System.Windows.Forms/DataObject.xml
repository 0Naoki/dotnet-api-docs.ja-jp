<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b56628a1343ca18536643cf4b5f6ab892468ceb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>基本データ転送機構を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> 実装する、<xref:System.Windows.Forms.IDataObject>インターフェイスを持つメソッドのデータ転送の形式に依存しないメカニズムを提供します。  
  
 A<xref:System.Windows.Forms.DataObject>は通常使用、<xref:System.Windows.Forms.Clipboard>およびドラッグ アンド ドロップ操作でします。 <xref:System.Windows.Forms.DataObject>クラスの推奨される実装を提供、<xref:System.Windows.Forms.IDataObject>インターフェイスです。 使用することをお勧めしますが、<xref:System.Windows.Forms.DataObject>を実装するのではなく、クラス<xref:System.Windows.Forms.IDataObject>自分でします。  
  
 複数の異なる形式でデータを格納することができます、<xref:System.Windows.Forms.DataObject>です。 データを取得、<xref:System.Windows.Forms.DataObject>によって、関連付けられている形式。 データに含まれるアプリケーションの適切な形式のデータを配置することによって可能性を高めることができます、対象アプリケーションが認識されていない可能性があります、ため、<xref:System.Windows.Forms.DataObject>複数の形式でします。 参照してください<xref:System.Windows.Forms.DataFormats>定義済みの形式です。 インスタンスを作成することで、独自の形式を実装することができます、<xref:System.Windows.Forms.DataFormats.Format>クラスです。  
  
 データを格納する、 <xref:System.Windows.Forms.DataObject>、コンス トラクターに、データを渡す<xref:System.Windows.Forms.DataObject.SetData%2A>です。 複数の形式でデータを追加するには同じ<xref:System.Windows.Forms.DataObject>です。 ネイティブ形式のみ、呼び出しで取得するデータを削除する場合に追加<xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29>で、`autoConvert`パラメーターに設定`false`です。  
  
 データを取得できる、<xref:System.Windows.Forms.DataObject>と互換性がある任意の形式で<xref:System.Windows.Forms.DataObject.GetData%2A>です。 たとえば、テキストは Unicode に変換できます。 格納されている形式でデータを取得する呼び出し<xref:System.Windows.Forms.DataObject.GetData%2A>で、`autoConvert`パラメーターに設定`false`です。  
  
 データが格納されているどのような形式を特定するのには、呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>です。 調べるには、形式が使用可能なかどうかは、呼び出す<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>目的の形式にします。  
  
 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]、<xref:System.Windows.Forms.DataObject>クラスは、共通の形式のデータを容易にできるように追加のメソッドが操作を提供します。 特定の形式のデータを追加する、 <xref:System.Windows.Forms.DataObject>、使用して、適切な`Set`*形式*メソッドなど<xref:System.Windows.Forms.DataObject.SetText%2A>です。 特定の形式のデータを取得する、 <xref:System.Windows.Forms.DataObject>、まず、適切な`Contains`*形式*メソッド (など<xref:System.Windows.Forms.DataObject.ContainsText%2A>) を決定するかどうか、<xref:System.Windows.Forms.DataObject>その形式でデータを格納し、適切な呼び出し`Get`*形式*メソッド (など<xref:System.Windows.Forms.DataObject.GetText%2A>) 場合は、データを取得する、<xref:System.Windows.Forms.DataObject>それを格納します。  
  
> [!NOTE]
>  クリップボードをメタファイル形式を使用すると、特別な考慮事項が必要な可能性があります。 現在の実装の制限により、<xref:System.Windows.Forms.DataObject>クラス、.NET Framework で使用されるメタファイル形式は、古いメタファイル形式を使用するアプリケーションで認識されない可能性があります。 この場合、クリップボードの Win32 アプリケーション プログラミング インターフェイス (Api) と相互運用する必要があります。 詳細については、323530、「メタファイルでクリップボードはいない表示する、すべてのアプリケーション」で、Microsoft サポート技術情報の記事を参照してください。http://support.microsoft.comです。  
>   
>  オブジェクトをクリップボードに保存するのには、シリアル化可能にする必要があります。 参照してください<xref:System.Runtime.Serialization>詳細については、シリアル化します。 ターゲット アプリケーションには、非常に特定のデータ形式が必要とする場合、シリアル化プロセス内のデータに追加されたヘッダーからデータを認識するアプリケーションを使用できなくなります。 データ形式を保持するために、データを追加として、<xref:System.Byte>配列を<xref:System.IO.MemoryStream>を渡すと、<xref:System.IO.MemoryStream>を<xref:System.Windows.Forms.DataObject.SetData%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例は、内のデータを追加、<xref:System.Windows.Forms.DataObject>です。 最初に、新しい<xref:System.Windows.Forms.DataObject>が作成されるコンポーネントがこれに格納されているとします。 適切な種類のデータが存在するかどうかを参照してください。 さらに確認、<xref:System.Windows.Forms.DataObject>です。 結果は、テキスト ボックスに表示されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 次の例に格納されたデータの取得、<xref:System.Windows.Forms.DataObject>です。 最初に、新しい<xref:System.Windows.Forms.DataObject>テキスト データで作成されます。 次に、データが取得されると、文字列としての形式を指定して、テキスト ボックスに表示されます。 データの形式は文字列に変換テキストから自動的にします。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成、<xref:System.Windows.Forms.DataObject>データを追加します。 取得し、データが表示されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">格納するデータ。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化し、指定したオブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意の形式にデータを追加することができます、<xref:System.Windows.Forms.DataObject>ときにこのコンス トラクターを使用することもとしてデータを追加することができます、<xref:System.Windows.Forms.IDataObject>を複数の一度に書式を提供します。 COM を実装するデータ オブジェクトを追加する COM プログラミングに慣れている場合もできる`IDataObject`インターフェイスです。 詳細については、次を参照してください。 `IDataObject` MSDN ライブラリでhttp://msdn.microsoft.com/libraryです。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Windows.Forms.DataObject>文字列を格納しています。 そのデータ形式を使用してデータを取得します。 結果は、テキスト ボックスに表示されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定したデータの形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <param name="data">格納するデータ。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataObject" /> クラスの新しいインスタンスを初期化し、指定したオブジェクトを指定した形式で追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成、<xref:System.Windows.Forms.DataObject>クラスは、文字列型として指定する文字列を使用します。 データを取得、<xref:System.Windows.Forms.DataObject>をテキストとしての形式を指定します。 結果は、テキスト ボックスに表示されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式のデータが含まれているかどうかを示します。</summary>
        <returns>
          データ オブジェクトにオーディオ データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトを取得する前にオーディオ データを格納しているかどうかを判断するには、このメソッドを使用して、<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式のデータか、その形式に変換できるデータが含まれているかどうかを示します。</summary>
        <returns>
          データ オブジェクトにファイル ドロップ リストが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルのドロップダウン リストは、ファイルのパス情報を格納する文字列のコレクションです。  
  
 データ オブジェクトが使用して取得する前にファイルのドロップダウン リストを含むかどうかを判断するには、このメソッドを使用して、<xref:System.Windows.Forms.DataObject.GetFileDropList%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 形式のデータか、その形式に変換できるデータが含まれているかどうかを示します。</summary>
        <returns>
          データ オブジェクトにイメージ データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトを取得する前にイメージ データを格納しているかどうかを判断するには、このメソッドを使用して、<xref:System.Windows.Forms.DataObject.GetImage%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ オブジェクトにテキスト データが含まれているかどうかを示します。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式のデータが含まれているかどうかを示します。</summary>
        <returns>
          データ オブジェクトにテキスト データが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトを取得する前にテキスト データを格納しているかどうかを判断するには、このメソッドを使用して、<xref:System.Windows.Forms.DataObject.GetText%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</param>
        <summary>指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式のテキスト データが、データ オブジェクトに含まれているかどうかを示します。</summary>
        <returns>
          指定した形式のテキスト データがデータ オブジェクトに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトを取得する前にテキスト データを格納しているかどうかを判断するには、このメソッドを使用して、<xref:System.Windows.Forms.DataObject.GetText%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトからオーディオ ストリームを取得します。</summary>
        <returns>オーディオ データを含んだ <see cref="T:System.IO.Stream" />。<see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式のデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>データ オブジェクトに、このメソッドを使用して取得する前にオーディオ データが含まれるかどうかを調べます。  
  
 使用して、<xref:System.Windows.Forms.DataObject.SetAudio%2A>オーディオ データをデータ オブジェクトに追加するメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したデータ形式に関連付けられたデータを返します。</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">取得するデータの形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <summary>指定したデータ形式に関連付けられたデータを返します。</summary>
        <returns>指定した形式に関連付けられているデータ、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定された形式でデータを見つけることはできません、データ形式に変換しようとします。 自動変換に設定とデータが格納されている場合、データは、指定された形式に変換できない場合または`false`、このメソッドが戻る`null`です。  
  
 データが関連付けられてまたは形式に変換できるかどうかを判断するのには、呼び出す<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>これに格納されたデータの有効な形式の一覧については<xref:System.Windows.Forms.DataObject>します。  
  
> [!NOTE]
>  データは、格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
>   
>  ときに`format`は<xref:System.Windows.Forms.DataFormats.Html>ANSI でエンコードされたアプリケーションで文字列を対象とする .NET 4.0 またはそれ以前、このメソッドは .NET 4.5 以上を対象とするアプリケーションで utf-8 でエンコードされた文字列を返します。  
  
   
  
## Examples  
 次のコード例に格納されたデータの取得、<xref:System.Windows.Forms.DataObject>です。 最初に、新しい<xref:System.Windows.Forms.DataObject>テキスト データで作成されます。 次に、データが取得されると、文字列としての形式を指定して、テキスト ボックスに表示されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">取得するデータの形式を表す <see cref="T:System.Type" />。</param>
        <summary>指定したクラス型形式に関連付けられたデータを返します。</summary>
        <returns>指定した形式に関連付けられているデータ、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定された形式でデータを見つけることはできません、データ形式に変換しようとします。 自動変換に設定とデータが格納されている場合、データは、指定された形式に変換できない場合または`false`、このメソッドが戻る`null`です。  
  
 データが関連付けられてまたは形式に変換できるかどうかを判断するのには、呼び出す<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>これに格納されたデータの有効な形式の一覧については<xref:System.Windows.Forms.DataObject>します。  
  
> [!NOTE]
>  データは、格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
   
  
## Examples  
 次のコード例に格納されたデータの取得、<xref:System.Windows.Forms.DataObject>です。 最初に、新しい<xref:System.Windows.Forms.DataObject>コンポーネントを使用して作成します。 次に、その型を指定する、データを取得します。 取得したデータの種類は、テキスト ボックスに表示されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">取得するデータの形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <param name="autoConvert">
          データを指定した形式に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データを指定形式に変換するかどうかを判断するための自動変換パラメーターを使用して、指定したデータ形式に関連付けられているデータを返します。</summary>
        <returns>指定した形式に関連付けられているデータ、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`autoConvert`パラメーターは`true`形式にデータを変換しようと、このメソッドは、指定された形式でデータを見つけることができません。 データは、指定された形式に変換できない場合、またはに設定の自動変換でデータが格納されている場合`false`、このメソッドが戻る`null`です。  
  
 場合、`autoConvert`パラメーターは`false`、このメソッドは、指定された形式でデータを返しますまたは`null`形式でデータが見つからない場合。  
  
 データが関連付けられてまたは形式に変換できるかどうかを判断するのには、呼び出す<xref:System.Windows.Forms.DataObject.GetDataPresent%2A>呼び出す前に<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>これに格納されたデータの有効な形式の一覧については<xref:System.Windows.Forms.DataObject>します。  
  
> [!NOTE]
>  データは、格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
>   
>  ときに`format`は<xref:System.Windows.Forms.DataFormats.Html>ANSI でエンコードされたアプリケーションで文字列を対象とする .NET 4.0 またはそれ以前、このメソッドは .NET 4.5 以上を対象とするアプリケーションで utf-8 でエンコードされた文字列を返します。  
  
   
  
## Examples  
 次のコード例に格納されたデータの取得、<xref:System.Windows.Forms.DataObject>を使用して、`autoConvert`パラメーターをデータ形式に変換するかどうかを指定します。  
  
 最初に、新しい<xref:System.Windows.Forms.DataObject>テキスト データで作成されます。 例でという文字列とない形式の変換は、その形式を指定する、データの取得を試みます、`autoConvert`パラメーターは`false`します。 この操作は失敗に文字列データがないため、<xref:System.Windows.Forms.DataObject>です。  
  
 例が、データを再度取得しようとした次に、使用、`autoConvert`パラメーターに設定`true`です。 この操作が成功して、結果に表示されます、<xref:System.Windows.Forms.MessageBox>です。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式に関連付けられているかどうかを確認します。</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">チェック対象となる形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <summary>この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</summary>
        <returns>
          この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に、形式が存在するかどうかを調べるには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>で使用可能な形式の<xref:System.Windows.Forms.DataObject>します。  
  
> [!NOTE]
>  データは、格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
> [!NOTE]
>  データを取得できる場合は、例外はスローされません。 代わりに、`false`が返されます。  
  
   
  
## Examples  
 次のコード例では、これにデータが格納されているかどうかを判断<xref:System.Windows.Forms.DataObject>には、関連付けられているか、指定した形式に変換することができます。 新しい<xref:System.Windows.Forms.DataObject>文字列とテキストとして指定されている、関連付けられている形式で初期化します。  
  
 例では、テキスト データ内に存在するかどうかを出力し、<xref:System.Windows.Forms.DataObject>です。 このコードでは、する必要があります`textBox1`が作成されました。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">チェック対象となる形式を表す <see cref="T:System.Type" />。</param>
        <summary>この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定した形式と関連付けられているかどうかや、その形式に変換できるかどうかを確認します。</summary>
        <returns>
          この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータが、指定されている形式に関連付けられている場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に、形式が存在するかどうかを調べるには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>で使用可能な形式の<xref:System.Windows.Forms.DataObject>します。  
  
> [!NOTE]
>  データは、格納されている変換が許可されている場合、要求の形式が格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
> [!NOTE]
>  データを取得できる場合は、例外はスローされません。 代わりに、`false`が返されます。  
  
   
  
## Examples  
 次のコード例では、指定した型のデータが内に存在するかどうかを決定する<xref:System.Windows.Forms.DataObject>、または指定された型にデータを変換できるかどうか。 結果は、テキスト ボックスに表示されます。 コードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">チェック対象となる形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <param name="autoConvert">
          この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータを指定した形式に変換できるかどうかを確認する場合は <see langword="true" />。データが指定した形式かどうかを確認する場合は <see langword="false" />。</param>
        <summary>指定した形式のデータがこの <see cref="T:System.Windows.Forms.DataObject" /> に含まれているかどうかを確認し、オプションで、指定した形式に変換できるデータが含まれているかどうかも確認します。</summary>
        <returns>
          データが指定した形式である場合や、その形式に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に、形式が存在するかどうかを調べるには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>です。 呼び出す<xref:System.Windows.Forms.DataObject.GetFormats%2A>で使用可能な形式の<xref:System.Windows.Forms.DataObject>します。  
  
 このメソッドが戻る`true`とき。  
  
-   `autoConvert`パラメーターは`true`データが適切な形式に変換できる形式とします。  
  
-   `autoConvert`パラメーターは`false`データが適切な形式です。  
  
 このメソッドが戻る`false`とき。  
  
-   `autoConvert`パラメーターは`true`とは、このメソッドは、指定された形式でデータを見つけることができませんまたはと指定された形式に変換できないデータに自動変換設定、データを格納した`false`です。  
  
-   `autoConvert`パラメーターは`false`これにデータがないと<xref:System.Windows.Forms.DataObject>指定された形式でします。  
  
> [!NOTE]
>  データは、変換が許可されているストアドを指定すると、要求された形式に格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
> [!NOTE]
>  データを取得できる場合は、例外はスローされません。 代わりに、`false`が返されます。  
  
   
  
## Examples  
 次のコード例にデータが格納されているかどうかを判断、<xref:System.Windows.Forms.DataObject>指定した書式と関連付けられています。 最初に、新しい<xref:System.Windows.Forms.DataObject>はテキストとしての形式を指定する、文字列で初期化します。  
  
 続いて、<xref:System.Windows.Forms.DataObject>テキスト形式に関連付けられているデータのクエリが実行を指定する、`autoConvert`パラメーターとして`false`です。 このクエリの結果は、テキスト ボックスで印刷されます。  
  
 続いて、<xref:System.Windows.Forms.DataObject>文字列形式に関連付けられたデータのクエリが実行を指定する、`autoConvert`パラメーターとして`true`です。 結果は、テキスト ボックスで印刷されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ファイル名のコレクションをデータ オブジェクトから取得します。</summary>
        <returns>ファイル名を含んだ <see cref="T:System.Collections.Specialized.StringCollection" />。<see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式のデータ、またはその形式に変換できるデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルのドロップダウン リストは、ファイルのパス情報を格納する文字列のコレクションです。  
  
 ファイルのドロップダウン リストとしてデータ オブジェクトに格納されている、<xref:System.String>配列。 このメソッドは変換するには、この配列は<xref:System.Collections.Specialized.StringCollection>し、コレクションを返します。  
  
 使用して、<xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>データ オブジェクトに、このメソッドを使用して取得する前にファイルのドロップダウン リストが含まれるかどうかを調べます。  
  
 使用して、<xref:System.Windows.Forms.DataObject.SetFileDropList%2A>ファイル ドロップ リストをデータ オブジェクトに追加するメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータに関連付けられているすべての形式、または変換できるすべての形式のリストを返します。</summary>
        <returns>
          <see cref="T:System.String" /> 型の配列。このオブジェクトに格納されているデータがサポートするすべての形式のリストが含まれます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す前に、サポートされているデータ形式を取得するには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>です。 参照してください<xref:System.Windows.Forms.DataFormats>定義済みの形式です。  
  
> [!NOTE]
>  データは、変換が許可されているストアドを指定すると、要求された形式に格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
   
  
## Examples  
 次のコード例のクエリ、 <xref:System.Windows.Forms.DataObject> 、そのデータに関連付けられている形式と形式のデータに変換できます。 結果のリストは、テキスト ボックスに表示されます。 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          この <see cref="T:System.Windows.Forms.DataObject" /> に格納されたデータが関連付けられている形式、またはそのデータを変換できる形式をすべて取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>自動変換パラメーターを使用して、ネイティブのデータ形式だけを取得するのか、またはデータを変換することができるすべての形式を取得するのかを決定し、この <see cref="T:System.Windows.Forms.DataObject" /> に格納されているデータに関連付けられている形式、あるいは変換できるすべての形式のリストを返します。</summary>
        <returns>
          <see cref="T:System.String" /> 型の配列。このオブジェクトに格納されているデータがサポートするすべての形式のリストが含まれます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す前に、サポートされているデータ形式を取得するには、このメソッドを呼び出す<xref:System.Windows.Forms.DataObject.GetData%2A>です。 参照してください<xref:System.Windows.Forms.DataFormats>定義済みの形式です。  
  
> [!NOTE]
>  データは、変換が許可されているストアドを指定すると、要求された形式に格納されている形式に互換性がある場合、別の形式に変換できます。 テキストに変換できる Unicode として格納されているデータなどです。  
  
   
  
## Examples  
 次のコード例のクエリ、<xref:System.Windows.Forms.DataObject>形式のデータに関連付けられています。 最初のクエリを指定します、`autoConvert`パラメーターとして`false`、のみ、データのネイティブ形式が返されます。 2 番目のクエリを指定します、`autoConvert`パラメーターとして`true`のため、形式の一覧には、形式に変換できるデータが含まれています。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトからイメージを取得します。</summary>
        <returns>データ オブジェクト内のイメージ データを表す <see cref="T:System.Drawing.Image" />。<see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 形式のデータ、またはその形式に変換できるデータがデータ オブジェクトに含まれていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataObject.ContainsImage%2A>データ オブジェクトに、このメソッドを使用して取得する前にイメージ データが含まれるかどうかを調べます。  
  
 使用して、<xref:System.Windows.Forms.DataObject.SetImage%2A>イメージ データをデータ オブジェクトに追加するメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ オブジェクトからテキスト データを取得します。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ オブジェクトから <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式でテキスト データを取得します。</summary>
        <returns>データ オブジェクト内のテキスト データ。データ オブジェクトに <see cref="F:System.String.Empty" /> 形式のデータが含まれていない場合は <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataObject.ContainsText%2A>データ オブジェクトに、このメソッドを使用して取得する前にテキスト データが含まれるかどうかを調べます。  
  
 使用して、<xref:System.Windows.Forms.DataObject.SetText%2A>データ オブジェクトにテキスト データを追加します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</param>
        <summary>データ オブジェクトから、指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式でテキスト データを取得します。</summary>
        <returns>データ オブジェクト内のテキスト データ。指定した形式のデータがデータ オブジェクトに含まれていない場合は <see cref="F:System.String.Empty" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataObject.ContainsText%2A>データ オブジェクトに、このメソッドを使用して取得する前にテキスト データが含まれるかどうかを調べます。  
  
 使用して、<xref:System.Windows.Forms.DataObject.SetText%2A>データ オブジェクトにテキスト データを追加します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> 形式でデータを追加します。</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">オーディオ データを含んだ <see cref="T:System.Byte" /> 配列。</param>
        <summary>
          <see cref="T:System.Byte" /> 配列を <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> に変換してから、<see cref="T:System.IO.Stream" /> 形式でデータ オブジェクトに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトからオーディオ データを取得する、<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>データ オブジェクトを取得する前にオーディオ データを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> は <see langword="null" />です。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">オーディオ データを含んだ <see cref="T:System.IO.Stream" />。</param>
        <summary>データ オブジェクトに <see cref="T:System.IO.Stream" /> 形式で <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトからオーディオ データを取得する、<xref:System.Windows.Forms.DataObject.ContainsAudio%2A>データ オブジェクトを取得する前にオーディオ データを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetAudioStream%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> は <see langword="null" />です。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">格納するデータ。</param>
        <summary>オブジェクト型をデータ形式として使用して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。 このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。  
  
 <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29>ストアをオーバー ロード、`data`値を呼び出すことによってこれを決定する形式で、<xref:System.Object.GetType%2A?displayProperty=nameWithType>メソッドです。 場合`data`を実装する、<xref:System.Runtime.Serialization.ISerializable>インターフェイスでは、このオーバー ロードも値を格納で、<xref:System.Windows.DataFormats.Serializable>形式です。  
  
   
  
## Examples  
 次のコード例にデータを保存、<xref:System.Windows.Forms.DataObject>です。 最初に、新しい<xref:System.Windows.Forms.DataObject>が作成されるコンポーネントがこれに格納されているとします。 次に、クラスを指定してデータを取得します。 結果は、テキスト ボックスに表示されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">データに関連付けられている形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <param name="data">格納するデータ。</param>
        <summary>形式を指定して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。  
  
 このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。  
  
   
  
## Examples  
 次のコード例にデータを保存、 <xref:System.Windows.Forms.DataObject>、Unicode としての形式を指定します。  
  
 データは、既定値は、最終的な形式は、互換性のあるときにデータを変換するために、テキスト形式を指定することによって取得されます。 結果は、テキスト ボックスに表示されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">データに関連付けられている形式を表す <see cref="T:System.Type" />。</param>
        <param name="data">格納するデータ。</param>
        <summary>指定した型を形式として使用して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。  
  
 このメソッドを使用して格納されているデータは、取得されるときに、互換性のある形式に変換できます。  
  
   
  
## Examples  
 次のコード例にデータを保存、<xref:System.Windows.Forms.DataObject>を使用して、<xref:System.Type>データ形式として。 呼び出してデータを取得し、<xref:System.Windows.Forms.DataObject.GetData%2A>を使用して、<xref:System.Type>データ形式を指定します。 結果は、テキスト ボックスに表示されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">データに関連付けられている形式。 定義済みの形式については、<see cref="T:System.Windows.Forms.DataFormats" /> のトピックを参照してください。</param>
        <param name="autoConvert">
          データを別の形式に変換できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="data">格納するデータ。</param>
        <summary>形式を指定し、データを別形式に変換できるかどうかを指定して、指定したオブジェクトを <see cref="T:System.Windows.Forms.DataObject" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ターゲット アプリケーションの形式がわからない場合は、このメソッドを使用して複数の形式でデータを格納できます。  
  
   
  
## Examples  
 次のコード例にデータを保存、<xref:System.Windows.Forms.DataObject>し、データがネイティブ形式で取得することができますのみを指定します。  
  
 最初に、新しい<xref:System.Windows.Forms.DataObject>を作成します。 Unicode 形式でデータが格納されている、<xref:System.Windows.Forms.DataObject>で`autoConvert`'éý'`false`です。  
  
 次に、<xref:System.Windows.Forms.DataObject>が利用可能なデータ形式の一覧を照会します。 Unicode データは、テキストおよびその他の形式に変換できますが、Unicode 形式のみが返されます。  
  
 このコードでは、する必要があります`textBox1`が作成されました。  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">ファイル名を含んだ <see cref="T:System.Collections.Specialized.StringCollection" />。</param>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 形式でファイル名のコレクションを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルのドロップダウン リストは、ファイルのパス情報を格納する文字列のコレクションです。  
  
 ファイルのドロップダウン リストとしてデータ オブジェクトに格納されている、<xref:System.String>配列。 このメソッドは変換`filePaths`を<xref:System.String>配列のデータ オブジェクトを追加する前にします。  
  
 データ オブジェクトからファイルのドロップダウン リストを取得する、<xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>データ オブジェクトで取得する前にその形式でデータを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetFileDropList%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> は <see langword="null" />です。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">データ オブジェクトに追加する <see cref="T:System.Drawing.Image" />。</param>
        <summary>データ オブジェクトに <see cref="T:System.Drawing.Image" /> 形式で <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトから画像データを取得する、<xref:System.Windows.Forms.DataObject.ContainsImage%2A>データ オブジェクトを取得する前にイメージ データを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetImage%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> は <see langword="null" />です。</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ オブジェクトにテキスト データを追加します。</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">データ オブジェクトに追加するテキスト。</param>
        <summary>データ オブジェクトに <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 形式でテキスト データを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトからテキスト データを取得する、<xref:System.Windows.Forms.DataObject.ContainsText%2A>データ オブジェクトを取得する前にイメージ データを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetText%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">データ オブジェクトに追加するテキスト。</param>
        <param name="format">
          <see cref="T:System.Windows.Forms.TextDataFormat" /> 値のいずれか 1 つ。</param>
        <summary>データ オブジェクトに、指定した <see cref="T:System.Windows.Forms.TextDataFormat" /> 値で示される形式でテキスト データを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ オブジェクトからテキスト データを取得する、<xref:System.Windows.Forms.DataObject.ContainsText%2A>データ オブジェクトを取得する前にイメージ データを格納しているかどうかを決定するメソッド、<xref:System.Windows.Forms.DataObject.GetText%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> は <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> は有効な <see cref="T:System.Windows.Forms.TextDataFormat" /> 値ではありません。</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">今後の通知のために使用される形式、対象デバイス、特性、およびメディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体 (参照渡し)。</param>
        <param name="advf">アドバイザリ コネクションの制御用フラグのグループを指定する <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> 値の 1 つ。</param>
        <param name="pAdvSink">変更通知を受信するアドバイズ シンク上の <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> インターフェイスへのポインター。</param>
        <param name="pdwConnection">このメソッドから制御が戻るときに、この接続を識別する DWORD トークンへのポインターを格納します。 このトークンを後で <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" /> に渡して、アドバイザリ コネクションを削除できます。 この値が 0 の場合、接続は確立されていません。 このパラメーターは初期化せずに渡されます。</param>
        <summary>データ オブジェクトとアドバイズ シンク間の接続を作成します。 このメソッドは、アドバイズ シンクをサポートするオブジェクトによって呼び出され、オブジェクトのデータの変更をアドバイズ シンクに通知できるようにします。</summary>
        <returns>このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table"><listheader><term> 値  
  
 </term><description>説明  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> アドバイザリ コネクションが作成されました。  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description> このメソッドは、データ オブジェクトには実装されていません。  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> に無効な値があります。現在は -1 だけがサポートされています。  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description><paramref name="pFormatetc" /> パラメーターに無効な値があります。  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> データ オブジェクトは、変更通知をサポートしていません。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">削除する接続を指定する DWORD トークン。 接続が最初に確立されたときに、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> から返された値を使用します。</param>
        <summary>以前に確立されていた通知の接続を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">このメソッドから制御が戻るときに、新しい列挙子オブジェクトへのインターフェイス ポインターを受け取る <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> を格納します。 実装によって <c>enumAdvise</c> が <see langword="null" /> に設定される場合、現時点ではアドバイズ シンクへの接続はありません。 このパラメーターは初期化せずに渡されます。</param>
        <summary>現在のアドバイザリ コネクションを列挙するために使用できるオブジェクトを作成します。</summary>
        <returns>このメソッドは、標準の戻り値である E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table"><listheader><term> 値  
  
 </term><description>説明  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 列挙子オブジェクトが正常にインスタンス化されたか、接続がありません。  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> このオブジェクトは、アドバイザリの通知をサポートしていません。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">データの方向を指定する <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> 値の 1 つ。</param>
        <summary>データ オブジェクトの <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体を列挙するためのオブジェクトを作成します。 これらの構造体は、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> または <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> の呼び出しで使用されます。</summary>
        <returns>このメソッドは、標準の戻り値である E_INVALIDARG および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table"><listheader><term> 値  
  
 </term><description>説明  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 列挙子オブジェクトが正常に作成されました。  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description><paramref name="direction" /> パラメーターで指定された方向はサポートされていません。  
  
 </description></item><item><term> OLE_S_USEREG  
  
 </term><description> OLE がレジストリから形式を列挙するように要求します。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">
          <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> などの後続の呼び出しで、呼び出し元がデータを取得するために使用する必要がある、形式、メディア、および対象デバイスを定義する <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 構造体へのポインター (参照渡し)。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、この場合には重要ではないため、無視する必要があります。</param>
        <param name="pformatetcOut">このメソッドから制御が戻るときに、特定の表示で最も一般的な情報を格納している <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインターを格納し、<c>formatetIn</c> と規準的等価にします。 呼び出し元でこの構造体を割り当て、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> メソッドでデータを格納する必要があります。 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> などの後続の呼び出しでデータを取得するには、指定された値が <see langword="null" /> の場合を除き、呼び出し元は <c>formatOut</c> に指定された値を使用します。 このメソッドが <see langword="null" /> を返す場合、この値は <see langword="DATA_S_SAMEFORMATETC" /> です。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> メンバーは、この場合には重要ではないため、無視する必要があります。 このパラメーターは初期化せずに渡されます。</param>
        <summary>より複雑な構造体と論理的に等価な、標準の <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体を提供します。 このメソッドを使用して、2 つの異なる <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体が同一のデータを返すかどうかを確認し、表示を二重化する必要をなくします。</summary>
        <returns>このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table"><listheader><term> 値  
  
 </term><description>説明  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 返される <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体は、渡された構造体とは異なります。  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC  
  
 </term><description> 複数の <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体が同一で、<see langword="null" /> パラメーターに <paramref name="formatOut" /> が返されます。  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> に無効な値があります。現在は -1 だけがサポートされています。  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description><paramref name="pFormatetc" /> パラメーターに無効な値があります。  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> アプリケーションが実行されていません。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">データを渡すときに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。 ブール型の OR 演算子を使用して複数のメディアを指定し、メソッドがそれらの指定の中から最良のメディアを選択できるようにします。</param>
        <param name="medium">このメソッドから制御が戻るときに、<see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> メンバーを通じて返されたデータを格納しているストレージ メディアと、その <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> メンバーの値を通じてメディアを解放する必要性を示す <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 構造体へのポインターを格納します。 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> が <see langword="null" /> の場合は、メディアを受け取ったら、そのメディアを解放する必要があります。それ以外の場合は、<see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> が適切なオブジェクトの <see langword="IUnknown" /> インターフェイスを指すため、その <see langword="Release" /> メソッドを呼び出すことができます。 メディアは、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> で割り当て、情報を格納する必要があります。 このパラメーターは初期化せずに渡されます。</param>
        <summary>ソース データ オブジェクトからデータを取得します。 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> メソッドは、データ コンシューマーによって呼び出され、指定された <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体に記述されているデータを表示し、指定された <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体を使用してそのデータを転送します。 呼び出し元は、その後で <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体を解放する必要があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">メモリが不足しているため、この操作を実行できません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">データを渡すときに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> に指定できるのは 1 つのメディアだけです。また、有効な <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 値は、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />、または <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" /> だけです。</param>
        <param name="medium">転送されるデータを格納しているストレージ メディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> (参照渡し)。 メディアは、呼び出し元で割り当て、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> で情報を格納する必要があります。 呼び出し元は、メディアを解放する必要もあります。 このメソッドの実装では、常に、このパラメーターが指している <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 構造体の<see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> メンバーに <see langword="null" /> 値を与える必要があります。</param>
        <summary>ソース データ オブジェクトからデータを取得します。 このメソッドはデータ コンシューマーによって呼び出され、呼び出し元が、指定したストレージ メディアを割り当て、解放する必要があるという点で <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> メソッドとは異なります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">問い合わせに使用する形式、メディア、および対象デバイスを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体へのポインター (参照渡し)。</param>
        <summary>データ オブジェクトが、<see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体で記述されているデータを表示できるかどうかを確認します。 貼り付け操作またはドロップ操作をしようとしているオブジェクトは、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> を呼び出す前にこのメソッドを呼び出して、操作が正常に実行できるかどうかを示す値を取得できます。</summary>
        <returns>このメソッドは、標準の戻り値である E_INVALIDARG、E_UNEXPECTED、および E_OUTOFMEMORY をサポートすると同時に、次の値もサポートしています。  
  
 <list type="table"><listheader><term> 値  
  
 </term><description>説明  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 後続の <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> の呼び出しは、正常に実行されないこともあります。  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> の無効な値。現在は -1 だけがサポートされています。  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description><paramref name="pFormatetc" /> パラメーターの無効な値。  
  
 </description></item><item><term> DV_E_TYMED  
  
 </term><description> 無効な <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> 値。  
  
 </description></item><item><term> DV_E_DVASPECT  
  
 </term><description> 無効な <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> 値。  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> アプリケーションが実行されていません。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">ストレージ メディアに格納されているデータを解釈するときに、データ オブジェクトによって使用される形式を定義する <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 構造体 (参照渡し)。</param>
        <param name="pmedium">データが渡されるストレージ メディアを定義する <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 構造体 (参照渡し)。</param>
        <param name="fRelease">
          <see langword="true" /> を指定すると、呼び出しから制御が戻った後、<see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> を実装する呼び出されるデータ オブジェクトがストレージ メディアを所有します。 つまり、データ オブジェクトは、<see langword="ReleaseStgMedium" /> 関数の呼び出しによって使用された後に、メディアを解放する必要があります。 <see langword="false" /> を指定すると、呼び出し元がストレージ メディアの所有権を保持し、呼び出されるデータ オブジェクトは呼び出しの期間だけストレージ メディアを使用します。</param>
        <summary>このメソッドを実装するオブジェクトにデータを転送します。 このメソッドは、データ ソースを格納しているオブジェクトから呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 <xref:System.Windows.Forms.DataObject> が <xref:System.Runtime.InteropServices.ComTypes.IDataObject> インターフェイスにキャストされた場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">このメソッドは、基になるデータ オブジェクトの型をサポートしていません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードを呼び出す。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>