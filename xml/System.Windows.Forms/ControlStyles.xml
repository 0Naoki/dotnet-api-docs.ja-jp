<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc33f394b9675cc633b116b6039a1f3d0d639c2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールのスタイルと動作を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールは、機能を指定するのにさまざまなプロパティおよびメソッドでこの列挙体を使用します。 コントロールは、呼び出すことにより、スタイルを有効にできます、<xref:System.Windows.Forms.Control.SetStyle%2A>メソッドを適切な渡して<xref:System.Windows.Forms.ControlStyles>ビット (またはビット) とをビットを設定するブール値。 たとえば、Visual Basic コードの次の行では、二重のバッファリングが有効にします。  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 AllPaintingInWmPaint ビットが設定されている場合`true`、WM_ERASEBKGND を無視すると、ウィンドウ メッセージおよび<xref:System.Windows.Forms.Control.OnPaintBackground%2A>と<xref:System.Windows.Forms.Control.OnPaint%2A>メソッドは、ウィンドウ メッセージ WM_PAINT から直接呼び出されます。 その他のコントロールがコントロールに WM_ERASEBKGND ウィンドウ メッセージを送信しない限り、ちらつき一般に短縮できます。 SupportsTransparentBackColor; のような擬似透過的な効果を実現するウィンドウ メッセージ WM_ERASEBKGRND を送信する可能性があります。たとえば、<xref:System.Windows.Forms.ToolBar>はフラットな外観にします。  
  
 ダブル バッファリングを完全に有効に OptimizedDoubleBuffer と AllPaintingInWmPaint のビットを設定できます`true`です。 ただし、ダブル バッファリングを有効にするため、同じ結果を生成するには、これはお勧めを設定する、<xref:System.Windows.Forms.Control.DoubleBuffered%2A>するコントロールのプロパティ`true`です。  
  
 SupportsTransparentBackColor ビットが設定されている場合`true`、および<xref:System.Windows.Forms.Control.BackColor%2A>のアルファ コンポーネントは、255 より小さい色に設定されている<xref:System.Windows.Forms.Control.OnPaintBackground%2A>背景を描画するには、その親コントロールを確認して、透過性をシミュレートします。 これは真の透過性ではありません。  
  
> [!NOTE]
>  コントロールとその親の間で別のコントロールがある場合、現在のコントロールは中央にコントロールを表示しません。  
  
 UserMouse ビットを設定すると`true`、次のメソッドが呼び出されるまだ: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>、 <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>、および<xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>です。  
  
 コントロールがクリックされたときにさせるビットが設定されている場合`true`、<xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType>メソッドが呼び出され、発生、<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType>イベント。 コントロールがダブルクリックされたときとさせると StandardDoubleClick の両方のビットに設定されます`true`に渡され、クリック、<xref:System.Windows.Forms.Control.DoubleClick>イベント。 続いて、<xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType>メソッドが呼び出され、発生、<xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType>イベント。 ただし、コントロールを呼び出すことができます<xref:System.Windows.Forms.Control.OnClick%2A>または<xref:System.Windows.Forms.Control.OnDoubleClick%2A>直接させると StandardDoubleClick に関係なくビット値。 コントロールの詳細については をクリックし、動作をダブルクリックして、参照してください、<xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType>と<xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType>トピックです。  
  
 UseTextForAccessibility ビットが設定されているし、コントロールの値がある`Text`プロパティ、そのコントロールの値`Text`プロパティ、コントロールの既定の Active Accessibility 名とショートカット キーを決定します。 それ以外の場合、上記のテキスト<xref:System.Windows.Forms.Label>コントロールが使用されます。 既定では、このスタイルを設定します。 などの特定の組み込みのコントロール型<xref:System.Windows.Forms.TextBox>と<xref:System.Windows.Forms.ComboBox>、このスタイルをリセットできるように、 `Text` Active Accessibility によってそれらのコントロールのプロパティは使用されません。  
  
   
  
## Examples  
 次の例での使用<xref:System.Windows.Forms.ControlStyles>で、<xref:System.Windows.Forms.Control.StyleChanged>イベント。  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>標準 Windows フォーム コントロールからの継承を変更すること、<see cref="F:System.Windows.Forms.ControlStyles.StandardClick" />または<see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />ビットの値を<see langword="true" />予期しない動作が発生することができます、または影響する可能性がないすべてのコントロールがサポートしていない場合、<see cref="E:System.Windows.Forms.Control.Click" />または<see cref="E:System.Windows.Forms.Control.DoubleClick" />イベント。</para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールはウィンドウ メッセージ WM_ERASEBKGND を無視することによって、ちらつきを抑えます。 このスタイルは、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> ビットが <see langword="true" /> に設定されている場合だけ適用されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールは、必要に応じて毎回 <see cref="P:System.Windows.Forms.Control.Handle" /> からテキストのコピーを取得するのではなく、テキストのコピーを保持します。 このスタイルは、既定では <see langword="false" /> に設定されます。 この動作によってパフォーマンスは向上しますが、テキストを同期させておくことが難しくなります。</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールはコンテナーのような機能を果たします。</summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、描画はバッファーで実行され、完了後に、結果が画面に出力されます。 ダブル バッファリングは、コントロールの描画によるちらつきを防ぎます。 <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> を <see langword="true" /> に設定した場合は、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> および <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> も <see langword="true" /> に設定する必要があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールの <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> に送信されたすべてのメッセージに対して <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> メソッドが呼び出されます。 このスタイルは、既定では <see langword="false" /> に設定されます。 部分信頼では、<see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> は正常に機能しません。</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、自動スケールされるときにコントロールの高さが固定されます。 たとえば、新しい <see cref="T:System.Drawing.Font" /> を挿入できるようにレイアウト操作でコントロールを再スケールしようとしても、コントロールの <see cref="P:System.Windows.Forms.Control.Height" /> は変更されません。</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、自動スケールされるときにコントロールの幅が固定されます。 たとえば、新しい <see cref="T:System.Drawing.Font" /> を挿入できるようにレイアウト操作でコントロールを再スケールしようとしても、コントロールの <see cref="P:System.Windows.Forms.Control.Width" /> は変更されません。</summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールは不透明に描画され、背景は描画されません。</summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールは、画面に直接ではなく、まずバッファーに描画されます。これにより、ちらつきを抑えることができます。 このプロパティを <see langword="true" /> に設定した場合は、<see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> も <see langword="true" /> に設定する必要があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールのサイズが変更されると、そのコントロールが再描画されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールはフォーカスを受け取ることができます。</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールは標準の <see cref="E:System.Windows.Forms.Control.Click" /> 動作を実装します。</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールは標準の <see cref="E:System.Windows.Forms.Control.DoubleClick" /> 動作を実装します。 <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> ビットが <see langword="true" /> に設定されていない場合、このスタイルは無視されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールはアルファ値が 255 未満の <see cref="P:System.Windows.Forms.Control.BackColor" /> を受け入れ、透明度をシミュレートします。 この透明度は、<see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> ビットが <see langword="true" /> に設定され、親コントロールが <see cref="T:System.Windows.Forms.Control" /> から派生している場合だけシミュレートされます。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合は、コントロールがマウスの操作を独自に処理し、オペレーティング システムではマウス イベントが処理されません。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see langword="true" /> の場合、コントロールはオペレーティング システムによってではなく、独自に描画されます。 <see langword="false" /> の場合、<see cref="E:System.Windows.Forms.Control.Paint" /> イベントは発生しません。 このスタイルは、<see cref="T:System.Windows.Forms.Control" /> から派生したクラスだけに適用されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>コントロールの <c>Text</c> プロパティの値を指定します。設定した場合、コントロールの既定の Active Accessibility 名とショートカット キーが決定されます。</summary>
      </Docs>
    </Member>
  </Members>
</Type>