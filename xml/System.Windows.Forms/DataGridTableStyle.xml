<Type Name="DataGridTableStyle" FullName="System.Windows.Forms.DataGridTableStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a147bad809c167afc3a9098bf28cf818a4b2a736" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48665048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridTableStyle : System.ComponentModel.Component, System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridTableStyle extends System.ComponentModel.Component implements class System.Windows.Forms.IDataGridEditingService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridTableStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridTableStyle&#xA;Inherits Component&#xA;Implements IDataGridEditingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridTableStyle : System::ComponentModel::Component, System::Windows::Forms::IDataGridEditingService" />
  <TypeSignature Language="F#" Value="type DataGridTableStyle = class&#xA;    inherit Component&#xA;    interface IDataGridEditingService" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridEditingService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.DataGrid" /> コントロールによって実行時に描画されるテーブルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールのグリッド形式でデータを表示します。 <xref:System.Windows.Forms.DataGridTableStyle>は描画されたグリッドのみを表すクラスです。 このグリッドする必要がありますと混同しないで、<xref:System.Data.DataTable>は考えられる原因、グリッドのデータのクラス。 代わりに、<xref:System.Windows.Forms.DataGridTableStyle>厳密にそれがコントロールに描画されるグリッドを表します。 そのため、使用、<xref:System.Windows.Forms.DataGridTableStyle>ごとに、グリッドの外観を制御する<xref:System.Data.DataTable>。 指定する<xref:System.Windows.Forms.DataGridTableStyle>特定からのデータを表示するときに使用されます<xref:System.Data.DataTable>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>を<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>します。  
  
 <xref:System.Windows.Forms.GridTableStylesCollection>を使用して取得、<xref:System.Windows.Forms.DataGrid.TableStyles%2A>プロパティがすべて含まれています、<xref:System.Windows.Forms.DataGridTableStyle>によって使用されるオブジェクトを<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。 コレクションに格納できる限り多く<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを必要なただし<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>のそれぞれは一意である必要があります。 実行時に、これを使用する別に置き換えてください<xref:System.Windows.Forms.DataGridTableStyle>ユーザーの設定に応じて、同じデータを使用します。 この操作を行うには、次の手順を実行します。  
  
1.  設定、<xref:System.Windows.Forms.GridTableStylesCollection>で<xref:System.Windows.Forms.DataGridTableStyle>オブジェクト。 場合、<xref:System.Windows.Forms.DataGridTableStyle>内に存在する、<xref:System.Windows.Forms.GridTableStylesCollection>が<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>プロパティの値と等しい、<xref:System.Data.DataTable>オブジェクトの<xref:System.Data.DataTable.TableName%2A>プロパティ、<xref:System.Data.DataTable>これが表示されます<xref:System.Windows.Forms.DataGridTableStyle>します。 ない場合は<xref:System.Windows.Forms.DataGridTableStyle>、対応する存在<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>、<xref:System.Data.DataTable>データ グリッド テーブルの既定のスタイルが表示されます。  
  
2.  別のグリッド スタイルが必要なときに使用、`Item`プロパティを適切な選択<xref:System.Windows.Forms.DataGridTableStyle>(渡す、<xref:System.Data.DataTable.TableName%2A>を<xref:System.Windows.Forms.GridTableStylesCollection.Item%2A>プロパティ) を設定し、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>を新しい値に返されたオブジェクトの。  
  
3.  使用して、<xref:System.Windows.Forms.GridTableStylesCollection.Item%2A>プロパティを選択します<xref:System.Windows.Forms.DataGridTableStyle>、設定とその<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>を<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>します。  
  
> [!CAUTION]
>  常に作成<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトに追加して、<xref:System.Windows.Forms.GridColumnStylesCollection>追加する前に<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Windows.Forms.GridTableStylesCollection>します。 空の追加と<xref:System.Windows.Forms.DataGridTableStyle>有効な<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>をコレクションに値<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが自動的に生成します。 新規追加しようとする場合に例外がスローされます、<xref:System.Windows.Forms.DataGridColumnStyle>重複オブジェクト<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>値を<xref:System.Windows.Forms.GridColumnStylesCollection>します。  
  
 判断するために<xref:System.Windows.Forms.DataGridTableStyle>が現在表示されているを使用して、<xref:System.Windows.Forms.DataGrid.DataSource%2A>と<xref:System.Windows.Forms.DataGrid.DataMember%2A>のプロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>を返す、 <xref:System.Windows.Forms.CurrencyManager>。 データ ソースの実装の場合、<xref:System.ComponentModel.ITypedList>インターフェイスを使用できます、<xref:System.ComponentModel.ITypedList.GetListName%2A>を返すメソッドを<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の現在のテーブル。 これは、次の c# コードに示されます。  
  
```  
private void PrintCurrentListName(DataGrid myDataGrid){  
 CurrencyManager myCM = (CurrencyManager)  
 BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];  
 IList myList = myCM.List;  
 ITypedList thisList = (ITypedList) myList;  
 Console.WriteLine(thisList.GetListName(null));  
}  
```  
  
 場合、<xref:System.Data.DataSet>が含まれています<xref:System.Data.DataTable>によってオブジェクトが関連付けられて<xref:System.Data.DataRelation>オブジェクト、および現在表示されている<xref:System.Data.DataTable>、子テーブルには、 <xref:System.Windows.Forms.DataGrid.DataMember%2A> (最も簡単な例) では TableName.RelationName の形式で文字列が返されます。 場合、<xref:System.Data.DataTable>をさらには、階層では、文字列では、親テーブルの名の後に、必要な<xref:System.Data.DataRelation.RelationName%2A>テーブルのレベルに到達するために必要な値。 たとえば、3 つ<xref:System.Data.DataTable>という名前の階層関係 (上下から) でオブジェクト`Regions`、 `Customers`、および`Orders`、2 つと<xref:System.Data.DataRelation>という名前のオブジェクト`RegionsToCustomers`と`CustomersToOrders`、 <xref:System.Windows.Forms.DataGrid.DataMember%2A>プロパティは"Regions.RegionsToCustomers.CustomersToOrders"を返します。 ただし、 <xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A> "Orders"になります。  
  
 コレクション<xref:System.Windows.Forms.DataGridTableStyle>によってオブジェクトが返される、<xref:System.Windows.Forms.DataGrid.TableStyles%2A>のプロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>します。  
  
 ときに、<xref:System.Windows.Forms.DataGridTableStyle>が表示されたらの設定、<xref:System.Windows.Forms.DataGridTableStyle>の設定を上書きする、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。 特定の値が設定されていない場合<xref:System.Windows.Forms.DataGridTableStyle>プロパティ、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールの値が代わりに使用されます。 次の一覧表示されます、<xref:System.Windows.Forms.DataGridColumnStyle>オーバーライドを設定できるプロパティ<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールのプロパティ。  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.GridLineStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.HeaderForeColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.LinkColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionBackColor%2A>  
  
-   <xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColor%2A>  
  
 バインドする、<xref:System.Windows.Forms.DataGrid>オブジェクトの厳密に型指定された配列には、オブジェクトの種類がパブリック プロパティを含める必要があります。 作成する、<xref:System.Windows.Forms.DataGridTableStyle>配列が表示されますが、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType>プロパティを`typename`場所`typename`オブジェクトの種類の名前は置き換えられます。 また、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>プロパティと小文字は区別; 型の名前を正確に一致させる必要があります。 参照してください、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>例については、プロパティ。  
  
 バインドすることも、<xref:System.Windows.Forms.DataGrid>を<xref:System.Collections.ArrayList>します。 機能、<xref:System.Collections.ArrayList>は、複数の種類のオブジェクトを含めることができますが、<xref:System.Windows.Forms.DataGrid>リスト内のすべての項目が最初の項目と同じ型の場合、このようなリストにのみバインドできます。 つまり、同じ型のすべてのオブジェクトであるか、または一覧の最初の項目と同じクラスから継承する必要があります。 たとえば、次の一覧の最初の項目は、 <xref:System.Windows.Forms.Control>、2 番目のアイテムになります、 <xref:System.Windows.Forms.TextBox> (から継承される<xref:System.Windows.Forms.Control>)。 その一方で、最初の項目を<xref:System.Windows.Forms.TextBox>、2 番目のオブジェクトにすることはできません、<xref:System.Windows.Forms.Control>します。 さらに、<xref:System.Collections.ArrayList>バインドと、オブジェクトがある場合にあるアイテム必要があります、<xref:System.Windows.Forms.DataGridTableStyle>パブリック プロパティを含める必要があります。 空<xref:System.Collections.ArrayList>空のグリッドになります。 バインドする場合、 <xref:System.Collections.ArrayList>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>"ArrayList"(型名) にします。  
  
   
  
## Examples  
 次のコード例では、2 つ作成されます<xref:System.Windows.Forms.DataGridTableStyle>をインスタンス化し、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>各オブジェクトの<xref:System.Data.DataTable.TableName%2A>の<xref:System.Data.DataTable>で、<xref:System.Data.DataSet>します。 例では、追加<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトを<xref:System.Windows.Forms.GridColumnStylesCollection>それぞれの<xref:System.Windows.Forms.DataGridTableStyle>します。 実行する例を参照してください、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>例。  
  
 [!code-cpp[Classic DataGridTableStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
    <altmember cref="T:System.Windows.Forms.GridColumnStylesCollection" />
    <altmember cref="T:System.Windows.Forms.GridTableStylesCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridTableStyle" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridTableStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridTableStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridTableStyle" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する新しい<xref:System.Windows.Forms.DataGridTableStyle>にそれを追加し、<xref:System.Windows.Forms.GridTableStylesCollection>します。  
  
 [!code-cpp[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridTableStyle (bool isDefaultTableStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isDefaultTableStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isDefaultTableStyle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridTableStyle(bool isDefaultTableStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridTableStyle : bool -&gt; System.Windows.Forms.DataGridTableStyle" Usage="new System.Windows.Forms.DataGridTableStyle isDefaultTableStyle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isDefaultTableStyle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isDefaultTableStyle">テーブルを既定として設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した値を使用して <see cref="T:System.Windows.Forms.DataGridTableStyle" /> クラスの新しいインスタンスを初期化し、そのグリッド テーブルを既定のスタイルにするかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する新しい<xref:System.Windows.Forms.DataGridTableStyle>にそれを追加し、<xref:System.Windows.Forms.GridTableStylesCollection>します。  
  
 [!code-cpp[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.DataGridTableStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridTableStyle (System.Windows.Forms.CurrencyManager listManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.CurrencyManager listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.#ctor(System.Windows.Forms.CurrencyManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listManager As CurrencyManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridTableStyle(System::Windows::Forms::CurrencyManager ^ listManager);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridTableStyle : System.Windows.Forms.CurrencyManager -&gt; System.Windows.Forms.DataGridTableStyle" Usage="new System.Windows.Forms.DataGridTableStyle listManager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listManager" Type="System.Windows.Forms.CurrencyManager" />
      </Parameters>
      <Docs>
        <param name="listManager">使用する <see cref="T:System.Windows.Forms.CurrencyManager" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridTableStyle" /> を指定して、<see cref="T:System.Windows.Forms.CurrencyManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を作成する新しい<xref:System.Windows.Forms.DataGridTableStyle>を使用して、<xref:System.Windows.Forms.CurrencyManager>の<xref:System.Data.DataTable>します。  
  
 [!code-cpp[Classic DataGridTableStyle.DataGridTableStyle2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.DataGridTableStyle2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.DataGridTableStyle2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGridTableStyle2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSorting : bool with get, set" Usage="System.Windows.Forms.DataGridTableStyle.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridTableStyle" /> を使用する場合に、グリッド テーブルで並べ替えを実行できるかどうかを示します。</summary>
        <value>並べ替えを実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataGridTableStyle.AllowSorting%2A>プロパティに設定されて`true`並べ替えの方向を示す各列ヘッダーの三角形が表示されます。 ユーザーは、その列でグリッドの並べ替えに任意の列ヘッダーをクリックできます。 並べ替えの方向を変更する、2 回目の列をクリックします。  
  
 このプロパティのオーバーライド、<xref:System.Windows.Forms.DataGrid.AllowSorting%2A?displayProperty=nameWithType>プロパティ。  
  
   
  
## Examples  
 並べ替えの可用性をオフにすることにより、次のコード例、<xref:System.Windows.Forms.DataGrid>現在の並べ替え状態のボタンをクリックして、ラベルに表示されます。 この例が必要です、<xref:System.Windows.Forms.DataGrid>で、<xref:System.Data.DataSet?displayProperty=nameWithType>一部のデータを格納している、<xref:System.Windows.Forms.Button>と<xref:System.Windows.Forms.Label>上、 <xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[DataGridTableStyle_Sample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample2/CPP/datagridtablestyle_sample2.cpp#1)]
 [!code-csharp[DataGridTableStyle_Sample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample2/CS/datagridtablestyle_sample2.cs#1)]
 [!code-vb[DataGridTableStyle_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample2/VB/datagridtablestyle_sample2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" />
        <altmember cref="P:System.Windows.Forms.DataGrid.AllowSorting" />
      </Docs>
    </Member>
    <Member MemberName="AllowSortingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowSortingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowSortingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowSortingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowSortingChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowSortingChanged : EventHandler " Usage="member this.AllowSortingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.AllowSorting" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 並べ替えの可用性をオフにすることにより、次のコード例、<xref:System.Windows.Forms.DataGrid>現在の並べ替え状態のボタンをクリックして、ラベルに表示されます。 この例が必要です、<xref:System.Windows.Forms.DataGrid>で、<xref:System.Data.DataSet?displayProperty=nameWithType>一部のデータを格納している、<xref:System.Windows.Forms.Button>と<xref:System.Windows.Forms.Label>上、 <xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[DataGridTableStyle_Sample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample2/CPP/datagridtablestyle_sample2.cpp#1)]
 [!code-csharp[DataGridTableStyle_Sample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample2/CS/datagridtablestyle_sample2.cs#1)]
 [!code-vb[DataGridTableStyle_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample2/VB/datagridtablestyle_sample2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color AlternatingBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color AlternatingBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color AlternatingBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの奇数行の背景色を取得または設定します。</summary>
        <value>奇数行の背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="P:System.Drawing.SystemBrushes.Window" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、のインスタンスを作成します。<xref:System.Windows.Forms.DataGridTableStyle>設定と、<xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A>と<xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>プロパティを新しい値にします。 例が必要です、<xref:System.Windows.Forms.DataGrid>で、<xref:System.Data.DataSet?displayProperty=nameWithType>一部のデータを格納していると<xref:System.Windows.Forms.Button>上、 <xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[DataGridTableStyle_sample5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CPP/datagridtablestyle_sample5.cpp#1)]
 [!code-csharp[DataGridTableStyle_sample5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CS/datagridtablestyle_sample5.cs#1)]
 [!code-vb[DataGridTableStyle_sample5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample5/VB/datagridtablestyle_sample5.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingBackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlternatingBackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlternatingBackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlternatingBackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlternatingBackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.AlternatingBackColorChanged : EventHandler " Usage="member this.AlternatingBackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridTableStyle>という`DataGridTableStyle1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#221](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#221)]
 [!code-vb[System.Windows.Forms.EventExamples#221](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#221)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッドの偶数行の背景色を取得または設定します。</summary>
        <value>奇数行の背景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>帳簿のような外観を作成するプロパティを設定することもできます。  
  
   
  
## Examples  
 次のコード例は、のインスタンスを作成します。<xref:System.Windows.Forms.DataGridTableStyle>設定と、<xref:System.Windows.Forms.DataGridTableStyle.BackColor%2A>と<xref:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor%2A>プロパティを新しい値にします。 例が必要です、<xref:System.Windows.Forms.DataGrid>で、<xref:System.Data.DataSet?displayProperty=nameWithType>一部のデータを格納していると<xref:System.Windows.Forms.Button>上、 <xref:System.Windows.Forms.Form>。  
  
 [!code-cpp[DataGridTableStyle_sample5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CPP/datagridtablestyle_sample5.cpp#1)]
 [!code-csharp[DataGridTableStyle_sample5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CS/datagridtablestyle_sample5.cs#1)]
 [!code-vb[DataGridTableStyle_sample5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample5/VB/datagridtablestyle_sample5.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridTableStyle>という`DataGridTableStyle1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridTableStyle.BackColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#222](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#222)]
 [!code-vb[System.Windows.Forms.EventExamples#222](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#222)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public bool BeginEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginEdit (gridColumn As DataGridColumnStyle, rowNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(System::Windows::Forms::DataGridColumnStyle ^ gridColumn, int rowNumber);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : System.Windows.Forms.DataGridColumnStyle * int -&gt; bool&#xA;override this.BeginEdit : System.Windows.Forms.DataGridColumnStyle * int -&gt; bool" Usage="dataGridTableStyle.BeginEdit (gridColumn, rowNumber)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridEditingService.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gridColumn">編集対象の <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNumber">編集された行の番号。</param>
        <summary>編集操作を要求します。</summary>
        <returns>正常に操作できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A>メソッドに通知するものでは、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>ユーザーが編集の操作を開始したときを制御します。 コントロールが編集モードと複数の編集ができる、制約が一時的に適用されます。  
  
 呼び出す、<xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A>メソッドを編集モードを終了します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A>現在メソッド<xref:System.Windows.Forms.DataGridTableStyle>で、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-cpp[Classic DataGridTableStyle.BeginEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGrid.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>列ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ヘッダーのキャプション テキストを設定するには、使用、<xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>のプロパティ、<xref:System.Windows.Forms.DataGridColumnStyle>クラス。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample3/CPP/datagridtablestyle_sample3.cpp#1)]
 [!code-csharp[DataGridTableStyle_Sample3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample3/CS/datagridtablestyle_sample3.cs#1)]
 [!code-vb[DataGridTableStyle_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample3/VB/datagridtablestyle_sample3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersVisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisibleChanged : EventHandler " Usage="member this.ColumnHeadersVisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グリッド内の各列のキャプション テキストを設定するには、設定、<xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>のプロパティ、<xref:System.Windows.Forms.DataGridColumnStyle>クラス。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample3#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample3/CPP/datagridtablestyle_sample3.cpp#2)]
 [!code-csharp[DataGridTableStyle_Sample3#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample3/CS/datagridtablestyle_sample3.cs#2)]
 [!code-vb[DataGridTableStyle_Sample3#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample3/VB/datagridtablestyle_sample3.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGridColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> を作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateGridColumn (prop As PropertyDescriptor) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Forms::DataGridColumnStyle ^ CreateGridColumn(System::ComponentModel::PropertyDescriptor ^ prop);" />
      <MemberSignature Language="F#" Value="abstract member CreateGridColumn : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Forms.DataGridColumnStyle&#xA;override this.CreateGridColumn : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Forms.DataGridColumnStyle" Usage="dataGridTableStyle.CreateGridColumn prop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">列スタイル オブジェクトを作成するために使用する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
        <summary>指定したプロパティ記述子を使用して、<see cref="T:System.Windows.Forms.DataGridColumnStyle" /> を作成します。</summary>
        <returns>新しく作成された <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGridColumn">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.DataGridColumnStyle CreateGridColumn (System.ComponentModel.PropertyDescriptor prop, bool isDefault);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Forms.DataGridColumnStyle CreateGridColumn(class System.ComponentModel.PropertyDescriptor prop, bool isDefault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.CreateGridColumn(System.ComponentModel.PropertyDescriptor,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateGridColumn (prop As PropertyDescriptor, isDefault As Boolean) As DataGridColumnStyle" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Forms::DataGridColumnStyle ^ CreateGridColumn(System::ComponentModel::PropertyDescriptor ^ prop, bool isDefault);" />
      <MemberSignature Language="F#" Value="abstract member CreateGridColumn : System.ComponentModel.PropertyDescriptor * bool -&gt; System.Windows.Forms.DataGridColumnStyle&#xA;override this.CreateGridColumn : System.ComponentModel.PropertyDescriptor * bool -&gt; System.Windows.Forms.DataGridColumnStyle" Usage="dataGridTableStyle.CreateGridColumn (prop, isDefault)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridColumnStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="isDefault" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="prop">列スタイル オブジェクトを作成するために使用する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
        <param name="isDefault">
          <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> が既定の列スタイルかどうかを指定します。 このパラメーターは読み取り専用です。</param>
        <summary>指定したプロパティ記述子を使用して、<see cref="T:System.Windows.Forms.DataGridColumnStyle" /> を作成します。 <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> が既定の列スタイルかどうかを指定します。</summary>
        <returns>新しく作成された <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataGrid">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGrid DataGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGrid DataGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.DataGrid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataGrid As DataGrid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGrid ^ DataGrid { System::Windows::Forms::DataGrid ^ get(); void set(System::Windows::Forms::DataGrid ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataGrid : System.Windows.Forms.DataGrid with get, set" Usage="System.Windows.Forms.DataGridTableStyle.DataGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描画されたテーブルの <see cref="T:System.Windows.Forms.DataGrid" /> コントロールを取得または設定します。</summary>
        <value>テーブルを表示する <see cref="T:System.Windows.Forms.DataGrid" /> コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールのグリッド形式でデータを表示します。 <xref:System.Windows.Forms.DataGridTableStyle>は描画されたグリッドを表すオブジェクトです。 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>プロパティは、グリッドが表示されているコントロールへの参照を返します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.DataGrid%2A>場合、プロパティが設定、<xref:System.Windows.Forms.DataGridTableStyle>に追加されます、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロールの<xref:System.Windows.Forms.GridTableStylesCollection>します。 オーバーライドされ、デザイナーが組み込まれているユーザー コントロールを作成しない限り、このプロパティを設定してください、<xref:System.Windows.Forms.DataGrid>コントロール。  
  
   
  
## Examples  
 次のコード例の印刷、<xref:System.Windows.Forms.DataGrid.CurrentCell%2A>の<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>を表示する、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 [!code-cpp[Classic DataGridTableStyle.DataGrid Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGrid Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.DataGrid Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGrid Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.DataGrid Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.DataGrid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Forms.DataGridTableStyle DefaultTableStyle;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Forms.DataGridTableStyle DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataGridTableStyle.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultTableStyle As DataGridTableStyle " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Forms::DataGridTableStyle ^ DefaultTableStyle;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultTableStyle : System.Windows.Forms.DataGridTableStyle" Usage="System.Windows.Forms.DataGridTableStyle.DefaultTableStyle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定のテーブル スタイルを取得します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataGridTableStyle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataGridTableStyle" /> で使用されていたリソース (メモリを除く) を解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドの呼び出し、<xref:System.Windows.Forms.DataGridTableStyle.Dispose%2A?displayProperty=nameWithType>各<xref:System.Windows.Forms.DataGridColumnStyle>呼び出す前にコレクションに含まれる<xref:System.Windows.Forms.DataGrid.Dispose%2A?displayProperty=nameWithType>グリッド自体にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridColumnStyle gridColumn, int rowNumber, bool shouldAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndEdit(class System.Windows.Forms.DataGridColumnStyle gridColumn, int32 rowNumber, bool shouldAbort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (gridColumn As DataGridColumnStyle, rowNumber As Integer, shouldAbort As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndEdit(System::Windows::Forms::DataGridColumnStyle ^ gridColumn, int rowNumber, bool shouldAbort);" />
      <MemberSignature Language="F#" Value="abstract member EndEdit : System.Windows.Forms.DataGridColumnStyle * int * bool -&gt; bool&#xA;override this.EndEdit : System.Windows.Forms.DataGridColumnStyle * int * bool -&gt; bool" Usage="dataGridTableStyle.EndEdit (gridColumn, rowNumber, shouldAbort)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridEditingService.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gridColumn" Type="System.Windows.Forms.DataGridColumnStyle" />
        <Parameter Name="rowNumber" Type="System.Int32" />
        <Parameter Name="shouldAbort" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="gridColumn">編集対象の <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</param>
        <param name="rowNumber">編集された行の番号。</param>
        <param name="shouldAbort">操作を停止するかどうかを示す値。停止する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>編集操作の終了を要求します。</summary>
        <returns>編集操作が正常に終了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ような<xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A>メソッド、<xref:System.Windows.Forms.DataGridTableStyle.EndEdit%2A>メソッドに通知するものでは、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>編集操作を終了する場合。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Windows.Forms.DataGridTableStyle.BeginEdit%2A>現在メソッド<xref:System.Windows.Forms.DataGridTableStyle>で、<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>コントロール。  
  
 [!code-cpp[Classic DataGridTableStyle.EndEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.EndEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.EndEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.EndEdit Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.EndEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.EndEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.BeginEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGrid.EndEdit(System.Windows.Forms.DataGridColumnStyle,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッド テーブルの前景色を取得または設定します。</summary>
        <value>グリッド テーブルの前景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ForeColor/CPP/datagridtablestyle_forecolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ForeColor/CS/datagridtablestyle_forecolor.cs#1)]
 [!code-vb[DataGridTableStyle_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ForeColor/VB/datagridtablestyle_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridTableStyle>という`DataGridTableStyle1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridTableStyle.ForeColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#223](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#223)]
 [!code-vb[System.Windows.Forms.EventExamples#223](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#223)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridColumnStyles">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.GridColumnStylesCollection GridColumnStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.GridColumnStylesCollection GridColumnStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.GridColumnStyles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GridColumnStyles As GridColumnStylesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::GridColumnStylesCollection ^ GridColumnStyles { System::Windows::Forms::GridColumnStylesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GridColumnStyles : System.Windows.Forms.GridColumnStylesCollection" Usage="System.Windows.Forms.DataGridTableStyle.GridColumnStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GridColumnStylesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブルに描画される列のコレクションを取得します。</summary>
        <value>テーブルのすべての <see cref="T:System.Windows.Forms.GridColumnStylesCollection" /> オブジェクトを格納している <see cref="T:System.Windows.Forms.DataGridColumnStyle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.GridColumnStylesCollection>によって返される、<xref:System.Windows.Forms.DataGridTableStyle.GridColumnStyles%2A>プロパティでは、カスタマイズされた一連の列のスタイルを作成することができます。 各<xref:System.Data.DataColumn>で、<xref:System.Data.DataTable>設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridColumnStyle>を<xref:System.Data.DataColumn.ColumnName%2A>。 自動的にその列のスタイルにする際に使用されるこの<xref:System.Windows.Forms.DataGridTableStyle>が表示されます。  
  
 作成する場合、<xref:System.Windows.Forms.DataGridTableStyle>いずれかを追加せず<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトを<xref:System.Windows.Forms.GridColumnStylesCollection>、一連の<xref:System.Windows.Forms.DataGridColumnStyle>オブジェクトが自動的に作成すると、<xref:System.Windows.Forms.DataGridTableStyle>有効な<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>に追加されます、<xref:System.Windows.Forms.GridTableStylesCollection>します。 追加しようとした場合、例外がスロー<xref:System.Windows.Forms.DataGridColumnStyle>重複オブジェクト<xref:System.Windows.Forms.DataGridColumnStyle.MappingName%2A>コレクションに値。  
  
   
  
## Examples  
 次のコード例の取得、<xref:System.Windows.Forms.GridColumnStylesCollection>の<xref:System.Windows.Forms.DataGridTableStyle>各オブジェクトのヘッダーを出力します。  
  
 [!code-cpp[Classic DataGridTableStyle.GridColumnStyles Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.GridColumnStyles Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.GridColumnStyles Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.GridColumnStyles Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.GridColumnStyles Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.GridColumnStyles Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridLineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridLineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridLineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridLineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.GridLineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッド線の色を取得または設定します。</summary>
        <value>グリッド線の色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_sample5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CPP/datagridtablestyle_sample5.cpp#2)]
 [!code-csharp[DataGridTableStyle_sample5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CS/datagridtablestyle_sample5.cs#2)]
 [!code-vb[DataGridTableStyle_sample5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample5/VB/datagridtablestyle_sample5.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridLineColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridLineColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridLineColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridLineColorChanged;" />
      <MemberSignature Language="F#" Value="member this.GridLineColorChanged : EventHandler " Usage="member this.GridLineColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_sample5#3](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CPP/datagridtablestyle_sample5.cpp#3)]
 [!code-csharp[DataGridTableStyle_sample5#3](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample5/CS/datagridtablestyle_sample5.cs#3)]
 [!code-vb[DataGridTableStyle_sample5#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample5/VB/datagridtablestyle_sample5.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridLineStyle GridLineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridLineStyle GridLineStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLineStyle As DataGridLineStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridLineStyle GridLineStyle { System::Windows::Forms::DataGridLineStyle get(); void set(System::Windows::Forms::DataGridLineStyle value); };" />
      <MemberSignature Language="F#" Value="member this.GridLineStyle : System.Windows.Forms.DataGridLineStyle with get, set" Usage="System.Windows.Forms.DataGridTableStyle.GridLineStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridLineStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グリッド線のスタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridLineStyle" /> 値のいずれか。 既定値は、<see langword="DataGridLineStyle.Solid" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLineStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridLineStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridLineStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridLineStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridLineStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.GridLineStyleChanged : EventHandler " Usage="member this.GridLineStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineStyle" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_sample1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample1/CPP/datagridtablestyle_sample1.cpp#2)]
 [!code-csharp[DataGridTableStyle_sample1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample1/CS/datagridtablestyle_sample1.cs#2)]
 [!code-vb[DataGridTableStyle_sample1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample1/VB/datagridtablestyle_sample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーの背景色を取得または設定します。</summary>
        <value>ヘッダーの背景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Header_4#4](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CPP/datagridtablestyle_header_4.cpp#4)]
 [!code-csharp[DataGridTableStyle_Header_4#4](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CS/datagridtablestyle_header_4.cs#4)]
 [!code-vb[DataGridTableStyle_Header_4#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Header_4/VB/datagridtablestyle_header_4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="HeaderBackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderBackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderBackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderBackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderBackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.HeaderBackColorChanged : EventHandler " Usage="member this.HeaderBackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Header_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CPP/datagridtablestyle_header_4.cpp#3)]
 [!code-csharp[DataGridTableStyle_Header_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CS/datagridtablestyle_header_4.cs#3)]
 [!code-vb[DataGridTableStyle_Header_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Header_4/VB/datagridtablestyle_header_4.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font HeaderFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font HeaderFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ HeaderFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーのキャプションに使用するフォントを取得または設定します。</summary>
        <value>キャプションに使用する <see cref="T:System.Drawing.Font" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ヘッダーのキャプション テキストを設定するには、使用、<xref:System.Windows.Forms.DataGridColumnStyle.HeaderText%2A>のプロパティ、<xref:System.Windows.Forms.DataGridColumnStyle>クラス。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CPP/datagridtablestyle_sample.cpp#2)]
 [!code-csharp[DataGridTableStyle_Sample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CS/datagridtablestyle_sample.cs#2)]
 [!code-vb[DataGridTableStyle_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample/VB/datagridtablestyle_sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont" />
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderFontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderFontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderFontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderFontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderFontChanged;" />
      <MemberSignature Language="F#" Value="member this.HeaderFontChanged : EventHandler " Usage="member this.HeaderFontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CPP/datagridtablestyle_sample.cpp#4)]
 [!code-csharp[DataGridTableStyle_Sample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CS/datagridtablestyle_sample.cs#4)]
 [!code-vb[DataGridTableStyle_Sample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample/VB/datagridtablestyle_sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont" />
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘッダーの前景色を取得または設定します。</summary>
        <value>ヘッダーの前景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Header_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CPP/datagridtablestyle_header_4.cpp#2)]
 [!code-csharp[DataGridTableStyle_Header_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CS/datagridtablestyle_header_4.cs#2)]
 [!code-vb[DataGridTableStyle_Header_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Header_4/VB/datagridtablestyle_header_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="HeaderForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HeaderForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HeaderForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HeaderForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HeaderForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.HeaderForeColorChanged : EventHandler " Usage="member this.HeaderForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Header_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CPP/datagridtablestyle_header_4.cpp#1)]
 [!code-csharp[DataGridTableStyle_Header_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Header_4/CS/datagridtablestyle_header_4.cs#1)]
 [!code-vb[DataGridTableStyle_Header_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Header_4/VB/datagridtablestyle_header_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リンク テキストの色を取得または設定します。</summary>
        <value>リンク テキストの <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CPP/datagridtablestyle_sample.cpp#1)]
 [!code-csharp[DataGridTableStyle_Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CS/datagridtablestyle_sample.cs#1)]
 [!code-vb[DataGridTableStyle_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample/VB/datagridtablestyle_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="LinkColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LinkColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LinkColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LinkColorChanged;" />
      <MemberSignature Language="F#" Value="member this.LinkColorChanged : EventHandler " Usage="member this.LinkColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_Sample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CPP/datagridtablestyle_sample.cpp#3)]
 [!code-csharp[DataGridTableStyle_Sample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_Sample/CS/datagridtablestyle_sample.cs#3)]
 [!code-vb[DataGridTableStyle_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_Sample/VB/datagridtablestyle_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="LinkHoverColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkHoverColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkHoverColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkHoverColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkHoverColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkHoverColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.LinkHoverColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターをリンク テキストの上に配置したときに表示する色を取得または設定します。</summary>
        <value>マウスのポインターを置いたときの色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor" />
      </Docs>
    </Member>
    <Member MemberName="LinkHoverColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LinkHoverColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LinkHoverColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkHoverColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LinkHoverColorChanged;" />
      <MemberSignature Language="F#" Value="member this.LinkHoverColorChanged : EventHandler " Usage="member this.LinkHoverColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor" />
      </Docs>
    </Member>
    <Member MemberName="MappingName">
      <MemberSignature Language="C#" Value="public string MappingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappingName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.MappingName" />
      <MemberSignature Language="VB.NET" Value="Public Property MappingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MappingName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MappingName : string with get, set" Usage="System.Windows.Forms.DataGridTableStyle.MappingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridTableStyleMappingNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridTableStyleMappingNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridTableStyleMappingNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブルを特定のデータ ソースに割り当てるときに使用する名前を取得または設定します。</summary>
        <value>グリッドを特定のデータ ソースに割り当てるときに使用する名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バインドする、<xref:System.Windows.Forms.DataGrid>オブジェクトの厳密に型指定された配列には、オブジェクトの種類がパブリック プロパティを含める必要があります。 作成する、<xref:System.Windows.Forms.DataGridTableStyle>配列が表示されますが、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A?displayProperty=nameWithType>プロパティを`typename`場所`typename`オブジェクトの種類の名前は置き換えられます。 また、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>プロパティと小文字は区別; 型の名前を正確に一致させる必要があります。 参照してください、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>例については、プロパティ。  
  
 バインドすることも、<xref:System.Windows.Forms.DataGrid>を<xref:System.Collections.ArrayList>します。 機能、<xref:System.Collections.ArrayList>は、複数の種類のオブジェクトを含めることができますが、<xref:System.Windows.Forms.DataGrid>リスト内のすべての項目が最初の項目と同じ型の場合、このようなリストにのみバインドできます。 つまり、同じ型のすべてのオブジェクトであるか、または一覧の最初の項目と同じクラスから継承する必要があります。 たとえば、次の一覧の最初の項目は、 <xref:System.Windows.Forms.Control>、2 番目のアイテムになります、 <xref:System.Windows.Forms.TextBox> (から継承される<xref:System.Windows.Forms.Control>)。 その一方で、最初の項目を<xref:System.Windows.Forms.TextBox>、2 番目のオブジェクトにすることはできません、<xref:System.Windows.Forms.Control>します。 さらに、<xref:System.Collections.ArrayList>バインドされている場合に項目が必要です。 空<xref:System.Collections.ArrayList>空のグリッドになります。 バインドする場合、 <xref:System.Collections.ArrayList>、設定、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>の<xref:System.Windows.Forms.DataGridTableStyle>"ArrayList"(型名) にします。  
  
 既定で管理一覧の名前では、<xref:System.Windows.Forms.CurrencyManager>このグリッドにします。 <xref:System.Windows.Forms.CurrencyManager>の<xref:System.Windows.Forms.DataGridTableStyle>を使用して設定されている、<xref:System.Windows.Forms.DataGridTableStyle.%23ctor%2A>コンス トラクター。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.MappingNameChanged>イベントが発生したときに、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>値の変更。  
  
   
  
## Examples  
 次のコード例は、の配列を作成します。`Widget`オブジェクトとバインドを<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>配列へのコントロール。 コードを作成し、<xref:System.Windows.Forms.DataGridTableStyle>設定と、<xref:System.Windows.Forms.DataGridTableStyle.MappingName%2A>角かっことクラスの名前にします。  
  
 [!code-cpp[DataGridTable.MappingName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTable.MappingName Example/CPP/bindarray.cpp#1)]
 [!code-csharp[DataGridTable.MappingName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTable.MappingName Example/CS/bindarray.cs#1)]
 [!code-vb[DataGridTable.MappingName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTable.MappingName Example/VB/bindarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
        <altmember cref="T:System.Windows.Forms.DataGrid" />
        <altmember cref="T:System.Windows.Forms.DataGridColumnStyle" />
        <altmember cref="P:System.Windows.Forms.DataGrid.TableStyles" />
      </Docs>
    </Member>
    <Member MemberName="MappingNameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MappingNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MappingNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MappingNameChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MappingNameChanged;" />
      <MemberSignature Language="F#" Value="member this.MappingNameChanged : EventHandler " Usage="member this.MappingNameChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.MappingName" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_sample1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_sample1/CPP/datagridtablestyle_sample1.cpp#1)]
 [!code-csharp[DataGridTableStyle_sample1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_sample1/CS/datagridtablestyle_sample1.cs#1)]
 [!code-vb[DataGridTableStyle_sample1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_sample1/VB/datagridtablestyle_sample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.MappingName" />
      </Docs>
    </Member>
    <Member MemberName="OnAllowSortingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowSortingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowSortingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowSortingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowSortingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowSortingChanged : EventArgs -&gt; unit&#xA;override this.OnAllowSortingChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnAllowSortingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.AllowSortingChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnAlternatingBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternatingBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternatingBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternatingBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternatingBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternatingBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnAlternatingBackColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnAlternatingBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.BackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersVisibleChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnColumnHeadersVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.ForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnForeColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGridLineColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridLineColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridLineColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridLineColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridLineColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridLineColorChanged : EventArgs -&gt; unit&#xA;override this.OnGridLineColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnGridLineColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGridLineStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridLineStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridLineStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridLineStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridLineStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridLineStyleChanged : EventArgs -&gt; unit&#xA;override this.OnGridLineStyleChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnGridLineStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHeaderBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnHeaderBackColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnHeaderBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHeaderFontChanged : EventArgs -&gt; unit&#xA;override this.OnHeaderFontChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnHeaderFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHeaderForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnHeaderForeColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnHeaderForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLinkColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkColorChanged : EventArgs -&gt; unit&#xA;override this.OnLinkColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnLinkColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLinkHoverColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkHoverColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkHoverColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkHoverColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkHoverColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkHoverColorChanged : EventArgs -&gt; unit&#xA;override this.OnLinkHoverColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnLinkHoverColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see langword="LinkHoverColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMappingNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMappingNameChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMappingNameChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMappingNameChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMappingNameChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMappingNameChanged : EventArgs -&gt; unit&#xA;override this.OnMappingNameChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnMappingNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.MappingNameChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreferredColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPreferredColumnWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreferredColumnWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreferredColumnWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreferredColumnWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreferredColumnWidthChanged : EventArgs -&gt; unit&#xA;override this.OnPreferredColumnWidthChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnPreferredColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreferredRowHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPreferredRowHeightChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreferredRowHeightChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreferredRowHeightChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreferredRowHeightChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreferredRowHeightChanged : EventArgs -&gt; unit&#xA;override this.OnPreferredRowHeightChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnPreferredRowHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersVisibleChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnRowHeadersVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderWidthChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeaderWidthChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnRowHeaderWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionBackColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnSelectionBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionForeColorChanged : EventArgs -&gt; unit" Usage="dataGridTableStyle.OnSelectionForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生クラスで <see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged(System.EventArgs)" /> メソッドを呼び出してください。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreferredColumnWidth">
      <MemberSignature Language="C#" Value="public int PreferredColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredColumnWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredColumnWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredColumnWidth : int with get, set" Usage="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(75)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridPreferredColumnWidthTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいグリッドが表示されるときに作成する列に適用する幅を取得または設定します。</summary>
        <value>新しいグリッドが表示されるときに作成する列に適用する幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_PreferredColumnWidth#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_PreferredColumnWidth/CPP/datagridtablestyle_preferredcolumnwidth.cpp#1)]
 [!code-csharp[DataGridTableStyle_PreferredColumnWidth#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_PreferredColumnWidth/CS/datagridtablestyle_preferredcolumnwidth.cs#1)]
 [!code-vb[DataGridTableStyle_PreferredColumnWidth#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_PreferredColumnWidth/VB/datagridtablestyle_preferredcolumnwidth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" />
      </Docs>
    </Member>
    <Member MemberName="PreferredColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PreferredColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreferredColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreferredColumnWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreferredColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.PreferredColumnWidthChanged : EventHandler " Usage="member this.PreferredColumnWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" /> プロパティの値が変化すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridTableStyle>という`DataGridTableStyle1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#231](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#231)]
 [!code-vb[System.Windows.Forms.EventExamples#231](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#231)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRowHeight">
      <MemberSignature Language="C#" Value="public int PreferredRowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredRowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredRowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredRowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRowHeight : int with get, set" Usage="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいグリッドが表示されるときに作成する行に適用する高さを取得または設定します。</summary>
        <value>行の高さ (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 適切な高さが割り当てられていると表示されるテキストを対応するために必要な最小の高さ<xref:System.Windows.Forms.DataGridTableStyle.HeaderFont%2A>します。 指定した値未満の高さを持つ行は作成されません。 フォント サイズ、必要な場合に、行の高さが指定した値より大きいあります。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_PreferredRowHeight#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeight/CPP/datagridtablestyle_preferredrowheight.cpp#1)]
 [!code-csharp[DataGridTableStyle_PreferredRowHeight#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeight/CS/datagridtablestyle_preferredrowheight.cs#1)]
 [!code-vb[DataGridTableStyle_PreferredRowHeight#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeight/VB/datagridtablestyle_preferredrowheight.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth" />
      </Docs>
    </Member>
    <Member MemberName="PreferredRowHeightChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PreferredRowHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreferredRowHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreferredRowHeightChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreferredRowHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.PreferredRowHeightChanged : EventHandler " Usage="member this.PreferredRowHeightChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_PreferredRowHeightChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeightChanged/CPP/preferredrowheightchanged.cpp#1)]
 [!code-csharp[DataGridTableStyle_PreferredRowHeightChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeightChanged/CS/preferredrowheightchanged.cs#1)]
 [!code-vb[DataGridTableStyle_PreferredRowHeightChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_PreferredRowHeightChanged/VB/preferredrowheightchanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridTableStyle.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列を編集できるかどうかを示す値を取得または設定します。</summary>
        <value>列を編集できない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定して、テーブル内の個々 の列が編集可能かどうかを指定することも、<xref:System.Windows.Forms.DataGridColumnStyle>クラスの<xref:System.Windows.Forms.DataGridColumnStyle.ReadOnly%2A?displayProperty=nameWithType>プロパティに適切な値`true`または`false`します。  
  
 または、データを編集しないことを確認するを設定できます、<xref:System.Data.DataColumn>クラスの<xref:System.Data.DataColumn.ReadOnly%2A>プロパティを`true`します。  
  
   
  
## Examples  
 次のコード例を返します、<xref:System.Windows.Forms.DataGridTableStyle.ReadOnly%2A>プロパティごとに<xref:System.Windows.Forms.DataGridTableStyle>で、<xref:System.Windows.Forms.GridTableStylesCollection>します。  
  
 [!code-cpp[Classic DataGridTableStyle.ReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGridTableStyle.ReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGridTableStyle.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGridTableStyle.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridTableStyle.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGridTableStyle.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ReadOnlyChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ReadOnlyChanged/CPP/datagridtablestyle_readonlychanged.cpp#1)]
 [!code-csharp[DataGridTableStyle_ReadOnlyChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ReadOnlyChanged/CS/datagridtablestyle_readonlychanged.cs#1)]
 [!code-vb[DataGridTableStyle_ReadOnlyChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ReadOnlyChanged/VB/datagridtablestyle_readonlychanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ResetAlternatingBackColor">
      <MemberSignature Language="C#" Value="public void ResetAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetAlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAlternatingBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAlternatingBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetAlternatingBackColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetAlternatingBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetAlternatingBackcolor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetAlternatingBackcolor/CPP/resetalternatingbackcolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetAlternatingBackcolor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetAlternatingBackcolor/CS/resetalternatingbackcolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetAlternatingBackcolor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetAlternatingBackcolor/VB/resetalternatingbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetBackColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetBackColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetBackColor/CPP/datagridtablestyle_resetbackcolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetBackColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetBackColor/CS/datagridtablestyle_resetbackcolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetBackColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetBackColor/VB/datagridtablestyle_resetbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetForeColor();" />
      <MemberSignature Language="F#" Value="member this.ResetForeColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetForeColor/CPP/datagridtablestyle_resetforecolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetForeColor/CS/datagridtablestyle_resetforecolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetForeColor/VB/datagridtablestyle_resetforecolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetGridLineColor">
      <MemberSignature Language="C#" Value="public void ResetGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetGridLineColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetGridLineColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetGridLineColor();" />
      <MemberSignature Language="F#" Value="member this.ResetGridLineColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetGridLineColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetGridLineColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetGridLineColor/CPP/datagridtablestyle_resetgridlinecolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetGridLineColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetGridLineColor/CS/datagridtablestyle_resetgridlinecolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetGridLineColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetGridLineColor/VB/datagridtablestyle_resetgridlinecolor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderBackColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderBackColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetHeaderBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetHeaderBackColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderBackColor/CPP/datagridtablestyle_resetheaderbackcolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetHeaderBackColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderBackColor/CS/datagridtablestyle_resetheaderbackcolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetHeaderBackColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderBackColor/VB/datagridtablestyle_resetheaderbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderFont">
      <MemberSignature Language="C#" Value="public void ResetHeaderFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderFont" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderFont();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderFont : unit -&gt; unit" Usage="dataGridTableStyle.ResetHeaderFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetHeaderFont1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderFont1/CPP/datagridtablestyle_resetheaderfont1.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetHeaderFont1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderFont1/CS/datagridtablestyle_resetheaderfont1.cs#1)]
 [!code-vb[DataGridTableStyle_ResetHeaderFont1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderFont1/VB/datagridtablestyle_resetheaderfont1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.HeaderFontChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="ResetHeaderForeColor">
      <MemberSignature Language="C#" Value="public void ResetHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetHeaderForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetHeaderForeColor();" />
      <MemberSignature Language="F#" Value="member this.ResetHeaderForeColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetHeaderForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetHeaderForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderForeColor/CPP/datagridtablestyle_resetheaderforecolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetHeaderForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderForeColor/CS/datagridtablestyle_resetheaderforecolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetHeaderForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetHeaderForeColor/VB/datagridtablestyle_resetheaderforecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="ResetLinkColor">
      <MemberSignature Language="C#" Value="public void ResetLinkColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetLinkColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetLinkColor();" />
      <MemberSignature Language="F#" Value="member this.ResetLinkColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetLinkColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_ResetLinkColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_ResetLinkColor/CPP/datagridtablestyle_resetlinkcolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_ResetLinkColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_ResetLinkColor/CS/datagridtablestyle_resetlinkcolor.cs#1)]
 [!code-vb[DataGridTableStyle_ResetLinkColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_ResetLinkColor/VB/datagridtablestyle_resetlinkcolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="ResetLinkHoverColor">
      <MemberSignature Language="C#" Value="public void ResetLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetLinkHoverColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetLinkHoverColor();" />
      <MemberSignature Language="F#" Value="member this.ResetLinkHoverColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetLinkHoverColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor" />
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionBackColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSelectionBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSelectionBackColor();" />
      <MemberSignature Language="F#" Value="member this.ResetSelectionBackColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetSelectionBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSelectionForeColor">
      <MemberSignature Language="C#" Value="public void ResetSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSelectionForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSelectionForeColor();" />
      <MemberSignature Language="F#" Value="member this.ResetSelectionForeColor : unit -&gt; unit" Usage="dataGridTableStyle.ResetSelectionForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> プロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。 使用することができます、<xref:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor%2A>プロパティ値が既定値から変更されているかどうかを判断するメソッド。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_SelectionForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/CPP/selectionforecolor.cpp#2)]
 [!code-csharp[DataGridTableStyle_SelectionForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/CS/selectionforecolor.cs#2)]
 [!code-vb[DataGridTableStyle_SelectionForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/VB/selectionforecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーを表示するかどうかを示す値を取得または設定します。</summary>
        <value>行ヘッダーを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合に、プラス記号が各の行ヘッダーに表示される行ヘッダーが表示されている場合は、基になる<xref:System.Data.DataTable>は関連する子テーブルがあります。  
  
 このプロパティは、追加するまで機能しません<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Windows.Forms.GridTableStylesCollection>します。 それまでは、このプロパティの設定は影響しません。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_RowHeadersVisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/CPP/rowheadersvisiblechanged.cpp#1)]
 [!code-csharp[DataGridTableStyle_RowHeadersVisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/CS/rowheadersvisiblechanged.cs#1)]
 [!code-vb[DataGridTableStyle_RowHeadersVisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/VB/rowheadersvisiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" />
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersVisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisibleChanged : EventHandler " Usage="member this.RowHeadersVisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_RowHeadersVisibleChanged#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/CPP/rowheadersvisiblechanged.cpp#2)]
 [!code-csharp[DataGridTableStyle_RowHeadersVisibleChanged#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/CS/rowheadersvisiblechanged.cs#2)]
 [!code-vb[DataGridTableStyle_RowHeadersVisibleChanged#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_RowHeadersVisibleChanged/VB/rowheadersvisiblechanged.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidth">
      <MemberSignature Language="C#" Value="public int RowHeaderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeaderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeaderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeaderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeaderWidth : int with get, set" Usage="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(35)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行ヘッダーの幅を取得または設定します。</summary>
        <value>行ヘッダーの幅 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行ヘッダーを表示するときに基になるデータに関連する子テーブルがある場合、各の行ヘッダーのプラス記号が表示されます。  
  
 このプロパティは、追加するまで機能しません<xref:System.Windows.Forms.DataGridTableStyle>オブジェクトを<xref:System.Windows.Forms.GridTableStylesCollection>します。 それまでは、このプロパティの設定は影響しません。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_RowHeaderWidth#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/CPP/rowheaderwidth.cpp#1)]
 [!code-csharp[DataGridTableStyle_RowHeaderWidth#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/CS/rowheaderwidth.cs#1)]
 [!code-vb[DataGridTableStyle_RowHeaderWidth#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/VB/rowheaderwidth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeaderWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeaderWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeaderWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderWidthChanged : EventHandler " Usage="member this.RowHeaderWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_RowHeaderWidth#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/CPP/rowheaderwidth.cpp#2)]
 [!code-csharp[DataGridTableStyle_RowHeaderWidth#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/CS/rowheaderwidth.cs#2)]
 [!code-vb[DataGridTableStyle_RowHeaderWidth#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_RowHeaderWidth/VB/rowheaderwidth.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeaderWidth" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.RowHeadersVisible" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されているセルの背景色を取得または設定します。</summary>
        <value>選択されているセルの背景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_SelectionBackColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/CPP/selectionbackcolor.cpp#2)]
 [!code-csharp[DataGridTableStyle_SelectionBackColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/CS/selectionbackcolor.cs#2)]
 [!code-vb[DataGridTableStyle_SelectionBackColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/VB/selectionbackcolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionBackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionBackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionBackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionBackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColorChanged : EventHandler " Usage="member this.SelectionBackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_SelectionBackColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/CPP/selectionbackcolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_SelectionBackColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/CS/selectionbackcolor.cs#1)]
 [!code-vb[DataGridTableStyle_SelectionBackColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_SelectionBackColor/VB/selectionbackcolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Description("The foreground color for the current data grid row")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されているセルの前景色を取得または設定します。</summary>
        <value>選択されているセルの前景色を表す <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。  
  
 [!code-cpp[DataGridTableStyle_SelectionForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/CPP/selectionforecolor.cpp#1)]
 [!code-csharp[DataGridTableStyle_SelectionForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/CS/selectionforecolor.cs#1)]
 [!code-vb[DataGridTableStyle_SelectionForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DataGridTableStyle_SelectionForeColor/VB/selectionforecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionForeColorChanged : EventHandler " Usage="member this.SelectionForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> 値が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、このメンバーの使用を示します。 例では、イベント ハンドラーが発生するときに報告、<xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged>イベント。 このレポートでは、イベントが発生してデバッグに役立つについて説明します。 複数のイベントまたは頻繁に発生するイベントを報告する、交換を検討<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>で<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>またはメッセージを複数行に追加<xref:System.Windows.Forms.TextBox>します。  
  
 コード例を実行する型のインスタンスを含むプロジェクトに貼り付けること<xref:System.Windows.Forms.DataGridTableStyle>という`DataGridTableStyle1`します。 イベント ハンドラーに関連付けられていることを確認し、<xref:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged>イベント。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#237](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#237)]
 [!code-vb[System.Windows.Forms.EventExamples#237](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#237)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlternatingBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeAlternatingBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeAlternatingBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeAlternatingBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeAlternatingBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeAlternatingBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeAlternatingBackColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeAlternatingBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.AlternatingBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBackColor">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializeBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializeBackColor();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBackColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.BackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeForeColor">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializeForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializeForeColor();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeForeColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.ForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGridLineColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeGridLineColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeGridLineColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeGridLineColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeGridLineColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeGridLineColor : unit -&gt; bool&#xA;override this.ShouldSerializeGridLineColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeGridLineColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.GridLineColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderBackColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeHeaderBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeHeaderBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeHeaderBackColor : unit -&gt; bool&#xA;override this.ShouldSerializeHeaderBackColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeHeaderBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeHeaderForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeHeaderForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeHeaderForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeHeaderForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeHeaderForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeHeaderForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeHeaderForeColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeHeaderForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderBackColor" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.HeaderFont" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeLinkColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeLinkColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeLinkColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeLinkColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeLinkColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeLinkColor : unit -&gt; bool&#xA;override this.ShouldSerializeLinkColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeLinkColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeLinkHoverColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeLinkHoverColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeLinkHoverColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeLinkHoverColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeLinkHoverColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeLinkHoverColor : unit -&gt; bool&#xA;override this.ShouldSerializeLinkHoverColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeLinkHoverColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.LinkHoverColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePreferredRowHeight">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializePreferredRowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializePreferredRowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializePreferredRowHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializePreferredRowHeight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializePreferredRowHeight();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePreferredRowHeight : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializePreferredRowHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.PreferredRowHeight" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionBackColor">
      <MemberSignature Language="C#" Value="protected bool ShouldSerializeSelectionBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ShouldSerializeSelectionBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShouldSerializeSelectionBackColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ShouldSerializeSelectionBackColor();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSelectionBackColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeSelectionBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSelectionForeColor">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeSelectionForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeSelectionForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeSelectionForeColor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeSelectionForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeSelectionForeColor : unit -&gt; bool&#xA;override this.ShouldSerializeSelectionForeColor : unit -&gt; bool" Usage="dataGridTableStyle.ShouldSerializeSelectionForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれかのデザイナーを作成する場合は通常このメソッドを使用する、<xref:System.Windows.Forms.DataGridTableStyle>またはコントロールを組み込む独自に作成、<xref:System.Windows.Forms.DataGridTableStyle>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionBackColor" />
        <altmember cref="P:System.Windows.Forms.DataGridTableStyle.SelectionForeColor" />
        <altmember cref="E:System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged" />
      </Docs>
    </Member>
  </Members>
</Type>