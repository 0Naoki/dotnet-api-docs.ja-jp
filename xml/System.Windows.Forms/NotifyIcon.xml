<Type Name="NotifyIcon" FullName="System.Windows.Forms.NotifyIcon">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60cb6ee3b31db99f0021850caa37bc100ea0ef12" /><Meta Name="ms.sourcegitcommit" Value="81833381d2d0b5a8c55f71b43f00769fd38298af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/17/2019" /><Meta Name="ms.locfileid" Value="69568459" /></Metadata><TypeSignature Language="C#" Value="public sealed class NotifyIcon : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NotifyIcon extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NotifyIcon" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NotifyIcon&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class NotifyIcon sealed : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type NotifyIcon = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("MouseDoubleClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.NotifyIconDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.DefaultEvent("MouseDown")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.NotifyIconDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.NotifyIconDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="50856-101">通知領域にアイコンを作成するコンポーネントを指定します。</span><span class="sxs-lookup"><span data-stu-id="50856-101">Specifies a component that creates an icon in the notification area.</span></span> <span data-ttu-id="50856-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="50856-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-103">通知領域のアイコンは、ウイルス対策プログラムやボリュームコントロールなど、コンピューターのバックグラウンドで実行されているプロセスへのショートカットです。</span><span class="sxs-lookup"><span data-stu-id="50856-103">Icons in the notification area are shortcuts to processes that are running in the background of a computer, such as a virus protection program or a volume control.</span></span> <span data-ttu-id="50856-104">これらのプロセスには、独自のユーザーインターフェイスが付属していません。</span><span class="sxs-lookup"><span data-stu-id="50856-104">These processes do not come with their own user interfaces.</span></span> <span data-ttu-id="50856-105">クラス<xref:System.Windows.Forms.NotifyIcon>は、この機能をプログラミングする手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="50856-105">The <xref:System.Windows.Forms.NotifyIcon> class provides a way to program in this functionality.</span></span> <span data-ttu-id="50856-106">プロパティ<xref:System.Windows.Forms.NotifyIcon.Icon%2A>は、通知領域に表示されるアイコンを定義します。</span><span class="sxs-lookup"><span data-stu-id="50856-106">The <xref:System.Windows.Forms.NotifyIcon.Icon%2A> property defines the icon that appears in the notification area.</span></span> <span data-ttu-id="50856-107">アイコンのポップアップメニューは、 <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>プロパティでアドレス指定されます。</span><span class="sxs-lookup"><span data-stu-id="50856-107">Pop-up menus for an icon are addressed with the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> property.</span></span> <span data-ttu-id="50856-108">プロパティ<xref:System.Windows.Forms.NotifyIcon.Text%2A>は、ツールヒントテキストを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="50856-108">The <xref:System.Windows.Forms.NotifyIcon.Text%2A> property assigns ToolTip text.</span></span> <span data-ttu-id="50856-109">通知領域<xref:System.Windows.Forms.NotifyIcon.Visible%2A>にアイコンが表示されるようにするには、プロパティをに`true`設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="50856-109">In order for the icon to show up in the notification area, the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property must be set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-110"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-110">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-111">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-111">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-112">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-112">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-113">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-113">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="50856-114"><see cref="T:System.Windows.Forms.NotifyIcon" />コンポーネントを作成します。</span><span class="sxs-lookup"><span data-stu-id="50856-114">to create the <see cref="T:System.Windows.Forms.NotifyIcon" /> component.</span></span> <span data-ttu-id="50856-115">関連付けられた列挙型:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="50856-115">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50856-116"><see cref="T:System.Windows.Forms.NotifyIcon" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="50856-116">Initializes a new instance of the <see cref="T:System.Windows.Forms.NotifyIcon" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotifyIcon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotifyIcon();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50856-117"><see cref="T:System.Windows.Forms.NotifyIcon" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="50856-117">Initializes a new instance of the <see cref="T:System.Windows.Forms.NotifyIcon" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-118">新しい<xref:System.Windows.Forms.NotifyIcon>が作成されると<xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、プロパティはに`false`設定されます。</span><span class="sxs-lookup"><span data-stu-id="50856-118">When a new <xref:System.Windows.Forms.NotifyIcon> is created, the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property is set to `false`.</span></span> <span data-ttu-id="50856-119">作成したを<xref:System.Windows.Forms.NotifyIcon.Visible%2A>使用<xref:System.Windows.Forms.NotifyIcon>する`true`には、プロパティをに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="50856-119">You must set the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property to `true` in order to use the <xref:System.Windows.Forms.NotifyIcon> you created.</span></span> <span data-ttu-id="50856-120">このインスタンスは、コンテナーがガベージコレクションをリリースするまで存在します。</span><span class="sxs-lookup"><span data-stu-id="50856-120">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotifyIcon (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NotifyIcon(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NotifyIcon : System.ComponentModel.IContainer -&gt; System.Windows.Forms.NotifyIcon" Usage="new System.Windows.Forms.NotifyIcon container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="50856-121"><see cref="T:System.ComponentModel.IContainer" /> コントロールのコンテナーを表す <see cref="T:System.Windows.Forms.NotifyIcon" />。</span><span class="sxs-lookup"><span data-stu-id="50856-121">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the <see cref="T:System.Windows.Forms.NotifyIcon" /> control.</span></span></param>
        <summary><span data-ttu-id="50856-122">指定したコンテナーがある <see cref="T:System.Windows.Forms.NotifyIcon" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="50856-122">Initializes a new instance of the <see cref="T:System.Windows.Forms.NotifyIcon" /> class with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-123">新しい<xref:System.Windows.Forms.NotifyIcon>が作成されると<xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、プロパティはに`false`設定されます。</span><span class="sxs-lookup"><span data-stu-id="50856-123">When a new <xref:System.Windows.Forms.NotifyIcon> is created, the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property is set to `false`.</span></span> <span data-ttu-id="50856-124">作成したを<xref:System.Windows.Forms.NotifyIcon.Visible%2A>使用<xref:System.Windows.Forms.NotifyIcon>する`true`には、プロパティをに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="50856-124">You must set the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property to `true` in order to use the <xref:System.Windows.Forms.NotifyIcon> you created.</span></span> <span data-ttu-id="50856-125">このインスタンスは、コンテナーがガベージコレクションをリリースするまで存在します。</span><span class="sxs-lookup"><span data-stu-id="50856-125">This instance will exist until its container releases it to garbage collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-126"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-126">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-127">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-127">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-128">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-128">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-129">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-129">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipClicked">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipClicked As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipClicked;" />
      <MemberSignature Language="F#" Value="member this.BalloonTipClicked : EventHandler " Usage="member this.BalloonTipClicked : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-130">バルーン ヒントがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-130">Occurs when the balloon tip is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-131">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-131">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-132">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-132">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-133">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-133">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked> event.</span></span> <span data-ttu-id="50856-134">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-134">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-135">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-135">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-136">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-136">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-137">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-137">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.BalloonTipClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#505](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#505)]
 [!code-vb[System.Windows.Forms.EventExamples#505](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#505)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipClosed">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipClosed;" />
      <MemberSignature Language="F#" Value="member this.BalloonTipClosed : EventHandler " Usage="member this.BalloonTipClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-138">ユーザーがバルーン ヒントを閉じると発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-138">Occurs when the balloon tip is closed by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-139">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-139">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-140"><xref:System.Windows.Forms.NotifyIcon.BalloonTipClosed>イベントを処理する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-140">The following code example demonstrates how to handle the <xref:System.Windows.Forms.NotifyIcon.BalloonTipClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipIcon">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolTipIcon BalloonTipIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolTipIcon BalloonTipIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipIcon As ToolTipIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolTipIcon BalloonTipIcon { System::Windows::Forms::ToolTipIcon get(); void set(System::Windows::Forms::ToolTipIcon value); };" />
      <MemberSignature Language="F#" Value="member this.BalloonTipIcon : System.Windows.Forms.ToolTipIcon with get, set" Usage="System.Windows.Forms.NotifyIcon.BalloonTipIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolTipIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-141"><see cref="T:System.Windows.Forms.NotifyIcon" /> に関連付けられたバルーン ヒントに表示するアイコンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-141">Gets or sets the icon to display on the balloon tip associated with the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></summary>
        <value><span data-ttu-id="50856-142"><see cref="T:System.Windows.Forms.ToolTipIcon" /> に関連付けられているバルーン ヒントに表示する <see cref="T:System.Windows.Forms.NotifyIcon" />。</span><span class="sxs-lookup"><span data-stu-id="50856-142">The <see cref="T:System.Windows.Forms.ToolTipIcon" /> to display on the balloon tip associated with the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50856-143">、 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A> 、<xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>およびの各プロパティの使用方法を次のコード例<xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A>に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-143">The following code example demonstrates how to use the <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, and <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> properties.</span></span> <span data-ttu-id="50856-144">この例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `notifyIcon1`のを含む Windows フォームにコード例を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-144">To run this example, paste the example code into a Windows Form that contains a <xref:System.Windows.Forms.NotifyIcon> named `notifyIcon1`.</span></span> <span data-ttu-id="50856-145">フォーム`SetBalloonTip`のコンストラクターまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドからを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="50856-145">Call `SetBalloonTip` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="50856-146">指定された値が <see cref="T:System.Windows.Forms.ToolTipIcon" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="50856-146">The specified value is not a <see cref="T:System.Windows.Forms.ToolTipIcon" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipShown">
      <MemberSignature Language="C#" Value="public event EventHandler BalloonTipShown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BalloonTipShown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.BalloonTipShown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BalloonTipShown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BalloonTipShown;" />
      <MemberSignature Language="F#" Value="member this.BalloonTipShown : EventHandler " Usage="member this.BalloonTipShown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-147">バルーン ヒントが画面に表示されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-147">Occurs when the balloon tip is displayed on the screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-148">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-148">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-149">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-149">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-150">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.BalloonTipShown>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-150">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.BalloonTipShown> event.</span></span> <span data-ttu-id="50856-151">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-151">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-152">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-152">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-153">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-153">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-154">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.BalloonTipShown>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-154">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.BalloonTipShown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#507](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#507)]
 [!code-vb[System.Windows.Forms.EventExamples#507](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#507)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipText">
      <MemberSignature Language="C#" Value="public string BalloonTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BalloonTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BalloonTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BalloonTipText : string with get, set" Usage="System.Windows.Forms.NotifyIcon.BalloonTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-155"><see cref="T:System.Windows.Forms.NotifyIcon" /> に関連付けられたバルーン ヒントに表示するテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-155">Gets or sets the text to display on the balloon tip associated with the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></summary>
        <value><span data-ttu-id="50856-156"><see cref="T:System.Windows.Forms.NotifyIcon" /> に関連付けられているバルーン ヒントに表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="50856-156">The text to display on the balloon tip associated with the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50856-157">、 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A> 、<xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>およびの各プロパティの使用方法を次のコード例<xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A>に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-157">The following code example demonstrates how to use the <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, and <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> properties.</span></span> <span data-ttu-id="50856-158">この例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `notifyIcon1`のを含む Windows フォームにコード例を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-158">To run this example, paste the example code into a Windows Form that contains a <xref:System.Windows.Forms.NotifyIcon> named `notifyIcon1`.</span></span> <span data-ttu-id="50856-159">フォーム`SetBalloonTip`のコンストラクターまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドからを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="50856-159">Call `SetBalloonTip` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BalloonTipTitle">
      <MemberSignature Language="C#" Value="public string BalloonTipTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BalloonTipTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.BalloonTipTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property BalloonTipTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BalloonTipTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BalloonTipTitle : string with get, set" Usage="System.Windows.Forms.NotifyIcon.BalloonTipTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-160"><see cref="T:System.Windows.Forms.NotifyIcon" /> に表示されるバルーン ヒントのタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-160">Gets or sets the title of the balloon tip displayed on the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></summary>
        <value><span data-ttu-id="50856-161">バルーン ヒントのタイトルとして表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="50856-161">The text to display as the title of the balloon tip.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-162">タイトルのテキストは、バルーンの上部付近に太字のフォントで表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-162">The title text will display in a bold font near the top of the balloon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-163">、 <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A> 、<xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>およびの各プロパティの使用方法を次のコード例<xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A>に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-163">The following code example demonstrates how to use the <xref:System.Windows.Forms.NotifyIcon.BalloonTipTitle%2A>, <xref:System.Windows.Forms.NotifyIcon.BalloonTipText%2A>, and <xref:System.Windows.Forms.NotifyIcon.BalloonTipIcon%2A> properties.</span></span> <span data-ttu-id="50856-164">この例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `notifyIcon1`のを含む Windows フォームにコード例を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-164">To run this example, paste the example code into a Windows Form that contains a <xref:System.Windows.Forms.NotifyIcon> named `notifyIcon1`.</span></span> <span data-ttu-id="50856-165">フォーム`SetBalloonTip`のコンストラクターまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドからを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="50856-165">Call `SetBalloonTip` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-166">ユーザーが通知領域のアイコンをクリックした時点で発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-166">Occurs when the user clicks the icon in the notification area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-167">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-167">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-168">イベントの<xref:System.Windows.Forms.NotifyIcon.Click>処理方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-168">The following code example demonstrates handling the <xref:System.Windows.Forms.NotifyIcon.Click> event.</span></span> <span data-ttu-id="50856-169">この例では、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`のオブジェクトを含むフォームにコードを追加したことを前提としています。</span><span class="sxs-lookup"><span data-stu-id="50856-169">This example assumes that you have added the code to a form containing a <xref:System.Windows.Forms.NotifyIcon> object named `NotifyIcon1`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIconExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.NotifyIcon.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-170">アイコンのショートカット メニューを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-170">Gets or sets the shortcut menu for the icon.</span></span></summary>
        <value><span data-ttu-id="50856-171">アイコンの <see cref="T:System.Windows.Forms.ContextMenu" /> です。</span><span class="sxs-lookup"><span data-stu-id="50856-171">The <see cref="T:System.Windows.Forms.ContextMenu" /> for the icon.</span></span> <span data-ttu-id="50856-172">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="50856-172">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-173">メニューは、ユーザーがタスクバーの通知領域のアイコンを右クリックしたときに表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-173">The menu is shown when the user right-clicks an icon in the notification area of the taskbar.</span></span> <span data-ttu-id="50856-174">ショートカットメニューは、ポップアップメニューとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="50856-174">Shortcut menus also are known as pop-up menus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-175"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-175">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-176">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-176">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-177">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-177">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-178">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-178">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.NotifyIcon.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-179"><see cref="T:System.Windows.Forms.NotifyIcon" /> に関連付けられたショートカット メニューを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-179">Gets or sets the shortcut menu associated with the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></summary>
        <value><span data-ttu-id="50856-180"><see cref="T:System.Windows.Forms.ContextMenuStrip" /> に関連付けられている <see cref="T:System.Windows.Forms.NotifyIcon" />。</span><span class="sxs-lookup"><span data-stu-id="50856-180">The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with the <see cref="T:System.Windows.Forms.NotifyIcon" /></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="notifyIcon.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="50856-181">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50856-181"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="50856-182"><see cref="T:System.Windows.Forms.NotifyIcon" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="50856-182">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.NotifyIcon" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-183">タスクバーの通知領域のアイコンをダブルクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-183">Occurs when the user double-clicks the icon in the notification area of the taskbar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-184">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-184">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-185"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-185">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-186">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-186">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-187">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-187">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-188">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-188">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.Click" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.NotifyIcon.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-189">現在のアイコンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-189">Gets or sets the current icon.</span></span></summary>
        <value><span data-ttu-id="50856-190"><see cref="T:System.Drawing.Icon" /> コンポーネントによって表示される <see cref="T:System.Windows.Forms.NotifyIcon" />。</span><span class="sxs-lookup"><span data-stu-id="50856-190">The <see cref="T:System.Drawing.Icon" /> displayed by the <see cref="T:System.Windows.Forms.NotifyIcon" /> component.</span></span> <span data-ttu-id="50856-191">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="50856-191">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50856-192"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-192">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-193">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-193">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-194">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-194">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-195">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-195">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-196">ユーザーがマウスで <see cref="T:System.Windows.Forms.NotifyIcon" /> をクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-196">Occurs when the user clicks a <see cref="T:System.Windows.Forms.NotifyIcon" /> with the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-197">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-197">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-198">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-198">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-199">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseClick>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-199">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.MouseClick> event.</span></span> <span data-ttu-id="50856-200">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-200">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-201">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-201">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-202">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-202">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-203">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseClick>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-203">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#510](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#510)]
 [!code-vb[System.Windows.Forms.EventExamples#510](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#510)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-204">ユーザーがマウスで <see cref="T:System.Windows.Forms.NotifyIcon" /> をダブルクリックすると発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-204">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.NotifyIcon" /> with the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-205">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-205">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-206">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-206">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-207">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-207">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick> event.</span></span> <span data-ttu-id="50856-208">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-208">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-209">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-209">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-210">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-210">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-211">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-211">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#511](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#511)]
 [!code-vb[System.Windows.Forms.EventExamples#511](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#511)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-212">ポインターがタスクバーの通知領域のアイコンの上にあるときに、マウス ボタンを押すと発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-212">Occurs when the user presses the mouse button while the pointer is over the icon in the notification area of the taskbar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-213">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-213">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-214">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-214">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-215">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseDown>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-215">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.MouseDown> event.</span></span> <span data-ttu-id="50856-216">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-216">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-217">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-217">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-218">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-218">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-219">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseDown>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-219">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.MouseDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#512](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#512)]
 [!code-vb[System.Windows.Forms.EventExamples#512](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#512)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-220">ポインターがタスクバーの通知領域のアイコンの上にあるときに、マウスを移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-220">Occurs when the user moves the mouse while the pointer is over the icon in the notification area of the taskbar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-221">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-221">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-222">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-222">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-223">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseMove>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-223">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.MouseMove> event.</span></span> <span data-ttu-id="50856-224">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-224">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-225">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-225">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-226">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-226">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-227">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseMove>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-227">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.MouseMove> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#513](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#513)]
 [!code-vb[System.Windows.Forms.EventExamples#513](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#513)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NotifyIcon.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-228">ポインターがタスクバーの通知領域のアイコンの上にあるときに、マウス ボタンを離すと発生します。</span><span class="sxs-lookup"><span data-stu-id="50856-228">Occurs when the user releases the mouse button while the pointer is over the icon in the notification area of the taskbar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-229">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="50856-229">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-230">このメンバーの使用例を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-230">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="50856-231">この例では、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseUp>イベントの発生を報告します。</span><span class="sxs-lookup"><span data-stu-id="50856-231">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.NotifyIcon.MouseUp> event.</span></span> <span data-ttu-id="50856-232">このレポートは、イベントがいつ発生し、デバッグに役立つかを理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="50856-232">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="50856-233">複数のイベントまたは頻繁に発生するイベントについてレポート<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>する<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>には、メッセージをに置き換える<xref:System.Windows.Forms.TextBox>か、または複数行に追加することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="50856-233">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="50856-234">コード例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `NotifyIcon1`の型のインスタンスを含むプロジェクトに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-234">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.NotifyIcon> named `NotifyIcon1`.</span></span> <span data-ttu-id="50856-235">次に、イベントハンドラーが<xref:System.Windows.Forms.NotifyIcon.MouseUp>イベントに関連付けられていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="50856-235">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.NotifyIcon.MouseUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#514](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#514)]
 [!code-vb[System.Windows.Forms.EventExamples#514](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#514)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
        <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowBalloonTip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50856-236">タスクバーにバルーン ヒントを表示します。</span><span class="sxs-lookup"><span data-stu-id="50856-236">Displays the balloon tip in the taskbar.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowBalloonTip">
      <MemberSignature Language="C#" Value="public void ShowBalloonTip (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowBalloonTip(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.ShowBalloonTip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowBalloonTip (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowBalloonTip(int timeout);" />
      <MemberSignature Language="F#" Value="member this.ShowBalloonTip : int -&gt; unit" Usage="notifyIcon.ShowBalloonTip timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="50856-237">バルーン ヒントを表示する時間 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="50856-237">The time period, in milliseconds, the balloon tip should display.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="50856-238">Windows Vista 以降、このパラメーターは非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="50856-238">This parameter is deprecated as of Windows Vista.</span></span> <span data-ttu-id="50856-239">現在、通知の表示時間は、システムのアクセシビリティ設定に基づいています。</span><span class="sxs-lookup"><span data-stu-id="50856-239">Notification display times are now based on system accessibility settings.</span></span>  
  
</para></block></param>
        <summary><span data-ttu-id="50856-240">指定した期間、タスク バーにバルーン ヒントを表示します。</span><span class="sxs-lookup"><span data-stu-id="50856-240">Displays a balloon tip in the taskbar for the specified time period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-241">タイムアウトの最小値と最大値は、オペレーティングシステムによって適用され、それぞれ 10 ~ 30 秒ですが、これはオペレーティングシステムによって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="50856-241">Minimum and maximum timeout values are enforced by the operating system and are typically 10 and 30 seconds, respectively, however this can vary depending on the operating system.</span></span> <span data-ttu-id="50856-242">タイムアウト値が大きすぎるか小さすぎる場合は、適切な最小値または最大値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="50856-242">Timeout values that are too large or too small are adjusted to the appropriate minimum or maximum value.</span></span> <span data-ttu-id="50856-243">さらに、ユーザーがコンピューターを使用していないと思われる場合 (キーボードイベントまたはマウスイベントが発生していない場合)、システムはこの時間をタイムアウトに対してカウントしません。</span><span class="sxs-lookup"><span data-stu-id="50856-243">In addition, if the user does not appear to be using the computer (no keyboard or mouse events are occurring) then the system does not count this time towards the timeout.</span></span>  
  
 <span data-ttu-id="50856-244">タスクバーに表示できるバルーンヒントは一度に1つだけです。</span><span class="sxs-lookup"><span data-stu-id="50856-244">Only one balloon tip can display on the taskbar at a time.</span></span> <span data-ttu-id="50856-245">現在タスクバーに表示されているバルーンヒントを表示しようと`timeout`すると、値が無視されます。</span><span class="sxs-lookup"><span data-stu-id="50856-245">Attempting to display a balloon tip when one is currently displayed on the taskbar causes the `timeout` value to be ignored.</span></span> <span data-ttu-id="50856-246">動作は、オペレーティングシステムと、バルーンヒントが別のアプリケーションからのものであるか、同じアプリケーションであるかによって若干異なります。</span><span class="sxs-lookup"><span data-stu-id="50856-246">The behavior is slightly different depending on the operating system and whether the balloon tip is from another, or the same, application.</span></span> <span data-ttu-id="50856-247">2番目のバルーンヒントが別のアプリケーションからのものである場合、の`timeout`値に関係なく、最初のバルーンヒントに最小タイムアウト値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-247">When the second balloon tip is from another application, the first balloon tip will display for the minimum timeout value before the second appears, regardless of the value of `timeout`.</span></span> <span data-ttu-id="50856-248">ほとんどの場合、バルーンヒントが同じアプリケーションからのものである場合、 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A>メソッドへの別の呼び出しが行われると、最初のバルーンヒントがすぐに閉じます。</span><span class="sxs-lookup"><span data-stu-id="50856-248">In most cases, if the balloon tips are from the same application, the first balloon tip immediately closes when another call to the <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> method is made.</span></span> <span data-ttu-id="50856-249">場合によっては、最初のバルーンの上に2番目のバルーンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-249">In some cases the second balloon will open on top of the first balloon.</span></span>  
  
 <span data-ttu-id="50856-250">タイトルのテキストは、バルーンの上部付近に太字のフォントで表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-250">The title text will display in a bold font near the top of the balloon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-251">次のコード例は、<xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="50856-251">The following code example demonstrates how to use the <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> method.</span></span> <span data-ttu-id="50856-252">この例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `notifyIcon1`のを含む Windows フォームにコード例を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-252">To run this example, paste the example code into a Windows Form that contains a <xref:System.Windows.Forms.NotifyIcon> named `notifyIcon1`.</span></span> <span data-ttu-id="50856-253">フォーム`SetBalloonTip`のコンストラクターまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドからを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="50856-253">Call `SetBalloonTip` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50856-254"><paramref name="timeout" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="50856-254"><paramref name="timeout" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowBalloonTip">
      <MemberSignature Language="C#" Value="public void ShowBalloonTip (int timeout, string tipTitle, string tipText, System.Windows.Forms.ToolTipIcon tipIcon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowBalloonTip(int32 timeout, string tipTitle, string tipText, valuetype System.Windows.Forms.ToolTipIcon tipIcon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NotifyIcon.ShowBalloonTip(System.Int32,System.String,System.String,System.Windows.Forms.ToolTipIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowBalloonTip (timeout As Integer, tipTitle As String, tipText As String, tipIcon As ToolTipIcon)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowBalloonTip(int timeout, System::String ^ tipTitle, System::String ^ tipText, System::Windows::Forms::ToolTipIcon tipIcon);" />
      <MemberSignature Language="F#" Value="member this.ShowBalloonTip : int * string * string * System.Windows.Forms.ToolTipIcon -&gt; unit" Usage="notifyIcon.ShowBalloonTip (timeout, tipTitle, tipText, tipIcon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tipTitle" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tipText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tipIcon" Type="System.Windows.Forms.ToolTipIcon" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="50856-255">バルーン ヒントを表示する時間 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="50856-255">The time period, in milliseconds, the balloon tip should display.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="50856-256">Windows Vista 以降、このパラメーターは非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="50856-256">This parameter is deprecated as of Windows Vista.</span></span> <span data-ttu-id="50856-257">現在、通知の表示時間は、システムのアクセシビリティ設定に基づいています。</span><span class="sxs-lookup"><span data-stu-id="50856-257">Notification display times are now based on system accessibility settings.</span></span>  
  
</para></block></param>
        <param name="tipTitle"><span data-ttu-id="50856-258">バルーン ヒントに表示するタイトル。</span><span class="sxs-lookup"><span data-stu-id="50856-258">The title to display on the balloon tip.</span></span></param>
        <param name="tipText"><span data-ttu-id="50856-259">バルーン ヒントに表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="50856-259">The text to display on the balloon tip.</span></span></param>
        <param name="tipIcon"><span data-ttu-id="50856-260"><see cref="T:System.Windows.Forms.ToolTipIcon" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="50856-260">One of the <see cref="T:System.Windows.Forms.ToolTipIcon" /> values.</span></span></param>
        <summary><span data-ttu-id="50856-261">指定したタイトル、テキスト、アイコンを含むバルーン ヒントを、指定した時間だけタスク バーに表示します。</span><span class="sxs-lookup"><span data-stu-id="50856-261">Displays a balloon tip with the specified title, text, and icon in the taskbar for the specified time period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-262">タイムアウトの最小値と最大値は、オペレーティングシステムによって適用され、それぞれ 10 ~ 30 秒ですが、これはオペレーティングシステムによって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="50856-262">Minimum and maximum timeout values are enforced by the operating system and are typically 10 and 30 seconds, respectively, however this can vary depending on the operating system.</span></span> <span data-ttu-id="50856-263">タイムアウト値が大きすぎるか小さすぎる場合は、適切な最小値または最大値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="50856-263">Timeout values that are too large or too small are adjusted to the appropriate minimum or maximum value.</span></span> <span data-ttu-id="50856-264">さらに、ユーザーがコンピューターを使用していないと思われる場合 (キーボードイベントまたはマウスイベントが発生していない場合)、システムはこの時間をタイムアウトに対してカウントしません。</span><span class="sxs-lookup"><span data-stu-id="50856-264">In addition, if the user does not appear to be using the computer (no keyboard or mouse events are occurring) then the system does not count this time towards the timeout.</span></span>  
  
 <span data-ttu-id="50856-265">タスクバーに表示できるバルーンヒントは一度に1つだけです。</span><span class="sxs-lookup"><span data-stu-id="50856-265">Only one balloon tip can display on the taskbar at a time.</span></span> <span data-ttu-id="50856-266">現在タスクバーに表示されているバルーンヒントを表示しようと`timeout`すると、値が無視されます。</span><span class="sxs-lookup"><span data-stu-id="50856-266">Attempting to display a balloon tip when one is currently displayed on the taskbar causes the `timeout` value to be ignored.</span></span> <span data-ttu-id="50856-267">動作は、オペレーティングシステムと、バルーンヒントが別のアプリケーションからのものであるか、同じアプリケーションであるかによって若干異なります。</span><span class="sxs-lookup"><span data-stu-id="50856-267">The behavior is slightly different depending on the operating system and whether the balloon tip is from another, or the same, application.</span></span> <span data-ttu-id="50856-268">2番目のバルーンヒントが別のアプリケーションからのものである場合、の`timeout`値に関係なく、最初のバルーンヒントに最小タイムアウト値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-268">When the second balloon tip is from another application, the first balloon tip will display for the minimum timeout value before the second appears, regardless of the value of `timeout`.</span></span> <span data-ttu-id="50856-269">ほとんどの場合、バルーンヒントが同じアプリケーションからのものである場合、 <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A>メソッドへの別の呼び出しが行われると、最初のバルーンヒントがすぐに閉じます。</span><span class="sxs-lookup"><span data-stu-id="50856-269">In most cases, if the balloon tips are from the same application, the first balloon tip immediately closes when another call to the <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> method is made.</span></span> <span data-ttu-id="50856-270">場合によっては、最初のバルーンの上に2番目のバルーンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-270">In some cases the second balloon will open on top of the first balloon.</span></span>  
  
 <span data-ttu-id="50856-271">タイトルのテキストは、バルーンの上部付近に太字のフォントで表示されます。</span><span class="sxs-lookup"><span data-stu-id="50856-271">The title text will display in a bold font near the top of the balloon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-272">次のコード例は、<xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> メソッドの使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="50856-272">The following code example demonstrates how to use the <xref:System.Windows.Forms.NotifyIcon.ShowBalloonTip%2A> method.</span></span> <span data-ttu-id="50856-273">この例を実行するには、という名前<xref:System.Windows.Forms.NotifyIcon> `notifyIcon1`のを含む Windows フォームにコード例を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-273">To run this example, paste the example code into a Windows Form that contains a <xref:System.Windows.Forms.NotifyIcon> named `notifyIcon1`.</span></span> <span data-ttu-id="50856-274">この例の<xref:System.Windows.Forms.Control.DoubleClick> `Form1_DoubleClick`メソッドをフォームのイベントに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="50856-274">Associate the `Form1_DoubleClick` method in this example with the form's <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.NotifyIconBalloonTip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIconBalloonTip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIconBalloonTip/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50856-275"><paramref name="timeout" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="50856-275"><paramref name="timeout" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50856-276"><paramref name="tipText" /> は、<see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="50856-276"><paramref name="tipText" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="50856-277"><paramref name="tipIcon" /> が <see cref="T:System.Windows.Forms.ToolTipIcon" /> のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="50856-277"><paramref name="tipIcon" /> is not a member of <see cref="T:System.Windows.Forms.ToolTipIcon" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="50856-278">アプリケーションウィンドウにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="50856-278">for access to application windows.</span></span> <span data-ttu-id="50856-279">関連する列挙型:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="50856-279">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.NotifyIcon.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-280"><see cref="T:System.Windows.Forms.NotifyIcon" /> に関するデータを格納するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-280">Gets or sets an object that contains data about the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></summary>
        <value><span data-ttu-id="50856-281"><see cref="T:System.Object" /> に関するデータを格納する <see cref="T:System.Windows.Forms.NotifyIcon" />。</span><span class="sxs-lookup"><span data-stu-id="50856-281">The <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Windows.Forms.NotifyIcon" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.NotifyIcon.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-282">マウス ポインターが通知領域アイコンの上にあるときに表示されるツールヒント テキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-282">Gets or sets the ToolTip text displayed when the mouse pointer rests on a notification area icon.</span></span></summary>
        <value><span data-ttu-id="50856-283">マウス ポインターが通知領域アイコンの上にあるときに表示されるツールヒント テキスト。</span><span class="sxs-lookup"><span data-stu-id="50856-283">The ToolTip text displayed when the mouse pointer rests on a notification area icon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-284">テキストが`null`の場合は、ツールヒントは表示されません。</span><span class="sxs-lookup"><span data-stu-id="50856-284">If the text is `null`, no ToolTip is displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-285"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-285">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-286">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-286">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-287">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-287">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-288">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-288">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50856-289">ツールヒント テキストの長さが 63 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="50856-289">ToolTip text is more than 63 characters long.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NotifyIcon.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.NotifyIcon.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50856-290">アイコンをタスクバーの通知領域に表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="50856-290">Gets or sets a value indicating whether the icon is visible in the notification area of the taskbar.</span></span></summary>
        <value><span data-ttu-id="50856-291">通知領域にアイコンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50856-291"><see langword="true" /> if the icon is visible in the notification area; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="50856-292">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="50856-292">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50856-293">既定値はである`false`ため、通知領域にアイコンが表示されるようにするには、 <xref:System.Windows.Forms.NotifyIcon.Visible%2A>プロパティをに`true`設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="50856-293">Since the default value is `false`, in order for the icon to show up in the notification area, you must set the <xref:System.Windows.Forms.NotifyIcon.Visible%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50856-294"><xref:System.Windows.Forms.NotifyIcon>クラスを使用して、通知領域にアプリケーションのアイコンを表示するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="50856-294">The following code example demonstrates using the <xref:System.Windows.Forms.NotifyIcon> class to display an icon for an application in the notification area.</span></span> <span data-ttu-id="50856-295">この例<xref:System.Windows.Forms.NotifyIcon.Icon%2A>では<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A> <xref:System.Windows.Forms.NotifyIcon.Visible%2A> 、、、 <xref:System.Windows.Forms.NotifyIcon.DoubleClick> 、およびの各プロパティを設定し、イベントを処理する方法を示します。 <xref:System.Windows.Forms.NotifyIcon.Text%2A></span><span class="sxs-lookup"><span data-stu-id="50856-295">The example demonstrates setting the <xref:System.Windows.Forms.NotifyIcon.Icon%2A>, <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A>, <xref:System.Windows.Forms.NotifyIcon.Text%2A>, and <xref:System.Windows.Forms.NotifyIcon.Visible%2A> properties and handling the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event.</span></span> <span data-ttu-id="50856-296">終了<xref:System.Windows.Forms.ContextMenu>項目を\*\*\*\* 持つが<xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType>プロパティに割り当てられます。これにより、ユーザーはアプリケーションを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="50856-296">A <xref:System.Windows.Forms.ContextMenu> with an **Exit** item on it is assigned to the <xref:System.Windows.Forms.NotifyIcon.ContextMenu%2A?displayProperty=nameWithType> property, which allows the user to close the application.</span></span> <span data-ttu-id="50856-297">イベントが発生すると、アプリケーションフォームは<xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType>メソッドを呼び出すことによってアクティブ化されます。 <xref:System.Windows.Forms.NotifyIcon.DoubleClick></span><span class="sxs-lookup"><span data-stu-id="50856-297">When the <xref:System.Windows.Forms.NotifyIcon.DoubleClick> event occurs, the application form is activated by calling the <xref:System.Windows.Forms.Form.Activate%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CPP/source.cpp#1)]
 [!code-csharp[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/CS/source.cs#1)]
 [!code-vb[System.Windows.Forms.NotifyIcon#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.NotifyIcon/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
