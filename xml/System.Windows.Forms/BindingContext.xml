<Type Name="BindingContext" FullName="System.Windows.Forms.BindingContext">
  <TypeSignature Language="C#" Value="public class BindingContext : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingContext extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingContext" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingContext&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingContext : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e616b-101"><see cref="T:System.Windows.Forms.BindingManagerBase" /> クラスから継承されるすべてのオブジェクトについて、<see cref="T:System.Windows.Forms.Control" /> オブジェクトのコレクションを管理します。</span><span class="sxs-lookup"><span data-stu-id="e616b-101">Manages the collection of <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects for any object that inherits from the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-102">各 Windows フォームには少なくとも 1 つ<xref:System.Windows.Forms.BindingContext>を管理するオブジェクト、<xref:System.Windows.Forms.BindingManagerBase>フォームのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-102">Each Windows Form has at least one <xref:System.Windows.Forms.BindingContext> object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form.</span></span> <span data-ttu-id="e616b-103"><xref:System.Windows.Forms.BindingManagerBase>クラスは抽象である戻り値の型、<xref:System.Windows.Forms.BindingContext.Item%2A>プロパティが、<xref:System.Windows.Forms.CurrencyManager>または<xref:System.Windows.Forms.PropertyManager>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-103">Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="e616b-104">オブジェクトではなく、オブジェクトの一覧)、1 つのプロパティのみを返すことができるかどうか、データ ソースには、<xref:System.Type>は、<xref:System.Windows.Forms.PropertyManager>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-104">If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="e616b-105">たとえば、指定した場合、<xref:System.Windows.Forms.TextBox>データ ソースとして、<xref:System.Windows.Forms.PropertyManager>が返されます。</span><span class="sxs-lookup"><span data-stu-id="e616b-105">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned.</span></span> <span data-ttu-id="e616b-106">その一方で、データ ソースが実装するオブジェクトである場合<xref:System.Collections.IList>または<xref:System.ComponentModel.IBindingList>、<xref:System.Windows.Forms.CurrencyManager>が返されます。</span><span class="sxs-lookup"><span data-stu-id="e616b-106">On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned.</span></span>  
  
 <span data-ttu-id="e616b-107">Windows フォームでのデータ ソースごとに 1 つが<xref:System.Windows.Forms.CurrencyManager>または<xref:System.Windows.Forms.PropertyManager>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-107">For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="e616b-108">Windows フォームに関連付けられている複数のデータ ソースがある可能性がありますので、<xref:System.Windows.Forms.BindingContext>特定を取得することができます<xref:System.Windows.Forms.CurrencyManager>データ ソースに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="e616b-108">Because there may be multiple data sources associated with a Windows Form, the <xref:System.Windows.Forms.BindingContext> enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e616b-109">使用する場合、 <xref:System.Windows.Forms.BindingContext.Item%2A> 、プロパティ、<xref:System.Windows.Forms.BindingContext>新たに作成<xref:System.Windows.Forms.BindingManagerBase>が既に存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="e616b-109">When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the <xref:System.Windows.Forms.BindingContext> creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist.</span></span> <span data-ttu-id="e616b-110">これには、する一覧 (または、一覧)、返されたオブジェクトは管理されません可能性があります、混乱を招くことができます。</span><span class="sxs-lookup"><span data-stu-id="e616b-110">This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend.</span></span> <span data-ttu-id="e616b-111">無効なを返すことを防ぐために<xref:System.Windows.Forms.BindingManagerBase>を使用して、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドかどうかを目的の<xref:System.Windows.Forms.BindingManagerBase>既に存在します。</span><span class="sxs-lookup"><span data-stu-id="e616b-111">To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
 <span data-ttu-id="e616b-112">などのコンテナー コントロールを使用する場合、 <xref:System.Windows.Forms.GroupBox>、 <xref:System.Windows.Forms.Panel>、または<xref:System.Windows.Forms.TabControl>データ バインド コントロールを追加するには、作成することができます、<xref:System.Windows.Forms.BindingContext>だけコンテナーを制御して、そのコントロールのです。</span><span class="sxs-lookup"><span data-stu-id="e616b-112">If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a <xref:System.Windows.Forms.BindingContext> for just that container control and its controls.</span></span> <span data-ttu-id="e616b-113">独自で、フォームの各部分を管理することができますし、<xref:System.Windows.Forms.BindingManagerBase>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-113">Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="e616b-114">参照してください、<xref:System.Windows.Forms.BindingContext.%23ctor%2A>詳細については、複数のコンス トラクター<xref:System.Windows.Forms.BindingManagerBase>同じデータ ソースのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-114">See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source.</span></span>  
  
 <span data-ttu-id="e616b-115">追加する場合、<xref:System.Windows.Forms.TextBox>フォームとが通信データセット、コントロール内のテーブルの列にバインドするコントロール、<xref:System.Windows.Forms.BindingContext>そのフォームのです。</span><span class="sxs-lookup"><span data-stu-id="e616b-115">If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the <xref:System.Windows.Forms.BindingContext> of that form.</span></span> <span data-ttu-id="e616b-116"><xref:System.Windows.Forms.BindingContext>、さらに、固有の仕様に伝える<xref:System.Windows.Forms.CurrencyManager>そのデータの関連付けをします。</span><span class="sxs-lookup"><span data-stu-id="e616b-116">The <xref:System.Windows.Forms.BindingContext>, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association.</span></span> <span data-ttu-id="e616b-117">クエリを実行する場合、`Position`のプロパティ、 <xref:System.Windows.Forms.CurrencyManager>、バインディングされるは、現在のレコードを報告するよう<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e616b-117">If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="e616b-118">次のコード例では、<xref:System.Windows.Forms.TextBox>コントロールにバインドする、`FirstName`の列、`Customers`テーブルに対して、`dataSet1`を介してデータセット、<xref:System.Windows.Forms.BindingContext>上にあるフォームのです。</span><span class="sxs-lookup"><span data-stu-id="e616b-118">In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the <xref:System.Windows.Forms.BindingContext> for the form it is on.</span></span>  
  
```vb  
TextBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName")  
  
```  
  
```csharp  
textBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName");  
  
```  
  
```cpp  
textBox1->DataBindings->Add("Text", dataSet1, "Customers.FirstName");  
```  
  
 <span data-ttu-id="e616b-119">2 番目を追加することができます<xref:System.Windows.Forms.TextBox>コントロール (`TextBox2`) をフォームにバインドし、`LastName`の列、`Customers`同じデータセット内のテーブルです。</span><span class="sxs-lookup"><span data-stu-id="e616b-119">You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset.</span></span> <span data-ttu-id="e616b-120"><xref:System.Windows.Forms.BindingContext>は、最初のバインドの認識 (`TextBox1`に`Customers.FirstName`) で使用する同じため、<xref:System.Windows.Forms.CurrencyManager>両方のテキスト ボックスが、同じデータセットにバインドされているように、(`DataSet1`)。</span><span class="sxs-lookup"><span data-stu-id="e616b-120">The <xref:System.Windows.Forms.BindingContext> is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`).</span></span>  
  
```vb  
TextBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName")  
  
```  
  
```csharp  
textBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName");  
  
```  
  
```cpp  
textBox2->DataBindings->Add("Text", dataSet1, "Customers.LastName");  
```  
  
 <span data-ttu-id="e616b-121">バインドする場合`TextBox2`別のデータセットに、<xref:System.Windows.Forms.BindingContext>を作成し、2 つ目の管理<xref:System.Windows.Forms.CurrencyManager>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-121">If you bind `TextBox2` to a different dataset, the <xref:System.Windows.Forms.BindingContext> creates and manages a second <xref:System.Windows.Forms.CurrencyManager>.</span></span>  
  
 <span data-ttu-id="e616b-122">設定する方法を統一することが重要、<xref:System.Windows.Forms.ListControl.DataSource%2A>と<xref:System.Windows.Forms.ListControl.DisplayMember%2A>プロパティです。 それ以外の場合、<xref:System.Windows.Forms.BindingContext>管理者にエラーが発生、同じデータセットの複数の通貨を作成します。</span><span class="sxs-lookup"><span data-stu-id="e616b-122">It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the <xref:System.Windows.Forms.BindingContext> creates multiple currency managers for the same dataset, which results in errors.</span></span> <span data-ttu-id="e616b-123">次のコード例は、プロパティとそれに関連付けられた設定をいくつかの方法を示しています。<xref:System.Windows.Forms.BindingContext>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-123">The following code example shows a few ways to set the properties and their associated <xref:System.Windows.Forms.BindingContext> objects.</span></span> <span data-ttu-id="e616b-124">よう、コード全体で一貫性があれば、次のいずれかを使用して、プロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="e616b-124">You can set the properties using either of the following methods, as long as you are consistent throughout your code.</span></span>  
  
```vb  
ComboBox1.DataSource = DataSet1  
ComboBox1.DisplayMember = "Customers.FirstName"  
Me.BindingContext(dataSet1, "Customers").Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1;  
comboBox1.DisplayMember = "Customers.FirstName";  
this.BindingContext[dataSet1, "Customers"].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1;  
comboBox1->DisplayMember = "Customers.FirstName";  
this->BindingContext->get_Item(dataSet1, "Customers")->Position = 1;  
  
```  
  
```vb  
ComboBox1.DataSource = DataSet1.Customers  
ComboBox1.DisplayMember = "FirstName"  
Me.BindingContext(dataSet1.Customers).Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1.Customers;  
comboBox1.DisplayMember = "FirstName";  
this.BindingContext[dataSet1.Customers].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1->Customers;  
comboBox1->DisplayMember = "FirstName";  
this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;  
  
```  
  
> [!NOTE]
>  <span data-ttu-id="e616b-125">ほとんどの Windows フォーム アプリケーションのバインドを<xref:System.Windows.Forms.BindingSource>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-125">Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="e616b-126"><xref:System.Windows.Forms.BindingSource>コンポーネントをカプセル化、<xref:System.Windows.Forms.CurrencyManager>を公開し、<xref:System.Windows.Forms.CurrencyManager>プログラミング インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-126">The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface.</span></span> <span data-ttu-id="e616b-127">使用する場合、<xref:System.Windows.Forms.BindingSource>バインディングの場合は、によって公開されるメンバーを使用する必要があります、 <xref:System.Windows.Forms.BindingSource> "currency"を操作する (つまり、 `Position`) 経由ではなく、<xref:System.Windows.Forms.BindingContext>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-127">When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate "currency" (that is, `Position`) rather than go through the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-128">次のコード例は、4 つ作成<xref:System.Windows.Forms.Binding>5 つのコントロールをバインドするオブジェクト:、<xref:System.Windows.Forms.DateTimePicker>と 4 つ<xref:System.Windows.Forms.TextBox>コントロール-いくつかのデータ ソースにします。</span><span class="sxs-lookup"><span data-stu-id="e616b-128">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources.</span></span> <span data-ttu-id="e616b-129"><xref:System.Windows.Forms.BindingContext>を使用して取得、<xref:System.Windows.Forms.BindingManagerBase>データ ソースごとにします。</span><span class="sxs-lookup"><span data-stu-id="e616b-129">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e616b-130"><see cref="T:System.Windows.Forms.BindingContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e616b-130">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-131">複数を設定する場合は、 <xref:System.Windows.Forms.BindingManagerBase> 、同じデータ ソースのインスタンスを作成、新しい<xref:System.Windows.Forms.BindingContext>に設定し、<xref:System.Windows.Forms.Control.BindingContext%2A>から継承されるオブジェクトのプロパティ、<xref:System.Windows.Forms.Control>クラスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-131">If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="e616b-132">たとえば、2 つある<xref:System.Windows.Forms.BindingManagerBase>オブジェクト (から 2 つの異なる<xref:System.Windows.Forms.BindingContext>オブジェクト)、設定することができます、<xref:System.Windows.Forms.BindingManagerBase.Position%2A>の各プロパティ<xref:System.Windows.Forms.BindingManagerBase>ごとに異なる値。</span><span class="sxs-lookup"><span data-stu-id="e616b-132">For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values.</span></span> <span data-ttu-id="e616b-133">これにより、同じデータ ソースから別の値を表示するデータ バインド コントロールの各セットです。</span><span class="sxs-lookup"><span data-stu-id="e616b-133">This causes each set of data-bound controls to display different values from the same data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-134">次のコード例を作成する 2 つの新しい<xref:System.Windows.Forms.BindingContext>オブジェクトし、各オブジェクトに割り当てます、<xref:System.Windows.Forms.BindingContext>のプロパティ、<xref:System.Windows.Forms.GroupBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e616b-134">The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control.</span></span> <span data-ttu-id="e616b-135">`GroupBox1` 含まれています`TextBox1`、および`GroupBox2`が含まれています`TextBox2`(使用して行われますが、<xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A>のメソッド、<xref:System.Windows.Forms.Control.ControlCollection>クラス)。</span><span class="sxs-lookup"><span data-stu-id="e616b-135">`GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class).</span></span> <span data-ttu-id="e616b-136">この例で追加し、<xref:System.Windows.Forms.Binding>を 2 つのオブジェクト<xref:System.Windows.Forms.TextBox>コントロールが、それぞれを同じデータ ソースおよびデータ メンバーにバインドします。</span><span class="sxs-lookup"><span data-stu-id="e616b-136">The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member.</span></span> <span data-ttu-id="e616b-137">使用する 2 つのイベント ハンドラーも示します、<xref:System.Windows.Forms.BindingContext>から、<xref:System.Windows.Forms.GroupBox>を設定するコントロール、<xref:System.Windows.Forms.BindingManagerBase.Position%2A>プロパティに異なる<xref:System.Windows.Forms.BindingManagerBase>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-137">The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.</span></span>  
  
 [!code-cpp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="protected internal void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Add(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Add (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Add(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-138"><see cref="T:System.Object" /> に関連付けられている <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-138">The <see cref="T:System.Object" /> associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="e616b-139">追加する <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-139">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="e616b-140">特定のデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="e616b-140">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCore">
      <MemberSignature Language="C#" Value="protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddCore(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddCore (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddCore(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-141"><see cref="T:System.Windows.Forms.BindingManagerBase" /> に関連付けられたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-141">The object associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="e616b-142">追加する <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-142">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="e616b-143">特定のデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> をコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="e616b-143">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e616b-144"><paramref name="dataSource" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e616b-144"><paramref name="dataSource" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e616b-145">- または -</span><span class="sxs-lookup"><span data-stu-id="e616b-145">-or-</span></span>  
  
 <span data-ttu-id="e616b-146"><paramref name="listManager" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e616b-146"><paramref name="listManager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected internal void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e616b-147">すべての <see cref="T:System.Windows.Forms.BindingManagerBase" /> オブジェクトのコレクションを削除します。</span><span class="sxs-lookup"><span data-stu-id="e616b-147">Clears the collection of any <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCore">
      <MemberSignature Language="C#" Value="protected virtual void ClearCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.ClearCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e616b-148">コレクションを空にします。</span><span class="sxs-lookup"><span data-stu-id="e616b-148">Clears the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingContext.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e616b-149">処理されると、常に <see cref="T:System.NotImplementedException" /> が発生します。</span><span class="sxs-lookup"><span data-stu-id="e616b-149">Always raises a <see cref="T:System.NotImplementedException" /> when handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-150"><xref:System.Windows.Forms.BindingContext.CollectionChanged>イベントは廃止されておりを生成常に、<xref:System.NotImplementedException>を処理するとき。</span><span class="sxs-lookup"><span data-stu-id="e616b-150">The <xref:System.Windows.Forms.BindingContext.CollectionChanged> event is obsolete and always raises a <xref:System.NotImplementedException> when handled.</span></span> <span data-ttu-id="e616b-151">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="e616b-151">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e616b-152">すべての場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e616b-152">Occurs in all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e616b-153">指定した <see cref="T:System.Windows.Forms.BindingContext" /> が <see cref="T:System.Windows.Forms.BindingManagerBase" /> に格納されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-153">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-154">データ ソースを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-154">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <summary><span data-ttu-id="e616b-155">指定したデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingContext" /> が <see cref="T:System.Windows.Forms.BindingManagerBase" /> に格納されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-155">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <returns>
          <span data-ttu-id="e616b-156">指定した <see cref="T:System.Windows.Forms.BindingManagerBase" /> が <see cref="T:System.Windows.Forms.BindingContext" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-156"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-157">参照してください、<xref:System.Windows.Forms.Binding>利用できるデータ ソースとコントロールとデータ ソース間のバインディングの作成に関する情報の一覧のクラスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-157">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="e616b-158">参照してください、<xref:System.Windows.Forms.BindingContext.Item%2A>を取得する方法については、プロパティ、<xref:System.Windows.Forms.BindingManagerBase>データ ソースのみを使用します。</span><span class="sxs-lookup"><span data-stu-id="e616b-158">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-159">次のコード例では、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドを呼び出せば確認するかどうか、<xref:System.Windows.Forms.BindingManagerBase>フォーム上の各コントロールが存在します。</span><span class="sxs-lookup"><span data-stu-id="e616b-159">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form.</span></span> <span data-ttu-id="e616b-160">この例では、それぞれを渡して<xref:System.Data.DataTable>で、<xref:System.Data.DataSet>メソッドにします。</span><span class="sxs-lookup"><span data-stu-id="e616b-160">The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object, dataMember As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-161">データ ソースを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-161">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <param name="dataMember"><span data-ttu-id="e616b-162">特定の <see cref="T:System.Windows.Forms.BindingManagerBase" /> に解決される必要がある情報。</span><span class="sxs-lookup"><span data-stu-id="e616b-162">The information needed to resolve to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="e616b-163">指定したデータ ソースおよびデータ メンバーに関連付けられた <see cref="T:System.Windows.Forms.BindingContext" /> が <see cref="T:System.Windows.Forms.BindingManagerBase" /> に格納されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-163">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source and data member.</span></span></summary>
        <returns>
          <span data-ttu-id="e616b-164">指定した <see cref="T:System.Windows.Forms.BindingManagerBase" /> が <see cref="T:System.Windows.Forms.BindingContext" /> に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-164"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-165">参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-165">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="e616b-166">参照してください、<xref:System.Windows.Forms.BindingContext.Item%2A>を取得する方法については、プロパティ、<xref:System.Windows.Forms.BindingManagerBase>データ ソースおよびデータ メンバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="e616b-166">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-167">次のコード例では、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドを特定するかどうかをテストする<xref:System.Windows.Forms.BindingManagerBase>取得する前に存在する、<xref:System.Windows.Forms.BindingContext.Item%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e616b-167">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e616b-168">コレクションが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-168">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="e616b-169">コレクションが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-169"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-170">このプロパティは、<xref:System.Collections.ICollection> から派生してオーバーライドされ、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="e616b-170">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e616b-171"><see cref="T:System.Windows.Forms.BindingManagerBase" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-171">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-172">特定の <see cref="T:System.Windows.Forms.BindingManagerBase" /> に関連付けられたデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="e616b-172">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="e616b-173">指定したデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-173">Gets the <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source.</span></span></summary>
        <value><span data-ttu-id="e616b-174">指定したデータ ソースの <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-174">A <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-175">場合、このオーバー ロードを使用して、<xref:System.Windows.Forms.BindingManagerBase>するナビゲーション パスは不要です。</span><span class="sxs-lookup"><span data-stu-id="e616b-175">Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path.</span></span> <span data-ttu-id="e616b-176">たとえば場合、<xref:System.Windows.Forms.BindingManagerBase>のセットを管理<xref:System.Windows.Forms.Binding>使用するオブジェクト、<xref:System.Collections.ArrayList>または<xref:System.Data.DataTable>として、 <xref:System.Windows.Forms.Binding.DataSource%2A>、ナビゲーション パスは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="e616b-176">For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e616b-177"><xref:System.Windows.Forms.BindingContext.Item%2A>プロパティは常に返します、 <xref:System.Windows.Forms.BindingManagerBase>、返すことはありませんし`null`です。</span><span class="sxs-lookup"><span data-stu-id="e616b-177">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`.</span></span>  
  
 <span data-ttu-id="e616b-178">参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-178">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-179">次のコード例では、3 つを返します<xref:System.Windows.Forms.BindingManagerBase>オブジェクト: のいずれか、 <xref:System.Data.DataView>,、1 つの<xref:System.Collections.ArrayList>のいずれかと、<xref:System.Windows.Forms.Binding.DataSource%2A>の<xref:System.Windows.Forms.Binding>に属している、<xref:System.Windows.Forms.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e616b-179">The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic BindingContext.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.this Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object, string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object, dataMember As String) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^, System::String ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource, System::String ^ dataMember); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-180">特定の <see cref="T:System.Windows.Forms.BindingManagerBase" /> に関連付けられたデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="e616b-180">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="e616b-181">特定の <see cref="T:System.Windows.Forms.BindingManagerBase" /> に解決される情報を保持するナビゲーション パス。</span><span class="sxs-lookup"><span data-stu-id="e616b-181">A navigation path containing the information that resolves to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="e616b-182">指定したデータ ソースおよびデータ メンバーに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-182">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source and data member.</span></span></summary>
        <value><span data-ttu-id="e616b-183">指定したデータ ソースおよびデータ メンバーの <see cref="T:System.Windows.Forms.BindingManagerBase" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-183">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source and data member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-184">このオーバー ロードするときに使用する、<xref:System.Windows.Forms.BindingManagerBase>のセットを管理<xref:System.Windows.Forms.Binding>オブジェクト データ ソースが複数のオブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e616b-184">Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects.</span></span> <span data-ttu-id="e616b-185">たとえば、<xref:System.Data.DataSet>いくつかを含めることができます<xref:System.Data.DataTable>によってリンクされているオブジェクト<xref:System.Data.DataRelation>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e616b-185">For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects.</span></span> <span data-ttu-id="e616b-186">このような場合は、ナビゲーション パスが有効にする必要な<xref:System.Windows.Forms.BindingContext>を返す、正しい<xref:System.Windows.Forms.BindingManagerBase>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-186">In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e616b-187"><xref:System.Windows.Forms.BindingContext.Item%2A>プロパティは常に返します、 <xref:System.Windows.Forms.BindingManagerBase>、ときに、`dataMember`パラメーターが無効です。</span><span class="sxs-lookup"><span data-stu-id="e616b-187">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid.</span></span> <span data-ttu-id="e616b-188">返されません`null`です。</span><span class="sxs-lookup"><span data-stu-id="e616b-188">It will never return `null`.</span></span>  
  
 <span data-ttu-id="e616b-189">参照してください、<xref:System.Windows.Forms.Binding>できるデータ ソースの一覧、およびコントロールとデータ ソース間のバインディングを作成する方法についてのクラスです。</span><span class="sxs-lookup"><span data-stu-id="e616b-189">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="e616b-190">場合、必要な<xref:System.Windows.Forms.BindingManagerBase>管理の一覧は、ナビゲーション パスは一覧で終わってもする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e616b-190">If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list.</span></span> <span data-ttu-id="e616b-191">たとえば、次の c# コードがバインドされて、<xref:System.Windows.Forms.TextBox>の orders テーブルで、注文日を制御します。</span><span class="sxs-lookup"><span data-stu-id="e616b-191">For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders.</span></span> <span data-ttu-id="e616b-192">ナビゲーション パスが含まれる、 <xref:System.Data.DataTable.TableName%2A>、 <xref:System.Data.DataRelation.RelationName%2A>、および<xref:System.Data.DataColumn.ColumnName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-192">The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span> <span data-ttu-id="e616b-193">ただし、<xref:System.Windows.Forms.BindingManagerBase>のみを使用して取得する必要があります、<xref:System.Data.DataTable.TableName%2A>と<xref:System.Data.DataRelation.RelationName%2A>(これは一覧に解決されます)。</span><span class="sxs-lookup"><span data-stu-id="e616b-193">However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list).</span></span>  
  
```  
// The navigation path for a Binding ends with a property.  
textBox1.DataBindings.Add  
("Text", dataSet1, "Customers.custToOrders.OrderDate");  
// The navigation path for the BindingManagerBase ends with a list.  
BindingManagerBase bmOrders = this.BindingContext  
[dataSet1, "Customers.custToOrders"];  
```  
  
 <span data-ttu-id="e616b-194">返すときに、<xref:System.Windows.Forms.BindingManagerBase>と同じデータ ソースを使用する必要があります、<xref:System.Windows.Forms.Binding>およびナビゲーション パスのみを変更します。</span><span class="sxs-lookup"><span data-stu-id="e616b-194">When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path.</span></span>  
  
 <span data-ttu-id="e616b-195">使用して、<xref:System.Windows.Forms.BindingContext.Contains%2A>メソッドかどうかを必要な<xref:System.Windows.Forms.BindingManagerBase>既に存在します。</span><span class="sxs-lookup"><span data-stu-id="e616b-195">Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-196">次のコード例を使用する方法を示しています、<xref:System.Windows.Forms.BindingContext.Item%2A>を取得する、<xref:System.Windows.Forms.BindingManagerBase>の特定のバインディングです。</span><span class="sxs-lookup"><span data-stu-id="e616b-196">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingContext.Item%2A> to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding.</span></span> <span data-ttu-id="e616b-197">処理する方法も示しています、<xref:System.Windows.Forms.BindingManagerBase.BindingComplete>イベントを<xref:System.Windows.Forms.BindingManagerBase>同期を保つ複数のコントロールを同じデータ ソースにバインドされたコントロールの値のいずれかが変更されたとき。</span><span class="sxs-lookup"><span data-stu-id="e616b-197">It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="e616b-198">この例を実行するには、Windows フォームと呼び出しにコードを貼り付けます、`InitializeControlsAndData`フォームのコンス トラクターからのメソッドまたは<xref:System.Windows.Forms.Form.Load>イベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e616b-198">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="e616b-199">指定された <paramref name="dataMember" /> がデータ ソース内に存在しません。</span><span class="sxs-lookup"><span data-stu-id="e616b-199">The specified <paramref name="dataMember" /> does not exist within the data source.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent"><span data-ttu-id="e616b-200">イベント データを格納している <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-200">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e616b-201"><see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="e616b-201">Raises the <see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-202">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e616b-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e616b-203">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="e616b-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e616b-204"><xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="e616b-204">The <xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e616b-205">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e616b-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e616b-206">派生クラスで <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="e616b-206">When overriding <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="protected internal void Remove (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Remove(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Remove (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Remove(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-207">削除する <see cref="T:System.Windows.Forms.BindingManagerBase" /> に関連付けられたデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="e616b-207">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="e616b-208">指定したデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="e616b-208">Deletes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCore">
      <MemberSignature Language="C#" Value="protected virtual void RemoveCore (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveCore(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveCore (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveCore(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="e616b-209">削除する <see cref="T:System.Windows.Forms.BindingManagerBase" /> に関連付けられたデータ ソース。</span><span class="sxs-lookup"><span data-stu-id="e616b-209">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="e616b-210">指定したデータ ソースに関連付けられた <see cref="T:System.Windows.Forms.BindingManagerBase" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="e616b-210">Removes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (ar As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ ar, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar"><span data-ttu-id="e616b-211">コピー先の <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-211">An <see cref="T:System.Array" /> to copy into.</span></span></param>
        <param name="index"><span data-ttu-id="e616b-212">コピーの開始位置を示すコレクションのインデックス。</span><span class="sxs-lookup"><span data-stu-id="e616b-212">The collection index to begin copying from.</span></span></param>
        <summary><span data-ttu-id="e616b-213">コレクションのインデックスを開始位置として、指定した配列にコレクション要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="e616b-213">Copies the elements of the collection into a specified array, starting at the collection index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e616b-214"><see cref="T:System.Windows.Forms.CurrencyManager" /> によって管理される <see cref="T:System.Windows.Forms.BindingContext" /> オブジェクトの合計数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-214">Gets the total number of <see cref="T:System.Windows.Forms.CurrencyManager" /> objects managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <value><span data-ttu-id="e616b-215"><see cref="T:System.Windows.Forms.BindingContext" /> によって管理されるデータ ソースの数。</span><span class="sxs-lookup"><span data-stu-id="e616b-215">The number of data sources managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e616b-216">次のコード例の数を返します<xref:System.Windows.Forms.CurrencyManager>によって管理されるオブジェクト、<xref:System.Windows.Forms.BindingContext>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-216">The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e616b-217">コレクションの同期がとられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-217">Gets a value indicating whether the collection is synchronized.</span></span></summary>
        <value>
          <span data-ttu-id="e616b-218">コレクションがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-218"><see langword="true" /> if the collection is thread safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-219">このプロパティは、<xref:System.Collections.ICollection> から派生してオーバーライドされ、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="e616b-219">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e616b-220">同期 (スレッド セーフティ) に使用するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-220">Gets an object to use for synchronization (thread safety).</span></span></summary>
        <value><span data-ttu-id="e616b-221">このプロパティは、<see cref="T:System.Collections.ICollection" /> から派生してオーバーライドされ、常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e616b-221">This property is derived from <see cref="T:System.Collections.ICollection" />, and is overridden to always return <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e616b-222">コレクションの列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e616b-222">Gets an enumerator for the collection.</span></span></summary>
        <returns><span data-ttu-id="e616b-223">コレクションの <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-223">An <see cref="T:System.Collections.IEnumerator" /> for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-224"><xref:System.Collections.IEnumerator>によって返される、<xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A>メソッドが管理するコレクションを反復処理することができます、<xref:System.Windows.Forms.BindingContext>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-224">The <xref:System.Collections.IEnumerator> returned by the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e616b-225">次のコード例では、<xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A>を返すメソッドを<xref:System.Collections.IEnumerator>の<xref:System.Windows.Forms.BindingContext>です。</span><span class="sxs-lookup"><span data-stu-id="e616b-225">The following code example uses the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateBinding(class System.Windows.Forms.BindingContext newBindingContext, class System.Windows.Forms.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateBinding(System::Windows::Forms::BindingContext ^ newBindingContext, System::Windows::Forms::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBindingContext" Type="System.Windows.Forms.BindingContext" />
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
      </Parameters>
      <Docs>
        <param name="newBindingContext"><span data-ttu-id="e616b-226"><see cref="T:System.Windows.Forms.BindingContext" /> に関連付ける新しい <see cref="T:System.Windows.Forms.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-226">The new <see cref="T:System.Windows.Forms.BindingContext" /> to associate with the <see cref="T:System.Windows.Forms.Binding" />.</span></span></param>
        <param name="binding"><span data-ttu-id="e616b-227">新しい <see cref="T:System.Windows.Forms.Binding" /> に関連付ける <see cref="T:System.Windows.Forms.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="e616b-227">The <see cref="T:System.Windows.Forms.Binding" /> to associate with the new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="e616b-228"><see cref="T:System.Windows.Forms.Binding" /> を新しい <see cref="T:System.Windows.Forms.BindingContext" /> に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="e616b-228">Associates a <see cref="T:System.Windows.Forms.Binding" /> with a new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e616b-229">このメソッドを実装するコンポーネントのバインドを更新、<xref:System.Windows.Forms.IBindableComponent>ときに、その<xref:System.Windows.Forms.BindingContext>変更します。</span><span class="sxs-lookup"><span data-stu-id="e616b-229">This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>