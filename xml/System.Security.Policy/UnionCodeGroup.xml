<Type Name="UnionCodeGroup" FullName="System.Security.Policy.UnionCodeGroup">
  <TypeSignature Language="C#" Value="public sealed class UnionCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UnionCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.UnionCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnionCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnionCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="32c9a-101">現在のコード グループのポリシー ステートメントと、メンバーシップ条件が一致しているその子コード グループのポリシー ステートメントの和集合であるポリシー ステートメントを持つコード グループを表します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-101">Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups.</span></span> <span data-ttu-id="32c9a-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="32c9a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c9a-103">コード グループとは、コード アクセス セキュリティ ポリシーの構成要素です。</span><span class="sxs-lookup"><span data-stu-id="32c9a-103">Code groups are the building blocks of code access security policy.</span></span> <span data-ttu-id="32c9a-104">各ポリシー レベルは、以下を含む子コード グループ (とそのために)、ツリーを形成するルート コード グループで構成されます。</span><span class="sxs-lookup"><span data-stu-id="32c9a-104">Each policy level consists of a root code group that can have child code groups (and so on), forming a tree.</span></span> <span data-ttu-id="32c9a-105">各コード グループは、特定のアセンブリに属しているか、または、そのアセンブリの証拠に基づいて決定するメンバーシップ条件を持ちます。</span><span class="sxs-lookup"><span data-stu-id="32c9a-105">Each code group has a membership condition that determines if a given assembly belongs to it or not, based on the evidence for that assembly.</span></span> <span data-ttu-id="32c9a-106">メンバーシップ条件を持つ指定したアセンブリと一致する唯一のコード グループとその子コード グループは、ポリシーを適用します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-106">Only code groups whose membership conditions match a given assembly and their child code groups apply policy.</span></span>  
  
 <span data-ttu-id="32c9a-107"><xref:System.Security.Policy.UnionCodeGroup> コード グループの最も一般的な型です。一致するすべての子コード グループのポリシー ステートメント (さらに拡張してその子コード グループ) は、一致する親コード グループの権限のセットの結合します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-107"><xref:System.Security.Policy.UnionCodeGroup> is the most common type of code group; the policy statement of all matching child code groups (and by extension their child code groups) are combined with the permission set of the matching parent code group.</span></span> <span data-ttu-id="32c9a-108">したがって、そのメンバーシップ条件に一致すると、コード グループを形成証拠にも一致するすべての子コード グループのポリシー ステートメントの和集合とします。</span><span class="sxs-lookup"><span data-stu-id="32c9a-108">Thus, if its membership condition matches, this code group forms the union of its policy statement and those of all its child code groups that also match the evidence.</span></span>  
  
 <span data-ttu-id="32c9a-109"><xref:System.Security.Policy.UnionCodeGroup> コード グループは、CASPOL ユーティリティによって作成されたコード グループ (を参照してください[Caspol.exe (コード アクセス セキュリティ ポリシー ツール)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md))。</span><span class="sxs-lookup"><span data-stu-id="32c9a-109"><xref:System.Security.Policy.UnionCodeGroup> code groups are the code groups created by the CASPOL utility (see [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnionCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, class System.Security.Policy.PolicyStatement policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition, policy As PolicyStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnionCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition, System::Security::Policy::PolicyStatement ^ policy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="policy" Type="System.Security.Policy.PolicyStatement" />
      </Parameters>
      <Docs>
        <param name="membershipCondition"><span data-ttu-id="32c9a-110">証拠を確認して、コード グループがポリシーを適用するかどうかを決定するためのメンバーシップ条件。</span><span class="sxs-lookup"><span data-stu-id="32c9a-110">A membership condition that tests evidence to determine whether this code group applies policy.</span></span></param>
        <param name="policy"><span data-ttu-id="32c9a-111">メンバーシップ条件に一致するコードに許可するアクセス許可セットと属性という形式の、コード グループに対するポリシー ステートメント。</span><span class="sxs-lookup"><span data-stu-id="32c9a-111">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</span></span></param>
        <summary><span data-ttu-id="32c9a-112"><see cref="T:System.Security.Policy.UnionCodeGroup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-112">Initializes a new instance of the <see cref="T:System.Security.Policy.UnionCodeGroup" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c9a-113">このコンス トラクターは、基本的なコード グループを作成し、カスタム コード グループのコンス トラクターから呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="32c9a-113">This constructor creates a basic code group and should be called from the constructors of custom code groups.</span></span> <span data-ttu-id="32c9a-114">使用して子コード グループを追加することができます、<xref:System.Security.Policy.CodeGroup.AddChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="32c9a-114">You can add child code groups by using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="32c9a-115"><paramref name="membershipCondition" /> パラメーターの型が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="32c9a-115">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span></span>  
  
 <span data-ttu-id="32c9a-116">- または -</span><span class="sxs-lookup"><span data-stu-id="32c9a-116">-or-</span></span>  
  
 <span data-ttu-id="32c9a-117"><paramref name="policy" /> パラメーターの型が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="32c9a-117">The type of the <paramref name="policy" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32c9a-118">現在のコード グループの詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-118">Makes a deep copy of the current code group.</span></span></summary>
        <returns><span data-ttu-id="32c9a-119">メンバーシップ条件と子コード グループも含む、現在のコード グループの同等コピー。</span><span class="sxs-lookup"><span data-stu-id="32c9a-119">An equivalent copy of the current code group, including its membership conditions and child code groups.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c9a-120">このメソッドは、コード グループに含まれるすべてのオブジェクトのコピーは作成もできるように、コード グループの詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-120">This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.UnionCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32c9a-121">マージ ロジックを取得します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-121">Gets the merge logic.</span></span></summary>
        <value><span data-ttu-id="32c9a-122">常に文字列 "Union"。</span><span class="sxs-lookup"><span data-stu-id="32c9a-122">Always the string "Union".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence"><span data-ttu-id="32c9a-123">アセンブリの証拠。</span><span class="sxs-lookup"><span data-stu-id="32c9a-123">The evidence for the assembly.</span></span></param>
        <summary><span data-ttu-id="32c9a-124">一連の証拠について、コード グループおよびその子孫のポリシーを解決します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-124">Resolves policy for the code group and its descendants for a set of evidence.</span></span></summary>
        <returns><span data-ttu-id="32c9a-125">オプションの属性を持つコード グループによって与えられたアクセス許可から成るポリシー ステートメント。コード グループがポリシーを適用しない (指定した証拠とメンバーシップ条件が一致しない) 場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="32c9a-125">A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c9a-126">読み込まれるアセンブリの証拠を指定するには、このメソッドは、最初に指定された証拠メンバーシップ条件をチェックして、コード グループを評価します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-126">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="32c9a-127">一致がある場合、このメソッドは、子コード グループの評価を含む、コード グループのポリシー ステートメントを返します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-127">If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</span></span>  
  
 <span data-ttu-id="32c9a-128">合併コード グループのすべての子コード グループのメンバーシップ条件に一致証拠も解決されると、およびすべての結果として得られるポリシー ステートメントが親合併コード グループのポリシー ステートメントを使用して、和集合を形成します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-128">For union code groups, all child code groups whose membership condition match the evidence are also resolved, and all resulting policy statements form a union with the policy statement of the parent union code group.</span></span> <span data-ttu-id="32c9a-129">各子コード グループの種類の決定方法に応じて、その子グループの適用方法、それぞれ<xref:System.Security.Policy.UnionCodeGroup.Resolve%2A>メソッドは動作します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-129">Each child code group type determines how its child groups are applied, depending on how their respective <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> methods work.</span></span>  
  
 <span data-ttu-id="32c9a-130">.NET Framework セキュリティ システムを使用して<xref:System.Security.Policy.UnionCodeGroup.Resolve%2A>アセンブリで、結果として得られる、ポリシー ステートメントと、コードから読み込まれているコードに与えるアクセス許可を要求を決定するポリシー レベル上。</span><span class="sxs-lookup"><span data-stu-id="32c9a-130">The .NET Framework security system uses <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</span></span>  
  
 <span data-ttu-id="32c9a-131">このメソッドが戻るメンバーシップ条件と一致しない、指定した証拠、 `null`、それ以外のコード グループのポリシーのステートメントに等しいアクセス許可セットを返す (P) を設定しして続行します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-131">If the membership condition does not match the specified evidence, this method returns `null`; otherwise, it sets the permission set to be returned (P) equal to the code group's policy statement, and then continues.</span></span> <span data-ttu-id="32c9a-132">子コード グループのそれぞれに対して、メソッドは同じ証拠; を使用して、コード グループを解決します。場合は、結果は`null`P と同じ P と子コード グループのポリシー ステートメントの和集合に設定します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-132">For each child code group, the method resolves the code group with the same evidence; if the result is not `null`, it sets P equal to the union of P and the child code group's policy statement.</span></span> <span data-ttu-id="32c9a-133">P で、現在のコード グループのポリシー ステートメントと子グループのすべてのポリシー ステートメントの和集合が、次を返します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-133">It then returns P, which is now the union of the current code group's policy statement and all child group policy statements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="32c9a-134"><paramref name="evidence" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="32c9a-134">The <paramref name="evidence" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Policy.PolicyException"><span data-ttu-id="32c9a-135">複数のコード グループ (親コード グループと子コード グループを含む) が <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" /> とマークされています。</span><span class="sxs-lookup"><span data-stu-id="32c9a-135">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence"><span data-ttu-id="32c9a-136">アセンブリの証拠。</span><span class="sxs-lookup"><span data-stu-id="32c9a-136">The evidence for the assembly.</span></span></param>
        <summary><span data-ttu-id="32c9a-137">一致しているコード グループを解決します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-137">Resolves matching code groups.</span></span></summary>
        <returns><span data-ttu-id="32c9a-138">証拠と一致するコード グループの完全なセット。</span><span class="sxs-lookup"><span data-stu-id="32c9a-138">The complete set of code groups that were matched by the evidence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32c9a-139">読み込まれるアセンブリの証拠を指定するには、このメソッドは、最初に指定された証拠メンバーシップ条件をチェックして、コード グループを評価します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-139">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="32c9a-140">一致がある場合、このメソッドは、ルート コード グループを返します。</span><span class="sxs-lookup"><span data-stu-id="32c9a-140">If there is a match, this method returns a root code group.</span></span> <span data-ttu-id="32c9a-141">返されるコード グループは、さらに含むことができるも子コード グループでは、戻り値が指定された証拠と一致したコード グループの完全なセットを反映するための子コード グループを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="32c9a-141">The code group that is returned may contain child code groups, which, in turn, may also contain child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="32c9a-142"><paramref name="evidence" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="32c9a-142">The <paramref name="evidence" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>