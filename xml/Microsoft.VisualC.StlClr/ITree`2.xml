<Type Name="ITree&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b19944490e7b682411f7ffd931eb0da656289f92" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69316159" /></Metadata><TypeSignature Language="C#" Value="public interface ITree&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITree`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.ITree`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITree(Of TKey, TValue)&#xA;Implements IBidirectionalContainer(Of TValue), ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class ITree : ICloneable, Microsoft::VisualC::StlClr::Generic::IBidirectionalContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ITree&lt;'Key, 'Value&gt; = interface&#xA;    interface IBidirectionalContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="27668-101">被制御シーケンス内の要素のキー コンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="27668-101">The type of the key component of an element in the controlled sequence.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="27668-102">被制御シーケンス内の要素の値コンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="27668-102">The type of the value component of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="27668-103"><c>hash_map</c>、<c>hash_multimap</c>、<c>hash_set</c>、<c>hash_multiset</c> の各 STL/CLR オブジェクトのインターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="27668-103">Defines the interface of the STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, and <c>hash_multiset</c> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="27668-104">詳細については、「 [hash\_map (stl/clr](/cpp/dotnet/hash-map-stl-clr) [\_](/cpp/dotnet/hash-set-stl-clr) [\_)」、「hash multimap (stl/clr](/cpp/dotnet/hash-multimap-stl-clr))」、「hash set (stl/clr)」、および「[ハッシュ\_マルチセット (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-104">For more information, see [hash\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hash\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hash\_set (STL/CLR)](/cpp/dotnet/hash-set-stl-clr), and [hash\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iTree.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-105">被制御シーケンスの最初の要素、または空のシーケンスの末尾の次の位置を指定する双方向反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-105">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="27668-106">これを使用して被制御シーケンスの現在の先頭 (<paramref name="current" />) を指定する反復子を取得しますが、このステータスは被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="27668-106">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="27668-107">被制御シーケンスの先頭を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-107">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="27668-108">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-108">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-109">詳細については、「 [hash\_map:: begin (stl/clr)](/cpp/dotnet/hash-map-begin-stl-clr)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-begin-stl-clr) [\_](/cpp/dotnet/hash-set-begin-stl-clr)begin (stl/clr)」、「hash set:: begin (stl/clr)」、および「 [hash\_マルチセット:: begin (stl/clr)](/cpp/dotnet/hash-multiset-begin-stl-clr) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-109">For more information, see [hash\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hash\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hash\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), and [hash\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iTree.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27668-110">コンテナーからすべての要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="27668-110">Removes all elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-111">詳細については[、\_「hash map:: clear (stl/clr)](/cpp/dotnet/hash-map-clear-stl-clr)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-clear-stl-clr)clear (stl/clr [\_](/cpp/dotnet/hash-set-clear-stl-clr))」、「hash set:: clear (stl/clr)」、および「 [hash\_マルチセット:: clear (stl/clr)](/cpp/dotnet/hash-multiset-clear-stl-clr) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-111">For more information, see [hash\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hash\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hash\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), and [hash\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function count (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int count(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member count : 'Key -&gt; int" Usage="iTree.count _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="27668-112">検索するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-112">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="27668-113">指定したキーに一致する要素の数を検索します。</span><span class="sxs-lookup"><span data-stu-id="27668-113">Finds the number of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-114"><paramref name="_Keyval" /> と同じキーを持つ、被制御シーケンス内の要素の数。</span><span class="sxs-lookup"><span data-stu-id="27668-114">The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />.</span></span> <span data-ttu-id="27668-115">被制御シーケンス内の指定したキーに一致する現在の要素の数を確認する場合に、これを使用します。</span><span class="sxs-lookup"><span data-stu-id="27668-115">You use it to determine the number of elements currently in the controlled sequence that match a specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-116">詳細については、「 [hash\_map:: count (stl/clr](/cpp/dotnet/hash-map-count-stl-clr) [\_](/cpp/dotnet/hash-multimap-count-stl-clr))」、「hash multimap:: [\_](/cpp/dotnet/hash-set-count-stl-clr)count (stl/clr)」、「hash set:: count (stl/clr)」、および「 [hash\_マルチセット:: count (stl/clr)](/cpp/dotnet/hash-multiset-count-stl-clr) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-116">For more information, see [hash\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hash\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hash\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), and [hash\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iTree.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27668-117">コンテナーに要素が存在しないかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="27668-117">Tests whether no elements are present in the container.</span></span></summary>
        <returns><span data-ttu-id="27668-118">コンテナーに要素が存在しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="27668-118"><see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-119">詳細については[、\_「hash map:: empty (stl/clr)](/cpp/dotnet/hash-map-empty-stl-clr)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-empty-stl-clr) [\_](/cpp/dotnet/hash-set-empty-stl-clr)empty (stl/clr)」、「hash set:: empty (stl/clr)」、および「 [hash\_マルチセット:: empty (stl/clr)](/cpp/dotnet/hash-multiset-empty-stl-clr) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-119">For more information, see [hash\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hash\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hash\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), and [hash\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iTree.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-120">被制御シーケンスの末尾の次の位置を指す双方向反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-120">A bidirectional iterator that points just beyond the end of the controlled sequence.</span></span> <span data-ttu-id="27668-121">被制御シーケンスの末尾を指定する反復子を取得する場合に、これを使用します。</span><span class="sxs-lookup"><span data-stu-id="27668-121">You use it to obtain an iterator that designates the end of the controlled sequence.</span></span> <span data-ttu-id="27668-122">このステータスは、被制御シーケンスの長さが変わっても変化しません。</span><span class="sxs-lookup"><span data-stu-id="27668-122">Its status does not change when the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="27668-123">被制御シーケンスの末尾を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-123">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="27668-124">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-124">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-125">詳細については[、\_「hash map:: end (stl/clr](/cpp/dotnet/hash-map-end-stl-clr) [\_](/cpp/dotnet/hash-multimap-end-stl-clr))」、「hash multimap:: end (stl/clr) [\_」、「hash set:: end (stl/clr)](/cpp/dotnet/hash-set-end-stl-clr)」、および「 [\_hash マルチセット:: end (stl/clr)](/cpp/dotnet/hash-multiset-end-stl-clr)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-125">For more information, see [hash\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hash\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hash\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), and [hash\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public void equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_range (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), ContainerBidirectionalIterator(Of TValue)), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ equal_range(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member equal_range :  * 'Key -&gt; unit" Usage="iTree.equal_range (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-126">被制御シーケンス内の指定したキーに一致する現在の要素の範囲を決定する反復子のペア。</span><span class="sxs-lookup"><span data-stu-id="27668-126">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="27668-127">検索するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-127">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="27668-128">指定したキーに一致する範囲を検索します。</span><span class="sxs-lookup"><span data-stu-id="27668-128">Finds the range that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-129">反復子のペア。</span><span class="sxs-lookup"><span data-stu-id="27668-129">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-130">詳細については、「 [hash\_map:: equal_range (stl/clr](/cpp/dotnet/hash-map-stl-clr#equal_range))」、 [\_「hash multimap::](/cpp/dotnet/hash-multimap-stl-clr#equal_range) [\_](/cpp/dotnet/hash-set-stl-clr#equal_range)equal_range (stl/clr)」、「hash set:: equal_range (stl/clr)」、および「[ハッシュ\_のマルチセット::」を参照してください。equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range)。</span><span class="sxs-lookup"><span data-stu-id="27668-130">For more information, see [hash\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range), [hash\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hash\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), and [hash\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27668-131">コンテナーから要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="27668-131">Removes elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-132">詳細については、「 [hash\_map:: erase (stl/clr)](/cpp/dotnet/hash-map-stl-clr#erase)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-stl-clr#erase)erase (stl/clr)」、 [\_「hash set:: erase (stl/clr)](/cpp/dotnet/hash-set-stl-clr#erase)」、および「ハッシュ[\_のマルチセット:: erase (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#erase) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-132">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int erase(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member erase : 'Key -&gt; int" Usage="iTree.erase _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="27668-133">消去するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-133">The key value to erase.</span></span></param>
        <summary><span data-ttu-id="27668-134">指定したキーに一致する要素をコンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="27668-134">Removes elements from the container that match the specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-135">削除された要素の数。</span><span class="sxs-lookup"><span data-stu-id="27668-135">The number of elements removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-136">詳細については、「 [hash\_map:: erase (stl/clr)](/cpp/dotnet/hash-map-stl-clr#erase)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-stl-clr#erase)erase (stl/clr)」、 [\_「hash set:: erase (stl/clr)](/cpp/dotnet/hash-set-stl-clr#erase)」、および「ハッシュ[\_のマルチセット:: erase (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#erase) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-136">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-137">削除される要素の次の最初の要素を指定する反復子。このような要素が存在しない場合は <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="27668-137">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="27668-138">消去する要素を指す反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-138">An iterator that points to the element to erase.</span></span></param>
        <summary><span data-ttu-id="27668-139">指定した反復子によって指定される要素をコンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="27668-139">Removes from the container the element that is specified by the given iterator.</span></span></summary>
        <returns><span data-ttu-id="27668-140">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-140">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="27668-141">詳細については、「 [hash\_map:: erase (stl/clr)](/cpp/dotnet/hash-map-stl-clr#erase)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-stl-clr#erase)erase (stl/clr)」、 [\_「hash set:: erase (stl/clr)](/cpp/dotnet/hash-set-stl-clr#erase)」、および「ハッシュ[\_のマルチセット:: erase (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#erase) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-141">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _First_iter As ContainerBidirectionalIterator(Of TValue), _Last_iter As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-142">削除される要素の次の最初の要素を指定する反復子。このような要素が存在しない場合は <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="27668-142">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="27668-143">消去する範囲の先頭を指す反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-143">An iterator that points to the beginning of the range to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="27668-144">消去する範囲の直後の位置を指す反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-144">An iterator that points to the position that immediately follows the range to erase.</span></span></param>
        <summary><span data-ttu-id="27668-145">指定した反復子間の要素をコンテナーから削除します。</span><span class="sxs-lookup"><span data-stu-id="27668-145">Removes from the container the elements between the specified iterators.</span></span></summary>
        <returns><span data-ttu-id="27668-146">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-146">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="27668-147">詳細については、「 [hash\_map:: erase (stl/clr)](/cpp/dotnet/hash-map-stl-clr#erase)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-stl-clr#erase)erase (stl/clr)」、 [\_「hash set:: erase (stl/clr)](/cpp/dotnet/hash-set-stl-clr#erase)」、および「ハッシュ[\_のマルチセット:: erase (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#erase) 」を参照してください。.</span><span class="sxs-lookup"><span data-stu-id="27668-147">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public void find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function find (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ find(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member find :  * 'Key -&gt; unit" Usage="iTree.find (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-148">見つかった要素の 1 つを指定する反復子。要素が見つからなかった場合は <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="27668-148">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="27668-149">検索するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-149">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="27668-150">指定したキーに一致する要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="27668-150">Finds an element that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-151">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-151">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-152">詳細については、「 [hash\_map:: find (stl/clr)](/cpp/dotnet/hash-map-stl-clr#find)」、「 [hash\_multimap::](/cpp/dotnet/hash-multimap-stl-clr#find)find (stl/clr [\_)」、「hash set:: find (](/cpp/dotnet/hash-set-stl-clr#find)stl/clr)」、および「 [hash\_マルチセット:: find (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#find)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-152">For more information, see [hash\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hash\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hash\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), and [hash\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27668-153">コンテナーに要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="27668-153">Adds elements to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-154">詳細については、「 [hash\_map:: insert (stl/clr](/cpp/dotnet/hash-map-stl-clr#insert) [\_](/cpp/dotnet/hash-multimap-stl-clr#insert))」、「hash multimap:: insert (stl/clr)」、「 [hash\_set:: insert (stl/clr](/cpp/dotnet/hash-set-stl-clr#insert))」、および「 [hash\_マルチセット:: insert (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="27668-154">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.Generic.IEnumerable&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Right As IEnumerable(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : seq&lt;'Value&gt; -&gt; unit" Usage="iTree.insert _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.Generic.IEnumerable&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="27668-155">コンテナーに挿入する列挙体。</span><span class="sxs-lookup"><span data-stu-id="27668-155">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="27668-156">指定した列挙体をコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="27668-156">Adds the given enumeration to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-157">詳細については、「 [hash\_map:: insert (stl/clr](/cpp/dotnet/hash-map-stl-clr#insert) [\_](/cpp/dotnet/hash-multimap-stl-clr#insert))」、「hash multimap:: insert (stl/clr)」、「 [hash\_set:: insert (stl/clr](/cpp/dotnet/hash-set-stl-clr#insert))」、および「 [hash\_マルチセット:: insert (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="27668-157">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.insert (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="27668-158">挿入する要素の範囲の先頭を指す反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-158">An iterator that points to the beginning of the range of elements to insert.</span></span></param>
        <param name="_Last"><span data-ttu-id="27668-159">挿入する要素の範囲の直後の要素を指す反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-159">An iterator that points to the element that immediately follows the range of elements to insert.</span></span></param>
        <summary><span data-ttu-id="27668-160">指定した反復子によって指定される要素をコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="27668-160">Adds to the container the elements specified by the given iterators.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-161">詳細については、「 [hash\_map:: insert (stl/clr](/cpp/dotnet/hash-map-stl-clr#insert) [\_](/cpp/dotnet/hash-multimap-stl-clr#insert))」、「hash multimap:: insert (stl/clr)」、「 [hash\_set:: insert (stl/clr](/cpp/dotnet/hash-set-stl-clr#insert))」、および「 [hash\_マルチセット:: insert (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="27668-161">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt;&amp; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), Boolean), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, bool&gt; ^ % , TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * 'Value -&gt; unit" Usage="iTree.insert (, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-162">値 X のペア。X.second が true の場合、X.first によって、新しく挿入された要素が指定されます。true ではない場合、X.first によって、順序が等しい既存の要素が指定されます。新しい要素は挿入されません。</span><span class="sxs-lookup"><span data-stu-id="27668-162">A pair of values X. If X.second is true, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</span></span></param>
        <param name="_Val"><span data-ttu-id="27668-163">コンテナーに挿入するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-163">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="27668-164">指定した値をコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="27668-164">Adds the given value to the container.</span></span></summary>
        <returns><span data-ttu-id="27668-165">反復子のペア。</span><span class="sxs-lookup"><span data-stu-id="27668-165">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-166">詳細については、「 [hash\_map:: insert (stl/clr](/cpp/dotnet/hash-map-stl-clr#insert) [\_](/cpp/dotnet/hash-multimap-stl-clr#insert))」、「hash multimap:: insert (stl/clr)」、「 [hash\_set:: insert (stl/clr](/cpp/dotnet/hash-set-stl-clr#insert))」、および「 [hash\_マルチセット:: insert (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="27668-166">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iTree.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-167">新しく挿入される要素を指定する反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-167">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="27668-168">コンテナーのどこに要素を挿入するかを指定する反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-168">An iterator that specifies where in the container to insert the element.</span></span> <span data-ttu-id="27668-169">これは、パフォーマンスを上げるために使用される、あくまでもヒントです。</span><span class="sxs-lookup"><span data-stu-id="27668-169">This is a hint only and is used to improve performance.</span></span> <span data-ttu-id="27668-170">この位置に要素が挿入されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="27668-170">The element might not be inserted at this location.</span></span></param>
        <param name="_Val"><span data-ttu-id="27668-171">コンテナーに挿入するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-171">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="27668-172">指定した要素をコンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="27668-172">Adds the given element to the container.</span></span></summary>
        <returns><span data-ttu-id="27668-173">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-173">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="27668-174">詳細については、「 [hash\_map:: insert (stl/clr](/cpp/dotnet/hash-map-stl-clr#insert) [\_](/cpp/dotnet/hash-multimap-stl-clr#insert))」、「hash multimap:: insert (stl/clr)」、「 [hash\_set:: insert (stl/clr](/cpp/dotnet/hash-set-stl-clr#insert))」、および「 [hash\_マルチセット:: insert (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="27668-174">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function key_comp () As BinaryDelegate(Of TKey, TKey, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TKey, TKey, bool&gt; ^ key_comp();" />
      <MemberSignature Language="F#" Value="abstract member key_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Key, 'Key, bool&gt;" Usage="iTree.key_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27668-175">被制御シーケンスを順序付けるために使用される順序付けデリゲートを返します。</span><span class="sxs-lookup"><span data-stu-id="27668-175">Returns the ordering delegate that is used to order the controlled sequence.</span></span> <span data-ttu-id="27668-176">2 つのキーを比較する場合にこれを使用します。</span><span class="sxs-lookup"><span data-stu-id="27668-176">You use it to compare two keys.</span></span></summary>
        <returns><span data-ttu-id="27668-177">被制御シーケンスを順序付けるために使用される順序付けデリゲート。</span><span class="sxs-lookup"><span data-stu-id="27668-177">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-178">詳細については、「 [hash\_map:: key_comp (stl/clr](/cpp/dotnet/hash-map-stl-clr#key_comp))」、 [\_「hash multimap::](/cpp/dotnet/hash-multimap-stl-clr#key_comp) [\_](/cpp/dotnet/hash-set-stl-clr#key_comp)key_comp (stl/clr)」、「hash set:: key_comp (stl/clr)」、および「 [hash\_マルチセット:: key_comp」を参照してください。STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp)。</span><span class="sxs-lookup"><span data-stu-id="27668-178">For more information, see [hash\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hash\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hash\_set::key_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), and [hash\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public void lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function lower_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ lower_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member lower_bound :  * 'Key -&gt; unit" Usage="iTree.lower_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-179"><paramref name="_Keyval" /> と同じバケットにハッシュされ、<paramref name="_Keyval" /> と順序が等価である、被制御シーケンス内の最初の要素を指定する反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-179">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="27668-180">こうした要素が存在しない場合は、<see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27668-180">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="27668-181">検索するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-181">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="27668-182">指定したキーに一致する要素の範囲の先頭を検索します。</span><span class="sxs-lookup"><span data-stu-id="27668-182">Finds the beginning of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-183">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-183">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-184">詳細については、「 [hash\_map:: lower_bound (stl/clr](/cpp/dotnet/hash-map-stl-clr#lower_bound))」、 [\_「hash multimap::](/cpp/dotnet/hash-multimap-stl-clr#lower_bound) [\_](/cpp/dotnet/hash-set-stl-clr#lower_bound)lower_bound (stl/clr)」、「hash set:: lower_bound (stl/clr)」、および「[ハッシュ\_のマルチセット::」を参照してください。lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound)。</span><span class="sxs-lookup"><span data-stu-id="27668-184">For more information, see [hash\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hash\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hash\_set::lower_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), and [hash\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iTree.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-185">被制御シーケンスの最後の要素、または空のシーケンスの先頭を越えた位置を指定する反転反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-185">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="27668-186">したがって、これは反転シーケンスの <paramref name="beginning" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-186">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="27668-187">逆の順序で見た被制御シーケンスの現在の (<paramref name="current" />) 先頭を指定する反復子を取得する場合に、これを使用します。</span><span class="sxs-lookup"><span data-stu-id="27668-187">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="27668-188">このステータスは、被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="27668-188">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="27668-189">反転被制御シーケンスの先頭を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-189">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="27668-190">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-190">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-191">詳細については、「 [hash\_map:: rbegin (stl/clr](/cpp/dotnet/hash-map-stl-clr#rbegin) [\_](/cpp/dotnet/hash-multimap-stl-clr#rbegin))」、「hash multimap:: rbegin (stl/clr [\_)」、「hash set:: rbegin (stl/clr)](/cpp/dotnet/hash-set-stl-clr#rbegin)」、および「 [hash\_マルチセット:: rbegin (stl/clr)」を参照してください。](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="27668-191">For more information, see [hash\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hash\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hash\_set::rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin), and [hash\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iTree.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-192">被制御シーケンスの先頭の次の位置を指す反転反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-192">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="27668-193">したがって、これは反転シーケンスの <paramref name="end" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-193">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="27668-194">逆の順序で見た被制御シーケンスの現在の (<paramref name="current" />) 末尾を指定する反復子を取得する場合に、これを使用します。</span><span class="sxs-lookup"><span data-stu-id="27668-194">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="27668-195">このステータスは、被制御シーケンスの長さが変わると変化することがあります。</span><span class="sxs-lookup"><span data-stu-id="27668-195">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="27668-196">反転被制御シーケンスの末尾を指定します。</span><span class="sxs-lookup"><span data-stu-id="27668-196">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="27668-197">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-197">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-198">詳細については[、\_「hash map:: rend (stl/clr](/cpp/dotnet/hash-map-stl-clr#rend) [\_)」、「hash multimap:: rend (stl/clr](/cpp/dotnet/hash-multimap-stl-clr#rend) [\_)」、「hash set:: rend (stl/clr)](/cpp/dotnet/hash-set-stl-clr#rend)」、および「 [hash\_マルチセット:: rend (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#rend)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-198">For more information, see [hash\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hash\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hash\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), and [hash\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iTree.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27668-199">コンテナー内の要素の数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="27668-199">Counts the number of elements in the container.</span></span></summary>
        <returns><span data-ttu-id="27668-200">被制御シーケンスの長さ。</span><span class="sxs-lookup"><span data-stu-id="27668-200">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-201">詳細については、「 [hash\_map:: size (stl/clr](/cpp/dotnet/hash-map-stl-clr#size) [\_](/cpp/dotnet/hash-set-stl-clr#size) [\_](/cpp/dotnet/hash-multimap-stl-clr#size))」、「hash multimap:: size (stl/clr)」、「hash set:: size (stl/clr)」、および「 [\_hash マルチセット:: size (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#size)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-201">For more information, see [hash\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hash\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hash\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), and [hash\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.ITree`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (_Right As ITree(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::ITree&lt;TKey, TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.ITree&lt;'Key, 'Value&gt; -&gt; unit" Usage="iTree.swap _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="27668-202">コンテンツの交換に使用するコンテナー。</span><span class="sxs-lookup"><span data-stu-id="27668-202">The container with which to swap contents.</span></span></param>
        <summary><span data-ttu-id="27668-203">2 つのコンテナーのコンテンツを交換します。</span><span class="sxs-lookup"><span data-stu-id="27668-203">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-204">詳細については[、\_「hash map:: swap (stl/clr](/cpp/dotnet/hash-map-stl-clr#swap) [\_](/cpp/dotnet/hash-multimap-stl-clr#swap))」、「hash multimap:: [\_](/cpp/dotnet/hash-set-stl-clr#swap)swap (stl/clr)」、「hash set:: swap (stl/clr)」、および「 [hash\_マルチセット:: swap (stl/clr)](/cpp/dotnet/hash-multiset-stl-clr#swap)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27668-204">For more information, see [hash\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hash\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hash\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), and [hash\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public void upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function upper_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ upper_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member upper_bound :  * 'Key -&gt; unit" Usage="iTree.upper_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="27668-205"><paramref name="_Keyval" /> と同じバケットにハッシュされ、<paramref name="_Keyval" /> と順序が等価である、被制御シーケンス内の最後の要素後の最初の要素を指定する反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-205">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="27668-206">こうした要素が存在しない場合は、<see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27668-206">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="27668-207">検索するキー値。</span><span class="sxs-lookup"><span data-stu-id="27668-207">The key value to search for.</span></span></param>
        <summary><span data-ttu-id="27668-208">指定したキーに一致する要素の範囲の末尾を検索します。</span><span class="sxs-lookup"><span data-stu-id="27668-208">Finds the end of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="27668-209">反復子。</span><span class="sxs-lookup"><span data-stu-id="27668-209">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="27668-210">詳細については、「 [hash\_map:: upper_bound (stl/clr](/cpp/dotnet/hash-map-stl-clr#upper_bound))」、 [\_「hash multimap::](/cpp/dotnet/hash-multimap-stl-clr#upper_bound) [\_](/cpp/dotnet/hash-set-stl-clr#upper_bound)upper_bound (stl/clr)」、「hash set:: upper_bound (stl/clr)」、および「[ハッシュ\_のマルチセット::」を参照してください。upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound)。</span><span class="sxs-lookup"><span data-stu-id="27668-210">For more information, see [hash\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hash\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hash\_set::upper_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), and [hash\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function value_comp () As BinaryDelegate(Of TValue, TValue, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TValue, TValue, bool&gt; ^ value_comp();" />
      <MemberSignature Language="F#" Value="abstract member value_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Value, 'Value, bool&gt;" Usage="iTree.value_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27668-211">被制御シーケンスを順序付けるために使用される順序付けデリゲートを返します。</span><span class="sxs-lookup"><span data-stu-id="27668-211">Returns the ordering delegate that is used to order the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="27668-212">被制御シーケンスを順序付けるために使用される順序付けデリゲート。</span><span class="sxs-lookup"><span data-stu-id="27668-212">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27668-213">詳細については、「 [hash\_map:: value_comp (stl/clr](/cpp/dotnet/hash-map-stl-clr#value_comp))」、 [\_「hash multimap::](/cpp/dotnet/hash-multimap-stl-clr#value_comp) [\_](/cpp/dotnet/hash-set-stl-clr#value_comp)value_comp (stl/clr)」、「hash set:: value_comp (stl/clr)」、および「[ハッシュ\_のマルチセット::」を参照してください。value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp)。</span><span class="sxs-lookup"><span data-stu-id="27668-213">For more information, see [hash\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hash\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hash\_set::value_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp), and [hash\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
