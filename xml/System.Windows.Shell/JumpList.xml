<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a34dc3b4c5089fd168ebe9c317e67dd697492469" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70643494" /></Metadata><TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows 7 タスク バー ボタンにメニューとして表示される項目およびタスクの一覧を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タスク[!INCLUDE[win7](~/includes/win7-md.md)]バーには、ジャンプリストを使用してプログラムをタスクバーのボタンから直接起動する機能が拡張されています。 ジャンプリストは、 [!INCLUDE[win7](~/includes/win7-md.md)] [スタート] メニューでも使用されます。 ジャンプリストにアクセスするには、タスクバーのボタンを右クリックするか、[スタート] メニューのプログラムの横にある矢印をクリックします。 ジャンプリストの詳細については、「Windows ユーザーエクスペリエンスの相互作用ガイドライン」の「[タスクバー](https://go.microsoft.com/fwlink/?LinkId=178478) 」セクションを参照してください。  
  
 クラス<xref:System.Windows.Shell.JumpList>は、 [!INCLUDE[win7](~/includes/win7-md.md)]タスクバーのジャンプリスト機能のマネージラッパーを提供し、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルに渡されるデータを管理します。 <xref:System.Windows.Shell.JumpList>クラスによって公開されている機能は、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]よりも[!INCLUDE[win7](~/includes/win7-md.md)]前のバージョンのでは使用できません。 <xref:System.Windows.Shell.JumpList>クラスを使用するアプリケーションは、の[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]他のバージョンで実行されますが、ジャンプリストは使用できません。 Windows シェルとネイティブジャンプリスト Api の詳細については、「[タスクバーの拡張機能](https://go.microsoft.com/fwlink/?LinkId=178479)」を参照してください。  
  
 次の図は、Windows Media Player のジャンプリストを示しています。これらの項目は、**タスク**と**頻繁**に使用されるカテゴリに含まれています。  
  
 ![Windows Media Player ジャンプリスト](~/add/media/wpfshell-jumplist.png "Windows Media Player ジャンプリスト")  
Windows メディア プレーヤーのジャンプ リスト  
  
## <a name="configuring-a-jump-list"></a>ジャンプリストの構成  
 ジャンプリストには、 <xref:System.Windows.Shell.JumpTask> <xref:System.Windows.Shell.JumpPath>との2種類の項目を含めることができます。 はプログラムへのリンクであり、 <xref:System.Windows.Shell.JumpPath>はファイルへのリンクです。 <xref:System.Windows.Shell.JumpTask> と <xref:System.Windows.Shell.JumpTask.Title%2A>  が指定 <xref:System.Windows.Shell.JumpTask> されていないを作成することにより、ジャンプリスト内の項目を視覚的に区別できます。 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> この空<xref:System.Windows.Shell.JumpTask>のは、ジャンプリストに水平線として表示されます。  
  
> [!NOTE]
>  で指定されたファイルの型<xref:System.Windows.Shell.JumpPath>がアプリケーションに登録されていない場合、ジャンプリストにファイルは表示されません。 たとえば、.txt ファイルをポイントする<xref:System.Windows.Shell.JumpPath>を追加する場合、.txt ファイルを処理するためにアプリケーションを登録する必要があります。 詳細については、「[ファイルの関連付けの概要](https://go.microsoft.com/fwlink/?LinkId=178480)」を参照してください。  
  
 ジャンプ項目は、 <xref:System.Windows.Shell.JumpList>内のカテゴリに配置されます。 既定<xref:System.Windows.Shell.JumpItem>では、は **[タスク]** カテゴリに表示されます。 または、のを指定<xref:System.Windows.Shell.JumpItem.CustomCategory%2A> <xref:System.Windows.Shell.JumpItem>することもできます。  
  
 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティと<xref:System.Windows.Shell.JumpList> **** プロパティを設定することによって、標準の最近のカテゴリと頻繁に使用するカテゴリをに表示するかどうかを指定でき <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> ます。 **** これらのカテゴリのコンテンツは、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルによって管理されます。 これらのカテゴリには同じデータが多く含まれて<xref:System.Windows.Shell.JumpList>いる場合があるため、通常は一方を表示しますが、両方は表示しません。 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)][共通ファイル] ダイアログボックスを使用して開いたり、ファイルの種類の関連付けによってアプリケーションを開いたりする場合に、[最近使った項目] を自動的に管理します。 ジャンプリストを使用して項目にアクセスするときに、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>メソッドを呼び出すことによって、**最近**のカテゴリに項目を追加するようシェルに通知できます。  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Windows シェルへのジャンプリストの適用  
 シェルのジャンプリストに直接アクセスしたり、その内容を<xref:System.Windows.Shell.JumpList>クラスに読み込んだりすることはできません。 代わりに、クラス<xref:System.Windows.Shell.JumpList>は、操作可能なジャンプリストの表現を提供し、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルに適用します。 通常は、アプリケーション<xref:System.Windows.Shell.JumpList>を最初に実行するときに、を作成して設定します。 ただし、実行時<xref:System.Windows.Shell.JumpList>にを変更または置き換えることができます。  
  
 <xref:System.Windows.Shell.JumpList>プロパティを設定したら、タスクバーのジャンプリスト<xref:System.Windows.Shell.JumpList>にコンテンツを表示する前に、を Windows シェルに適用する必要があります。 これは、 <xref:System.Windows.Shell.JumpList>が最初にアプリケーションにアタッチされるときに、XAML またはメソッドの<xref:System.Windows.Shell.JumpList.SetJumpList%2A>呼び出しで自動的に行われます。 実行時<xref:System.Windows.Shell.JumpList>にの内容を変更する場合は、 <xref:System.Windows.Shell.JumpList.Apply%2A>メソッドを呼び出して、現在の内容を Windows シェルに適用する必要があります。  
  
## <a name="setting-a-jump-list-in-xaml"></a>XAML でのジャンプリストの設定  
 は<xref:System.Windows.Shell.JumpList> 、 <xref:System.Windows.Application>オブジェクトに自動的にアタッチされません。 を XAML の<xref:System.Windows.Shell.JumpList> <xref:System.Windows.Application>オブジェクトにアタッチするには、添付プロパティの構文を使用します。 クラス<xref:System.Windows.Shell.JumpList>は<xref:System.ComponentModel.ISupportInitialize> 、 <xref:System.Windows.Shell.JumpList> の XAML 宣言をサポートするインターフェイスを実装します。 が XAML で宣言<xref:System.Windows.Application> [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] <xref:System.Windows.Shell.JumpList>され、現在のにアタッチされている場合、が初期化されると、自動的にシェルに適用されます。 <xref:System.Windows.Shell.JumpList>  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>コードでのジャンプリストの設定と変更  
 をコード内<xref:System.Windows.Shell.JumpList>の<xref:System.Windows.Application>オブジェクトにアタッチするには、静的<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッドを呼び出します。 <xref:System.Windows.Shell.JumpList> これ [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] により、もシェルに適用されます。  
  
 実行時に<xref:System.Windows.Shell.JumpList>を変更するには、 <xref:System.Windows.Shell.JumpList.GetJumpList%2A>メソッドを呼び出して、 <xref:System.Windows.Shell.JumpList>現在に<xref:System.Windows.Application>アタッチされているを取得します。 の<xref:System.Windows.Shell.JumpList>プロパティを変更した後、 <xref:System.Windows.Shell.JumpList.Apply%2A>メソッドを呼び出して、変更を Windows シェルに適用する必要があります。  
  
> [!NOTE]
>  通常は、 <xref:System.Windows.Application>に<xref:System.Windows.Shell.JumpList>アタッチされ、 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルに適用されるものを作成します。 ただし、複数<xref:System.Windows.Shell.JumpList>のオブジェクトを作成することはできます。 シェルに適用できるのは<xref:System.Windows.Shell.JumpList>一度に1つだけ<xref:System.Windows.Application>です。また、 <xref:System.Windows.Shell.JumpList>一度に1つだけをに関連付けることができます。 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] .NET Framework では、これらが同じ<xref:System.Windows.Shell.JumpList>である必要はありません。  
  
> [!NOTE]
>  このクラスには、すべてのメンバーに適用されるクラスレベルのリンク確認要求が含まれています。 は<xref:System.Security.SecurityException> 、直前の呼び出し元に完全信頼のアクセス許可がない場合にスローされます。 セキュリティ要求の詳細については、「[リンク](~/docs/framework/misc/link-demands.md)確認要求と[継承の要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例は、ジャンプリストを持つアプリケーションを示しています。 アプリケーションには、現在のジャンプリストにタスクを追加したり、ジャンプリストの内容を消去したり、アプリケーションに新しいジャンプリストを適用したりするためのボタンが3つあります。  
  
 次の例は、マークアップで<xref:System.Windows.Shell.JumpList>を宣言する方法を示しています。 に<xref:System.Windows.Shell.JumpList>は、 <xref:System.Windows.Shell.JumpTask> 2 つの<xref:System.Windows.Shell.JumpPath>リンクと1つのリンクがあります。 アプリケーションが<xref:System.Windows.Shell.JumpPath> .txt ファイル名拡張子を処理するように登録されていない場合、シェルへのの適用は失敗します。  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 次の例は、の`App.xaml`分離コードページを示しています。 このコードは、 <xref:System.Windows.Shell.JumpList.JumpItemsRejected>イベント<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>とイベントを処理します。  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 次の例は、アプリケーションのユーザーインターフェイスを作成するために使用されるマークアップを示しています。  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 次の例は、の`MainWindow.xaml`分離コードページを示しています。 このコードは、手続き型コードでの<xref:System.Windows.Shell.JumpList>変更、クリア、および作成を行う方法を示しています。 新しいジャンプリストでは、静的<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッドが呼び出され、を<xref:System.Windows.Shell.JumpList>現在<xref:System.Windows.Shell.JumpList>のアプリケーションに関連付けて、を Windows シェルに適用します。  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">Windows シェルを変更するためのフルアクセスの場合。 セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。 関連付けられた列挙型:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。</param>
        <param name="showFrequent">頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値。</param>
        <param name="showRecent">最近使用された項目をジャンプ リストに表示するかどうかを示す値。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近**のカテゴリと**頻繁**に使用されるカテゴリには、多くの場合、同じジャンプ項目が多数含まれています。 その結果、アプリケーションは通常、最近のカテゴリまたは**頻繁**に**使用**されるカテゴリをジャンプリストに表示しますが、両方は表示しません。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した項目を、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">ジャンプ リストに追加するパス。</param>
        <summary>指定した項目のパスを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近使用**したカテゴリの内容は、Windows シェルによって管理されます。 ジャンプリストで最近使用した項目を表示するに<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>は、 `true`プロパティをに設定します。  
  
 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29>メソッドを呼び出して、Windows シェルが項目のパスを**最近使っ**た項目の一覧に追加するように要求できます。 アプリケーションがアイテムのファイルの種類を処理するように登録されていない場合は、**[最近]** の一覧<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29>に表示されず、への呼び出しは自動的に失敗します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpPath" />。</param>
        <summary>指定したジャンプ パスを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近使用**したカテゴリの内容は、Windows シェルによって管理されます。 ジャンプリストで最近使用した項目を表示するに<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>は、 `true`プロパティをに設定します。  
  
 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29>メソッドを呼び出して、Windows シェルが、指定されたジャンプパスを [**最近使っ**た項目] の一覧に追加するように要求できます。 アプリケーションがアイテムのファイルの種類を処理するように登録されていない場合は、**[最近]** の一覧<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29>に表示されず、への呼び出しは自動的に失敗します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpTask" />。</param>
        <summary>指定したジャンプ タスクを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近使用**したカテゴリの内容は、Windows シェルによって管理されます。 ジャンプリストで最近使用した項目を表示するに<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>は、 `true`プロパティをに設定します。  
  
 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29>メソッドを呼び出して、Windows シェルが、指定されたジャンプタスクを [**最近使っ**た項目] の一覧に追加するように要求できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の状態の <see cref="T:System.Windows.Shell.JumpList" /> を Windows シェルに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Windows.Shell.JumpList.Apply%2A>は、 <xref:System.Windows.Shell.JumpList>のコンテンツを現在の状態で Windows シェルに送信します。 この呼び出しが完了すると、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>プロパティは、Windows シェルがタスクバーのジャンプリストに正常に追加された項目のみを含むように変更されます。 イベント<xref:System.Windows.Shell.JumpList.JumpItemsRejected> および <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> イベントのイベントハンドラーを使用して、削除された項目のリストにアクセスできます。  
  
   
  
## Examples  
 次の例は、現在<xref:System.Windows.Shell.JumpList>のを取得し、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションの内容をクリアする方法を示しています。 その後、 <xref:System.Windows.Shell.JumpList> メソッドを呼び出して、変更を Windows シェルに <xref:System.Windows.Shell.JumpList.Apply%2A> 適用します。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Shell.JumpList" /> は、完全に初期化されていません。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> の初期化の開始を通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Windows.Shell.JumpList>は<xref:System.ComponentModel.ISupportInitialize> 、 <xref:System.Windows.Shell.JumpList> の XAML 宣言をサポートするインターフェイスを実装します。 メソッドは、 <xref:System.Windows.Shell.JumpList> が <xref:System.Windows.Application>  XAML で宣言され、添付プロパティの構文を使用してにアタッチされている場合にのみ呼び出されます。 <xref:System.Windows.Shell.JumpList.BeginInit%2A> このメソッドは、コードからは呼び出さないでください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">この <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しは、直前の <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しで入れ子になっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> の初期化の終了を通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Windows.Shell.JumpList>は<xref:System.ComponentModel.ISupportInitialize> 、 <xref:System.Windows.Shell.JumpList> の XAML 宣言をサポートするインターフェイスを実装します。 メソッドは、 <xref:System.Windows.Shell.JumpList> が <xref:System.Windows.Application>  XAML で宣言され、添付プロパティの構文を使用してにアタッチされている場合にのみ呼び出されます。 <xref:System.Windows.Shell.JumpList.EndInit%2A> このメソッドは、コードからは呼び出さないでください。  
  
 メソッドは、 <xref:System.Windows.Shell.JumpList.Apply%2A>メソッドと同じ効果を持ちます。 <xref:System.Windows.Shell.JumpList.EndInit%2A> <xref:System.Windows.Shell.JumpList.EndInit%2A>の内容を現在の<xref:System.Windows.Shell.JumpList>状態で Windows シェルに送信します。 この呼び出しが完了すると、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>プロパティは、Windows シェルがジャンプリストに正常に追加した項目のみを含むように変更されます。 イベント<xref:System.Windows.Shell.JumpList.JumpItemsRejected> および <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> イベントのイベントハンドラーを使用して、削除された項目のリストにアクセスできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">この <see cref="M:System.Windows.Shell.JumpList.EndInit" /> の呼び出しは、<see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しとペアになっていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
        <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを返します。</summary>
        <returns>指定したアプリケーションに関連付けられた <see cref="T:System.Windows.Shell.JumpList" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList.GetJumpList%2A>メソッドを呼び出して、 <xref:System.Windows.Shell.JumpList>現在に<xref:System.Windows.Application>関連付けられているを取得できます。 .NET Framework では、これが Windows シェルに<xref:System.Windows.Shell.JumpList>現在適用されているである必要はありません。  
  
   
  
## Examples  
 次の例は、現在のアプリケーション<xref:System.Windows.Shell.JumpList>に関連付けられているを取得する方法を示しています。 がコレクションに追加され、[最近] カテゴリに追加されます。 **** <xref:System.Windows.Shell.JumpTask> <xref:System.Windows.Shell.JumpList.JumpItems%2A> 更新さ <xref:System.Windows.Shell.JumpList> れたを Windows シェルに適用するために、メソッドが呼び出されます。 <xref:System.Windows.Shell.JumpList.Apply%2A> この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクションを取得します。</summary>
        <value>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ジャンプリストには、 <xref:System.Windows.Shell.JumpTask> <xref:System.Windows.Shell.JumpPath>との2種類の項目を含めることができます。 はプログラムへのリンクであり、 <xref:System.Windows.Shell.JumpPath>はファイルへのリンクです。 <xref:System.Windows.Shell.JumpTask>  
  
 が作成されると、コレクションは空になります。 <xref:System.Windows.Shell.JumpList.JumpItems%2A> <xref:System.Windows.Shell.JumpList> <xref:System.Windows.Shell.JumpTask>または <xref:System.Windows.Shell.JumpPath> オブジェクトをコレクションに追加できます。 コレクションには、プログラムによって追加された項目のみが含まれます。 または<xref:System.Windows.Shell.JumpList>のいずれかのメソッドの<xref:System.Windows.Shell.JumpList.EndInit%2A>呼び出しが成功すると、が Windows シェル<xref:System.Windows.Shell.JumpList.Apply%2A>に渡され<xref:System.Windows.Shell.JumpList.JumpItems%2A>た後、コレクションには、タスクバーのジャンプリストに正常に追加された項目のみが含まれます。 正常に追加されなかった項目は、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションから削除されます。 イベント<xref:System.Windows.Shell.JumpList.JumpItemsRejected> および <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> イベントのイベントハンドラーを使用して、削除された項目のリストにアクセスできます。  
  
   
  
## Examples  
 次の例は、現在<xref:System.Windows.Shell.JumpList>のを取得し、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションの内容をクリアする方法を示しています。 その後、 <xref:System.Windows.Shell.JumpList> メソッドを呼び出して、変更を Windows シェルに <xref:System.Windows.Shell.JumpList.Apply%2A> 適用します。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows シェルによってジャンプ リスト項目がジャンプ リストに正常に追加されない場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 の<xref:System.Windows.Shell.JumpList>内容が windows シェル<xref:System.Windows.Shell.JumpList.JumpItems%2A>に適用されると、プロパティは、windows シェルがジャンプリストに正常に追加した項目のみを含むように変更されます。 イベント<xref:System.Windows.Shell.JumpList.JumpItemsRejected> および <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> イベントのイベントハンドラーを使用して、削除された項目のリストにアクセスできます。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Shell.JumpList.JumpItemsRejected>イベントを処理して、拒否された項目をメッセージボックスに表示する方法を示します。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前からジャンプ リストにあったジャンプ項目がユーザーによってリストから削除された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 の<xref:System.Windows.Shell.JumpList>内容が windows シェル<xref:System.Windows.Shell.JumpList.JumpItems%2A>に適用されると、プロパティは、windows シェルがジャンプリストに正常に追加した項目のみを含むように変更されます。 イベント<xref:System.Windows.Shell.JumpList.JumpItemsRejected> および <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> イベントのイベントハンドラーを使用して、削除された項目のリストにアクセスできます。  
  
   
  
## Examples  
 次の例では、 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベントを処理して、拒否された項目をメッセージボックスに表示する方法を示します。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
        <param name="value">アプリケーションに関連付ける <see cref="T:System.Windows.Shell.JumpList" />。</param>
        <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数<xref:System.Windows.Shell.JumpList>のオブジェクトを作成できます。 ただし、に関連<xref:System.Windows.Shell.JumpList>付ける<xref:System.Windows.Application>ことができるのは一度に1つだけです。 メソッドを呼び出して、 <xref:System.Windows.Shell.JumpList>現在に関連付けら<xref:System.Windows.Application>れているを設定します。 <xref:System.Windows.Shell.JumpList.SetJumpList%2A>  
  
   
  
## Examples  
 次の例は、コードでを<xref:System.Windows.Shell.JumpList>作成する方法を示しています。 静的<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッドは、を現在の<xref:System.Windows.Shell.JumpList>アプリケーションに関連付けるために呼び出されます。 は<xref:System.Windows.Shell.JumpList> 、設定時に Windows シェルに自動的に適用されます。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
        <value>頻繁に使用される項目をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **頻繁**に分類されるカテゴリの内容は、Windows シェルによって管理されます。 頻繁に使用される項目をジャンプリストに表示する<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>には`true`、プロパティをに設定します。  
  
 **最近**のカテゴリと**頻繁**に使用されるカテゴリには、多くの場合、同じジャンプ項目が多数含まれています。 その結果、アプリケーションは通常、最近のカテゴリまたは**頻繁**に**使用**されるカテゴリをジャンプリストに表示しますが、両方は表示しません。  
  
   
  
## Examples  
 次の例は、 <xref:System.Windows.Shell.JumpList> **頻繁**にカテゴリを表示するように構成されたを示しています。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近使用された項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
        <value>最近使用された値をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近使用**したカテゴリの内容は、Windows シェルによって管理されます。 頻繁に使用される項目をジャンプリストに表示する<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>には`true`、プロパティをに設定します。  
  
 **最近**のカテゴリと**頻繁**に使用されるカテゴリには、多くの場合、同じジャンプ項目が多数含まれています。 その結果、アプリケーションは通常、最近のカテゴリまたは**頻繁**に**使用**されるカテゴリをジャンプリストに表示しますが、両方は表示しません。  
  
 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>メソッドを呼び出して、Windows シェルが項目を [**最近使っ**た項目] の一覧に追加することを要求できます。 アプリケーションが、項目のファイル名の種類を処理するように登録されていない場合、[**最近使っ**たもの<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> ] の一覧には表示されず、の呼び出しは自動的に失敗します。  
  
   
  
## Examples  
 次の例は、 <xref:System.Windows.Shell.JumpList> **最近**のカテゴリを表示するように構成されたを示しています。 この例は、 <xref:System.Windows.Shell.JumpList>クラスの概要で使用できるより大きな例の一部です。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
