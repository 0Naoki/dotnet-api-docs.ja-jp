<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17d93dffc27db123eb7068a213996dc414ca9b0a" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39764622" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows 7 タスク バー ボタンにメニューとして表示される項目およびタスクの一覧を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)]タスク バー ジャンプ リストを使用して、タスク バー ボタンから直接プログラムを起動するための拡張機能を提供します。 ジャンプ リストにも使用、 [!INCLUDE[win7](~/includes/win7-md.md)] [スタート] メニュー。 ジャンプ リストは、タスク バー ボタンを右クリックするか、[スタート] メニューのプログラムの横の矢印をクリックしてアクセスします。 ジャンプ リストの詳細については、次を参照してください。、[タスク バー](http://go.microsoft.com/fwlink/?LinkId=178478)の Windows ユーザー エクスペリエンス ガイドライン」セクション。  
  
 <xref:System.Windows.Shell.JumpList>クラスでジャンプ リスト機能のマネージ ラッパーを提供する、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バーに渡されるデータを管理し、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルです。 によって公開される機能、<xref:System.Windows.Shell.JumpList>クラスは、のバージョンで使用することはありません[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]よりも前[!INCLUDE[win7](~/includes/win7-md.md)]します。 使用するアプリケーション、<xref:System.Windows.Shell.JumpList>クラスは、他のバージョンの実行は[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]、ジャンプ リストは使用できませんが、します。 Windows シェルとジャンプ リストのネイティブ Api の詳細については、次を参照してください。[タスク バーの拡張機能](http://go.microsoft.com/fwlink/?LinkId=178479)します。  
  
 次の図は、ジャンプ リストの Windows Media Player、内の項目を含む、**タスク**と**利用頻度**カテゴリ。  
  
 ![Windows Media Player のジャンプ リスト](~/add/media/wpfshell-jumplist.png "Windows メディア プレーヤーのジャンプ リスト")  
Windows メディア プレーヤーのジャンプ リスト  
  
## <a name="configuring-a-jump-list"></a>ジャンプ リストの構成  
 ジャンプ リストが 2 つの種類の項目を含めることができます、<xref:System.Windows.Shell.JumpTask>と<xref:System.Windows.Shell.JumpPath>します。 A<xref:System.Windows.Shell.JumpTask>プログラムへのリンクと<xref:System.Windows.Shell.JumpPath>ファイルへのリンクです。 視覚的に作成してジャンプ リスト内の項目を分離することができます、<xref:System.Windows.Shell.JumpTask>を持たない、<xref:System.Windows.Shell.JumpTask.Title%2A>と<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定します。 この空<xref:System.Windows.Shell.JumpTask>がジャンプ リストに水平方向の線として表示されます。  
  
> [!NOTE]
>  ファイルの種類が指定されている場合、<xref:System.Windows.Shell.JumpPath>が登録されていないアプリケーション、ファイルは、ジャンプ リストには表示されません。 追加する場合など、 <xref:System.Windows.Shell.JumpPath> .txt ファイルを指す、.txt ファイルを処理するために、アプリケーションを登録する必要があります。 詳細については、次を参照してください。[ファイルの関連付けの概要](http://go.microsoft.com/fwlink/?LinkId=178480)します。  
  
 内のカテゴリにジャンプ項目が配置されます、<xref:System.Windows.Shell.JumpList>します。 既定で、<xref:System.Windows.Shell.JumpItem>に表示される、**タスク**カテゴリ。 または、指定することができます、<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>の<xref:System.Windows.Shell.JumpItem>します。  
  
 指定できるかどうか、標準**最近**と**利用頻度**カテゴリが表示されます、<xref:System.Windows.Shell.JumpList>を設定して、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>と<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>プロパティ。 これらのカテゴリの内容で管理されて、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルです。 いずれか 1 つでは表示通常これらのカテゴリには、同じデータの多くが含まれている可能性があります、ため、 <xref:System.Windows.Shell.JumpList>、両方ではないです。 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] コモン ファイル ダイアログ ボックスから開いたまたはファイルの種類の関連付けを使用してアプリケーションを開くために使用された場合、最近使った項目を自動的に管理します。 ジャンプ リストを項目にアクセスするときは、通知、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェル項目を追加する、**最近**カテゴリを呼び出すことによって、<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>メソッド。  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Windows シェルにジャンプ リストを適用します。  
 シェルのジャンプ リストに直接アクセスまたはに内容を表示することはできません、<xref:System.Windows.Shell.JumpList>クラス。 代わりに、<xref:System.Windows.Shell.JumpList>クラスは、使用してに適用し、ジャンプ リストの表現を提供します、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルです。 通常、作成、<xref:System.Windows.Shell.JumpList>し、1 回のアプリケーションの最初の実行時に設定します。 ただし、変更または置換、<xref:System.Windows.Shell.JumpList>実行時にします。  
  
 設定した場合、<xref:System.Windows.Shell.JumpList>プロパティを適用する必要がある、<xref:System.Windows.Shell.JumpList>タスク バーのジャンプ リストにその内容が表示されるまでは、Windows シェルにします。 これは、自動的にすると、<xref:System.Windows.Shell.JumpList>はまず、XAML またはへの呼び出しでアプリケーションに接続され、<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッド。 内容を変更する場合、 <xref:System.Windows.Shell.JumpList> 、実行時に呼び出す必要がある、 <xref:System.Windows.Shell.JumpList.Apply%2A> Windows シェルに、現在の内容を適用する方法。  
  
## <a name="setting-a-jump-list-in-xaml"></a>XAML でのジャンプ リストの設定  
 A<xref:System.Windows.Shell.JumpList>に自動的にアタッチされていない、<xref:System.Windows.Application>オブジェクト。 アタッチする、<xref:System.Windows.Shell.JumpList>を<xref:System.Windows.Application>添付プロパティの構文を使用して XAML 内のオブジェクト。 <xref:System.Windows.Shell.JumpList>クラスが実装する、<xref:System.ComponentModel.ISupportInitialize>インターフェイスの XAML 宣言をサポートするために、<xref:System.Windows.Shell.JumpList>します。 場合、<xref:System.Windows.Shell.JumpList>が XAML で宣言され、現在接続されている<xref:System.Windows.Application>が自動的に適用、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]ときに、シェル、<xref:System.Windows.Shell.JumpList>初期化されます。  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>設定とコードでのジャンプ リストの変更  
 アタッチする、<xref:System.Windows.Shell.JumpList>を<xref:System.Windows.Application>静的を呼び出すことによってコード内のオブジェクト<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッド。 これも適用されます、<xref:System.Windows.Shell.JumpList>を[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルです。  
  
 変更する、 <xref:System.Windows.Shell.JumpList> 、実行時に呼び出す、<xref:System.Windows.Shell.JumpList.GetJumpList%2A>を取得するメソッド、<xref:System.Windows.Shell.JumpList>に現在接続されている、<xref:System.Windows.Application>します。 プロパティを変更した後、 <xref:System.Windows.Shell.JumpList>、呼び出す必要があります、 <xref:System.Windows.Shell.JumpList.Apply%2A> Windows シェルに変更を適用する方法。  
  
> [!NOTE]
>  通常、1 つ作成<xref:System.Windows.Shell.JumpList>に接続される、<xref:System.Windows.Application>に適用されると、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェルです。 ただし、複数作成できます<xref:System.Windows.Shell.JumpList>オブジェクト。 1 つだけ<xref:System.Windows.Shell.JumpList>一度にに適用できる、[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]シェル、および 1 つだけ<xref:System.Windows.Shell.JumpList>一度に関連付けることができる、<xref:System.Windows.Application>します。 .NET Framework に同じであるこれらが不要<xref:System.Windows.Shell.JumpList>します。  
  
> [!NOTE]
>  このクラスには、すべてのメンバーに適用されるクラス レベルのリンク確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元が完全信頼アクセス許可を持たない場合にスローされます。 セキュリティの要求の詳細については、次を参照してください。[リンク確認要求](~/docs/framework/misc/link-demands.md)と[継承確認要求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)します。  
  
   
  
## Examples  
 次の例では、ジャンプ リストを持つアプリケーションを示します。 アプリケーションには、現在のジャンプ リストにタスクを追加、ジャンプ リストの内容を消去および新しいジャンプ リストをアプリケーションに適用するための 3 つのボタンがあります。  
  
 次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpList>マークアップ。 <xref:System.Windows.Shell.JumpList>は 2 つ<xref:System.Windows.Shell.JumpTask>リンクと 1 つ<xref:System.Windows.Shell.JumpPath>します。 適用、<xref:System.Windows.Shell.JumpPath>シェルには、.txt ファイル名拡張子を処理するために、アプリケーションが登録されていない場合は失敗します。  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 次の例では、分離コード ページ`App.xaml`します。 このコードは、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 次の例では、アプリケーションのユーザー インターフェイスを作成するためのマークアップを示します。  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 次の例では、分離コード ページ`MainWindow.xaml`します。 このコードは、変更、消去、および作成する方法を示します、<xref:System.Windows.Shell.JumpList>手続き型コードでします。 新しいジャンプ リストの静的な<xref:System.Windows.Shell.JumpList.SetJumpList%2A>に関連付けるメソッドが呼び出される、<xref:System.Windows.Shell.JumpList>と現在のアプリケーションを適用し、 <xref:System.Windows.Shell.JumpList> Windows シェルにします。  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">Windows シェルを変更するフル アクセス。 セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。</param>
        <param name="showFrequent">頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値。</param>
        <param name="showRecent">最近使用された項目をジャンプ リストに表示するかどうかを示す値。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Shell.JumpList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **最近**と**利用頻度**カテゴリが多くの場合、多くの同じジャンプ項目を格納します。 その結果、アプリケーション通常表示するか、**最近**または**利用頻度**両方ではなく、ジャンプ リスト内のカテゴリ。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した項目を、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">ジャンプ リストに追加するパス。</param>
        <summary>指定した項目のパスを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容、**最近**カテゴリは、Windows シェルによって管理されます。 ジャンプ リストで最近使用された項目を表示する設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`します。  
  
 呼び出すことができます、 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> Windows シェルにアイテム パスを追加することを要求するメソッド、**最近**項目の一覧。 項目のファイルの種類を処理するために、アプリケーションが登録されていない場合に表示されません、**最近**一覧や呼び出しに<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29>されずに失敗します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpPath" />。</param>
        <summary>指定したジャンプ パスを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容、**最近**カテゴリは、Windows シェルによって管理されます。 ジャンプ リストで最近使用された項目を表示する設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`します。  
  
 呼び出すことができます、 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> Windows シェルが指定したジャンプ パスを追加することを要求するメソッド、**最近**項目の一覧。 項目のファイルの種類を処理するために、アプリケーションが登録されていない場合に表示されません、**最近**一覧や呼び出しに<xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29>されずに失敗します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">ジャンプ リストに追加する <see cref="T:System.Windows.Shell.JumpTask" />。</param>
        <summary>指定したジャンプ タスクを、ジャンプ リストの **[最近使ったもの]** カテゴリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容、**最近**カテゴリは、Windows シェルによって管理されます。 ジャンプ リストで最近使用された項目を表示する設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`します。  
  
 呼び出すことができます、 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> Windows シェルが指定したジャンプ タスクを追加することを要求するメソッド、**最近**項目の一覧。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の状態の <see cref="T:System.Windows.Shell.JumpList" /> を Windows シェルに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList.Apply%2A>メソッドのコンテンツを送信する、 <xref:System.Windows.Shell.JumpList> Windows シェルの現在の状態にします。 この呼び出しが完了した後、 <xref:System.Windows.Shell.JumpList.JumpItems%2A> Windows シェルは、タスク バー ジャンプ リストに正常に追加したアイテムのみを格納するプロパティを変更します。 イベント ハンドラーを使用して削除された項目の一覧を表示できます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
   
  
## Examples  
 次の例は、現在を取得する方法を示します<xref:System.Windows.Shell.JumpList>の内容を消去し、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクション。 <xref:System.Windows.Shell.JumpList.Apply%2A>を適用するメソッドが呼び出されますし、 <xref:System.Windows.Shell.JumpList> Windows シェルに変わります。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Shell.JumpList" /> は、完全に初期化されていません。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shell.JumpList" /> の初期化の開始を通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList>クラスが実装する、<xref:System.ComponentModel.ISupportInitialize>インターフェイスの XAML 宣言をサポートするために、<xref:System.Windows.Shell.JumpList>します。 <xref:System.Windows.Shell.JumpList.BeginInit%2A>メソッドでのみ呼び出すときに、<xref:System.Windows.Shell.JumpList>が XAML で宣言されに接続されている、<xref:System.Windows.Application>添付プロパティの構文を使用しています。 コードから、このメソッドを呼び出さないでください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">この <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しは、直前の <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しで入れ子になっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Shell.JumpList" /> の初期化の終了を通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList>クラスが実装する、<xref:System.ComponentModel.ISupportInitialize>インターフェイスの XAML 宣言をサポートするために、<xref:System.Windows.Shell.JumpList>します。 <xref:System.Windows.Shell.JumpList.EndInit%2A>メソッドでのみ呼び出すときに、<xref:System.Windows.Shell.JumpList>が XAML で宣言されに接続されている、<xref:System.Windows.Application>添付プロパティの構文を使用しています。 コードから、このメソッドを呼び出さないでください。  
  
 <xref:System.Windows.Shell.JumpList.EndInit%2A>メソッドと同じ効果を持つ、<xref:System.Windows.Shell.JumpList.Apply%2A>メソッド。 <xref:System.Windows.Shell.JumpList.EndInit%2A> コンテンツを送信、 <xref:System.Windows.Shell.JumpList> Windows シェルの現在の状態にします。 この呼び出しが完了した後、<xref:System.Windows.Shell.JumpList.JumpItems%2A>をジャンプ リストに、Windows シェルが正常に追加したアイテムのみを格納するプロパティを変更します。 イベント ハンドラーを使用して削除された項目の一覧を表示できます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">この <see cref="M:System.Windows.Shell.JumpList.EndInit" /> の呼び出しは、<see cref="M:System.Windows.Shell.JumpList.BeginInit" /> の呼び出しとペアになっていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">
          <see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
        <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを返します。</summary>
        <returns>指定したアプリケーションに関連付けられた <see cref="T:System.Windows.Shell.JumpList" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことができます、<xref:System.Windows.Shell.JumpList.GetJumpList%2A>を取得するメソッド、<xref:System.Windows.Shell.JumpList>に関連付けられている、<xref:System.Windows.Application>します。 .NET Framework にこれが不要、 <xref:System.Windows.Shell.JumpList> Windows シェルに現在適用されています。  
  
   
  
## Examples  
 次の例は、取得する方法を示します、<xref:System.Windows.Shell.JumpList>現在のアプリケーションに関連付けられています。 A<xref:System.Windows.Shell.JumpTask>に追加されます、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションに追加し、**最近**カテゴリ。 <xref:System.Windows.Shell.JumpList.Apply%2A>メソッドを呼び出して、更新を適用する<xref:System.Windows.Shell.JumpList>Windows シェルにします。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクションを取得します。</summary>
        <value>ジャンプ リスト内に表示される <see cref="T:System.Windows.Shell.JumpItem" /> オブジェクトのコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ジャンプ リストが 2 つの種類の項目を含めることができます、<xref:System.Windows.Shell.JumpTask>と<xref:System.Windows.Shell.JumpPath>します。 A<xref:System.Windows.Shell.JumpTask>プログラムへのリンクと<xref:System.Windows.Shell.JumpPath>ファイルへのリンクです。  
  
 ときに、<xref:System.Windows.Shell.JumpList>が作成される、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションが空です。 追加することができます<xref:System.Windows.Shell.JumpTask>または<xref:System.Windows.Shell.JumpPath>コレクション オブジェクト。 コレクションには、プログラムによって追加されている項目のみが含むされます。 後に、 <xref:System.Windows.Shell.JumpList> Windows シェルにするか、正常な呼び出しによって渡される、<xref:System.Windows.Shell.JumpList.EndInit%2A>または<xref:System.Windows.Shell.JumpList.Apply%2A>、メソッド、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクションは、タスク バー ジャンプ リストに正常に追加された項目のみが含まれます。 正常に追加しない項目からは削除、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクション。 イベント ハンドラーを使用して削除された項目の一覧を表示できます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
   
  
## Examples  
 次の例は、現在を取得する方法を示します<xref:System.Windows.Shell.JumpList>の内容を消去し、<xref:System.Windows.Shell.JumpList.JumpItems%2A>コレクション。 <xref:System.Windows.Shell.JumpList.Apply%2A>を適用するメソッドが呼び出されますし、 <xref:System.Windows.Shell.JumpList> Windows シェルに変わります。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows シェルによってジャンプ リスト項目がジャンプ リストに正常に追加されない場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容の後、 <xref:System.Windows.Shell.JumpList> 、Windows シェルに適用される、<xref:System.Windows.Shell.JumpList.JumpItems%2A>をジャンプ リストに、Windows シェルが正常に追加したアイテムのみを格納するプロパティを変更します。 イベント ハンドラーを使用して削除された項目の一覧を表示できます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
   
  
## Examples  
 次の例では、処理する方法を示しています、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>メッセージ ボックスに、拒否された項目を表示するイベントです。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前からジャンプ リストにあったジャンプ項目がユーザーによってリストから削除された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容の後、 <xref:System.Windows.Shell.JumpList> 、Windows シェルに適用される、<xref:System.Windows.Shell.JumpList.JumpItems%2A>をジャンプ リストに、Windows シェルが正常に追加したアイテムのみを格納するプロパティを変更します。 イベント ハンドラーを使用して削除された項目の一覧を表示できます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント。  
  
   
  
## Examples  
 次の例では、処理する方法を示しています、<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>メッセージ ボックスに、拒否された項目を表示するイベントです。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">
          <see cref="T:System.Windows.Shell.JumpList" /> に関連付けられているアプリケーション。</param>
        <param name="value">アプリケーションに関連付ける <see cref="T:System.Windows.Shell.JumpList" />。</param>
        <summary>アプリケーションに関連付けられている <see cref="T:System.Windows.Shell.JumpList" /> オブジェクトを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数作成できます<xref:System.Windows.Shell.JumpList>オブジェクト。 ただし、1 つだけ<xref:System.Windows.Shell.JumpList>一度に関連付けることができる、<xref:System.Windows.Application>します。 呼び出す、<xref:System.Windows.Shell.JumpList.SetJumpList%2A>を設定するメソッド、<xref:System.Windows.Shell.JumpList>に関連付けられている、<xref:System.Windows.Application>します。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.JumpList>コード。 静的な<xref:System.Windows.Shell.JumpList.SetJumpList%2A>に関連付けるメソッドが呼び出される、<xref:System.Windows.Shell.JumpList>と現在のアプリケーション。 <xref:System.Windows.Shell.JumpList>設定されている場合に、Windows シェルに自動的に適用します。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>頻繁に使用される項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
        <value>頻繁に使用される項目をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容、**利用頻度**カテゴリは、Windows シェルによって管理されます。 ジャンプ リストでは、頻繁に使用される項目を表示するには、設定、<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>プロパティを`true`します。  
  
 **最近**と**利用頻度**カテゴリが多くの場合、多くの同じジャンプ項目を格納します。 その結果、アプリケーション通常表示するか、**最近**または**利用頻度**両方ではなく、ジャンプ リスト内のカテゴリ。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Shell.JumpList>を表示するように構成、**利用頻度**カテゴリ。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近使用された項目をジャンプ リストに表示するかどうかを示す値を取得または設定します。</summary>
        <value>最近使用された値をジャンプ リストに表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内容、**最近**カテゴリは、Windows シェルによって管理されます。 ジャンプ リストでは、頻繁に使用される項目を表示するには、設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`します。  
  
 **最近**と**利用頻度**カテゴリが多くの場合、多くの同じジャンプ項目を格納します。 その結果、アプリケーション通常表示するか、**最近**または**利用頻度**両方ではなく、ジャンプ リスト内のカテゴリ。  
  
 呼び出すことができます、 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> Windows シェルが項目を追加することを要求するメソッド、**最近**項目の一覧。 項目のファイル名の種類を処理するために、アプリケーションが登録されていない場合に表示されません、**最近**一覧や呼び出しに<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>されずに失敗します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Shell.JumpList>を表示するように構成、**最近**カテゴリ。 この例は例で使用できる、<xref:System.Windows.Shell.JumpList>クラスの概要。  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>