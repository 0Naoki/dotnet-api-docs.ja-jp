<Type Name="ThumbButtonInfo" FullName="System.Windows.Shell.ThumbButtonInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b62cdbfb2c139c1b5acaf431d0d809a0bdb4a4b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39941468" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThumbButtonInfo : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThumbButtonInfo extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.ThumbButtonInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThumbButtonInfo&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThumbButtonInfo sealed : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type ThumbButtonInfo = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Windows 7 タスク バーのサムネイルにボタンを表示する方法に関する情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)]タスク バーがタスク バー ボタンを使用してユーザー状態を通信し、ウィンドウが最小化または非表示にするときに、一般的なタスクを公開できるようにする拡張機能を提供します。 ボタンは、アプリケーション ウィンドウに切り替えることがなく、一般的なタスクへのアクセスを提供するタスク バーのサムネイルを追加できます。 たとえば、Windows Media Player では、アプリケーションが最小化したときにタスク バーのサムネイルからメディアの再生を制御するために使用できる Play、Pause、転送、およびバックのボタンが表示されます。  
  
 <xref:System.Windows.Shell.ThumbButtonInfo>クラスには記述するプロパティが含まれていますが、どのように[!INCLUDE[win7](~/includes/win7-md.md)]シェルでは、タスク バー サムネイルにボタンが表示されます。 ネイティブの Windows API のマネージ ラッパーを提供します。 <xref:System.Windows.Shell.ThumbButtonInfo> オブジェクトに含まれる、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A?displayProperty=nameWithType>コレクション。  
  
 タスク バーの拡張機能がよりも前のバージョンの Windows でご利用いただけません[!INCLUDE[win7](~/includes/win7-md.md)]します。 [!INCLUDE[win7](~/includes/win7-md.md)]、一部の機能は、ユーザーの設定によっては利用できない可能性があります。 たとえば、ボタンがタスク バーのサムネイルのようにのみと[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]を有効にします。 アプリケーションでは、タスク バーの拡張機能に依存していないユーザーとの対話の別の方法を提供する必要があります。  
  
 次の図は、再生および停止コマンドへのアクセスを提供する 2 つの親指ボタンをタスク バー プレビューを示します。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーのつまみをボタンします。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.ThumbButtonInfo>マークアップ。 <xref:System.Windows.Shell.TaskbarItemInfo>のコレクションを含む<xref:System.Windows.Shell.ThumbButtonInfo>タスク バーの項目から再生および停止コマンドにアクセスを提供するオブジェクト。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.TaskbarItemInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThumbButtonInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.ThumbButtonInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThumbButtonInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.ThumbButtonInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.ThumbButtonInfo.Click" />
      <MemberSignature Language="VB.NET" Value="Public Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する場合、<xref:System.Windows.Shell.ThumbButtonInfo.Click>イベント、いずれかではなく、イベント ハンドラーが実行される<xref:System.Windows.Shell.ThumbButtonInfo.Command%2A>サムネイル ボタンにバインドされています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.Command" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサムネイル ボタンがクリックされたときに呼び出すコマンドを取得または設定します。</summary>
        <value>このサムネイル ボタンがクリックされたときに呼び出すコマンド。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理する場合、<xref:System.Windows.Shell.ThumbButtonInfo.Click>イベント、いずれかではなく、イベント ハンドラーが実行される<xref:System.Windows.Shell.ThumbButtonInfo.Command%2A>サムネイル ボタンにバインドされています。  
  
 XAML でこのプロパティは多くの場合などから既存のコマンドのライブラリのいずれかの静的なコマンド値を指定する設定、<xref:System.Windows.Input.ApplicationCommands>または<xref:System.Windows.Input.NavigationCommands>ライブラリ。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.ThumbButtonInfo>マークアップ。 <xref:System.Windows.Shell.ThumbButtonInfo>にバインドされて、<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType>コマンド。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.Command" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> プロパティに渡すパラメーターを取得または設定します。</summary>
        <value><see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> プロパティに渡すパラメーター。 既定値は、<see langword="null" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.CommandParameter" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したコマンドの発生元の要素を取得または設定します。</summary>
        <value>指定したコマンドが実行される要素。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.ThumbButtonInfo.CommandTarget%2A>プロパティは、アプリケーションで既に定義されている要素への参照を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.CommandTarget" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.ThumbButtonInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="thumbButtonInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンのツールヒントに表示するテキストを取得または設定します。</summary>
        <value>サムネイル ボタンのツールヒントに表示するテキスト。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サムネイル ボタンにイメージを追加することができますが、サムネイル ボタンの表面にテキストを設定するためのプロパティが存在しません。 ただし、設定、<xref:System.Windows.Shell.ThumbButtonInfo.Description%2A>サムネイル ボタン上にマウス ポインターが移動したときに、ツールヒントに表示される説明テキストを追加するプロパティ。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.ThumbButtonInfo>マークアップ。 <xref:System.Windows.Shell.ThumbButtonInfo>にバインドされて、<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType>コマンド。 ツールヒントの説明テキストが**停止**します。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClicked">
      <MemberSignature Language="C#" Value="public bool DismissWhenClicked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DismissWhenClicked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" />
      <MemberSignature Language="VB.NET" Value="Public Property DismissWhenClicked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DismissWhenClicked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DismissWhenClicked : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンがクリックされたときにタスク バーのサムネイルを閉じるかどうかを示す値を取得または設定します。</summary>
        <value>サムネイルを閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、サムネイル ボタンがクリックされたときに、タスク バーのサムネイルが表示されます。 サムネイル閉じるサムネイル ボタンがクリックされたときに、設定、<xref:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked%2A>プロパティを`true`します。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.ThumbButtonInfo>マークアップ。 <xref:System.Windows.Shell.ThumbButtonInfo>にバインドされて、<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType>コマンド。 閉じるボタンがクリックされたときに構成されます。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClickedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DismissWhenClickedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DismissWhenClickedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DismissWhenClickedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DismissWhenClickedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DismissWhenClickedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageSource">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource ImageSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource ImageSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSource As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ ImageSource { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSource : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンに表示されるイメージを取得または設定します。</summary>
        <value>サムネイル ボタンに表示されるイメージ。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的な配置またはアニメーション化する<xref:System.Windows.Media.ImageSource>サムネイル ボタンをクリックします。 イメージは、適切なサイズで表示されます。 場合、<xref:System.Windows.Media.ImageSource>を表す、 <xref:System.Drawing.Icon>、適切なビット深度も使用されます。  
  
 サムネイル ボタンに関する追加のテキスト情報を提供するには、設定、<xref:System.Windows.Shell.ThumbButtonInfo.Description%2A>プロパティ。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.ThumbButtonInfo>マークアップ。 <xref:System.Windows.Shell.ThumbButtonInfo>にバインドされて、<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType>コマンド。 ボタン イメージは、静的リソースとしての XAML で定義されている濃い灰色の四角形です。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.ImageSource" />
      </Docs>
    </Member>
    <Member MemberName="ImageSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ImageSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ImageSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ImageSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ImageSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ImageSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisible">
      <MemberSignature Language="C#" Value="public bool IsBackgroundVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackgroundVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBackgroundVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBackgroundVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundVisible : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンの境界線を表示して強調表示するかどうかを示す値を取得または設定します。</summary>
        <value>サムネイル ボタンの境界線を表示して強調表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、罫線は周囲が表示されます、 <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>、サムネイル ボタンの上にマウス ポインターが移動したときに、強調表示が表示されます。 のみを表示する、<xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>せず、境界と強調表示、設定、<xref:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible%2A>プロパティを`false`します。 場合<xref:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible%2A>は`false`、<xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>でも、ユーザーに視覚的なフィードバックを提供するサムネイル ボタンがクリックされたときにシフトします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsBackgroundVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsBackgroundVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsBackgroundVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsBackgroundVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsBackgroundVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンが有効になっているかどうかを示す値を取得または設定します。</summary>
        <value>サムネイル ボタンが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A>プロパティは`false`、サムネイル ボタンに応答しない<xref:System.Windows.Shell.ThumbButtonInfo.Click>イベントおよび<xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>は淡色表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteractive">
      <MemberSignature Language="C#" Value="public bool IsInteractive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteractive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInteractive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteractive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInteractive : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがサムネイル ボタンを対話的に操作できるかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーがサムネイル ボタンを対話的に操作できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Shell.ThumbButtonInfo.IsInteractive%2A>プロパティは`false`、サムネイル ボタンに応答しない<xref:System.Windows.Shell.ThumbButtonInfo.Click>イベント。 ただし、<xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>は淡色表示されません。 状態のアイコンとして対話型でないサムネイル ボタンを使用することができます。  
  
 場合、<xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A>プロパティは`false`、設定の <xref:System.Windows.Shell.ThumbButtonInfo.IsInteractive%2A>は任意の影響がありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInteractiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInteractiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInteractiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInteractiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInteractiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInteractiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サムネイル ボタンの表示状態を指定する値を取得または設定します。</summary>
        <value>サムネイル ボタンの表示状態を指定する列挙値。 既定値は、<see cref="F:System.Windows.Visibility.Visible" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サムネイル ボタンが既定では<xref:System.Windows.Visibility.Visible>します。 [!INCLUDE[win7](~/includes/win7-md.md)] タスク バーのサムネイルで、最大 7 つのボタンをできます。 ときに、<xref:System.Windows.Shell.ThumbButtonInfo.Visibility%2A>プロパティに設定されて<xref:System.Windows.Visibility.Hidden>、サムネイル ボタンが可視の要素を持たないが、領域はその予約されたままです。 サムネイル ボタンの場合は<xref:System.Windows.Visibility.Collapsed>可視要素がない、および、その領域が予約されていません。 この場合、追加のサムネイルのボタン、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>コレクションが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Shell.ThumbButtonInfoCollection" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>