<Type Name="JumpTask" FullName="System.Windows.Shell.JumpTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c6d46e716ec5eaa57c9e39139af9303f0c0b42c" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64192122" /></Metadata><TypeSignature Language="C#" Value="public class JumpTask : System.Windows.Shell.JumpItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JumpTask extends System.Windows.Shell.JumpItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpTask" />
  <TypeSignature Language="VB.NET" Value="Public Class JumpTask&#xA;Inherits JumpItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpTask : System::Windows::Shell::JumpItem" />
  <TypeSignature Language="F#" Value="type JumpTask = class&#xA;    inherit JumpItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shell.JumpItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ce0a0-101">Windows 7 タスク バーのジャンプ リストにアプリケーションへのショートカットを表します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-101">Represents a shortcut to an application in the Windows 7 taskbar Jump List.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce0a0-102">A<xref:System.Windows.Shell.JumpTask>アプリケーションへのショートカットとして考えることができます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-102">A <xref:System.Windows.Shell.JumpTask> can be thought of as a shortcut to an application.</span></span> <span data-ttu-id="ce0a0-103">設定して、実行可能ファイルへのパスを指定する、<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-103">You specify the path to the executable file by setting the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> property.</span></span> <span data-ttu-id="ce0a0-104">場合、<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>が設定された場合、現在実行中のプロセスのパスが暗黙的に指定されていません。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-104">If the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> is not set, the path of the current running process is implied.</span></span> <span data-ttu-id="ce0a0-105">必要に応じて指定することができます<xref:System.Windows.Shell.JumpTask.Arguments%2A>起動時にアプリケーションに渡す。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-105">You can optionally specify <xref:System.Windows.Shell.JumpTask.Arguments%2A> to pass to the application at startup.</span></span>  
  
 <span data-ttu-id="ce0a0-106">などの基本的な表示のプロパティを設定できます<xref:System.Windows.Shell.JumpTask.Title%2A>、 <xref:System.Windows.Shell.JumpTask.Description%2A>、および<xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>ジャンプ リストにタスクの表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-106">You can set basic display properties, such as <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, and <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> to specify the appearance of the task in the Jump List.</span></span> <span data-ttu-id="ce0a0-107">使用されるアイコンを<xref:System.Windows.Shell.JumpTask>ネイティブ リソースとして使用できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-107">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="ce0a0-108">オフセットを指定して使用する 1 つを指定する複数のアイコン リソース DLL または実行可能ファイルで使用可能な場合は、<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-108">If multiple icon resources are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="ce0a0-109">既定で、<xref:System.Windows.Shell.JumpTask>に配置されます、**タスク**ジャンプ リストのカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-109">By default, a <xref:System.Windows.Shell.JumpTask> will be placed in the **Tasks** category of the Jump List.</span></span> <span data-ttu-id="ce0a0-110">タスクのカスタム グループを指定するを設定、<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-110">You can specify custom grouping of tasks by setting the <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> property.</span></span>  
  
 <span data-ttu-id="ce0a0-111">視覚的に作成してジャンプ リスト内の項目を分離することができます、<xref:System.Windows.Shell.JumpTask>を持たない、<xref:System.Windows.Shell.JumpTask.Title%2A>と<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-111">You can visually separate items in a Jump List by creating a <xref:System.Windows.Shell.JumpTask> that does not have a <xref:System.Windows.Shell.JumpTask.Title%2A> and <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> specified.</span></span> <span data-ttu-id="ce0a0-112">この空<xref:System.Windows.Shell.JumpTask>がジャンプ リストに水平方向の線として表示されます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-112">This empty <xref:System.Windows.Shell.JumpTask> will be displayed as a horizontal line in the Jump List.</span></span> <span data-ttu-id="ce0a0-113">この場合は、その他のプロパティを設定することができますが、任意の効果はありません。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-113">In this case, other properties can be set, but they will not have any effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce0a0-114">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-114">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-115"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-115">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="ce0a0-116">次の例は、構成する方法を示します、<xref:System.Windows.Shell.JumpTask>コード。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-116">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="ce0a0-117"><xref:System.Windows.Shell.JumpTask>電卓アプリケーションを開きます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-117">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.JumpPath" />
    <altmember cref="T:System.Windows.Shell.JumpList" />
    <altmember cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
    <altmember cref="E:System.Windows.Application.Startup" />
    <altmember cref="P:System.Windows.StartupEventArgs.Args" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce0a0-118"><see cref="T:System.Windows.Shell.JumpTask" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-118">Initializes a new instance of the <see cref="T:System.Windows.Shell.JumpTask" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string with get, set" Usage="System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-119">アプリケーションへのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-119">Gets or sets the path to the application.</span></span></summary>
        <value><span data-ttu-id="ce0a0-120">アプリケーションへのパス。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-120">The path to the application.</span></span> <span data-ttu-id="ce0a0-121">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-121">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce0a0-122">場合、<xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>プロパティが指定されていない、現在実行中のプロセスのパスが暗黙的に指定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-122">If the <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> property is not specified, then the path of the current running process is implied.</span></span> <span data-ttu-id="ce0a0-123">アプリケーションは、実行可能ファイル自体以外のタスクを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-123">An application can contain tasks for executables other than itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce0a0-124">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-124">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-125"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-125">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="ce0a0-126">次の例は、構成する方法を示します、<xref:System.Windows.Shell.JumpTask>コード。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-126">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="ce0a0-127"><xref:System.Windows.Shell.JumpTask>電卓アプリケーションを開きます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-127">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Windows.Shell.JumpTask.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-128">起動時にアプリケーションに渡される引数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-128">Gets or sets the arguments passed to the application on startup.</span></span></summary>
        <value><span data-ttu-id="ce0a0-129">起動時にアプリケーションに渡される引数。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-129">The arguments passed to the application on startup.</span></span> <span data-ttu-id="ce0a0-130">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-130">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce0a0-131">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-131">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-132"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-132">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="P:System.Windows.StartupEventArgs.Args" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.JumpTask.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-133">ジャンプ リストのタスクのツールヒントに表示されるテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-133">Gets or sets the text displayed in the tooltip for the task in the Jump List.</span></span></summary>
        <value><span data-ttu-id="ce0a0-134">タスクのツールヒントに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-134">The text displayed in the tooltip for the task.</span></span> <span data-ttu-id="ce0a0-135">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-135">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce0a0-136">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-136">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-137"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-137">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="ce0a0-138">次の例は、構成する方法を示します、<xref:System.Windows.Shell.JumpTask>コード。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-138">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="ce0a0-139"><xref:System.Windows.Shell.JumpTask>電卓アプリケーションを開きます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-139">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconResourceIndex">
      <MemberSignature Language="C#" Value="public int IconResourceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconResourceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconResourceIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourceIndex : int with get, set" Usage="System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-140">リソースに埋め込まれたアイコンの 0 から始まるインデックスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-140">Gets or sets the zero-based index of an icon embedded in a resource.</span></span></summary>
        <value><span data-ttu-id="ce0a0-141">0 から始まるアイコンのインデックス。アイコンが使用されていない場合は -1 となります。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-141">The zero-based index of the icon, or -1 if no icon is used.</span></span> <span data-ttu-id="ce0a0-142">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-142">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce0a0-143">使用されるアイコンを<xref:System.Windows.Shell.JumpTask>ネイティブ リソースとして使用できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-143">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="ce0a0-144">オフセットを指定して使用する 1 つを指定する DLL または実行可能ファイルで複数のアイコンがある場合、<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-144">If multiple icons are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="ce0a0-145">アイコン リソースを指定しない場合、または指定されたアイコンが見つからない場合は、標準的なシステムのアイコンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-145">If no icon resource is specified, or if the specified icon is not found, the standard system icon is displayed.</span></span> <span data-ttu-id="ce0a0-146">アイコンが表示されないことを指定するには、設定、<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>プロパティを-1 にします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-146">To specify that no icon is displayed, set the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property to -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce0a0-147">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-147">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-148"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-148">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      </Docs>
    </Member>
    <Member MemberName="IconResourcePath">
      <MemberSignature Language="C#" Value="public string IconResourcePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconResourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconResourcePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourcePath : string with get, set" Usage="System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-149">ジャンプ リストに表示されるアイコンを含むリソースへのパスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-149">Gets or sets the path to a resource that contains the icon to display in the Jump List.</span></span></summary>
        <value><span data-ttu-id="ce0a0-150">アイコンを含むリソースへのパス。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-150">The path to a resource that contains the icon.</span></span> <span data-ttu-id="ce0a0-151">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-151">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce0a0-152">使用されるアイコンを<xref:System.Windows.Shell.JumpTask>ネイティブ リソースとして使用できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-152">An icon used with a <xref:System.Windows.Shell.JumpTask> must be available as a native resource.</span></span> <span data-ttu-id="ce0a0-153">オフセットを指定して使用する 1 つを指定する DLL または実行可能ファイルで複数のアイコンがある場合、<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-153">If multiple icons are available in a DLL or executable file, you specify the one to use by indicating an offset in the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property.</span></span>  
  
 <span data-ttu-id="ce0a0-154">アイコン リソースを指定しない場合、または指定されたアイコンが見つからない場合は、標準的なシステムのアイコンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-154">If no icon resource is specified, or if the specified icon is not found, the standard system icon is displayed.</span></span> <span data-ttu-id="ce0a0-155">アイコンが表示されないことを指定するには、設定、<xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>プロパティを-1 にします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-155">To specify that no icon is displayed, set the <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> property to -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce0a0-156">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-156">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-157"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-157">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="ce0a0-158">次の例は、構成する方法を示します、<xref:System.Windows.Shell.JumpTask>コード。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-158">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="ce0a0-159"><xref:System.Windows.Shell.JumpTask>電卓アプリケーションを開きます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-159">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Shell.JumpTask.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-160">ジャンプ リストのタスクに表示されるテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-160">Gets or sets the text displayed for the task in the Jump List.</span></span></summary>
        <value><span data-ttu-id="ce0a0-161">ジャンプ リストのタスクに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-161">The text displayed for the task in the Jump List.</span></span> <span data-ttu-id="ce0a0-162">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce0a0-163">通常、<xref:System.Windows.Shell.JumpTask.Title%2A>のプロパティを設定する必要があります、<xref:System.Windows.Shell.JumpTask>クリック可能なタスクとしてジャンプ リストに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-163">Typically, the <xref:System.Windows.Shell.JumpTask.Title%2A> property must be set for the <xref:System.Windows.Shell.JumpTask> to appear in the Jump List as a clickable task.</span></span>  
  
 <span data-ttu-id="ce0a0-164">作成してジャンプ リスト内の項目を視覚的に分離する代わりに、<xref:System.Windows.Shell.JumpTask>を持たない、<xref:System.Windows.Shell.JumpTask.Title%2A>と<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-164">Alternatively, you can visually separate items in a Jump List by creating a <xref:System.Windows.Shell.JumpTask> that does not have a <xref:System.Windows.Shell.JumpTask.Title%2A> and <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> specified.</span></span> <span data-ttu-id="ce0a0-165">この空<xref:System.Windows.Shell.JumpTask>がジャンプ リストに水平方向の線として表示されます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-165">This empty <xref:System.Windows.Shell.JumpTask> will be displayed as a horizontal line in the Jump List.</span></span> <span data-ttu-id="ce0a0-166">この場合は、その他のプロパティを設定することができますが、任意の効果はありません。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-166">In this case, other properties can be set, but they will not have any effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce0a0-167">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-167">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-168"><xref:System.Windows.Shell.JumpTask>テキスト ファイルの名前が表示されます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-168">The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 <span data-ttu-id="ce0a0-169">次の例は、構成する方法を示します、<xref:System.Windows.Shell.JumpTask>コード。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-169">The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code.</span></span> <span data-ttu-id="ce0a0-170"><xref:System.Windows.Shell.JumpTask>電卓アプリケーションを開きます。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-170">The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.</span></span>  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce0a0-171">起動時にアプリケーションの作業ディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-171">Gets or sets the working directory of the application on startup.</span></span></summary>
        <value><span data-ttu-id="ce0a0-172">起動時にアプリケーションの作業ディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-172">The working directory of the application on startup.</span></span> <span data-ttu-id="ce0a0-173">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-173">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce0a0-174">次の例は、宣言する方法を示します、<xref:System.Windows.Shell.JumpTask>マークアップ。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-174">The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup.</span></span> <span data-ttu-id="ce0a0-175"><xref:System.Windows.Shell.JumpTask>という名前のテキスト ファイルを開きます`readme.txt`メモ帳でします。</span><span class="sxs-lookup"><span data-stu-id="ce0a0-175">The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.</span></span>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>