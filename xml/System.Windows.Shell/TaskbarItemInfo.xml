<Type Name="TaskbarItemInfo" FullName="System.Windows.Shell.TaskbarItemInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61c4ecfb7b4ff8bbfd93abb06c048ee51be972c0" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51936458" /></Metadata><TypeSignature Language="C#" Value="public sealed class TaskbarItemInfo : System.Windows.Freezable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TaskbarItemInfo extends System.Windows.Freezable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.TaskbarItemInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TaskbarItemInfo&#xA;Inherits Freezable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskbarItemInfo sealed : System::Windows::Freezable" />
  <TypeSignature Language="F#" Value="type TaskbarItemInfo = class&#xA;    inherit Freezable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>タスク バーのサムネイルを表示する方法に関する情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo>クラスのマネージ ラッパーを提供する[!INCLUDE[win7](~/includes/win7-md.md)]タスク バーの機能です。 Windows シェルとタスク バーをネイティブ Api の詳細については、次を参照してください。[タスク バーの拡張機能](https://go.microsoft.com/fwlink/?LinkId=178479)します。 <xref:System.Windows.Shell.TaskbarItemInfo> として公開される、<xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=nameWithType>の依存関係プロパティを<xref:System.Windows.Window>します。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]タスク バーがタスク バー項目を使用してユーザー状態を通信し、ウィンドウが最小化または非表示にするときに、一般的なタスクを公開できるようにする拡張機能を提供します。 によって公開される機能、<xref:System.Windows.Shell.TaskbarItemInfo>クラスがよりも前のバージョンの Windows でご利用いただけません[!INCLUDE[win7](~/includes/win7-md.md)]します。 使用するアプリケーション、<xref:System.Windows.Shell.TaskbarItemInfo>クラスは、Windows の以前のバージョンで引き続き実行できます。 ただし、これらのタスク バーの拡張機能は以前のバージョンでは使用できません。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]、一部のタスク バーの機能がユーザーの設定によって、使用できるない可能性があります。 たとえば、タスク バーの機能は使用できない場合[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]が無効になっているか、管理者特権を持つアプリケーションを起動するかどうか。 アプリケーションは、タスク バーの拡張機能に依存しないユーザーと対話するその他の方法を提供する必要があります[!INCLUDE[win7](~/includes/win7-md.md)]します。  
  
 タスク バーの右端にある場合に、通知領域のプログラム アイコンは、ユーザーにアプリケーションの状態を通信するために通常使用されます。 既定で、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バーには、通知領域にプログラム アイコンが非表示になります。 ただし、設定、<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>メッセージング アプリケーションのオンライン状態などの状態を通信するために、タスク バー ボタンにイメージを追加するプロパティ。 オーバーレイ画像では、通知領域にプログラム アイコンが表示することはできない場合でも、アプリケーションの状態を表示できます。 タスク バー ボタンに設定してタスクの実行の進行状況を表示することも、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>と<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティ。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]タスク バー ボタン上にマウス ポインターを移動すると、タスク バーには、アプリケーションのサムネイルが表示されます。 既定では、全体のアプリケーション ウィンドウが表示されます。 設定して、サムネイルに表示するウィンドウの特定の部分を指定することができます、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>プロパティ。 指定することも、<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>タスク バーのサムネイルの上のツールヒントに表示されています。 ユーザー設定のため、サムネイルが表示されない場合でも、ツールヒントが表示されます。  
  
 ボタンは、アプリケーション ウィンドウに切り替えることがなく、一般的なタスクへのアクセスを提供するタスク バーのサムネイルを追加できます。 たとえば、Media Player のウィンドウには、再生、一時停止、転送、およびアプリケーションが最小化したときにできる戻る ボタンがタスク バーのサムネイルからメディアの再生を制御が提供されます。 タスク バー サムネイルにボタンがによって表される<xref:System.Windows.Shell.ThumbButtonInfo>に含まれるオブジェクトとは、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>コレクション。  
  
 次の図の拡張機能、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バー。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーの拡張機能  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.TaskbarItemInfo>マークアップ。 <xref:System.Windows.Shell.TaskbarItemInfo>のコレクションを含む<xref:System.Windows.Shell.ThumbButtonInfo>タスク バーの項目から再生および停止コマンドにアクセスを提供するオブジェクト。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 次のマークアップとコードは、その完全なコンテキストで、前の例を示します。 アプリケーションを使用して、<xref:System.ComponentModel.BackgroundWorker>を 0 から 100 までカウントし、ユーザー インターフェイスでその進行状況を表示します。 タスクを開始し、タスク バー プレビューから停止できます。 進行状況は、タスク バー ボタンに表示されます。  
  
 [!code-xaml[Shell_TaskbarItemSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#001)]  
  
 [!code-csharp[Shell_TaskbarItemSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[Shell_TaskbarItemSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskbarItemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskbarItemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.TaskbarItemInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.TaskbarItemInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="taskbarItemInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスク バー項目のツールヒントのテキストを取得または設定します。</summary>
        <value>タスク バー項目のツールヒントのテキスト。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タスク バー ボタンの上にマウス ポインターがときに、タスク バーのサムネイルの上、ツールヒントが表示されます。 ユーザー設定のために、タスク バーのサムネイルが表示されない場合でも、ツールヒントが表示されます。  
  
 次の図は、タスク バー<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>ツールヒント。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーの説明  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.TaskbarItemInfo>マークアップとセットで、<xref:System.Windows.Shell.TaskbarItemInfo.Description%2A>プロパティ。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Overlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Overlay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberSignature Language="VB.NET" Value="Public Property Overlay As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Overlay { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Overlay : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスク バー ボタンのプログラム アイコン上に表示されるイメージを取得または設定します。</summary>
        <value>タスク バー ボタンのプログラム アイコン上に表示されるイメージ。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーにアプリケーションの状態を通信するためにタスク バー ボタンのプログラム アイコンには、イメージを追加できます。 オーバーレイが静的なを使用して、またはアニメーション化<xref:System.Windows.Media.ImageSource>下をタスク バー ボタンのアイコンの右下隅にあります。 オーバーレイは、ユーザー設定、タスク バーを小さなアイコンが表示されている場合に表示されません。  
  
 タスク バーの右端にある場合に、通知領域のプログラム アイコンは、ユーザーにアプリケーションの状態を通信するために通常使用されます。 [!INCLUDE[win7](~/includes/win7-md.md)]、通知領域にプログラム アイコンは、既定では、非表示し、以下ではそのため、状態を通信するために便利です。 タスク バー ボタンのオーバーレイを使用する[!INCLUDE[win7](~/includes/win7-md.md)]通知領域にアイコンが非表示の場合は、状態を通信するためにします。 アプリケーションでは、Windows のバージョンを検出でき、オペレーティング システムに適した方法で通知を提供することができます。  
  
 イメージのオーバーレイは、適切なサイズで表示されます。 場合、<xref:System.Windows.Media.ImageSource>を表す、 <xref:System.Drawing.Icon>、適切なビット深度も使用されます。  
  
 次の図は、タスク バー<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>します。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーのオーバーレイ  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.TaskbarItemInfo>マークアップとセットで、<xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A>プロパティ。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A> プロパティを設定する方法を示しています。  
  
 [!code-csharp[Shell_TaskbarItemSample#121](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#121)]
 [!code-vb[Shell_TaskbarItemSample#121](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#121)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Environment.OSVersion" />
      </Docs>
    </Member>
    <Member MemberName="OverlayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverlayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverlayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverlayProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverlayProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverlayProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.OverlayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressState">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemProgressState ProgressState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Shell.TaskbarItemProgressState ProgressState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressState As TaskbarItemProgressState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemProgressState ProgressState { System::Windows::Shell::TaskbarItemProgressState get(); void set(System::Windows::Shell::TaskbarItemProgressState value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressState : System.Windows.Shell.TaskbarItemProgressState with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemProgressState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プログレス インジケーターをタスク バー ボタンにどのように表示するかを示す値を取得または設定します。</summary>
        <value>プログレス インジケーターをタスク バー ボタンにどのように表示するかを示す列挙値。 既定値は、<see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 進行状況インジケーターを表示することによって実行時間の長いタスクの進行状況を通信することができます、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バー ボタンをクリックします。 インジケーターの色が続く、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>プロパティの 1 つを含む、<xref:System.Windows.Shell.TaskbarItemProgressState>列挙値。 ときに、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>は<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>インジケーターが緑色です。 ときに<xref:System.Windows.Shell.TaskbarItemProgressState.Paused>、黄色のインジケーターが。 ときに<xref:System.Windows.Shell.TaskbarItemProgressState.Error>、赤のインジケーターが。 これらの状態の<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティは、進行状況インジケーターで入力がタスク バー ボタンの量を決定します。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> その他の値は無視されます<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>します。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 全体のタスク バー ボタンでは、パルスを発する緑色のインジケーターを示します。 インジケーターが表示されない<xref:System.Windows.Shell.TaskbarItemProgressState.None>します。  
  
 次の図は、タスク バーの進行状況インジケーターで、<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>状態。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーの進行状況インジケーター  
  
   
  
## Examples  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A> プロパティを設定する方法を示しています。 ハンドラーが設定されている、<xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted?displayProperty=nameWithType>をバック グラウンド タスクが、ユーザーによって停止されたかどうかを示すイベントが、エラーで終了、または正常に完了しました。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-csharp[Shell_TaskbarItemSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[Shell_TaskbarItemSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValue">
      <MemberSignature Language="C#" Value="public double ProgressValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ProgressValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ProgressValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressValue : double with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスク バー ボタンでプログレス インジケーターの完了状態を示す値を取得または設定します。</summary>
        <value>タスク バー ボタンでプログレス インジケーターの完了状態を示す値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティは 0.0 ~ 1.0 の範囲の値として表されます。 および拡大の番号は、それらの範囲内に強制されます。 <xref:System.Double.NaN> 0 に変換します。  
  
 進行状況インジケーターを表示することによって実行時間の長いタスクの進行状況を通信することができます、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バー ボタンをクリックします。 インジケーターの色が続く、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>プロパティの 1 つを含む、<xref:System.Windows.Shell.TaskbarItemProgressState>列挙値。 場合、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>プロパティは<xref:System.Windows.Shell.TaskbarItemProgressState.Normal>、 <xref:System.Windows.Shell.TaskbarItemProgressState.Paused>、または<xref:System.Windows.Shell.TaskbarItemProgressState.Error>、<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>プロパティは、進行状況インジケーターの完了状態を決定します。 <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> いくつかの値は無視されます<xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A>します。 <xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate> 全体のタスク バー ボタンでは、パルスを発する緑色のインジケーターを示します。 インジケーターが表示されない<xref:System.Windows.Shell.TaskbarItemProgressState.None>します。  
  
 次の図は、タスク バーの進行状況インジケーターを<xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A>82 パーセントの。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーの進行状況インジケーター  
  
   
  
## Examples  
 次の例は、コードで <xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A> プロパティを設定する方法を示しています。 ハンドラーで値を設定、<xref:System.ComponentModel.BackgroundWorker.ProgressChanged?displayProperty=nameWithType>をバック グラウンド タスクの現在の進行状況を示すイベント。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-csharp[Shell_TaskbarItemSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[Shell_TaskbarItemSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/shell_taskbaritemsample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ProgressValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ProgressValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressValueProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ProgressValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProgressValueProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfos">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.ThumbButtonInfoCollection ThumbButtonInfos" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbButtonInfos As ThumbButtonInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::ThumbButtonInfoCollection ^ ThumbButtonInfos { System::Windows::Shell::ThumbButtonInfoCollection ^ get(); void set(System::Windows::Shell::ThumbButtonInfoCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbButtonInfos : System.Windows.Shell.ThumbButtonInfoCollection with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.ThumbButtonInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Shell.ThumbButtonInfo" /> に関連付けられている <see cref="T:System.Windows.Window" /> オブジェクトのコレクションを取得または設定します。</summary>
        <value><see cref="T:System.Windows.Shell.ThumbButtonInfo" /> に関連付けられた <see cref="T:System.Windows.Window" /> オブジェクトのコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ボタンは、アプリケーション ウィンドウに切り替える必要がない、一般的なタスクにユーザー アクセスを提供するタスク バーのサムネイルを追加できます。 たとえば、Windows Media Player では、アプリケーションが最小化したときにユーザーのタスク バーのサムネイルからメディア再生を制御できる Play、Pause、転送、およびバックのボタンが表示されます。 タスク バー サムネイルにボタンがによって表される<xref:System.Windows.Shell.ThumbButtonInfo>に含まれるオブジェクトとは、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A>コレクション。  
  
 [!INCLUDE[win7](~/includes/win7-md.md)]シェルは、タスク バーのサムネイルで、最大 7 つのボタンを使用します。 7 つ以上の場合<xref:System.Windows.Shell.ThumbButtonInfo>オブジェクトに追加されます、 <xref:System.Windows.Shell.ThumbButtonInfoCollection>、追加のオブジェクトは、オーバーフローとして扱われます。 ボタンの場合は<xref:System.Windows.Visibility.Collapsed>、表示されている要素がない、および、その領域が予約されていません。 この場合、追加のボタンから、<xref:System.Windows.Shell.ThumbButtonInfoCollection>オーバーフローが表示されます。  
  
 次の図は、2 つの親指ボタンのコレクションにタスク バー プレビューを示します。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーのつまみをボタンします。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.TaskbarItemInfo>マークアップ。 <xref:System.Windows.Shell.TaskbarItemInfo>のコレクションを含む<xref:System.Windows.Shell.ThumbButtonInfo>タスク バーの項目から再生および停止コマンドにアクセスを提供するオブジェクト。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbButtonInfosProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbButtonInfosProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbButtonInfosProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbButtonInfosProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbButtonInfosProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbButtonInfosProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness ThumbnailClipMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness ThumbnailClipMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ThumbnailClipMargin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness ThumbnailClipMargin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.ThumbnailClipMargin : System.Windows.Thickness with get, set" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスク バー サムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を指定する値を取得または設定します。</summary>
        <value>タスク バー サムネイルに表示されるアプリケーション ウィンドウのクライアント領域の一部を指定する値。 既定値は空の <see cref="T:System.Windows.Thickness" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定で、[!INCLUDE[win7](~/includes/win7-md.md)]タスク バーには、アプリケーション ウィンドウのクライアント領域のスケーリングされたサムネイルが表示されます。 設定することができます、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>サムネイルに表示されるクライアント ウィンドウのトリミングの範囲を指定するプロパティ。 たとえば、このプロパティは、アプリケーションのツールバーを除外するときにウィンドウのコンテンツのサムネイルにフォーカスする場合に便利です。 このプロパティは、表示されていないアプリケーションのウィンドウの縮小版の内容を表示する使用できません。  
  
 設定によって、サムネイルに表示される領域を指定する、<xref:System.Windows.Thickness>の領域の周りの境界線。 枠線は、クライアント ウィンドウの端から開始し、指定した量によって内側に拡張します。 境界線内のコンテンツは、サムネイルに表示されます。  
  
 次の図は、罫線を定義する、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>します。  
  
 ![サムネイルのクリップ マージン](~/add/media/wpfshell-clipmargin.png "サムネイルのクリップ マージン")  
サムネイルのクリップ領域の枠線  
  
 次の図は、クリップされたサムネイルのプレビューを示します。  
  
 ![タスク バーの項目情報のサンプル](~/add/media/wpfshell-taskbariteminfo.png "タスクバー項目情報のサンプル")  
Windows タスク バーのサムネイルのプレビュー  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Shell.TaskbarItemInfo>マークアップとセットで、<xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A>プロパティ。 この例が示されている例の一部、<xref:System.Windows.Shell.TaskbarItemInfo>クラス。  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThumbnailClipMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ThumbnailClipMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ThumbnailClipMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThumbnailClipMarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ThumbnailClipMarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThumbnailClipMarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>