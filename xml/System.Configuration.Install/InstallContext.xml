<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="490aa1005f294d7655c6ef034b3a59f0c10bc3a4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37689902" /></Metadata><TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>現在のインストールに関する情報を格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、<xref:System.Configuration.Install.InstallContext>実行可能ファイルがアセンブリをインストールするには、InstallUtil.exe など、インストールによって作成されます。 インストール プログラムを起動して、<xref:System.Configuration.Install.InstallContext>コンス トラクター、既定のログ ファイルのパスとコマンド ライン パラメーターに渡します。  
  
 呼び出しの前にその<xref:System.Configuration.Install.Installer.Install%2A>、 <xref:System.Configuration.Install.Installer.Commit%2A>、 <xref:System.Configuration.Install.Installer.Rollback%2A>、または<xref:System.Configuration.Install.Installer.Uninstall%2A>メソッド、インストール プログラムの設定、<xref:System.Configuration.Install.Installer.Context%2A>のプロパティ、<xref:System.Configuration.Install.Installer>のインスタンスに<xref:System.Configuration.Install.InstallContext>します。 これらのメソッドを呼び出す前に、<xref:System.Configuration.Install.Installer>インストーラー コレクションを格納している、<xref:System.Configuration.Install.Installer.Installers%2A>プロパティ セット、<xref:System.Configuration.Install.Installer.Context%2A>包含の各インストーラーのプロパティ。  
  
 <xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティに入力された実行可能ファイルのインストールを実行するコマンドラインの解析されたバージョンが含まれています。 プロパティには、ログ ファイル、インストール中にユーザー インターフェイスを表示するかどうかと、コンソールのログ情報を表示するかどうかのパスなどの情報が含まれています。 呼び出す、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>コマンド ライン パラメーターのかどうかを検索するメソッド`true`します。  
  
 使用して、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。  
  
   
  
## Examples  
 次の例で、<xref:System.Configuration.Install.InstallContext.%23ctor%2A>コンス トラクター、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティおよび<xref:System.Configuration.Install.InstallContext.LogMessage%2A>と<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>のメソッド、<xref:System.Configuration.Install.InstallContext>クラス。  
  
 ときに、<xref:System.Configuration.Install.Installer.Install%2A>インストーラーのメソッドが呼び出されると、コマンドラインからパラメーターを確認します。 によって、コンソールに進行状況メッセージを表示し、指定されたログ ファイルに保存します。  
  
 空の任意の引数を指定せず、プログラムの呼び出し時に<xref:System.Configuration.Install.InstallContext>が作成されます。 ときに"/ログ ファイル"と"/LogtoConsole"が指定されて、<xref:System.Configuration.Install.InstallContext>がそれぞれの引数を渡すことによって作成<xref:System.Configuration.Install.InstallContext.%23ctor%2A>です。  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロードでは、インストール ログ ファイルは作成されません。  
  
   
  
## Examples  
  
> [!NOTE]
>  この例では、いずれかのオーバー ロードされたバージョンを使用して、<xref:System.Configuration.Install.InstallContext>コンス トラクター。 使用可能な可能性があるその他の例は、個々 のオーバー ロードのトピックを参照してください。  
  
 空の任意の引数を指定せず、プログラムの呼び出し時に<xref:System.Configuration.Install.InstallContext>が作成されます。  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath">インストール用のログ ファイルのパス。ログ ファイルを作成しない場合は <see langword="null" />。</param>
        <param name="commandLine">セットアップ プログラムの実行時に入力されたコマンド ライン パラメーター。入力されなかった場合は <see langword="null" />。</param>
        <summary><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化し、インストール用のログ ファイルを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インストールで使用する場合[Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)、このコンス トラクターは、指定されたパスにログ ファイルが作成されにコマンド ライン パラメーターの配列を解析、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティ。 コマンド ライン パラメーターで、ログ ファイルのパスが指定されている場合は、ファイルの作成に使用されます。 ログ ファイルの引数がコマンドラインの値で指定されていない場合、`logFilePath`パラメーターを使用します。 ログ ファイルの作成を抑制するのには、渡す、"/ログ ファイル ="コマンド ライン パラメーターです。  
  
   
  
## Examples  
 この例は、抜粋の例のクラスの概要では、<xref:System.Configuration.Install.InstallContext>クラス。  
  
 ときに"/ログ ファイル"と"/LogtoConsole"が指定されて、<xref:System.Configuration.Install.InstallContext>がそれぞれの引数を渡すことによって作成<xref:System.Configuration.Install.InstallContext.%23ctor%2A>です。  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>既定のログ ファイルのパスを渡す、<paramref name="logFilePath" />このコンス トラクターを呼び出すときにパラメーター。これは、ような場合、実行可能ファイルのインストールを実行すると、/logfile コマンド ライン パラメーターを使用しない場合に、ログ ファイルが作成されます。</para></block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">確認対象のコマンド ライン パラメーターの名前。</param>
        <summary>指定したコマンド ライン パラメーターが <see langword="true" /> かどうかを確認します。</summary>
        <returns>指定したパラメーターが "yes"、"true"、"1"、または空の文字列 ("") の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドにアクセスする、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティは、指定されたパラメーターがかどうかを判断する、コマンド ライン パラメーターの解析済みのバージョンを含む`true`します。  
  
   
  
## Examples  
 この例は、サンプル内のクラスの概要の抜粋、<xref:System.Configuration.Install.InstallContext>クラス。  
  
 使用して、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>ことを確認するメソッド、`LogtoConsole`パラメーターが設定されています。 場合`yes`は使用して、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">書き込むメッセージ。</param>
        <summary>メッセージをコンソールとインストール ログ ファイルに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インストーラーでは、進行状況やその他の状態情報をログ ファイルに書き込むには、このメソッドを呼び出すことができます。 インストーラーがメッセージ ボックスを表示する必要があるかどうか、またはクエリを呼び出すだけでなくコマンド ライン パラメーターは、ユーザー インターフェイスを表示することを指定する場合、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>メソッド。 ログ ファイルに書き込まれるテキストは表示されず、ユーザーがインストールを実行する InstallUtil.exe を使用しない場合と"/LogToConsole = true"は、コマンドラインで指定します。  
  
   
  
## Examples  
 この例は、抜粋の例のクラスの概要では、<xref:System.Configuration.Install.InstallContext>クラス。  
  
 使用して、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>ことを確認するメソッド、`LogtoConsole`パラメーターが設定されています。 場合`yes`は使用して、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>InstallUtil.exe の実行時に入力されたコマンド ライン パラメーターを取得します。</summary>
        <value>インストール実行可能ファイルの実行時に入力されたコマンド ライン パラメーターを表す <see cref="T:System.Collections.Specialized.StringDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しい<xref:System.Configuration.Install.InstallContext>作成されると、コマンドラインにパラメーターの解析、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティ。 両方のキーとパラメーターの値は、文字列です。  
  
   
  
## Examples  
 この例は、抜粋の例のクラスの概要では、<xref:System.Configuration.Install.InstallContext>クラス。  
  
 サンプルの取得、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティをユーザーが任意のコマンドライン引数が入力されているかどうかを参照してください。 また、使用、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>ことを確認するメソッド、`LogtoConsole`パラメーターが設定されています。 場合`yes`は使用して、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">コマンド ライン パラメーターを格納している配列。</param>
        <summary>コマンド ライン パラメーターを解析して、その結果を文字列ディクショナリに格納します。</summary>
        <returns>解析されたコマンド ライン パラメーターを格納する <see cref="T:System.Collections.Specialized.StringDictionary" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>