<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a4672-101">現在のインストールに関する情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a4672-101">Contains information about the current installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-102">通常、<xref:System.Configuration.Install.InstallContext>実行可能ファイル、アセンブリをインストールするには、InstallUtil.exe など、インストールによって作成されました。</span><span class="sxs-lookup"><span data-stu-id="a4672-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="a4672-103">インストール プログラムを起動して、<xref:System.Configuration.Install.InstallContext>コンス トラクター、既定のログ ファイル パスとコマンド ライン パラメーターを渡します。</span><span class="sxs-lookup"><span data-stu-id="a4672-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="a4672-104">呼び出しの前にその<xref:System.Configuration.Install.Installer.Install%2A>、 <xref:System.Configuration.Install.Installer.Commit%2A>、 <xref:System.Configuration.Install.Installer.Rollback%2A>、または<xref:System.Configuration.Install.Installer.Uninstall%2A>メソッド、インストール プログラムの設定、<xref:System.Configuration.Install.Installer.Context%2A>のプロパティ、<xref:System.Configuration.Install.Installer>のインスタンスに<xref:System.Configuration.Install.InstallContext>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="a4672-105">これらのメソッドを呼び出す前に、<xref:System.Configuration.Install.Installer>でインストーラーのコレクションを格納する、<xref:System.Configuration.Install.Installer.Installers%2A>プロパティ セット、<xref:System.Configuration.Install.Installer.Context%2A>コンテナー内の各インストーラーのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="a4672-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="a4672-106"><xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティには、実行可能ファイルのインストールを実行する入力したコマンドラインの解析済みのバージョンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="a4672-107">プロパティには、コンソールで、ログ情報を表示するかどうか使用し、インストール中にユーザー インターフェイスを表示するかどうかを使用する、ログ ファイルへのパスなどの情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a4672-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="a4672-108">呼び出す、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>コマンド ライン パラメーターがあるかを確認するメソッド`true`です。</span><span class="sxs-lookup"><span data-stu-id="a4672-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="a4672-109">使用して、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a4672-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4672-110">次の例で、<xref:System.Configuration.Install.InstallContext.%23ctor%2A>コンス トラクター、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティおよび<xref:System.Configuration.Install.InstallContext.LogMessage%2A>と<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>のメソッド、<xref:System.Configuration.Install.InstallContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4672-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a4672-111">ときに、<xref:System.Configuration.Install.Installer.Install%2A>インストーラーのメソッドが呼び出されて、コマンドラインからパラメーターをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a4672-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="a4672-112">によって、コンソールに進行状況メッセージを表示し、指定されたログ ファイルにも保存します。</span><span class="sxs-lookup"><span data-stu-id="a4672-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="a4672-113">空の任意の引数を指定せず、プログラムが呼び出される場合<xref:System.Configuration.Install.InstallContext>を作成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="a4672-114">ときに"/ログ ファイル"と"/LogtoConsole"が指定されて、<xref:System.Configuration.Install.InstallContext>をそれぞれの引数を渡すことによって作成された<xref:System.Configuration.Install.InstallContext.%23ctor%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4672-115"><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a4672-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4672-116"><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a4672-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-117">このオーバー ロードでは、インストール ログ ファイルは作成されません。</span><span class="sxs-lookup"><span data-stu-id="a4672-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="a4672-118">この例では、いずれかのオーバー ロードされたバージョンを使用して、<xref:System.Configuration.Install.InstallContext>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="a4672-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="a4672-119">使用可能な可能性のあるその他の例は、個々 のオーバー ロードのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="a4672-120">空の任意の引数を指定せず、プログラムが呼び出される場合<xref:System.Configuration.Install.InstallContext>を作成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath"><span data-ttu-id="a4672-121">インストール用のログ ファイルのパス。ログ ファイルを作成しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span></span></param>
        <param name="commandLine"><span data-ttu-id="a4672-122">セットアップ プログラムの実行時に入力されたコマンド ライン パラメーター。入力されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span></span></param>
        <summary><span data-ttu-id="a4672-123"><see cref="T:System.Configuration.Install.InstallContext" /> クラスの新しいインスタンスを初期化し、インストール用のログ ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="a4672-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-124">インストールで使用する場合[Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)、このコンス トラクターは、指定したパスにログ ファイルを作成しにコマンド ライン パラメーターの配列を解析して、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a4672-124">If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="a4672-125">ログ ファイルのパスが、コマンド ライン パラメーターで指定されている場合は、ファイルの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="a4672-126">ログ ファイルの引数がコマンドラインの値で指定されていない場合、`logFilePath`パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="a4672-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="a4672-127">ログ ファイルの作成を抑制するのには、渡す、"/ログ ファイル ="コマンド ライン パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="a4672-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4672-128">この例は、例のクラスの概要では、抜粋<xref:System.Configuration.Install.InstallContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4672-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a4672-129">ときに"/ログ ファイル"と"/LogtoConsole"が指定されて、<xref:System.Configuration.Install.InstallContext>をそれぞれの引数を渡すことによって作成された<xref:System.Configuration.Install.InstallContext.%23ctor%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a4672-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a4672-130">既定のログ ファイル パスを渡す、<paramref name="logFilePath" />このコンス トラクターを呼び出す場合のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="a4672-130">Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor.</span></span> <span data-ttu-id="a4672-131">これは、実行可能ファイルのインストールを実行すると、/logfile コマンド ライン パラメーターを使用しない場合、ログ ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a4672-131">This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</span></span></para>
        </block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="a4672-132">確認対象のコマンド ライン パラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="a4672-132">The name of the command-line parameter to check.</span></span></param>
        <summary><span data-ttu-id="a4672-133">指定したコマンド ライン パラメーターが <see langword="true" /> かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a4672-133">Determines whether the specified command-line parameter is <see langword="true" />.</span></span></summary>
        <returns>
          <span data-ttu-id="a4672-134">指定したパラメーターが "yes"、"true"、"1"、または空の文字列 ("") の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-134"><see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-135">このメソッドにアクセスする、<xref:System.Configuration.Install.InstallContext.Parameters%2A>かどうかを指定したパラメーターに、コマンド ライン パラメーターの解析済みのバージョンを含むプロパティ`true`です。</span><span class="sxs-lookup"><span data-stu-id="a4672-135">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4672-136">この例は、クラスの概要」のサンプルの抜粋、<xref:System.Configuration.Install.InstallContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4672-136">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a4672-137">使用して、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>かどうかを検索するメソッド、`LogtoConsole`パラメーターが設定されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-137">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a4672-138">場合`yes`を使用、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a4672-138">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a4672-139">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="a4672-139">The message to write.</span></span></param>
        <summary><span data-ttu-id="a4672-140">メッセージをコンソールとインストール ログ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a4672-140">Writes a message to the console and to the log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-141">インストーラーでは、進行状況やその他の状態情報をログ ファイルに書き込むには、このメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="a4672-141">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="a4672-142">コマンド ライン パラメーターでは、ユーザー インターフェイスを表示することを指定すると、インストーラーがメッセージ ボックスを表示するか通話だけでなくクエリを作成、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a4672-142">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="a4672-143">ログ ファイルに書き込まれるテキストが見えないように、ユーザーが、インストールを実行する InstallUtil.exe を使用しない限り、および"/LogToConsole = true"は、コマンドラインで指定します。</span><span class="sxs-lookup"><span data-stu-id="a4672-143">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4672-144">この例は、例のクラスの概要では、抜粋<xref:System.Configuration.Install.InstallContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4672-144">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a4672-145">使用して、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>かどうかを検索するメソッド、`LogtoConsole`パラメーターが設定されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-145">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a4672-146">場合`yes`を使用、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a4672-146">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4672-147">InstallUtil.exe の実行時に入力されたコマンド ライン パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="a4672-147">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span></span></summary>
        <value><span data-ttu-id="a4672-148">インストール実行可能ファイルの実行時に入力されたコマンド ライン パラメーターを表す <see cref="T:System.Collections.Specialized.StringDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-148">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4672-149">新しい<xref:System.Configuration.Install.InstallContext>作成されると、コマンドラインにパラメーターの解析、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a4672-149">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="a4672-150">キーとパラメーターの値の両方は、文字列です。</span><span class="sxs-lookup"><span data-stu-id="a4672-150">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4672-151">この例は、例のクラスの概要では、抜粋<xref:System.Configuration.Install.InstallContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4672-151">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a4672-152">このサンプルを取得、<xref:System.Configuration.Install.InstallContext.Parameters%2A>プロパティを任意のコマンドラインの引数が、ユーザーが入力されたかどうかを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a4672-152">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="a4672-153">また、使用、<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>かどうかを検索するメソッド、`LogtoConsole`パラメーターが設定されています。</span><span class="sxs-lookup"><span data-stu-id="a4672-153">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a4672-154">場合`yes`を使用、<xref:System.Configuration.Install.InstallContext.LogMessage%2A>インストール ログ ファイルと、コンソールにステータス メッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a4672-154">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="a4672-155">コマンド ライン パラメーターを格納している配列。</span><span class="sxs-lookup"><span data-stu-id="a4672-155">An array containing the command-line parameters.</span></span></param>
        <summary><span data-ttu-id="a4672-156">コマンド ライン パラメーターを解析して、その結果を文字列ディクショナリに格納します。</span><span class="sxs-lookup"><span data-stu-id="a4672-156">Parses the command-line parameters into a string dictionary.</span></span></summary>
        <returns><span data-ttu-id="a4672-157">解析されたコマンド ライン パラメーターを格納する <see cref="T:System.Collections.Specialized.StringDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="a4672-157">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>