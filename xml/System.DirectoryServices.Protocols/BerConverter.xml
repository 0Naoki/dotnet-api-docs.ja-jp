<Type Name="BerConverter" FullName="System.DirectoryServices.Protocols.BerConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcd13a1f1b1676bff591dd253cec61094fea62ef" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37660967" /></Metadata><TypeSignature Language="C#" Value="public sealed class BerConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BerConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.BerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BerConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BerConverter sealed" />
  <TypeSignature Language="F#" Value="type BerConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.BerConverter" /> クラスは、基本エンコーディング規則 (BER: Basic Encoding Rules) を使用して構造化データのエンコードとデコードを行います。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static object[] Decode (string format, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] Decode(string format, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (format As String, value As Byte()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ Decode(System::String ^ format, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Decode : string * byte[] -&gt; obj[]" Usage="System.DirectoryServices.Protocols.BerConverter.Decode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="format">書式指定文字列。</param>
        <param name="value">BER データの配列。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> メソッドは、BER を使用してバイナリ形式のデータをデコードし、構造化データを取得します。</summary>
        <returns>デコードされたデータ。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> パラメーターに null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> パラメーターに未定義の文字が含まれています。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">基になるデコーディングが失敗します。 デコーディング規則には次のようなものがあります。  
  
 <list type="table"><listheader><term> コード  </term><description> 対応する結果  </description></listheader><item><term> '{' '}' '[' ']' 'n' 'x'  </term><description> 対応する結果なし  </description></item><item><term> 'i' 'e'  </term><description> int  </description></item><item><term> 'b'  </term><description> bool  </description></item><item><term> 'a'  </term><description> string  </description></item><item><term> 'O'  </term><description> byte[]  </description></item><item><term> 'B'  </term><description> byte[] (ビット文字列を含む)  </description></item><item><term> 'v'  </term><description> string[]  </description></item><item><term> 'V'  </term><description> byte[][]  </description></item></list></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static byte[] Encode (string format, params object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Encode(string format, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (format As String, ParamArray value As Object()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Encode(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Encode : string * obj[] -&gt; byte[]" Usage="System.DirectoryServices.Protocols.BerConverter.Encode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">書式指定文字列。</param>
        <param name="value">書式指定されたデータの配列。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> メソッドは、BER を使用して構造化データをエンコードし、バイナリ形式のデータを取得します。</summary>
        <returns>BER エンコードされたデータの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有効な形式の文字を次に示します。  
  
 ルールのエンコード。  
  
|コード|対応する引数|  
|----------|----------------------------|  
|'{0}' '}'' [' ']' 'n' 日前|対応する引数なし|  
|'t' 'i' 'e'|int|  
|'a'|オクテット文字列|  
|'b'|bool|  
|'|string|  
|' o 'X' '|byte[]|  
|'v'|string[]|  
|'V'|byte[][]|  
  
> [!NOTE]
>  'v' と 'V' はその特殊な double{}が必要です。 たとえば、{{v}} を使用して、{{V}}。  
  
## <a name="exceptions"></a>例外  
  
|例外|条件|  
|---------------|---------------|  
|ArgumentNullException|`format` が null 参照 (Visual Basic の場合は `Nothing`) です。|  
|ArgumentException|この例外は、次の条件のいずれかで発生します。<br /><br /> -引数が足りないの書式指定文字列です。<br />形式の文字列の引数が正しくありません。<br />書式指定文字列には、未定義の文字が含まれています。|  
|BerConversionException|エラー処理の戻り値。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>