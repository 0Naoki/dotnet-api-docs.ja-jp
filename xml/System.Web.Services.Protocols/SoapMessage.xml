<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="670f91888a187cdfd3b91a9264e8e8c520bd48eb" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <TypeSignature Language="F#" Value="type SoapMessage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> の SOAP 要求または SOAP 応答のデータを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 主な用途、<xref:System.Web.Services.Protocols.SoapMessage>クラスは、SOAP 要求または SOAP 応答のデータを表す、SOAP 拡張機能。 ときに、<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>メソッドが呼び出されると、<xref:System.Web.Services.Protocols.SoapExtension>受信、<xref:System.Web.Services.Protocols.SoapMessage>各<xref:System.Web.Services.Protocols.SoapMessageStage>します。 特定の SOAP 拡張機能を処理する方法を選択するまでは、<xref:System.Web.Services.Protocols.SoapMessage>します。 一般的な SOAP 拡張機能には、暗号化と圧縮が含まれます。  
  
 SOAP 拡張機能は、いずれかに適用できる、または、XML Web サービス メソッドでは、ASP.NET または XML Web サービス クライアントを使用して作成されました。 SOAP 拡張機能は、XML Web サービス メソッドに適用されるときに、<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>メソッドのインスタンスを受け取る<xref:System.Web.Services.Protocols.SoapServerMessage>から派生した<xref:System.Web.Services.Protocols.SoapMessage>します。 XML Web サービス クライアントでは、SOAP 拡張機能が適用されたときに同様に、<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>のインスタンスを受け取る<xref:System.Web.Services.Protocols.SoapClientMessage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : string" Usage="System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、SOAP 要求または SOAP 応答の SOAPAction HTTP 要求ヘッダー フィールドを取得します。</summary>
        <value>SOAP 要求または SOAP 応答の SOAPAction HTTP 要求ヘッダー フィールド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Action%2A>中にいずれかのプロパティにアクセスできる<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see langword="Content-Encoding" /> HTTP ヘッダーの内容を取得または設定します。</summary>
        <value>
          <see langword="Content-Encoding" /> HTTP ヘッダーの内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 拡張機能を設定できる、<xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A>プロパティで表されるメディアの種類を変更することがなく、SOAP メッセージのエンコードに関する補足情報を提供する、 `Content-Type` HTTP ヘッダー。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> が <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> または <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> の段階です。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 要求または SOAP 応答の HTTP <see langword="Content-Type" /> を取得または設定します。</summary>
        <value>SOAP 要求または SOAP 応答の HTTP <see langword="Content-Type" />。 既定値は、"text/xml" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A>プロパティでのみアクセスできる、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>と<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>ステージです。 それ以外の場合、、<xref:System.InvalidOperationException>がスローされます。  
  
 使用して、<xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A>プロパティの代わりに、 <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> SOAP メッセージのエンコードに関する補足情報を提供するプロパティ。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> は、<see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> の段階または <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> の段階でアクセスされます。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInStage : unit -&gt; unit" Usage="soapMessage.EnsureInStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、現在の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> は、in パラメーターが使用できる段階であることをアサートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アサートのステージは、XML Web サービス クライアントと XML Web サービス メソッドで異なります。 SOAP 要求が逆シリアル化後に、XML Web サービス メソッドのパラメーターでは使用可能な<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>ステージ。 XML Web サービス クライアントでは、in パラメーターが SOAP 要求のシリアル化プロセスで以前に使用、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>ステージ。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> いずれかの中に呼び出すことができる<xref:System.Web.Services.Protocols.SoapMessageStage>、ただし、<xref:System.InvalidOperationException>場合にスローされるパラメーターは使用できません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">in パラメーターが使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureOutStage : unit -&gt; unit" Usage="soapMessage.EnsureOutStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、現在の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> 段階は out パラメーターが使用できる段階であることをアサートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アサートのステージは、XML Web サービス クライアントと XML Web サービス メソッドで異なります。 XML Web サービス メソッドの out パラメーターが SOAP 応答のシリアル化プロセスで以前に使用、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>ステージ。 SOAP 応答の逆シリアル化プロセスの後に使用可能なは、out パラメーターを XML Web サービス クライアントで、<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>ステージ。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> いずれかの中に呼び出すことができる<xref:System.Web.Services.Protocols.SoapMessageStage>、ただし、<xref:System.InvalidOperationException>ときにスローされるパラメーターは使用できません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">out パラメーターが使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberSignature Language="F#" Value="member this.EnsureStage : System.Web.Services.Protocols.SoapMessageStage -&gt; unit" Usage="soapMessage.EnsureStage stage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">アサートされる <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</param>
        <summary>XML Web サービス メソッドの呼び出しの <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> が渡された単数または複数の段階であることを確認します。 現在の処理段階が、渡された段階の 1 つではない場合は、例外がスローされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のインスタンスでビットごとの OR 演算を実行することによって複数のステージをアサートすることができます、<xref:System.Web.Services.Protocols.SoapMessageStage>クラス。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> いずれかの中に呼び出すことができる<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 次の例では、あることをアサート現在<xref:System.Web.Services.Protocols.SoapMessageStage>か<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>または<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>そうでない場合、例外がスローされます。  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> が、アサートされた単数または複数の段階ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.Services.Protocols.SoapException with get, set" Usage="System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドの呼び出しから <see cref="T:System.Web.Services.Protocols.SoapException" /> を取得します。</summary>
        <value>XML Web サービス メソッドの呼び出し中に発生した <see cref="T:System.Web.Services.Protocols.SoapException" />。 Web サービス メソッドの呼び出し中に <see cref="T:System.Web.Services.Protocols.SoapException" /> が発生しなかった場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A>中にいずれかのプロパティにアクセスできる<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetInParameterValue : int -&gt; obj" Usage="soapMessage.GetInParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">パラメーター配列内のパラメーターの位置を示す、0 から始まるインデックス番号。</param>
        <summary>指定されたインデックスで XML Web サービス メソッドに渡すパラメーターを取得します。</summary>
        <returns>指定したインデックスにあるパラメーターを表す <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A>プロパティは、アクセス時にパラメーターが使用可能なだけです。 ASP.NET はスロー<xref:System.InvalidOperationException>にアクセスするとき、<xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A>プロパティ パラメーターの場合は使用できません。  
  
 <xref:System.Web.Services.Protocols.SoapClientMessage>のパラメータを使用できます、 <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize><xref:System.Web.Services.Protocols.SoapMessageStage>します。 <xref:System.Web.Services.Protocols.SoapServerMessage>のパラメータを使用できます、 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize><xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" /> パラメーターが 0 未満か、パラメーター配列の長さを超える値です。</exception>
        <exception cref="T:System.InvalidOperationException">in パラメーターが使用できないときに、このプロパティにアクセスしようとしました。</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetOutParameterValue : int -&gt; obj" Usage="soapMessage.GetOutParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">パラメーター配列内のパラメーターの位置を示す、0 から始まるインデックス番号。</param>
        <summary>指定したインデックスで XML Web サービス メソッドに渡す out パラメーターを取得します。</summary>
        <returns>指定したインデックスにあるパラメーターを表す <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合に out パラメーターは使用できませんがスローされます、<xref:System.InvalidOperationException>にアクセスするとき、<xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A>プロパティ。  
  
 <xref:System.Web.Services.Protocols.SoapClientMessage> Out パラメーターが表示されます、 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize><xref:System.Web.Services.Protocols.SoapMessageStage>します。 <xref:System.Web.Services.Protocols.SoapServerMessage> Out パラメーターが表示されます、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>の<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" /> パラメーターの値が、パラメーター配列の長さを超える値です。</exception>
        <exception cref="T:System.InvalidOperationException">out パラメーターが使用できないときに、このプロパティにアクセスしようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberSignature Language="F#" Value="member this.GetReturnValue : unit -&gt; obj" Usage="soapMessage.GetReturnValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML Web サービス メソッドの戻り値を取得します。</summary>
        <returns>XML Web サービス メソッドの戻り値を表す <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値が使用できない場合に、ASP.NET がスロー<xref:System.InvalidOperationException>にアクセスするとき、<xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A>プロパティ。  
  
 <xref:System.Web.Services.Protocols.SoapClientMessage>戻り値が使用可能な場合に、<xref:System.Web.Services.Protocols.SoapMessageStage>値は<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>します。 <xref:System.Web.Services.Protocols.SoapServerMessage>戻り値が使用可能な場合に<xref:System.Web.Services.Protocols.SoapMessageStage>値は<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">この XML Web サービス メソッドには戻り値がありません。  
  
OR 
戻り値が使用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Web.Services.Protocols.SoapHeaderCollection" Usage="System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の SOAP 要求または SOAP 応答に適用される SOAP ヘッダーのコレクション。</summary>
        <value>現在の SOAP 要求または SOAP 応答に適用される SOAP ヘッダーの <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />。 SOAP ヘッダーがない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP ヘッダーは、SOAP 要求または SOAP 応答のオプションの部分です。 ASP.NET とそのクライアントを使用して作成した XML Web サービスで SOAP ヘッダーの使用の詳細については、次を参照してください。、<xref:System.Web.Services.Protocols.SoapHeader>クラス。  
  
 ただし、<xref:System.Web.Services.Protocols.SoapMessage.Headers%2A>何らかの段階でプロパティにアクセスできるは、SOAP ヘッダー情報でのみ設定されます、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>と<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>ステージ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Web.Services.Protocols.LogicalMethodInfo" Usage="System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、SOAP 要求の対象となる XML Web サービス メソッドのメソッド プロトタイプの表示を取得します。</summary>
        <value>SOAP 要求の対象となる XML Web サービス メソッドを表す <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A>中にアクセスできる<xref:System.Web.Services.Protocols.SoapMessageStage>、中にデータのみが<xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>と<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool" Usage="System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービス メソッドに適用される <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> 属性または <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 属性の <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> プロパティを示す値を取得します。</summary>
        <value>XML Web サービス メソッドに適用される <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> または <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> の <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> プロパティが <see langword="true" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参照してください、<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType>プロパティの<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>または<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>詳細については、一方向の XML Web サービス メソッド。  
  
 <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A>プロパティは、のすべての段階でアクセス可能な<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービスとの通信に使用する SOAP プロトコルのバージョンを取得します。</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapServerMessage>、<xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A>プロパティを後に有効にすることが保証されます、<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>ステージ。 <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>ステージのプロパティは利用できますが、SOAP メッセージが完全に処理されていないと、SOAP メッセージの内容を変える可能性がある SOAP 拡張機能を実行していません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberSignature Language="F#" Value="member this.Stage : System.Web.Services.Protocols.SoapMessageStage" Usage="System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> の <see cref="T:System.Web.Services.Protocols.SoapMessage" /> を取得します。</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapMessage" /> の <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A>プロパティは、いずれかにアクセスできる<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 次のコード例を確認する方法を示します、<xref:System.Web.Services.Protocols.SoapMessageStage>内、<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType>メソッド。  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream" Usage="System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.IO.Stream" /> の形式で SOAP 要求または SOAP 応答を表しているデータを取得します。</summary>
        <value>
          <see cref="T:System.IO.Stream" /> クラスの読み取り専用インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 要求または SOAP 拡張機能のログ記録などの SOAP 応答を表すデータを検査する SOAP 拡張機能を使用できる、`Stream`それぞれで、データを表示するプロパティ<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
 SOAP 要求または SOAP 応答を暗号化または圧縮の SOAP 拡張機能などを表すデータを変更する SOAP 拡張機能には、これを行う必要があります、<xref:System.IO.Stream>に渡される、<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>メソッドの<xref:System.Web.Services.Protocols.SoapExtension>します。 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>プロパティの<xref:System.Web.Services.Protocols.SoapMessage>に渡される<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>は読み取り専用です。  
  
 SOAP 要求または SOAP 応答を表すデータを変更する方法の詳細については、次を参照してください。<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : string" Usage="System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、XML Web サービスのベース URL を取得します。</summary>
        <value>XML Web サービスのベース URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapMessage.Url%2A>中にいずれかのプロパティにアクセスできる<xref:System.Web.Services.Protocols.SoapMessageStage>します。  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>