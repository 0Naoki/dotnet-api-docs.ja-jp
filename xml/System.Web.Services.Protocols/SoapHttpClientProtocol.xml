<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec1804651ba4a85c8d7f98ea2b633a8980e6c574" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP 使用時のクライアント プロキシの派生元となるクラスを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web サービス クライアントを構築する場合、プロキシ クラスから派生した直接または間接的に<xref:System.Web.Services.Protocols.WebClientProtocol>XML Web サービス用に作成する必要があります。 XML Web サービス クライアントが SOAP を使用してを呼び出すと、プロキシ クラスがから派生する必要があります<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>から派生した<xref:System.Web.Services.Protocols.HttpWebClientProtocol>します。 <xref:System.Web.Services.Protocols.HttpWebClientProtocol>、から派生、<xref:System.Web.Services.Protocols.WebClientProtocol>します。  
  
 XML Web サービスを通信から直接または間接的に派生するプロキシ クラスを作成<xref:System.Web.Services.Protocols.WebClientProtocol>呼び出そうとする XML Web サービス。 プロキシ クラスを手動で作成する代わりに、Web サービス記述言語ツール (Wsdl.exe) を使用して、指定された XML Web サービスのサービスの説明用のプロキシ クラスを作成します。 を介して、XML Web サービス メソッドへの同期呼び出しが行われる SOAP プロトコルのプロキシ クラスを生成すると、ときに、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>メソッドを使用して非同期呼び出しが行われる一方、<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>メソッドと<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>メソッド。  
  
   
  
## Examples  
 次のコード例は、の Wsdl.exe によって生成されたプロキシ クラス、 `Math` XML Web サービス。 プロキシ クラスの派生元<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>、抽象から派生した<xref:System.Web.Services.Protocols.WebClientProtocol>クラス。  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 次のコード例は、`Math`前述のプロキシ クラスの生成元の XML Web サービス。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <block subset="none" type="overrides">
      <para>このクラスをオーバーライドする場合は、XML Web サービスの特定の種類に固有の派生クラスでメソッドを導入できます。メソッドは、パラメーターをキャプチャし、XML Web サービスとの通信の作業を行う基本クラスを呼び出します。導入されたメソッドが非同期の場合は、呼び出し、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />メソッドと<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />メソッド。導入されたメソッドが同期の場合は、呼び出し、<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />メソッド。通常、オーバーライドされたコンス トラクターを設定、<see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />プロパティを XML Web サービス メソッドの URL。</para>
    </block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドを呼び出している、派生クラス内の XML Web サービス メソッドの名前。</param>
        <param name="parameters">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。 配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</param>
        <param name="callback">非同期呼び出しが完了したときに呼び出されるデリゲート。 <c>callback</c> が <see langword="null" /> の場合、このデリゲートは呼び出されません。</param>
        <param name="asyncState">呼び出し元によって提供される補足情報。</param>
        <summary>SOAP を使用して XML Web サービス メソッドの非同期呼び出しを開始します。</summary>
        <returns>リモート メソッドの呼び出しからの戻り値を取得するために、<see cref="T:System.IAsyncResult" /> メソッドに渡される <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、呼び出すことはありません、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>メソッドを直接、XML Web サービスの独自のプロキシ クラスを構築する場合を除き、します。  
  
 サービスの説明から、Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシ クラスは、同期的に、XML Web サービス メソッドを呼び出すプロキシ クラスから派生した名前として、XML Web サービス メソッドを公開します。 各 XML Web サービス メソッドの 1 つのプロキシ クラスに追加の 2 つのメソッドを追加すると、XML Web サービス メソッドを非同期に呼び出す、 `Begin` XML Web サービス メソッドと 1 つの名前に追加するプレフィックス、`End`プレフィックスを追加します。  
  
 プロキシ クラスの呼び出し、 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> XML Web サービス メソッドに非同期呼び出しを開始する方法。 たとえば、XML Web サービスという名前の XML Web サービス メソッドを公開している場合`Add`、プロキシ クラスには、という名前のメソッドが含まれています。 `BeginAdd`、XML Web 呼び出しを開始するためのサービス メソッド。 コード内で、`BeginAdd`を呼び出し、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>メソッドと、結果が想定される戻り値の型に配置されます`Add`します。  
  
 `methodName`が追加された、メソッドなどのカスタム属性を検索するために使用<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>します。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。  
  
 `asyncState` 渡される`callback`に含まれていると、<xref:System.IAsyncResult>から返される、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>メソッド。 `asyncState`で指定された、非同期呼び出しのコンテキストに関する情報を渡すパラメーターを使用することができます、`callback`パラメーター、結果を処理するデリゲート。  
  
   
  
## Examples  
 次のコード例は、Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシ クラス、 `Math` XML Web サービス。 内で、 `BeginAdd` 、プロキシ クラスのメソッド、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>メソッドへの非同期呼び出しを開始しています、 `Add` XML Web サービス メソッド。  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 次のコード例は、`Math`前述のプロキシ クラスの作成元の XML Web サービス。  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> にある探索ドキュメントに記述されている XML Web サービスに動的にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web サービス クライアントは、XML Web サービス プロキシ クラスを使用して、参照されているもの以外に動的にバインドできます、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>メソッド。 通常、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>プロパティは、XML Web サービスのベース アドレスを参照します。 呼び出す前に、ただし、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法、設定、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>探索ドキュメントの URL へのプロパティ。 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>メソッドは、プロキシ クラスで定義されているバインディングに探索ドキュメントに一致するものを検索しを動的にバインドしようとします。 成功した場合、後続のメソッド呼び出しは、探索ドキュメントで説明されている XML Web サービスに送信されます。  
  
 プロキシ クラスが呼び出しを使用して XML Web サービス メソッドによって実装されているバインディングを定義する Web サービス記述言語ツール (Wsdl.exe) を使用してプロキシ クラスをビルドする場合、<xref:System.Web.Services.WebServiceBindingAttribute>します。 XML Web サービスは、複数のバインドを実装すると、Wsdl.exe は、各バインドのプロキシ クラスを作成します。 各プロキシ クラスが適用されている、<xref:System.Web.Services.WebServiceBindingAttribute>バインディングとその名前空間の名前を定義します。 設定した探索ドキュメント、<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>プロパティには、同じバインディング名と名前空間を実装する XML Web サービスへの参照を含める必要がありますまたは例外がスローされます。  
  
   
  
## Examples  
 次のコード例は、の Wsdl.exe ユーティリティを使用して生成されたプロキシ クラス、 `Math` XML Web サービス。 A<xref:System.Web.Services.WebServiceBindingAttribute>に適用される、`Math`バインディング名を設定プロキシ クラス`MathSoap`とその名前空間に`http://tempuri.org/`します。  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 次のコード例は、上記のプロキシ クラスを使用して Web サービス クライアントです。 内で、 `EnterBtn_Click` Web フォーム、XML Web サービス クライアントの呼び出しのイベント、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>メソッドは、ユーザーが指定した URL に動的にバインドしようとしています。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">プロキシ クラスにバインディングが定義されていません。</exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> メソッドから返された <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />。</param>
        <summary>SOAP を使用して XML Web サービス メソッドの非同期呼び出しを終了します。</summary>
        <returns>派生クラス メソッドの戻り値と、参照渡しパラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、呼び出すことはありません、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>メソッドを直接、XML Web サービスの独自のプロキシ クラスを構築する場合を除き、します。  
  
 XML Web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシ クラスは、XML Web サービス メソッドを同期的に呼び出すためのプロキシ クラスの名前として、XML Web サービス メソッドを公開します。 XML Web サービス メソッドを非同期的に呼び出すことの 2 つの追加のメソッドは、各 XML Web サービス メソッドの 1 つのプロキシ クラスに追加されます、 `Begin` XML Web サービス メソッドと 1 つの名前に追加するプレフィックス、`End`プレフィックスを追加します。  
  
 プロキシ クラスの呼び出し、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>メソッドを XML Web サービス メソッドに非同期呼び出しを完了します。 たとえば、XML Web サービスという名前の XML Web サービス メソッドを公開している場合`Add`、プロキシ クラスには、という名前のメソッドが含まれています。 `EndAdd`、XML Web の非同期呼び出しを完了するためのサービス メソッド。 コード内で、`EndAdd`を呼び出し、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>メソッドとし、結果が想定される戻り値の型に配置されます`Add`します。  
  
   
  
## Examples  
 次のコード例は、の Wsdl.exe によって生成されたプロキシ クラス、 `Math` XML Web サービス。 内で、 `EndAdd` 、プロキシ クラスのメソッド、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>メソッドへの非同期呼び出しが完了すると、 `Add` XML Web サービス メソッド。  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 次のコード例は、`Math`前述のプロキシ クラスの作成元の XML Web サービス。  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> が <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドからの戻り値ではありません。</exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="bufferSize">
          <see cref="T:System.IO.StreamReader" /> で使用する <see cref="T:System.Xml.XmlReader" /> の初期バッファー サイズ。</param>
        <summary>
          <see cref="T:System.Xml.XmlReader" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</summary>
        <returns>
          <paramref name="message" /> パラメーターの <see cref="T:System.Xml.XmlReader" /> プロパティで初期化された <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <see cref="T:System.Uri" /> の作成時に使用する <see cref="T:System.Net.WebRequest" />。</param>
        <summary>指定した <paramref name="uri" /> に対して <see cref="T:System.Net.WebRequest" /> を作成します。</summary>
        <returns>指定した URI の <see cref="T:System.Net.WebRequest" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタマイズするこのメソッドをオーバーライドすることができます、<xref:System.Net.WebRequest>まで XML Web サービス要求が行われます。 たとえば、要求にカスタム ヘッダーを追加できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="uri" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を初期化する <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> を提供する <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="bufferSize">
          <see cref="T:System.IO.StreamWriter" /> で使用する <see cref="T:System.Xml.XmlWriter" /> の初期バッファー サイズ。</param>
        <summary>
          <see cref="T:System.Xml.XmlWriter" /> パラメーターの <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> プロパティで初期化された <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> を返します。</summary>
        <returns>
          <paramref name="message" /> パラメーターの <see cref="T:System.Xml.XmlWriter" /> プロパティで初期化された <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">XML Web サービス メソッドの名前。</param>
        <param name="method_name">XML Web サービス メソッドの名前。</param>
        <param name="parameters">XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。 配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</param>
        <summary>SOAP を使用して XML Web サービス メソッドを同期的に呼び出します。</summary>
        <returns>派生クラス メソッドの戻り値、および <see langword="reference" /> パラメーターまたは <see langword="out" /> パラメーターを格納しているオブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、呼び出すことはありません、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>メソッドを直接、XML Web サービスの独自のプロキシ クラスを作成していない限り。  
  
 XML Web サービスの Web サービス記述言語ツール (Wsdl.exe) によって生成されるプロキシ クラスは、プロキシ クラスの名前として、XML Web サービス メソッドを公開します。 プロキシ クラスの呼び出し、 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> XML Web サービス メソッドの呼び出しを呼び出すメソッド。 たとえば、XML Web サービスという名前の XML Web サービス メソッドを公開している場合`Add`、プロキシ クラスは、という名前のメソッドも含まれています。`Add`します。 コード内で、`Add`プロキシ クラスのメソッドは、同期呼び出しを XML Web サービス メソッドに、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>メソッドとし、結果が想定される戻り値の型に配置されます`Add`します。  
  
 `methodName`パラメーターを使用して、カスタム属性が追加された、メソッドになどを見つけるを<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>します。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> SOAP プロトコルを必要とされる派生メソッドで追加情報を提供します。  
  
   
  
## Examples  
 次のコード例は、の Wsdl.exe によって生成されたプロキシ クラス、 `Math` XML Web サービス。 内で、 `Add` 、プロキシ クラスのメソッド、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>メソッドを呼び出し、 `Add` XML Web サービス メソッド。  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 次のコード例は、`Math`前述のプロキシ クラスの作成元の XML Web サービス。  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">リクエストが、オブジェクトの現在の状態に対して有効でなかった。</exception>
        <exception cref="T:System.Net.WebException">ネットワークへのアクセス中にエラーが発生しました。</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName">呼び出すメソッドの名前。</param>
        <param name="parameters">メソッドに渡すパラメーター。</param>
        <param name="callback">メソッド呼び出しの完了時に呼び出されたデリゲート。</param>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">呼び出すメソッドの名前。</param>
        <param name="parameters">メソッドに渡すパラメーター。</param>
        <param name="callback">メソッド呼び出しの完了時に呼び出されたデリゲート。</param>
        <param name="userState">ステータス情報を <c>callback</c> デリゲートに渡すために使用するオブジェクト。</param>
        <summary>指定されたメソッドを非同期で呼び出します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービスに対して SOAP 要求を行うために使用する SOAP プロトコルのバージョンを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>を Web サービス記述言語ツール (Wsdl.exe) によって生成されたプロキシ クラスのプロパティが<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11>既定では、XML Web サービスの WSDL ドキュメントは、SOAP 1.1 をサポートしている場合。 ただし、ときに、XML Web サービスのみをサポート SOAP 1.2 では、Wsdl.exe セット、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>プロパティを<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>します。 Wsdl.exe を使用して、プロキシ クラスを生成するときに、SOAP プロトコルのバージョンを選択するには、使用、`/protocol`スイッチと、`SOAP`または`SOAP12`を設定する設定、<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>プロパティを<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11>と<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>、それぞれ.  
  
   
  
## Examples  
 次のコード例では、SOAP 1.2 を XML Web サービスとの通信に使用されるプロトコルのバージョンを設定します。  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>