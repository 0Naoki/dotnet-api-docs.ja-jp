<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1912a-101">SOAP を使用しない HTTP で実装されている Web サービスおよびクライアントのすべてのリーダーとライターの抽象基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="1912a-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-102">Web サービスのライター、リーダー シリアル化および逆、それぞれ、Web メソッドのパラメーターまたは戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。</span><span class="sxs-lookup"><span data-stu-id="1912a-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="1912a-103"><xref:System.Web.Services.Protocols.MimeFormatter>クラスはクライアントとサービス側の両方で共通のインターフェイスおよびリーダーおよびライターのクラスの機能を確立します。</span><span class="sxs-lookup"><span data-stu-id="1912a-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="1912a-104"><xref:System.Web.Services.Protocols.MimeFormatter>クラスは、HTTP GET および HTTP POST 操作を使用して Web サービスの .NET Framework の実装をサポートします。</span><span class="sxs-lookup"><span data-stu-id="1912a-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="1912a-105">HTTP GET 操作で要求のパラメーターは、HTTP 要求の Uniform Resource Locator (URL) でエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="1912a-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="1912a-106">HTTP POST 操作では、要求パラメーターは、HTTP 要求本文で HTML フォームと同様にエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="1912a-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="1912a-107">両方の実装と共に、戻り値として表示されます、HTTP 応答本文で SOAP 以外の XML ドキュメント。</span><span class="sxs-lookup"><span data-stu-id="1912a-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="1912a-108">開発者は通常不要を直接使用する<xref:System.Web.Services.Protocols.MimeFormatter>またはその派生クラス。</span><span class="sxs-lookup"><span data-stu-id="1912a-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="1912a-109">代わりに、Wsdl.exe ツールは、HTTP GET または HTTP POST の実装に応じて、クライアント プロキシ コードを生成するときに適用されます、<xref:System.Web.Services.Protocols.HttpMethodAttribute>各 Web メソッドに属性の設定と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>プロパティを適切な型から派生した、<xref:System.Web.Services.Protocols.MimeFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="1912a-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="1912a-110">サーバーで、適切な派生型は、ASP.NET 構成ファイル (Web.config) の設定に従って使用されます。</span><span class="sxs-lookup"><span data-stu-id="1912a-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="1912a-111">クライアントでは、適切な派生型は、WSDL から決定されます。</span><span class="sxs-lookup"><span data-stu-id="1912a-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1912a-112"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1912a-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1912a-113"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、インスタンスを作成する対象の型。</span><span class="sxs-lookup"><span data-stu-id="1912a-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="1912a-114">派生クラスで実装されている <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> メソッドを介して以前に取得されたインスタンスを初期化するために使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1912a-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="1912a-115"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した具象クラスのインスタンスを作成し、初期化します。</span><span class="sxs-lookup"><span data-stu-id="1912a-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="1912a-116"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1912a-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-117"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドは、派生クラスのインスタンスを作成し、抽象型の派生クラスの実装を呼び出します<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1912a-118"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドが要求または応答の処理時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1912a-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="1912a-119">初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1912a-120">パラメーターとして渡された初期化子、<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドが呼び出すことによって、派生クラスの別のインスタンスから取得、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中にメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1912a-121">派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="1912a-122">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</span><span class="sxs-lookup"><span data-stu-id="1912a-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="1912a-123">派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="1912a-124">指定したメソッドの初期化子を含む <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="1912a-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-125">初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1912a-126">派生クラスの実装、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中にインスタンス メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1912a-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="1912a-127">後で、要求または応答の処理時に、初期化子オブジェクトが渡される、静的な<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>、派生クラスの別のオブジェクトのインスタンスを作成するメソッド、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1912a-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="1912a-128">その他のオブジェクトは、実際に読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1912a-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1912a-129"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</span><span class="sxs-lookup"><span data-stu-id="1912a-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="1912a-130">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</span><span class="sxs-lookup"><span data-stu-id="1912a-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="1912a-131">指定したメソッドの初期化子を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="1912a-132">指定されたメソッドの初期化子を格納している <see cref="T:System.Object" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1912a-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-133">初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1912a-134">静的な<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドを呼び出して、派生クラスの<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドを暗黙的に派生クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1912a-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="1912a-135">要求または応答の処理時に初期化子オブジェクトが渡される、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生クラスの別のインスタンスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1912a-136">後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1912a-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1912a-137">派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="1912a-138">Web メソッドの配列。返された初期化子の配列内にある対応するインデックスのオブジェクトが、メソッドごとに取得されます。</span><span class="sxs-lookup"><span data-stu-id="1912a-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="1912a-139">派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="1912a-140">メソッド定義の入力配列に対応する初期化子オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="1912a-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-141">初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1912a-142"><xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>インスタンス メソッドを呼び出して、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>ごとにインスタンス メソッドは、Web メソッドを入力します。</span><span class="sxs-lookup"><span data-stu-id="1912a-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="1912a-143">派生したクラスのインスタンスをつまり<xref:System.Web.Services.Protocols.MimeFormatter>既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="1912a-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="1912a-144">渡される初期化子の要求または応答の処理時、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生クラスの別のインスタンスのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1912a-145">後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1912a-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1912a-146"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</span><span class="sxs-lookup"><span data-stu-id="1912a-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="1912a-147">初期化子を取得する対象の Web メソッドを指定する型 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="1912a-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="1912a-148"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="1912a-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="1912a-149"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="1912a-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-150">初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1912a-151">静的な<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>メソッドの呼び出しによって、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドによって指定された派生クラスに属している、`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1912a-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="1912a-152">このメソッドを実装している特定のクラスに適した型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1912a-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="1912a-153">派生クラスでオーバーライドされると、インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1912a-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1912a-154"><xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>要求または応答の処理時にメソッドが呼び出されます。 ただし、初期化子が呼び出すことによって取得、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中に別のインスタンス上のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="1912a-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>