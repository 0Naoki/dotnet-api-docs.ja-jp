<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8d6968d1f8643e778c21e5e9ebd54a15fca8435" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37543288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1acb3-101">SOAP を使用しない HTTP で実装されている Web サービスおよびクライアントのすべてのリーダーとライターの抽象基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1acb3-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-102">Web サービスのライターとリーダーおよび逆、それぞれに、Web メソッドのパラメーターまたは戻り値のオブジェクトと、HTTP 要求または応答ストリームのシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="1acb3-103"><xref:System.Web.Services.Protocols.MimeFormatter>クラスはクライアントとサービス側の両方で共通のインターフェイスおよびリーダーとライターのクラスの機能を確立します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="1acb3-104"><xref:System.Web.Services.Protocols.MimeFormatter>クラスは、HTTP GET と HTTP POST 操作を使用して Web サービスの .NET Framework の実装をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="1acb3-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="1acb3-105">HTTP GET 操作で要求のパラメーターは HTTP 要求の Uniform Resource Locator (URL) でエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="1acb3-106">、HTTP POST 操作では、要求パラメーターは、HTTP 要求の本文で HTML フォームと同様にエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="1acb3-107">どちらの実装で、戻り値が非 SOAP XML ドキュメントとして HTTP 応答本文に表示されます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="1acb3-108">開発者が直接使用する必要はありません通常<xref:System.Web.Services.Protocols.MimeFormatter>またはその子孫クラス。</span><span class="sxs-lookup"><span data-stu-id="1acb3-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="1acb3-109">代わりに、Wsdl.exe ツールでは、HTTP-GET または HTTP-POST の実装に応じて、クライアント プロキシ コードを生成するときに適用されます、<xref:System.Web.Services.Protocols.HttpMethodAttribute>各 Web メソッドに属性の設定と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>適切な型にプロパティ派生した、<xref:System.Web.Services.Protocols.MimeFormatter>クラス。</span><span class="sxs-lookup"><span data-stu-id="1acb3-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="1acb3-110">サーバーで、適切な派生型は、ASP.NET 構成ファイル (Web.config) の設定に従って使用されます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="1acb3-111">クライアントでは、適切な派生型は、WSDL から決定されます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1acb3-112">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1acb3-113">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、インスタンスを作成する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span>
          </span>
        </param>
        <param name="initializer">
          <span data-ttu-id="1acb3-114">派生クラスで実装されている <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> メソッドを介して以前に取得されたインスタンスを初期化するために使用するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-115">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した具象クラスのインスタンスを作成し、初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1acb3-116">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-117"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドが派生クラスのインスタンスを作成し、抽象の派生クラスの実装を呼び出す<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1acb3-118"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>要求または応答の処理時にメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="1acb3-119">初期化子は、パラメーターとして渡されたオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="1acb3-120">パラメーターとして渡された初期化子、<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドが呼び出すことによって、派生クラスの別のインスタンスから取得した、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1acb3-121">派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-121">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <span data-ttu-id="1acb3-122">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-123">派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-123">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1acb3-124">指定したメソッドの初期化子を含む <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-125">初期化子は、パラメーターとして渡されたオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1acb3-126">派生クラスの実装、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中にインスタンス メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1acb3-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="1acb3-127">その後、要求または応答の処理時に、初期化子オブジェクトが渡される、静的な<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>の派生クラスにし、別のオブジェクトのインスタンスを作成するメソッド、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>初期化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="1acb3-128">その他のオブジェクトでは、実際の読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1acb3-129">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="1acb3-130">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-131">指定したメソッドの初期化子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-131">Returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1acb3-132">指定されたメソッドの初期化子を格納している <see cref="T:System.Object" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-133">初期化子は、パラメーターとして渡されたオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1acb3-134">静的な<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドは、派生クラスの<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドを暗黙的に派生クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="1acb3-135">要求または応答の処理時に初期化子オブジェクトが渡される、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生クラスの別のインスタンスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1acb3-136">後者のオブジェクトは、実際の読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1acb3-137">派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">
          <span data-ttu-id="1acb3-138">Web メソッドの配列。返された初期化子の配列内にある対応するインデックスのオブジェクトが、メソッドごとに取得されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-139">派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1acb3-140">メソッド定義の入力配列に対応する初期化子オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-140">An array of initializer objects corresponding to the input array of method definitions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-141">初期化子は、パラメーターとして渡されたオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1acb3-142"><xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>インスタンス メソッドを呼び出す、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>ごとにインスタンス メソッドは、Web メソッドを入力します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="1acb3-143">派生したクラスのインスタンスつまり<xref:System.Web.Services.Protocols.MimeFormatter>既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="1acb3-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="1acb3-144">要求または応答の処理時に、初期化子に渡される、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>派生クラスの別のインスタンスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="1acb3-145">後者のオブジェクトは、実際の読み取りまたは書き込みを実行します。</span><span class="sxs-lookup"><span data-stu-id="1acb3-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1acb3-146">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span>
          </span>
        </param>
        <param name="methodInfos">
          <span data-ttu-id="1acb3-147">初期化子を取得する対象の Web メソッドを指定する型 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-148">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1acb3-149">
            <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-150">初期化子は、パラメーターとして渡されたオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1acb3-151">静的な<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>メソッドの呼び出しをにより、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドで指定された派生クラスに属している、`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1acb3-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <span data-ttu-id="1acb3-152">このメソッドを実装している特定のクラスに適した型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-152">An object of a type appropriate to the particular class that is implementing the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1acb3-153">派生クラスでオーバーライドされると、インスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1acb3-153">When overridden in a derived class, initializes an instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1acb3-154"><xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>要求または応答の処理時にメソッドが呼び出されます。 初期化子を呼び出すことによって取得するただし、、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中に別のインスタンス上のメソッド。</span><span class="sxs-lookup"><span data-stu-id="1acb3-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>