<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3567a890d743e97411185cd8ae5cc15f129a10c9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257542" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SOAP を使用しない HTTP で実装されている Web サービスおよびクライアントのすべてのリーダーとライターの抽象基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web サービスの作成者とリーダーは、それぞれ、Web メソッドと HTTP 要求または応答ストリームのパラメーターまたは戻りオブジェクトの間で、それぞれシリアル化および逆シリアル化を行います。 クラス<xref:System.Web.Services.Protocols.MimeFormatter>は、クライアント側とサービス側の両方で、リーダークラスとライタークラスに共通のインターフェイスと機能を確立します。  
  
 クラス<xref:System.Web.Services.Protocols.MimeFormatter>は、http GET および http ポスト操作による Web サービスの .NET Framework の実装をサポートしています。 では、GET 操作要求パラメーターは HTTP 要求の Uniform Resource Locator (URL) でエンコードされます。 HTTP POST 操作では、要求パラメーターは HTML フォームと同様に HTTP 要求本文でエンコードされます。 両方の実装で、戻り値は SOAP 以外の XML ドキュメントとして HTTP 応答の本文に表示されます。  
  
 通常、開発者はまたはその派生<xref:System.Web.Services.Protocols.MimeFormatter>クラスを直接使用する必要はありません。 代わりに、wsdl.exe ツールが http GET または http ポストの実装に基づいてクライアントプロキシコードを生成するときに、を各<xref:System.Web.Services.Protocols.HttpMethodAttribute> Web メソッドに適用し、属性の<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>プロパティと<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>プロパティを適切な型に設定します。<xref:System.Web.Services.Protocols.MimeFormatter>クラスから派生します。 サーバーでは、ASP.NET 構成ファイル (Web.config) の設定に従って、適切な派生型が使用されます。 クライアントでは、適切な派生型は WSDL から決定されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、インスタンスを作成する対象の型。</param>
        <param name="initializer">派生クラスで実装されている <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> メソッドを介して以前に取得されたインスタンスを初期化するために使用するオブジェクト。</param>
        <summary><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した具象クラスのインスタンスを作成し、初期化します。</summary>
        <returns><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>は、派生クラスのインスタンスを作成し、その派生クラスの抽象<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドの実装を呼び出します。 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドは、要求または応答が処理されるときに呼び出されます。  
  
 初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドにパラメーターとして渡されるオブジェクトです。 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドへのパラメーターとして渡された初期化子は、クライアントまたはサービスの<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>初期化中にメソッドを呼び出すことによって、派生クラスの別のインスタンスから取得されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</param>
        <summary>派生クラスでオーバーライドされると、指定されたメソッドの初期化子を返します。</summary>
        <returns>指定したメソッドの初期化子を含む <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドにパラメーターとして渡されるオブジェクトです。  
  
 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>インスタンスメソッドの派生クラスの実装は、クライアントまたはサービスの初期化中に呼び出されます。 その後、要求または応答が処理されるときに、初期化子オブジェクトが静的<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッドに渡されます。このメソッドは、派生クラスの別のオブジェクトのインスタンスを作成し、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドを使用してそのインスタンスを初期化します。 もう一方のオブジェクトは、実際の読み取りまたは書き込みを実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</param>
        <param name="methodInfo">初期化子を取得する Web メソッドを指定する <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 。</param>
        <summary>指定したメソッドの初期化子を返します。</summary>
        <returns>指定されたメソッドの初期化子を格納している <see cref="T:System.Object" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドにパラメーターとして渡されるオブジェクトです。  
  
 静的<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドは、派生クラスの<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドを呼び出し、派生クラスのインスタンスを暗黙的に作成します。 要求または応答が処理されるときに、初期化子オブジェクトが派生クラス<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>の別のインスタンスのメソッドに渡されます。 後者のオブジェクトは、実際の読み取りまたは書き込みを実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">Web メソッドの配列。返された初期化子の配列内にある対応するインデックスのオブジェクトが、メソッドごとに取得されます。</param>
        <summary>派生クラスでオーバーライドされると、メソッド定義の入力配列に対応する初期化子オブジェクトの配列を返します。</summary>
        <returns>メソッド定義の入力配列に対応する初期化子オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドにパラメーターとして渡されるオブジェクトです。  
  
 インスタンス<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>メソッドは、各<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>入力 Web メソッドのインスタンスメソッドを呼び出します。 これは、から<xref:System.Web.Services.Protocols.MimeFormatter>派生したクラスのインスタンスが既に作成されていることを意味します。 要求または応答が処理されるときに、初期化子は派生クラス<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>の別のインスタンスのメソッドに渡されます。 後者のオブジェクトは、実際の読み取りまたは書き込みを実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、初期化子を取得する対象の型。</param>
        <param name="methodInfos">初期化子を取得する対象の Web メソッドを指定する型 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> の配列。</param>
        <summary><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列を返します。</summary>
        <returns><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> から派生した、指定されているクラスのメソッド定義の入力配列に対応する、初期化子オブジェクトの配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッドにパラメーターとして渡されるオブジェクトです。  
  
 静的<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A>メソッドによって、 `type`パラメーターで<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>指定された派生クラスに属するメソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">このメソッドを実装している特定のクラスに適した型のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、インスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、要求または応答が処理されるときに呼び出されます。ただし、初期化子は、 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化時に別のインスタンスでメソッドを呼び出すことによって取得されます。 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
