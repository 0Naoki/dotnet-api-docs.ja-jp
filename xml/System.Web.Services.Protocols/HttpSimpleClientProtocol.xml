<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d50f1489d37dfa83d618abba7f89416b5b7b423c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257639" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ebcd0-101">単純な HTTP-GET プロトコル バインディングおよび HTTP-POST プロトコル バインディングを使用して、XML Web サービスとの通信を行う基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebcd0-102">このクラスは、エンコーダーを使用して HTTP 経由で XML Web サービスと通信するための実装の大部分を指定して、パラメーターと戻り値を共通の MIME 形式にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="ebcd0-103">これらのエンコーダーは<xref:System.Web.Services.Protocols.MimeFormatter>クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="ebcd0-104">既定では、から<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>派生したプロキシクラスは、application/url エンコード MIME 型および応答をプレーン XML で使用して、パラメーターをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="ebcd0-105">カスタム mime フォーマッタは<xref:System.Web.Services.Protocols.HttpMethodAttribute>属性を使用して指定できますが、これをサービスの説明とプロキシの生成に統合することはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="ebcd0-106">`Notes to Inheritors:`このクラスをオーバーライドすると、特定の種類の XML Web サービスに固有のメソッドを派生クラスに導入できます。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="ebcd0-107">メソッドは、単にパラメーターをキャプチャし、基本クラスを呼び出して、サイトとの通信を行います。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="ebcd0-108">導入されたメソッドが非同期である<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>場合<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>は、メソッドとメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="ebcd0-109">導入されたメソッドが同期して<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>いる場合は、メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="ebcd0-110">オーバーライドされたコンストラクターは<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 、通常、プロパティを XML Web サービスメソッドの URI に設定します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="ebcd0-111">Web サービス記述言語ツール (wsdl.exe) は、指定されたサービス<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>の説明に対するの派生クラスを生成します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebcd0-112">次のコード例は、次の`Math` XML Web サービスの wsdl.exe によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="ebcd0-113">プロキシクラスは、抽象<xref:System.Web.Services.Protocols.HttpGetClientProtocol> <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>クラスから派生するから派生します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ebcd0-114">次のコード例は、 `Math`上記のプロキシクラスが作成された XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ebcd0-115">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-115">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebcd0-116"><see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ebcd0-117">XML Web サービス メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-117">The name of the XML Web service method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ebcd0-118"><see cref="T:System.Net.WebRequest" /> を作成するときに使用する URL。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="ebcd0-119">XML Web サービス メソッドに渡すパラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-119">An array of objects containing the parameters to pass to the XML Web service method.</span></span> <span data-ttu-id="ebcd0-120">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="ebcd0-121">非同期メソッドの呼び出しが完了したときに呼び出されるデリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-121">The delegate to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="ebcd0-122"><paramref name="callback" /> が <see langword="null" /> の場合、このデリゲートは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-122">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ebcd0-123">クライアントから提供された追加情報。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-123">The additional information supplied by a client.</span></span></param>
        <summary><span data-ttu-id="ebcd0-124">XML Web サービスのメソッドの非同期呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-124">Starts an asynchronous invocation of a method of an XML Web service.</span></span></summary>
        <returns><span data-ttu-id="ebcd0-125">XML Web サービス メソッドからの戻り値を取得するために、<see cref="T:System.IAsyncResult" /> メソッドに渡すことのできる <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebcd0-126">パラメーターは、 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>メソッドを呼び出すメソッドのパラメーターと戻り値の型を検索するために使用されます。 `methodName`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="ebcd0-127">また、メソッドに追加されたカスタム属性を検索するためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="ebcd0-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>、 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>、および<xref:System.Xml.Serialization.XmlElementAttribute>は、HTTP プロトコルに必要な派生メソッドに関する追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="ebcd0-129">`asyncState`はに`callback`渡され、 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>メソッドから返さ<xref:System.IAsyncResult>れるに含まれています。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="ebcd0-130">これは、非同期呼び出しのコンテキストからの非同期結果`callback`の処理に情報を渡す場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebcd0-131">次のコード例は、という名前`Math`の XML web サービスを呼び出す ASP.NET web フォームです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ebcd0-132">関数内では、web フォームが開始され、 `Add` XML web サービスメソッドの非同期呼び出しが完了します。 `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="ebcd0-133">次のコード例は、以下の`Math` XML web サービスの web サービス記述言語ツール (wsdl.exe) によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ebcd0-134">プロキシクラスの<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> `Add`メソッド内で、メソッドは XML Web サービスメソッドの非同期呼び出しを開始します。 `BeginAdd`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="ebcd0-135">次のコード例は、 `Math`上記のプロキシクラスが作成された XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ebcd0-136">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-136">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ebcd0-137"><see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドから返された <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ebcd0-138">HTTP を使用して XML Web サービス メソッドの非同期呼び出しを完了します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="ebcd0-139">XML Web サービス メソッドの戻り値や、参照渡しパラメーターまたは <paramref name="out" /> パラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ebcd0-140">次のコード例は、という名前`Math`の XML web サービスを呼び出す ASP.NET web フォームです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ebcd0-141">関数内では、web フォームが開始され、 `Add` XML web サービスメソッドの非同期呼び出しが完了します。 `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="ebcd0-142">次のコード例は、以下の`Math` XML web サービスの web サービス記述言語ツール (wsdl.exe) によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ebcd0-143">プロキシクラスの<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> `Add`メソッド内で、メソッドは XML Web サービスメソッドの非同期呼び出しを開始します。 `EndAdd`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="ebcd0-144">次のコード例は、 `Math`上記のプロキシクラスが作成された XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ebcd0-145"><paramref name="asyncResult" /> が <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> メソッドからの戻り値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-145"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ebcd0-146"><see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> メソッドを呼び出している、派生クラス内の XML Web サービス メソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ebcd0-147">クライアントが要求している XML Web サービス メソッドの URL。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-147">The URL of the XML Web service method that the client is requesting.</span></span></param>
        <param name="parameters"><span data-ttu-id="ebcd0-148">リモート XML Web サービスに渡すパラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-148">An array of objects containing the parameters to pass to the remote XML Web service.</span></span> <span data-ttu-id="ebcd0-149">配列内の値の順序は、呼び出し元の派生クラス メソッドに渡されたパラメーターの順序に対応しています。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="ebcd0-150">HTTP を使用して XML Web サービス メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-150">Invokes an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="ebcd0-151">派生クラス メソッドの戻り値と、参照渡しパラメーターまたは <paramref name="out" /> パラメーターを格納しているオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebcd0-152">パラメーターは、 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>メソッドを呼び出すメソッドのパラメーターと戻り値の型を検索するために使用されます。 `methodName`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="ebcd0-153">また、メソッドに追加されている可能性があるカスタム属性を検索するためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="ebcd0-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute>および<xref:System.Xml.Serialization.XmlElementAttribute>は、SOAP プロトコルに必要な派生メソッドに関する追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebcd0-155">次のコード例は、という名前`Math`の XML web サービスを呼び出す ASP.NET web フォームです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ebcd0-156">関数内では、web フォームは`Add` XML web サービスメソッドを同期的に呼び出します。 `EnterBtn_Click`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="ebcd0-157">次のコード例は、以下の`Math` XML web サービスの web サービス記述言語ツール (wsdl.exe) によって生成されるプロキシクラスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ebcd0-158">プロキシクラスの<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> `Add`メソッド内で、メソッドは Web サービスメソッドを同期的に呼び出します。 `Add`</span><span class="sxs-lookup"><span data-stu-id="ebcd0-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ebcd0-159">次のコード例は、 `Math`上記のプロキシクラスが作成された XML Web サービスです。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
 [!code-aspx-csharp[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[HttpSimpleClientProtocol.Invoke Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ebcd0-160">要求はサーバー コンピューターに到達しましたが、正常に処理されませんでした。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-160">The request reached the server computer, but was not processed successfully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebcd0-161">指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-161">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ebcd0-162">呼び出すメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-162">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ebcd0-163">呼び出された Web サービスの要求 URL。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-163">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="ebcd0-164">メソッドに渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-164">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="ebcd0-165">メソッド呼び出しの完了時に呼び出されたデリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-165">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="ebcd0-166">指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-166">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userState" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ebcd0-167">呼び出すメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-167">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ebcd0-168">呼び出された Web サービスの要求 URL。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-168">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="ebcd0-169">メソッドに渡すパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-169">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="ebcd0-170">メソッド呼び出しの完了時に呼び出されたデリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-170">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="ebcd0-171">メソッドの完了時に <paramref name="callback" /> デリゲートに渡される、関連付けられている状態の情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-171">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</span></span></param>
        <summary><span data-ttu-id="ebcd0-172">関連付けられている状態を保持したまま、指定されたメソッドを非同期で呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ebcd0-172">Invokes the specified method asynchronously while maintaining an associated state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
